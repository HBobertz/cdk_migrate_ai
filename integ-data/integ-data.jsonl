{ "prompt": "{\"Resources\": {\"TableCD117FA1\": {\"Type\": \"AWS::DynamoDB::Table\", \"Properties\": {\"KeySchema\": [{\"AttributeName\": \"hashKey\", \"KeyType\": \"HASH\"}], \"AttributeDefinitions\": [{\"AttributeName\": \"hashKey\", \"AttributeType\": \"S\"}], \"BillingMode\": \"PAY_PER_REQUEST\"}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"TableWithGlobalAndLocalSecondaryIndexBC540710\": {\"Type\": \"AWS::DynamoDB::Table\", \"Properties\": {\"KeySchema\": [{\"AttributeName\": \"hashKey\", \"KeyType\": \"HASH\"}, {\"AttributeName\": \"sortKey\", \"KeyType\": \"RANGE\"}], \"AttributeDefinitions\": [{\"AttributeName\": \"hashKey\", \"AttributeType\": \"S\"}, {\"AttributeName\": \"sortKey\", \"AttributeType\": \"N\"}, {\"AttributeName\": \"gsiHashKey\", \"AttributeType\": \"S\"}, {\"AttributeName\": \"gsiSortKey\", \"AttributeType\": \"N\"}, {\"AttributeName\": \"lsiSortKey\", \"AttributeType\": \"N\"}], \"BillingMode\": \"PAY_PER_REQUEST\", \"GlobalSecondaryIndexes\": [{\"IndexName\": \"GSI-PartitionKeyOnly\", \"KeySchema\": [{\"AttributeName\": \"gsiHashKey\", \"KeyType\": \"HASH\"}], \"Projection\": {\"ProjectionType\": \"ALL\"}}, {\"IndexName\": \"GSI-PartitionAndSortKeyWithReadAndWriteCapacity\", \"KeySchema\": [{\"AttributeName\": \"gsiHashKey\", \"KeyType\": \"HASH\"}, {\"AttributeName\": \"gsiSortKey\", \"KeyType\": \"RANGE\"}], \"Projection\": {\"ProjectionType\": \"ALL\"}}, {\"IndexName\": \"GSI-ProjectionTypeKeysOnly\", \"KeySchema\": [{\"AttributeName\": \"gsiHashKey\", \"KeyType\": \"HASH\"}, {\"AttributeName\": \"gsiSortKey\", \"KeyType\": \"RANGE\"}], \"Projection\": {\"ProjectionType\": \"KEYS_ONLY\"}}, {\"IndexName\": \"GSI-ProjectionTypeInclude\", \"KeySchema\": [{\"AttributeName\": \"gsiHashKey\", \"KeyType\": \"HASH\"}, {\"AttributeName\": \"gsiSortKey\", \"KeyType\": \"RANGE\"}], \"Projection\": {\"NonKeyAttributes\": [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\"], \"ProjectionType\": \"INCLUDE\"}}, {\"IndexName\": \"GSI-InverseTableKeySchema\", \"KeySchema\": [{\"AttributeName\": \"sortKey\", \"KeyType\": \"HASH\"}, {\"AttributeName\": \"hashKey\", \"KeyType\": \"RANGE\"}], \"Projection\": {\"ProjectionType\": \"ALL\"}}], \"LocalSecondaryIndexes\": [{\"IndexName\": \"LSI-PartitionAndTableSortKey\", \"KeySchema\": [{\"AttributeName\": \"hashKey\", \"KeyType\": \"HASH\"}, {\"AttributeName\": \"lsiSortKey\", \"KeyType\": \"RANGE\"}], \"Projection\": {\"ProjectionType\": \"ALL\"}}, {\"IndexName\": \"LSI-PartitionAndSortKey\", \"KeySchema\": [{\"AttributeName\": \"hashKey\", \"KeyType\": \"HASH\"}, {\"AttributeName\": \"sortKey\", \"KeyType\": \"RANGE\"}], \"Projection\": {\"ProjectionType\": \"ALL\"}}, {\"IndexName\": \"LSI-ProjectionTypeKeysOnly\", \"KeySchema\": [{\"AttributeName\": \"hashKey\", \"KeyType\": \"HASH\"}, {\"AttributeName\": \"lsiSortKey\", \"KeyType\": \"RANGE\"}], \"Projection\": {\"ProjectionType\": \"KEYS_ONLY\"}}, {\"IndexName\": \"LSI-ProjectionTypeInclude\", \"KeySchema\": [{\"AttributeName\": \"hashKey\", \"KeyType\": \"HASH\"}, {\"AttributeName\": \"lsiSortKey\", \"KeyType\": \"RANGE\"}], \"Projection\": {\"NonKeyAttributes\": [\"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\"], \"ProjectionType\": \"INCLUDE\"}}], \"PointInTimeRecoverySpecification\": {\"PointInTimeRecoveryEnabled\": true}, \"SSESpecification\": {\"SSEEnabled\": true}, \"StreamSpecification\": {\"StreamViewType\": \"KEYS_ONLY\"}, \"Tags\": [{\"Key\": \"Environment\", \"Value\": \"Production\"}], \"TimeToLiveSpecification\": {\"AttributeName\": \"timeToLive\", \"Enabled\": true}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"TableWithGlobalSecondaryIndexCC8E841E\": {\"Type\": \"AWS::DynamoDB::Table\", \"Properties\": {\"KeySchema\": [{\"AttributeName\": \"hashKey\", \"KeyType\": \"HASH\"}], \"AttributeDefinitions\": [{\"AttributeName\": \"hashKey\", \"AttributeType\": \"S\"}, {\"AttributeName\": \"gsiHashKey\", \"AttributeType\": \"S\"}], \"BillingMode\": \"PAY_PER_REQUEST\", \"GlobalSecondaryIndexes\": [{\"IndexName\": \"GSI-PartitionKeyOnly\", \"KeySchema\": [{\"AttributeName\": \"gsiHashKey\", \"KeyType\": \"HASH\"}], \"Projection\": {\"ProjectionType\": \"ALL\"}}]}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"TableWithLocalSecondaryIndex4DA3D08F\": {\"Type\": \"AWS::DynamoDB::Table\", \"Properties\": {\"KeySchema\": [{\"AttributeName\": \"hashKey\", \"KeyType\": \"HASH\"}, {\"AttributeName\": \"sortKey\", \"KeyType\": \"RANGE\"}], \"AttributeDefinitions\": [{\"AttributeName\": \"hashKey\", \"AttributeType\": \"S\"}, {\"AttributeName\": \"sortKey\", \"AttributeType\": \"N\"}, {\"AttributeName\": \"lsiSortKey\", \"AttributeType\": \"N\"}], \"BillingMode\": \"PAY_PER_REQUEST\", \"LocalSecondaryIndexes\": [{\"IndexName\": \"LSI-PartitionAndSortKey\", \"KeySchema\": [{\"AttributeName\": \"hashKey\", \"KeyType\": \"HASH\"}, {\"AttributeName\": \"lsiSortKey\", \"KeyType\": \"RANGE\"}], \"Projection\": {\"ProjectionType\": \"ALL\"}}]}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import { App, RemovalPolicy, Stack, Tags } from 'aws-cdk-lib';\nimport { Attribute, AttributeType, BillingMode, ProjectionType, StreamViewType, Table, TableEncryption } from 'aws-cdk-lib/aws-dynamodb';\n\n// CDK parameters\nconst STACK_NAME = 'aws-cdk-dynamodb';\n\n// DynamoDB table parameters\nconst TABLE = 'Table';\nconst TABLE_WITH_GLOBAL_AND_LOCAL_SECONDARY_INDEX = 'TableWithGlobalAndLocalSecondaryIndex';\nconst TABLE_WITH_GLOBAL_SECONDARY_INDEX = 'TableWithGlobalSecondaryIndex';\nconst TABLE_WITH_LOCAL_SECONDARY_INDEX = 'TableWithLocalSecondaryIndex';\nconst TABLE_PARTITION_KEY: Attribute = { name: 'hashKey', type: AttributeType.STRING };\nconst TABLE_SORT_KEY: Attribute = { name: 'sortKey', type: AttributeType.NUMBER };\n\n// DynamoDB global secondary index parameters\nconst GSI_TEST_CASE_1 = 'GSI-PartitionKeyOnly';\nconst GSI_TEST_CASE_2 = 'GSI-PartitionAndSortKeyWithReadAndWriteCapacity';\nconst GSI_TEST_CASE_3 = 'GSI-ProjectionTypeKeysOnly';\nconst GSI_TEST_CASE_4 = 'GSI-ProjectionTypeInclude';\nconst GSI_TEST_CASE_5 = 'GSI-InverseTableKeySchema';\nconst GSI_PARTITION_KEY: Attribute = { name: 'gsiHashKey', type: AttributeType.STRING };\nconst GSI_SORT_KEY: Attribute = { name: 'gsiSortKey', type: AttributeType.NUMBER };\nconst GSI_NON_KEY: string[] = [];\nfor (let i = 0; i < 10; i++) { // 'A' to 'J'\n  GSI_NON_KEY.push(String.fromCharCode(65 + i));\n}\n\n// DynamoDB local secondary index parameters\nconst LSI_TEST_CASE_1 = 'LSI-PartitionAndSortKey';\nconst LSI_TEST_CASE_2 = 'LSI-PartitionAndTableSortKey';\nconst LSI_TEST_CASE_3 = 'LSI-ProjectionTypeKeysOnly';\nconst LSI_TEST_CASE_4 = 'LSI-ProjectionTypeInclude';\nconst LSI_SORT_KEY: Attribute = { name: 'lsiSortKey', type: AttributeType.NUMBER };\nconst LSI_NON_KEY: string[] = [];\nfor (let i = 0; i < 10; i++) { // 'K' to 'T'\n  LSI_NON_KEY.push(String.fromCharCode(75 + i));\n}\n\nconst app = new App();\n\nconst stack = new Stack(app, STACK_NAME);\n\n// Provisioned tables\nnew Table(stack, TABLE, {\n  billingMode: BillingMode.PAY_PER_REQUEST,\n  partitionKey: TABLE_PARTITION_KEY,\n  removalPolicy: RemovalPolicy.DESTROY,\n});\n\nconst tableWithGlobalAndLocalSecondaryIndex = new Table(stack, TABLE_WITH_GLOBAL_AND_LOCAL_SECONDARY_INDEX, {\n  pointInTimeRecovery: true,\n  encryption: TableEncryption.AWS_MANAGED,\n  stream: StreamViewType.KEYS_ONLY,\n  billingMode: BillingMode.PAY_PER_REQUEST,\n  timeToLiveAttribute: 'timeToLive',\n  partitionKey: TABLE_PARTITION_KEY,\n  sortKey: TABLE_SORT_KEY,\n  removalPolicy: RemovalPolicy.DESTROY,\n});\n\nTags.of(tableWithGlobalAndLocalSecondaryIndex).add('Environment', 'Production');\n\ntableWithGlobalAndLocalSecondaryIndex.addGlobalSecondaryIndex({\n  indexName: GSI_TEST_CASE_1,\n  partitionKey: GSI_PARTITION_KEY,\n});\ntableWithGlobalAndLocalSecondaryIndex.addGlobalSecondaryIndex({\n  indexName: GSI_TEST_CASE_2,\n  partitionKey: GSI_PARTITION_KEY,\n  sortKey: GSI_SORT_KEY,\n});\ntableWithGlobalAndLocalSecondaryIndex.addGlobalSecondaryIndex({\n  indexName: GSI_TEST_CASE_3,\n  partitionKey: GSI_PARTITION_KEY,\n  sortKey: GSI_SORT_KEY,\n  projectionType: ProjectionType.KEYS_ONLY,\n});\ntableWithGlobalAndLocalSecondaryIndex.addGlobalSecondaryIndex({\n  indexName: GSI_TEST_CASE_4,\n  partitionKey: GSI_PARTITION_KEY,\n  sortKey: GSI_SORT_KEY,\n  projectionType: ProjectionType.INCLUDE,\n  nonKeyAttributes: GSI_NON_KEY,\n});\ntableWithGlobalAndLocalSecondaryIndex.addGlobalSecondaryIndex({\n  indexName: GSI_TEST_CASE_5,\n  partitionKey: TABLE_SORT_KEY,\n  sortKey: TABLE_PARTITION_KEY,\n});\n\ntableWithGlobalAndLocalSecondaryIndex.addLocalSecondaryIndex({\n  indexName: LSI_TEST_CASE_2,\n  sortKey: LSI_SORT_KEY,\n});\ntableWithGlobalAndLocalSecondaryIndex.addLocalSecondaryIndex({\n  indexName: LSI_TEST_CASE_1,\n  sortKey: TABLE_SORT_KEY,\n});\ntableWithGlobalAndLocalSecondaryIndex.addLocalSecondaryIndex({\n  indexName: LSI_TEST_CASE_3,\n  sortKey: LSI_SORT_KEY,\n  projectionType: ProjectionType.KEYS_ONLY,\n});\ntableWithGlobalAndLocalSecondaryIndex.addLocalSecondaryIndex({\n  indexName: LSI_TEST_CASE_4,\n  sortKey: LSI_SORT_KEY,\n  projectionType: ProjectionType.INCLUDE,\n  nonKeyAttributes: LSI_NON_KEY,\n});\n\nconst tableWithGlobalSecondaryIndex = new Table(stack, TABLE_WITH_GLOBAL_SECONDARY_INDEX, {\n  billingMode: BillingMode.PAY_PER_REQUEST,\n  partitionKey: TABLE_PARTITION_KEY,\n  removalPolicy: RemovalPolicy.DESTROY,\n});\ntableWithGlobalSecondaryIndex.addGlobalSecondaryIndex({\n  indexName: GSI_TEST_CASE_1,\n  partitionKey: GSI_PARTITION_KEY,\n});\n\nconst tableWithLocalSecondaryIndex = new Table(stack, TABLE_WITH_LOCAL_SECONDARY_INDEX, {\n  billingMode: BillingMode.PAY_PER_REQUEST,\n  partitionKey: TABLE_PARTITION_KEY,\n  sortKey: TABLE_SORT_KEY,\n  removalPolicy: RemovalPolicy.DESTROY,\n});\n\ntableWithLocalSecondaryIndex.addLocalSecondaryIndex({\n  indexName: LSI_TEST_CASE_1,\n  sortKey: LSI_SORT_KEY,\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"TableCD117FA1\": {\"Type\": \"AWS::DynamoDB::Table\", \"Properties\": {\"KeySchema\": [{\"AttributeName\": \"pkey\", \"KeyType\": \"HASH\"}], \"AttributeDefinitions\": [{\"AttributeName\": \"pkey\", \"AttributeType\": \"N\"}, {\"AttributeName\": \"foo\", \"AttributeType\": \"S\"}, {\"AttributeName\": \"baz\", \"AttributeType\": \"S\"}, {\"AttributeName\": \"bar\", \"AttributeType\": \"S\"}], \"GlobalSecondaryIndexes\": [{\"IndexName\": \"IndexA\", \"KeySchema\": [{\"AttributeName\": \"foo\", \"KeyType\": \"HASH\"}], \"Projection\": {\"NonKeyAttributes\": [\"bar\"], \"ProjectionType\": \"INCLUDE\"}, \"ProvisionedThroughput\": {\"ReadCapacityUnits\": 5, \"WriteCapacityUnits\": 5}}, {\"IndexName\": \"IndexB\", \"KeySchema\": [{\"AttributeName\": \"baz\", \"KeyType\": \"HASH\"}, {\"AttributeName\": \"bar\", \"KeyType\": \"RANGE\"}], \"Projection\": {\"NonKeyAttributes\": [\"blah\"], \"ProjectionType\": \"INCLUDE\"}, \"ProvisionedThroughput\": {\"ReadCapacityUnits\": 5, \"WriteCapacityUnits\": 5}}], \"ProvisionedThroughput\": {\"ReadCapacityUnits\": 5, \"WriteCapacityUnits\": 5}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "/**\n * This aimes to verify we can deploy a DynamoDB table with an attribute being\n * a key attribute in one GSI, and a non-key attribute in another.\n *\n * See https://github.com/aws/aws-cdk/issues/4398\n */\n\nimport { App, RemovalPolicy, Stack } from 'aws-cdk-lib';\nimport { AttributeType, ProjectionType, Table } from 'aws-cdk-lib/aws-dynamodb';\n\nconst app = new App();\nconst stack = new Stack(app, 'aws-cdk-dynamodb-gsi');\n\nconst table = new Table(stack, 'Table', {\n  partitionKey: { name: 'pkey', type: AttributeType.NUMBER },\n  removalPolicy: RemovalPolicy.DESTROY,\n});\n\ntable.addGlobalSecondaryIndex({\n  indexName: 'IndexA',\n  partitionKey: { name: 'foo', type: AttributeType.STRING },\n  projectionType: ProjectionType.INCLUDE,\n  nonKeyAttributes: ['bar'],\n});\n\ntable.addGlobalSecondaryIndex({\n  indexName: 'IndexB',\n  partitionKey: { name: 'baz', type: AttributeType.STRING },\n  sortKey: { name: 'bar', type: AttributeType.STRING },\n  projectionType: ProjectionType.INCLUDE,\n  nonKeyAttributes: ['blah'],\n});\n"}
{ "prompt": "{\"Resources\": {\"Stream790BDEE4\": {\"Type\": \"AWS::Kinesis::Stream\", \"Properties\": {\"RetentionPeriodHours\": 24, \"ShardCount\": 1, \"StreamEncryption\": {\"Fn::If\": [\"AwsCdkKinesisEncryptedStreamsUnsupportedRegions\", {\"Ref\": \"AWS::NoValue\"}, {\"EncryptionType\": \"KMS\", \"KeyId\": \"alias/aws/kinesis\"}]}}}, \"TableCD117FA1\": {\"Type\": \"AWS::DynamoDB::Table\", \"Properties\": {\"KeySchema\": [{\"AttributeName\": \"hashKey\", \"KeyType\": \"HASH\"}], \"AttributeDefinitions\": [{\"AttributeName\": \"hashKey\", \"AttributeType\": \"S\"}], \"KinesisStreamSpecification\": {\"StreamArn\": {\"Fn::GetAtt\": [\"Stream790BDEE4\", \"Arn\"]}}, \"ProvisionedThroughput\": {\"ReadCapacityUnits\": 5, \"WriteCapacityUnits\": 5}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}}, \"Conditions\": {\"AwsCdkKinesisEncryptedStreamsUnsupportedRegions\": {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-northwest-1\"]}]}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as kinesis from 'aws-cdk-lib/aws-kinesis';\nimport * as cdk from 'aws-cdk-lib';\nimport * as dynamodb from 'aws-cdk-lib/aws-dynamodb';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'aws-cdk-dynamodb-kinesis-stream');\n\nconst stream = new kinesis.Stream(stack, 'Stream');\n\nnew dynamodb.Table(stack, 'Table', {\n  partitionKey: { name: 'hashKey', type: dynamodb.AttributeType.STRING },\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n  kinesisStream: stream,\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"TableCD117FA1\": {\"Type\": \"AWS::DynamoDB::Table\", \"Properties\": {\"KeySchema\": [{\"AttributeName\": \"hashKey\", \"KeyType\": \"HASH\"}], \"AttributeDefinitions\": [{\"AttributeName\": \"hashKey\", \"AttributeType\": \"S\"}], \"ProvisionedThroughput\": {\"ReadCapacityUnits\": 5, \"WriteCapacityUnits\": 5}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"TableReadScalingTargetF96E9F76\": {\"Type\": \"AWS::ApplicationAutoScaling::ScalableTarget\", \"Properties\": {\"MaxCapacity\": 50, \"MinCapacity\": 1, \"ResourceId\": {\"Fn::Join\": [\"\", [\"table/\", {\"Ref\": \"TableCD117FA1\"}]]}, \"RoleARN\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable\"]]}, \"ScalableDimension\": \"dynamodb:table:ReadCapacityUnits\", \"ServiceNamespace\": \"dynamodb\", \"ScheduledActions\": [{\"ScalableTargetAction\": {\"MinCapacity\": 20}, \"Schedule\": \"cron(0 8 * * ? *)\", \"ScheduledActionName\": \"ScaleUpInTheMorning\"}, {\"ScalableTargetAction\": {\"MaxCapacity\": 20}, \"Schedule\": \"cron(0 20 * * ? *)\", \"ScheduledActionName\": \"ScaleDownAtNight\"}]}}, \"TableReadScalingTargetTracking67DF0596\": {\"Type\": \"AWS::ApplicationAutoScaling::ScalingPolicy\", \"Properties\": {\"PolicyName\": \"awscdkdynamodbTableReadScalingTargetTrackingC9729D9C\", \"PolicyType\": \"TargetTrackingScaling\", \"ScalingTargetId\": {\"Ref\": \"TableReadScalingTargetF96E9F76\"}, \"TargetTrackingScalingPolicyConfiguration\": {\"PredefinedMetricSpecification\": {\"PredefinedMetricType\": \"DynamoDBReadCapacityUtilization\"}, \"TargetValue\": 50}}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as appscaling from 'aws-cdk-lib/aws-applicationautoscaling';\nimport * as cdk from 'aws-cdk-lib';\nimport * as dynamodb from 'aws-cdk-lib/aws-dynamodb';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'aws-cdk-dynamodb');\n\nconst table = new dynamodb.Table(stack, 'Table', {\n  partitionKey: { name: 'hashKey', type: dynamodb.AttributeType.STRING },\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\n\n/// !show\nconst readScaling = table.autoScaleReadCapacity({ minCapacity: 1, maxCapacity: 50 });\n\nreadScaling.scaleOnUtilization({\n  targetUtilizationPercent: 50,\n});\n\nreadScaling.scaleOnSchedule('ScaleUpInTheMorning', {\n  schedule: appscaling.Schedule.cron({ hour: '8', minute: '0' }),\n  minCapacity: 20,\n});\n\nreadScaling.scaleOnSchedule('ScaleDownAtNight', {\n  schedule: appscaling.Schedule.cron({ hour: '20', minute: '0' }),\n  maxCapacity: 20,\n});\n/// !hide\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"TableKey25666F95\": {\"Type\": \"AWS::KMS::Key\", \"Properties\": {\"KeyPolicy\": {\"Statement\": [{\"Action\": \"kms:*\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}, \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"Description\": \"Customer-managed key auto-created for encrypting DynamoDB table at aws-cdk-dynamodb/Table\", \"EnableKeyRotation\": true}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"TableCD117FA1\": {\"Type\": \"AWS::DynamoDB::Table\", \"Properties\": {\"KeySchema\": [{\"AttributeName\": \"hashKey\", \"KeyType\": \"HASH\"}], \"AttributeDefinitions\": [{\"AttributeName\": \"hashKey\", \"AttributeType\": \"S\"}], \"ProvisionedThroughput\": {\"ReadCapacityUnits\": 5, \"WriteCapacityUnits\": 5}, \"SSESpecification\": {\"KMSMasterKeyId\": {\"Fn::GetAtt\": [\"TableKey25666F95\", \"Arn\"]}, \"SSEEnabled\": true, \"SSEType\": \"KMS\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"TableWithGlobalAndLocalSecondaryIndexBC540710\": {\"Type\": \"AWS::DynamoDB::Table\", \"Properties\": {\"KeySchema\": [{\"AttributeName\": \"hashKey\", \"KeyType\": \"HASH\"}, {\"AttributeName\": \"sortKey\", \"KeyType\": \"RANGE\"}], \"AttributeDefinitions\": [{\"AttributeName\": \"hashKey\", \"AttributeType\": \"S\"}, {\"AttributeName\": \"sortKey\", \"AttributeType\": \"N\"}, {\"AttributeName\": \"gsiHashKey\", \"AttributeType\": \"S\"}, {\"AttributeName\": \"gsiSortKey\", \"AttributeType\": \"N\"}, {\"AttributeName\": \"lsiSortKey\", \"AttributeType\": \"N\"}], \"GlobalSecondaryIndexes\": [{\"IndexName\": \"GSI-PartitionKeyOnly\", \"KeySchema\": [{\"AttributeName\": \"gsiHashKey\", \"KeyType\": \"HASH\"}], \"Projection\": {\"ProjectionType\": \"ALL\"}, \"ProvisionedThroughput\": {\"ReadCapacityUnits\": 5, \"WriteCapacityUnits\": 5}}, {\"IndexName\": \"GSI-PartitionAndSortKeyWithReadAndWriteCapacity\", \"KeySchema\": [{\"AttributeName\": \"gsiHashKey\", \"KeyType\": \"HASH\"}, {\"AttributeName\": \"gsiSortKey\", \"KeyType\": \"RANGE\"}], \"Projection\": {\"ProjectionType\": \"ALL\"}, \"ProvisionedThroughput\": {\"ReadCapacityUnits\": 10, \"WriteCapacityUnits\": 10}}, {\"IndexName\": \"GSI-ProjectionTypeKeysOnly\", \"KeySchema\": [{\"AttributeName\": \"gsiHashKey\", \"KeyType\": \"HASH\"}, {\"AttributeName\": \"gsiSortKey\", \"KeyType\": \"RANGE\"}], \"Projection\": {\"ProjectionType\": \"KEYS_ONLY\"}, \"ProvisionedThroughput\": {\"ReadCapacityUnits\": 5, \"WriteCapacityUnits\": 5}}, {\"IndexName\": \"GSI-ProjectionTypeInclude\", \"KeySchema\": [{\"AttributeName\": \"gsiHashKey\", \"KeyType\": \"HASH\"}, {\"AttributeName\": \"gsiSortKey\", \"KeyType\": \"RANGE\"}], \"Projection\": {\"NonKeyAttributes\": [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\"], \"ProjectionType\": \"INCLUDE\"}, \"ProvisionedThroughput\": {\"ReadCapacityUnits\": 5, \"WriteCapacityUnits\": 5}}, {\"IndexName\": \"GSI-InverseTableKeySchema\", \"KeySchema\": [{\"AttributeName\": \"sortKey\", \"KeyType\": \"HASH\"}, {\"AttributeName\": \"hashKey\", \"KeyType\": \"RANGE\"}], \"Projection\": {\"ProjectionType\": \"ALL\"}, \"ProvisionedThroughput\": {\"ReadCapacityUnits\": 5, \"WriteCapacityUnits\": 5}}], \"LocalSecondaryIndexes\": [{\"IndexName\": \"LSI-PartitionAndTableSortKey\", \"KeySchema\": [{\"AttributeName\": \"hashKey\", \"KeyType\": \"HASH\"}, {\"AttributeName\": \"lsiSortKey\", \"KeyType\": \"RANGE\"}], \"Projection\": {\"ProjectionType\": \"ALL\"}}, {\"IndexName\": \"LSI-PartitionAndSortKey\", \"KeySchema\": [{\"AttributeName\": \"hashKey\", \"KeyType\": \"HASH\"}, {\"AttributeName\": \"sortKey\", \"KeyType\": \"RANGE\"}], \"Projection\": {\"ProjectionType\": \"ALL\"}}, {\"IndexName\": \"LSI-ProjectionTypeKeysOnly\", \"KeySchema\": [{\"AttributeName\": \"hashKey\", \"KeyType\": \"HASH\"}, {\"AttributeName\": \"lsiSortKey\", \"KeyType\": \"RANGE\"}], \"Projection\": {\"ProjectionType\": \"KEYS_ONLY\"}}, {\"IndexName\": \"LSI-ProjectionTypeInclude\", \"KeySchema\": [{\"AttributeName\": \"hashKey\", \"KeyType\": \"HASH\"}, {\"AttributeName\": \"lsiSortKey\", \"KeyType\": \"RANGE\"}], \"Projection\": {\"NonKeyAttributes\": [\"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\"], \"ProjectionType\": \"INCLUDE\"}}], \"PointInTimeRecoverySpecification\": {\"PointInTimeRecoveryEnabled\": true}, \"ProvisionedThroughput\": {\"ReadCapacityUnits\": 5, \"WriteCapacityUnits\": 5}, \"SSESpecification\": {\"SSEEnabled\": true}, \"StreamSpecification\": {\"StreamViewType\": \"KEYS_ONLY\"}, \"Tags\": [{\"Key\": \"Environment\", \"Value\": \"Production\"}], \"TimeToLiveSpecification\": {\"AttributeName\": \"timeToLive\", \"Enabled\": true}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"Key961B73FD\": {\"Type\": \"AWS::KMS::Key\", \"Properties\": {\"KeyPolicy\": {\"Statement\": [{\"Action\": \"kms:*\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}, \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"EnableKeyRotation\": true}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"TableWithGlobalSecondaryIndexCC8E841E\": {\"Type\": \"AWS::DynamoDB::Table\", \"Properties\": {\"KeySchema\": [{\"AttributeName\": \"hashKey\", \"KeyType\": \"HASH\"}], \"AttributeDefinitions\": [{\"AttributeName\": \"hashKey\", \"AttributeType\": \"S\"}, {\"AttributeName\": \"gsiHashKey\", \"AttributeType\": \"S\"}], \"GlobalSecondaryIndexes\": [{\"IndexName\": \"GSI-PartitionKeyOnly\", \"KeySchema\": [{\"AttributeName\": \"gsiHashKey\", \"KeyType\": \"HASH\"}], \"Projection\": {\"ProjectionType\": \"ALL\"}, \"ProvisionedThroughput\": {\"ReadCapacityUnits\": 5, \"WriteCapacityUnits\": 5}}], \"ProvisionedThroughput\": {\"ReadCapacityUnits\": 5, \"WriteCapacityUnits\": 5}, \"SSESpecification\": {\"KMSMasterKeyId\": {\"Fn::GetAtt\": [\"Key961B73FD\", \"Arn\"]}, \"SSEEnabled\": true, \"SSEType\": \"KMS\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"TableWithLocalSecondaryIndex4DA3D08F\": {\"Type\": \"AWS::DynamoDB::Table\", \"Properties\": {\"KeySchema\": [{\"AttributeName\": \"hashKey\", \"KeyType\": \"HASH\"}, {\"AttributeName\": \"sortKey\", \"KeyType\": \"RANGE\"}], \"AttributeDefinitions\": [{\"AttributeName\": \"hashKey\", \"AttributeType\": \"S\"}, {\"AttributeName\": \"sortKey\", \"AttributeType\": \"N\"}, {\"AttributeName\": \"lsiSortKey\", \"AttributeType\": \"N\"}], \"LocalSecondaryIndexes\": [{\"IndexName\": \"LSI-PartitionAndSortKey\", \"KeySchema\": [{\"AttributeName\": \"hashKey\", \"KeyType\": \"HASH\"}, {\"AttributeName\": \"lsiSortKey\", \"KeyType\": \"RANGE\"}], \"Projection\": {\"ProjectionType\": \"ALL\"}}], \"ProvisionedThroughput\": {\"ReadCapacityUnits\": 5, \"WriteCapacityUnits\": 5}, \"SSESpecification\": {\"SSEEnabled\": false}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"Role1ABCC5F0\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"sqs.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"RoleDefaultPolicy5FFB7DAB\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"kms:Decrypt\", \"kms:DescribeKey\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"TableKey25666F95\", \"Arn\"]}}, {\"Action\": [\"dynamodb:BatchGetItem\", \"dynamodb:ConditionCheckItem\", \"dynamodb:DescribeTable\", \"dynamodb:GetItem\", \"dynamodb:GetRecords\", \"dynamodb:GetShardIterator\", \"dynamodb:Query\", \"dynamodb:Scan\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"TableCD117FA1\", \"Arn\"]}, {\"Fn::GetAtt\": [\"TableWithGlobalAndLocalSecondaryIndexBC540710\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"TableWithGlobalAndLocalSecondaryIndexBC540710\", \"Arn\"]}, \"/index/*\"]]}, {\"Ref\": \"AWS::NoValue\"}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"RoleDefaultPolicy5FFB7DAB\", \"Roles\": [{\"Ref\": \"Role1ABCC5F0\"}]}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as iam from 'aws-cdk-lib/aws-iam';\nimport * as kms from 'aws-cdk-lib/aws-kms';\nimport { App, RemovalPolicy, Stack, Tags } from 'aws-cdk-lib';\nimport { Attribute, AttributeType, ProjectionType, StreamViewType, Table, TableEncryption } from 'aws-cdk-lib/aws-dynamodb';\n\n// CDK parameters\nconst STACK_NAME = 'aws-cdk-dynamodb';\n\n// DynamoDB table parameters\nconst TABLE = 'Table';\nconst TABLE_WITH_GLOBAL_AND_LOCAL_SECONDARY_INDEX = 'TableWithGlobalAndLocalSecondaryIndex';\nconst TABLE_WITH_GLOBAL_SECONDARY_INDEX = 'TableWithGlobalSecondaryIndex';\nconst TABLE_WITH_LOCAL_SECONDARY_INDEX = 'TableWithLocalSecondaryIndex';\nconst TABLE_PARTITION_KEY: Attribute = { name: 'hashKey', type: AttributeType.STRING };\nconst TABLE_SORT_KEY: Attribute = { name: 'sortKey', type: AttributeType.NUMBER };\n\n// DynamoDB global secondary index parameters\nconst GSI_TEST_CASE_1 = 'GSI-PartitionKeyOnly';\nconst GSI_TEST_CASE_2 = 'GSI-PartitionAndSortKeyWithReadAndWriteCapacity';\nconst GSI_TEST_CASE_3 = 'GSI-ProjectionTypeKeysOnly';\nconst GSI_TEST_CASE_4 = 'GSI-ProjectionTypeInclude';\nconst GSI_TEST_CASE_5 = 'GSI-InverseTableKeySchema';\nconst GSI_PARTITION_KEY: Attribute = { name: 'gsiHashKey', type: AttributeType.STRING };\nconst GSI_SORT_KEY: Attribute = { name: 'gsiSortKey', type: AttributeType.NUMBER };\nconst GSI_NON_KEY: string[] = [];\nfor (let i = 0; i < 10; i++) { // 'A' to 'J'\n  GSI_NON_KEY.push(String.fromCharCode(65 + i));\n}\n\n// DynamoDB local secondary index parameters\nconst LSI_TEST_CASE_1 = 'LSI-PartitionAndSortKey';\nconst LSI_TEST_CASE_2 = 'LSI-PartitionAndTableSortKey';\nconst LSI_TEST_CASE_3 = 'LSI-ProjectionTypeKeysOnly';\nconst LSI_TEST_CASE_4 = 'LSI-ProjectionTypeInclude';\nconst LSI_SORT_KEY: Attribute = { name: 'lsiSortKey', type: AttributeType.NUMBER };\nconst LSI_NON_KEY: string[] = [];\nfor (let i = 0; i < 10; i++) { // 'K' to 'T'\n  LSI_NON_KEY.push(String.fromCharCode(75 + i));\n}\n\nconst app = new App();\n\nconst stack = new Stack(app, STACK_NAME);\n\nconst table = new Table(stack, TABLE, {\n  partitionKey: TABLE_PARTITION_KEY,\n  removalPolicy: RemovalPolicy.DESTROY,\n  encryption: TableEncryption.CUSTOMER_MANAGED,\n});\n\nconst tableWithGlobalAndLocalSecondaryIndex = new Table(stack, TABLE_WITH_GLOBAL_AND_LOCAL_SECONDARY_INDEX, {\n  pointInTimeRecovery: true,\n  encryption: TableEncryption.AWS_MANAGED,\n  stream: StreamViewType.KEYS_ONLY,\n  timeToLiveAttribute: 'timeToLive',\n  partitionKey: TABLE_PARTITION_KEY,\n  sortKey: TABLE_SORT_KEY,\n  removalPolicy: RemovalPolicy.DESTROY,\n});\n\nTags.of(tableWithGlobalAndLocalSecondaryIndex).add('Environment', 'Production');\ntableWithGlobalAndLocalSecondaryIndex.addGlobalSecondaryIndex({\n  indexName: GSI_TEST_CASE_1,\n  partitionKey: GSI_PARTITION_KEY,\n});\ntableWithGlobalAndLocalSecondaryIndex.addGlobalSecondaryIndex({\n  indexName: GSI_TEST_CASE_2,\n  partitionKey: GSI_PARTITION_KEY,\n  sortKey: GSI_SORT_KEY,\n  readCapacity: 10,\n  writeCapacity: 10,\n});\ntableWithGlobalAndLocalSecondaryIndex.addGlobalSecondaryIndex({\n  indexName: GSI_TEST_CASE_3,\n  partitionKey: GSI_PARTITION_KEY,\n  sortKey: GSI_SORT_KEY,\n  projectionType: ProjectionType.KEYS_ONLY,\n});\ntableWithGlobalAndLocalSecondaryIndex.addGlobalSecondaryIndex({\n  indexName: GSI_TEST_CASE_4,\n  partitionKey: GSI_PARTITION_KEY,\n  sortKey: GSI_SORT_KEY,\n  projectionType: ProjectionType.INCLUDE,\n  nonKeyAttributes: GSI_NON_KEY,\n});\ntableWithGlobalAndLocalSecondaryIndex.addGlobalSecondaryIndex({\n  indexName: GSI_TEST_CASE_5,\n  partitionKey: TABLE_SORT_KEY,\n  sortKey: TABLE_PARTITION_KEY,\n});\n\ntableWithGlobalAndLocalSecondaryIndex.addLocalSecondaryIndex({\n  indexName: LSI_TEST_CASE_2,\n  sortKey: LSI_SORT_KEY,\n});\ntableWithGlobalAndLocalSecondaryIndex.addLocalSecondaryIndex({\n  indexName: LSI_TEST_CASE_1,\n  sortKey: TABLE_SORT_KEY,\n});\ntableWithGlobalAndLocalSecondaryIndex.addLocalSecondaryIndex({\n  indexName: LSI_TEST_CASE_3,\n  sortKey: LSI_SORT_KEY,\n  projectionType: ProjectionType.KEYS_ONLY,\n});\ntableWithGlobalAndLocalSecondaryIndex.addLocalSecondaryIndex({\n  indexName: LSI_TEST_CASE_4,\n  sortKey: LSI_SORT_KEY,\n  projectionType: ProjectionType.INCLUDE,\n  nonKeyAttributes: LSI_NON_KEY,\n});\n\nconst encryptionKey = new kms.Key(stack, 'Key', {\n  enableKeyRotation: true,\n});\n\nconst tableWithGlobalSecondaryIndex = new Table(stack, TABLE_WITH_GLOBAL_SECONDARY_INDEX, {\n  partitionKey: TABLE_PARTITION_KEY,\n  removalPolicy: RemovalPolicy.DESTROY,\n  encryptionKey,\n});\ntableWithGlobalSecondaryIndex.addGlobalSecondaryIndex({\n  indexName: GSI_TEST_CASE_1,\n  partitionKey: GSI_PARTITION_KEY,\n});\n\nconst tableWithLocalSecondaryIndex = new Table(stack, TABLE_WITH_LOCAL_SECONDARY_INDEX, {\n  partitionKey: TABLE_PARTITION_KEY,\n  sortKey: TABLE_SORT_KEY,\n  removalPolicy: RemovalPolicy.DESTROY,\n  encryption: TableEncryption.DEFAULT,\n});\n\ntableWithLocalSecondaryIndex.addLocalSecondaryIndex({\n  indexName: LSI_TEST_CASE_1,\n  sortKey: LSI_SORT_KEY,\n});\n\nconst role = new iam.Role(stack, 'Role', {\n  assumedBy: new iam.ServicePrincipal('sqs.amazonaws.com'),\n});\ntable.grantReadData(role);\ntableWithGlobalAndLocalSecondaryIndex.grantReadData(role);\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"TableCD117FA1\": {\"Type\": \"AWS::DynamoDB::Table\", \"Properties\": {\"KeySchema\": [{\"AttributeName\": \"hashKey\", \"KeyType\": \"HASH\"}], \"AttributeDefinitions\": [{\"AttributeName\": \"hashKey\", \"AttributeType\": \"S\"}], \"ProvisionedThroughput\": {\"ReadCapacityUnits\": 5, \"WriteCapacityUnits\": 5}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"TableWithGlobalAndLocalSecondaryIndexBC540710\": {\"Type\": \"AWS::DynamoDB::Table\", \"Properties\": {\"KeySchema\": [{\"AttributeName\": \"hashKey\", \"KeyType\": \"HASH\"}, {\"AttributeName\": \"sortKey\", \"KeyType\": \"RANGE\"}], \"AttributeDefinitions\": [{\"AttributeName\": \"hashKey\", \"AttributeType\": \"S\"}, {\"AttributeName\": \"sortKey\", \"AttributeType\": \"N\"}, {\"AttributeName\": \"gsiHashKey\", \"AttributeType\": \"S\"}, {\"AttributeName\": \"gsiSortKey\", \"AttributeType\": \"N\"}, {\"AttributeName\": \"lsiSortKey\", \"AttributeType\": \"N\"}], \"GlobalSecondaryIndexes\": [{\"IndexName\": \"GSI-PartitionKeyOnly\", \"KeySchema\": [{\"AttributeName\": \"gsiHashKey\", \"KeyType\": \"HASH\"}], \"Projection\": {\"ProjectionType\": \"ALL\"}, \"ProvisionedThroughput\": {\"ReadCapacityUnits\": 5, \"WriteCapacityUnits\": 5}}, {\"IndexName\": \"GSI-PartitionAndSortKeyWithReadAndWriteCapacity\", \"KeySchema\": [{\"AttributeName\": \"gsiHashKey\", \"KeyType\": \"HASH\"}, {\"AttributeName\": \"gsiSortKey\", \"KeyType\": \"RANGE\"}], \"Projection\": {\"ProjectionType\": \"ALL\"}, \"ProvisionedThroughput\": {\"ReadCapacityUnits\": 10, \"WriteCapacityUnits\": 10}}, {\"IndexName\": \"GSI-ProjectionTypeKeysOnly\", \"KeySchema\": [{\"AttributeName\": \"gsiHashKey\", \"KeyType\": \"HASH\"}, {\"AttributeName\": \"gsiSortKey\", \"KeyType\": \"RANGE\"}], \"Projection\": {\"ProjectionType\": \"KEYS_ONLY\"}, \"ProvisionedThroughput\": {\"ReadCapacityUnits\": 5, \"WriteCapacityUnits\": 5}}, {\"IndexName\": \"GSI-ProjectionTypeInclude\", \"KeySchema\": [{\"AttributeName\": \"gsiHashKey\", \"KeyType\": \"HASH\"}, {\"AttributeName\": \"gsiSortKey\", \"KeyType\": \"RANGE\"}], \"Projection\": {\"NonKeyAttributes\": [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\"], \"ProjectionType\": \"INCLUDE\"}, \"ProvisionedThroughput\": {\"ReadCapacityUnits\": 5, \"WriteCapacityUnits\": 5}}, {\"IndexName\": \"GSI-InverseTableKeySchema\", \"KeySchema\": [{\"AttributeName\": \"sortKey\", \"KeyType\": \"HASH\"}, {\"AttributeName\": \"hashKey\", \"KeyType\": \"RANGE\"}], \"Projection\": {\"ProjectionType\": \"ALL\"}, \"ProvisionedThroughput\": {\"ReadCapacityUnits\": 5, \"WriteCapacityUnits\": 5}}], \"LocalSecondaryIndexes\": [{\"IndexName\": \"LSI-PartitionAndTableSortKey\", \"KeySchema\": [{\"AttributeName\": \"hashKey\", \"KeyType\": \"HASH\"}, {\"AttributeName\": \"lsiSortKey\", \"KeyType\": \"RANGE\"}], \"Projection\": {\"ProjectionType\": \"ALL\"}}, {\"IndexName\": \"LSI-PartitionAndSortKey\", \"KeySchema\": [{\"AttributeName\": \"hashKey\", \"KeyType\": \"HASH\"}, {\"AttributeName\": \"sortKey\", \"KeyType\": \"RANGE\"}], \"Projection\": {\"ProjectionType\": \"ALL\"}}, {\"IndexName\": \"LSI-ProjectionTypeKeysOnly\", \"KeySchema\": [{\"AttributeName\": \"hashKey\", \"KeyType\": \"HASH\"}, {\"AttributeName\": \"lsiSortKey\", \"KeyType\": \"RANGE\"}], \"Projection\": {\"ProjectionType\": \"KEYS_ONLY\"}}, {\"IndexName\": \"LSI-ProjectionTypeInclude\", \"KeySchema\": [{\"AttributeName\": \"hashKey\", \"KeyType\": \"HASH\"}, {\"AttributeName\": \"lsiSortKey\", \"KeyType\": \"RANGE\"}], \"Projection\": {\"NonKeyAttributes\": [\"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\"], \"ProjectionType\": \"INCLUDE\"}}], \"PointInTimeRecoverySpecification\": {\"PointInTimeRecoveryEnabled\": true}, \"ProvisionedThroughput\": {\"ReadCapacityUnits\": 5, \"WriteCapacityUnits\": 5}, \"SSESpecification\": {\"SSEEnabled\": true}, \"StreamSpecification\": {\"StreamViewType\": \"KEYS_ONLY\"}, \"Tags\": [{\"Key\": \"Environment\", \"Value\": \"Production\"}], \"TimeToLiveSpecification\": {\"AttributeName\": \"timeToLive\", \"Enabled\": true}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"TableWithGlobalSecondaryIndexCC8E841E\": {\"Type\": \"AWS::DynamoDB::Table\", \"Properties\": {\"KeySchema\": [{\"AttributeName\": \"hashKey\", \"KeyType\": \"HASH\"}], \"AttributeDefinitions\": [{\"AttributeName\": \"hashKey\", \"AttributeType\": \"S\"}, {\"AttributeName\": \"gsiHashKey\", \"AttributeType\": \"S\"}], \"GlobalSecondaryIndexes\": [{\"IndexName\": \"GSI-PartitionKeyOnly\", \"KeySchema\": [{\"AttributeName\": \"gsiHashKey\", \"KeyType\": \"HASH\"}], \"Projection\": {\"ProjectionType\": \"ALL\"}, \"ProvisionedThroughput\": {\"ReadCapacityUnits\": 5, \"WriteCapacityUnits\": 5}}], \"ProvisionedThroughput\": {\"ReadCapacityUnits\": 5, \"WriteCapacityUnits\": 5}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"TableWithLocalSecondaryIndex4DA3D08F\": {\"Type\": \"AWS::DynamoDB::Table\", \"Properties\": {\"KeySchema\": [{\"AttributeName\": \"hashKey\", \"KeyType\": \"HASH\"}, {\"AttributeName\": \"sortKey\", \"KeyType\": \"RANGE\"}], \"AttributeDefinitions\": [{\"AttributeName\": \"hashKey\", \"AttributeType\": \"S\"}, {\"AttributeName\": \"sortKey\", \"AttributeType\": \"N\"}, {\"AttributeName\": \"lsiSortKey\", \"AttributeType\": \"N\"}], \"LocalSecondaryIndexes\": [{\"IndexName\": \"LSI-PartitionAndSortKey\", \"KeySchema\": [{\"AttributeName\": \"hashKey\", \"KeyType\": \"HASH\"}, {\"AttributeName\": \"lsiSortKey\", \"KeyType\": \"RANGE\"}], \"Projection\": {\"ProjectionType\": \"ALL\"}}], \"ProvisionedThroughput\": {\"ReadCapacityUnits\": 5, \"WriteCapacityUnits\": 5}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"Key961B73FD\": {\"Type\": \"AWS::KMS::Key\", \"Properties\": {\"KeyPolicy\": {\"Statement\": [{\"Action\": \"kms:*\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}, \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"EnableKeyRotation\": true}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"TableWithCustomerManagedKeyD5C58807\": {\"Type\": \"AWS::DynamoDB::Table\", \"Properties\": {\"KeySchema\": [{\"AttributeName\": \"hashKey\", \"KeyType\": \"HASH\"}], \"AttributeDefinitions\": [{\"AttributeName\": \"hashKey\", \"AttributeType\": \"S\"}], \"ProvisionedThroughput\": {\"ReadCapacityUnits\": 5, \"WriteCapacityUnits\": 5}, \"SSESpecification\": {\"KMSMasterKeyId\": {\"Fn::GetAtt\": [\"Key961B73FD\", \"Arn\"]}, \"SSEEnabled\": true, \"SSEType\": \"KMS\"}, \"StreamSpecification\": {\"StreamViewType\": \"NEW_AND_OLD_IMAGES\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"Role1ABCC5F0\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"sqs.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"RoleDefaultPolicy5FFB7DAB\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"dynamodb:ListStreams\", \"Effect\": \"Allow\", \"Resource\": \"*\"}, {\"Action\": [\"kms:Decrypt\", \"kms:DescribeKey\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"Key961B73FD\", \"Arn\"]}}, {\"Action\": [\"dynamodb:DescribeStream\", \"dynamodb:GetRecords\", \"dynamodb:GetShardIterator\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"TableWithCustomerManagedKeyD5C58807\", \"StreamArn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"RoleDefaultPolicy5FFB7DAB\", \"Roles\": [{\"Ref\": \"Role1ABCC5F0\"}]}}, \"User00B015A1\": {\"Type\": \"AWS::IAM::User\"}, \"UserDefaultPolicy1F97781E\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"dynamodb:BatchGetItem\", \"dynamodb:ConditionCheckItem\", \"dynamodb:DescribeTable\", \"dynamodb:GetItem\", \"dynamodb:GetRecords\", \"dynamodb:GetShardIterator\", \"dynamodb:Query\", \"dynamodb:Scan\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"TableCD117FA1\", \"Arn\"]}, {\"Fn::GetAtt\": [\"TableWithGlobalAndLocalSecondaryIndexBC540710\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"TableWithGlobalAndLocalSecondaryIndexBC540710\", \"Arn\"]}, \"/index/*\"]]}, {\"Ref\": \"AWS::NoValue\"}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"UserDefaultPolicy1F97781E\", \"Users\": [{\"Ref\": \"User00B015A1\"}]}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as iam from 'aws-cdk-lib/aws-iam';\nimport * as kms from 'aws-cdk-lib/aws-kms';\nimport { App, RemovalPolicy, Stack, Tags } from 'aws-cdk-lib';\nimport { Attribute, AttributeType, ProjectionType, StreamViewType, Table, TableEncryption } from 'aws-cdk-lib/aws-dynamodb';\n\n// CDK parameters\nconst STACK_NAME = 'aws-cdk-dynamodb';\n\n// DynamoDB table parameters\nconst TABLE = 'Table';\nconst TABLE_WITH_CMK = 'TableWithCustomerManagedKey';\nconst TABLE_WITH_GLOBAL_AND_LOCAL_SECONDARY_INDEX = 'TableWithGlobalAndLocalSecondaryIndex';\nconst TABLE_WITH_GLOBAL_SECONDARY_INDEX = 'TableWithGlobalSecondaryIndex';\nconst TABLE_WITH_LOCAL_SECONDARY_INDEX = 'TableWithLocalSecondaryIndex';\nconst TABLE_PARTITION_KEY: Attribute = { name: 'hashKey', type: AttributeType.STRING };\nconst TABLE_SORT_KEY: Attribute = { name: 'sortKey', type: AttributeType.NUMBER };\n\n// DynamoDB global secondary index parameters\nconst GSI_TEST_CASE_1 = 'GSI-PartitionKeyOnly';\nconst GSI_TEST_CASE_2 = 'GSI-PartitionAndSortKeyWithReadAndWriteCapacity';\nconst GSI_TEST_CASE_3 = 'GSI-ProjectionTypeKeysOnly';\nconst GSI_TEST_CASE_4 = 'GSI-ProjectionTypeInclude';\nconst GSI_TEST_CASE_5 = 'GSI-InverseTableKeySchema';\nconst GSI_PARTITION_KEY: Attribute = { name: 'gsiHashKey', type: AttributeType.STRING };\nconst GSI_SORT_KEY: Attribute = { name: 'gsiSortKey', type: AttributeType.NUMBER };\nconst GSI_NON_KEY: string[] = [];\nfor (let i = 0; i < 10; i++) { // 'A' to 'J'\n  GSI_NON_KEY.push(String.fromCharCode(65 + i));\n}\n\n// DynamoDB local secondary index parameters\nconst LSI_TEST_CASE_1 = 'LSI-PartitionAndSortKey';\nconst LSI_TEST_CASE_2 = 'LSI-PartitionAndTableSortKey';\nconst LSI_TEST_CASE_3 = 'LSI-ProjectionTypeKeysOnly';\nconst LSI_TEST_CASE_4 = 'LSI-ProjectionTypeInclude';\nconst LSI_SORT_KEY: Attribute = { name: 'lsiSortKey', type: AttributeType.NUMBER };\nconst LSI_NON_KEY: string[] = [];\nfor (let i = 0; i < 10; i++) { // 'K' to 'T'\n  LSI_NON_KEY.push(String.fromCharCode(75 + i));\n}\n\nconst app = new App();\n\nconst stack = new Stack(app, STACK_NAME);\n\nconst table = new Table(stack, TABLE, {\n  partitionKey: TABLE_PARTITION_KEY,\n  removalPolicy: RemovalPolicy.DESTROY,\n});\n\nconst tableWithGlobalAndLocalSecondaryIndex = new Table(stack, TABLE_WITH_GLOBAL_AND_LOCAL_SECONDARY_INDEX, {\n  pointInTimeRecovery: true,\n  encryption: TableEncryption.AWS_MANAGED,\n  stream: StreamViewType.KEYS_ONLY,\n  timeToLiveAttribute: 'timeToLive',\n  partitionKey: TABLE_PARTITION_KEY,\n  sortKey: TABLE_SORT_KEY,\n  removalPolicy: RemovalPolicy.DESTROY,\n});\n\nTags.of(tableWithGlobalAndLocalSecondaryIndex).add('Environment', 'Production');\ntableWithGlobalAndLocalSecondaryIndex.addGlobalSecondaryIndex({\n  indexName: GSI_TEST_CASE_1,\n  partitionKey: GSI_PARTITION_KEY,\n});\ntableWithGlobalAndLocalSecondaryIndex.addGlobalSecondaryIndex({\n  indexName: GSI_TEST_CASE_2,\n  partitionKey: GSI_PARTITION_KEY,\n  sortKey: GSI_SORT_KEY,\n  readCapacity: 10,\n  writeCapacity: 10,\n});\ntableWithGlobalAndLocalSecondaryIndex.addGlobalSecondaryIndex({\n  indexName: GSI_TEST_CASE_3,\n  partitionKey: GSI_PARTITION_KEY,\n  sortKey: GSI_SORT_KEY,\n  projectionType: ProjectionType.KEYS_ONLY,\n});\ntableWithGlobalAndLocalSecondaryIndex.addGlobalSecondaryIndex({\n  indexName: GSI_TEST_CASE_4,\n  partitionKey: GSI_PARTITION_KEY,\n  sortKey: GSI_SORT_KEY,\n  projectionType: ProjectionType.INCLUDE,\n  nonKeyAttributes: GSI_NON_KEY,\n});\ntableWithGlobalAndLocalSecondaryIndex.addGlobalSecondaryIndex({\n  indexName: GSI_TEST_CASE_5,\n  partitionKey: TABLE_SORT_KEY,\n  sortKey: TABLE_PARTITION_KEY,\n});\n\ntableWithGlobalAndLocalSecondaryIndex.addLocalSecondaryIndex({\n  indexName: LSI_TEST_CASE_2,\n  sortKey: LSI_SORT_KEY,\n});\ntableWithGlobalAndLocalSecondaryIndex.addLocalSecondaryIndex({\n  indexName: LSI_TEST_CASE_1,\n  sortKey: TABLE_SORT_KEY,\n});\ntableWithGlobalAndLocalSecondaryIndex.addLocalSecondaryIndex({\n  indexName: LSI_TEST_CASE_3,\n  sortKey: LSI_SORT_KEY,\n  projectionType: ProjectionType.KEYS_ONLY,\n});\ntableWithGlobalAndLocalSecondaryIndex.addLocalSecondaryIndex({\n  indexName: LSI_TEST_CASE_4,\n  sortKey: LSI_SORT_KEY,\n  projectionType: ProjectionType.INCLUDE,\n  nonKeyAttributes: LSI_NON_KEY,\n});\n\nconst tableWithGlobalSecondaryIndex = new Table(stack, TABLE_WITH_GLOBAL_SECONDARY_INDEX, {\n  partitionKey: TABLE_PARTITION_KEY,\n  removalPolicy: RemovalPolicy.DESTROY,\n});\ntableWithGlobalSecondaryIndex.addGlobalSecondaryIndex({\n  indexName: GSI_TEST_CASE_1,\n  partitionKey: GSI_PARTITION_KEY,\n});\n\nconst tableWithLocalSecondaryIndex = new Table(stack, TABLE_WITH_LOCAL_SECONDARY_INDEX, {\n  partitionKey: TABLE_PARTITION_KEY,\n  sortKey: TABLE_SORT_KEY,\n  removalPolicy: RemovalPolicy.DESTROY,\n});\n\ntableWithLocalSecondaryIndex.addLocalSecondaryIndex({\n  indexName: LSI_TEST_CASE_1,\n  sortKey: LSI_SORT_KEY,\n});\n\nconst encryptionKey = new kms.Key(stack, 'Key', {\n  enableKeyRotation: true,\n});\n\nconst tableWithCMK = new Table(stack, TABLE_WITH_CMK, {\n  partitionKey: TABLE_PARTITION_KEY,\n  removalPolicy: RemovalPolicy.DESTROY,\n  stream: StreamViewType.NEW_AND_OLD_IMAGES,\n  encryptionKey: encryptionKey,\n});\n\nconst role = new iam.Role(stack, 'Role', {\n  assumedBy: new iam.ServicePrincipal('sqs.amazonaws.com'),\n});\ntableWithCMK.grantStreamRead(role);\n\nconst user = new iam.User(stack, 'User');\ntable.grantReadData(user);\ntableWithGlobalAndLocalSecondaryIndex.grantReadData(user);\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"TableCD117FA1\": {\"Type\": \"AWS::DynamoDB::Table\", \"Properties\": {\"KeySchema\": [{\"AttributeName\": \"id\", \"KeyType\": \"HASH\"}], \"AttributeDefinitions\": [{\"AttributeName\": \"id\", \"AttributeType\": \"S\"}], \"ProvisionedThroughput\": {\"ReadCapacityUnits\": 5, \"WriteCapacityUnits\": 5}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"FileSystem\": {\"Type\": \"AWS::EFS::FileSystem\", \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"Vault23237E5B\": {\"Type\": \"AWS::Backup::BackupVault\", \"Properties\": {\"BackupVaultName\": \"cdkbackupVaultC2A6D3CB\", \"LockConfiguration\": {\"MinRetentionDays\": 5}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"SecondaryVault67665B5E\": {\"Type\": \"AWS::Backup::BackupVault\", \"Properties\": {\"BackupVaultName\": \"cdkbackupSecondaryVaultA01C2A0E\", \"LockConfiguration\": {\"MinRetentionDays\": 5}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"PlanDAF4E53A\": {\"Type\": \"AWS::Backup::BackupPlan\", \"Properties\": {\"BackupPlan\": {\"BackupPlanName\": \"Plan\", \"BackupPlanRule\": [{\"Lifecycle\": {\"DeleteAfterDays\": 35}, \"RuleName\": \"Daily\", \"ScheduleExpression\": \"cron(0 5 * * ? *)\", \"TargetBackupVault\": {\"Fn::GetAtt\": [\"Vault23237E5B\", \"BackupVaultName\"]}}, {\"Lifecycle\": {\"DeleteAfterDays\": 90}, \"RuleName\": \"Weekly\", \"ScheduleExpression\": \"cron(0 5 ? * SAT *)\", \"TargetBackupVault\": {\"Fn::GetAtt\": [\"Vault23237E5B\", \"BackupVaultName\"]}}, {\"Lifecycle\": {\"DeleteAfterDays\": 1825, \"MoveToColdStorageAfterDays\": 90}, \"RuleName\": \"Monthly5Year\", \"ScheduleExpression\": \"cron(0 5 1 * ? *)\", \"TargetBackupVault\": {\"Fn::GetAtt\": [\"Vault23237E5B\", \"BackupVaultName\"]}}, {\"CopyActions\": [{\"DestinationBackupVaultArn\": {\"Fn::GetAtt\": [\"SecondaryVault67665B5E\", \"BackupVaultArn\"]}, \"Lifecycle\": {\"DeleteAfterDays\": 120, \"MoveToColdStorageAfterDays\": 30}}], \"RecoveryPointTags\": {\"stage\": \"prod\"}, \"RuleName\": \"PlanRule3\", \"TargetBackupVault\": {\"Fn::GetAtt\": [\"Vault23237E5B\", \"BackupVaultName\"]}}]}}}, \"PlanSelectionRole6D10F4B7\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"backup.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSBackupServiceRolePolicyForBackup\"]]}]}}, \"PlanSelectionF88CBC04\": {\"Type\": \"AWS::Backup::BackupSelection\", \"Properties\": {\"BackupPlanId\": {\"Fn::GetAtt\": [\"PlanDAF4E53A\", \"BackupPlanId\"]}, \"BackupSelection\": {\"IamRoleArn\": {\"Fn::GetAtt\": [\"PlanSelectionRole6D10F4B7\", \"Arn\"]}, \"ListOfTags\": [{\"ConditionKey\": \"stage\", \"ConditionType\": \"STRINGEQUALS\", \"ConditionValue\": \"prod\"}], \"Resources\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":dynamodb:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":table/\", {\"Ref\": \"TableCD117FA1\"}]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":elasticfilesystem:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":file-system/\", {\"Ref\": \"FileSystem\"}]]}], \"SelectionName\": \"Selection\"}}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as dynamodb from 'aws-cdk-lib/aws-dynamodb';\nimport * as efs from 'aws-cdk-lib/aws-efs';\nimport { App, Duration, RemovalPolicy, Stack, StackProps } from 'aws-cdk-lib';\nimport { Construct } from 'constructs';\nimport * as backup from 'aws-cdk-lib/aws-backup';\n\nclass TestStack extends Stack {\n  constructor(scope: Construct, id: string, props?: StackProps) {\n    super(scope, id, props);\n\n    new dynamodb.Table(this, 'Table', {\n      partitionKey: {\n        name: 'id',\n        type: dynamodb.AttributeType.STRING,\n      },\n      removalPolicy: RemovalPolicy.DESTROY,\n    });\n\n    const fs = new efs.CfnFileSystem(this, 'FileSystem');\n    fs.applyRemovalPolicy(RemovalPolicy.DESTROY);\n\n    const vault = new backup.BackupVault(this, 'Vault', {\n      removalPolicy: RemovalPolicy.DESTROY,\n      lockConfiguration: {\n        minRetention: Duration.days(5),\n      },\n    });\n    const secondaryVault = new backup.BackupVault(this, 'SecondaryVault', {\n      removalPolicy: RemovalPolicy.DESTROY,\n      lockConfiguration: {\n        minRetention: Duration.days(5),\n      },\n    });\n    const plan = backup.BackupPlan.dailyWeeklyMonthly5YearRetention(this, 'Plan', vault);\n\n    plan.addSelection('Selection', {\n      resources: [\n        backup.BackupResource.fromConstruct(this), // All backupable resources in this construct\n        backup.BackupResource.fromTag('stage', 'prod'), // Resources that are tagged stage=prod\n      ],\n    });\n\n    plan.addRule(new backup.BackupPlanRule({\n      copyActions: [{\n        destinationBackupVault: secondaryVault,\n        moveToColdStorageAfter: Duration.days(30),\n        deleteAfter: Duration.days(120),\n      }],\n      recoveryPointTags: {\n        stage: 'prod',\n      },\n    }));\n  }\n}\n\nconst app = new App();\nnew TestStack(app, 'cdk-backup');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"VPCB9E5F0B4\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-globalaccelerator/VPC\"}]}}, \"VPCPublicSubnet1SubnetB4246D30\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"integ-globalaccelerator/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableFEE4B781\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-globalaccelerator/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableAssociation0B0896DC\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}}}, \"VPCPublicSubnet1DefaultRoute91CEF279\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet1EIP6AD938E8\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-globalaccelerator/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1NATGatewayE0556630\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet1EIP6AD938E8\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-globalaccelerator/VPC/PublicSubnet1\"}]}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\"]}, \"VPCPublicSubnet2Subnet74179F39\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"integ-globalaccelerator/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTable6F1A15F1\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-globalaccelerator/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTableAssociation5A808732\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}}}, \"VPCPublicSubnet2DefaultRouteB7481BBA\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPrivateSubnet1Subnet8BCA10E0\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"integ-globalaccelerator/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableBE8A6027\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-globalaccelerator/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableAssociation347902D1\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}}}, \"VPCPrivateSubnet1DefaultRouteAE1D6490\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet1NATGatewayE0556630\"}}}, \"VPCPrivateSubnet2SubnetCFCDAA7A\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"integ-globalaccelerator/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTable0A19E10E\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-globalaccelerator/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTableAssociation0C73D413\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}}}, \"VPCPrivateSubnet2DefaultRouteF4F5CFD2\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet1NATGatewayE0556630\"}}}, \"VPCIGWB7E252D3\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-globalaccelerator/VPC\"}]}}, \"VPCVPCGW99B986DC\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"InternetGatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}}, \"Accelerator8EB0B6B1\": {\"Type\": \"AWS::GlobalAccelerator::Accelerator\", \"Properties\": {\"Name\": \"integglobalacceleratorAccelerator5D88FB42\", \"Enabled\": true}}, \"Listener828B0E81\": {\"Type\": \"AWS::GlobalAccelerator::Listener\", \"Properties\": {\"AcceleratorArn\": {\"Fn::GetAtt\": [\"Accelerator8EB0B6B1\", \"AcceleratorArn\"]}, \"PortRanges\": [{\"FromPort\": 80, \"ToPort\": 80}], \"Protocol\": \"TCP\", \"ClientAffinity\": \"NONE\"}}, \"ALBAEE750D2\": {\"Type\": \"AWS::ElasticLoadBalancingV2::LoadBalancer\", \"Properties\": {\"LoadBalancerAttributes\": [{\"Key\": \"deletion_protection.enabled\", \"Value\": \"false\"}], \"Scheme\": \"internet-facing\", \"SecurityGroups\": [{\"Fn::GetAtt\": [\"ALBSecurityGroup8B8624F8\", \"GroupId\"]}], \"Subnets\": [{\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}, {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}], \"Type\": \"application\"}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\", \"VPCPublicSubnet2DefaultRouteB7481BBA\", \"VPCPublicSubnet2RouteTableAssociation5A808732\"]}, \"ALBSecurityGroup8B8624F8\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"Automatically created Security Group for ELB integglobalacceleratorALBEE1DE7F7\", \"SecurityGroupEgress\": [{\"CidrIp\": \"255.255.255.255/32\", \"Description\": \"Disallow all traffic\", \"FromPort\": 252, \"IpProtocol\": \"icmp\", \"ToPort\": 86}], \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}}, \"ALBSecurityGroupfromGlobalAcceleratorGroup4435D2AC398\": {\"Type\": \"AWS::EC2::SecurityGroupIngress\", \"Properties\": {\"IpProtocol\": \"tcp\", \"Description\": \"from GlobalAcceleratorGroup:443\", \"FromPort\": 443, \"GroupId\": {\"Fn::GetAtt\": [\"ALBSecurityGroup8B8624F8\", \"GroupId\"]}, \"SourceSecurityGroupId\": {\"Fn::GetAtt\": [\"GroupPeerCustomResourceB3A15D36\", \"SecurityGroups.0.GroupId\"]}, \"ToPort\": 443}}, \"NLB55158F82\": {\"Type\": \"AWS::ElasticLoadBalancingV2::LoadBalancer\", \"Properties\": {\"LoadBalancerAttributes\": [{\"Key\": \"deletion_protection.enabled\", \"Value\": \"false\"}], \"Scheme\": \"internet-facing\", \"Subnets\": [{\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}, {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}], \"Type\": \"network\"}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\", \"VPCPublicSubnet2DefaultRouteB7481BBA\", \"VPCPublicSubnet2RouteTableAssociation5A808732\"]}, \"ElasticIpAddress\": {\"Type\": \"AWS::EC2::EIP\"}, \"Instance0InstanceSecurityGroup7897592D\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"integ-globalaccelerator/Instance0/InstanceSecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-globalaccelerator/Instance0\"}], \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}}, \"Instance0InstanceRole6927D768\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"ec2.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-globalaccelerator/Instance0\"}]}}, \"Instance0InstanceProfile3A61DE71\": {\"Type\": \"AWS::IAM::InstanceProfile\", \"Properties\": {\"Roles\": [{\"Ref\": \"Instance0InstanceRole6927D768\"}]}}, \"Instance008A4B15C\": {\"Type\": \"AWS::EC2::Instance\", \"Properties\": {\"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"IamInstanceProfile\": {\"Ref\": \"Instance0InstanceProfile3A61DE71\"}, \"ImageId\": {\"Ref\": \"SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter\"}, \"InstanceType\": \"t3.small\", \"SecurityGroupIds\": [{\"Fn::GetAtt\": [\"Instance0InstanceSecurityGroup7897592D\", \"GroupId\"]}], \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-globalaccelerator/Instance0\"}], \"UserData\": {\"Fn::Base64\": \"#!/bin/bash\"}}, \"DependsOn\": [\"Instance0InstanceRole6927D768\"]}, \"Instance1InstanceSecurityGroup50841F79\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"integ-globalaccelerator/Instance1/InstanceSecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-globalaccelerator/Instance1\"}], \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}}, \"Instance1InstanceRoleBC4D05C6\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"ec2.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-globalaccelerator/Instance1\"}]}}, \"Instance1InstanceProfileC04770B7\": {\"Type\": \"AWS::IAM::InstanceProfile\", \"Properties\": {\"Roles\": [{\"Ref\": \"Instance1InstanceRoleBC4D05C6\"}]}}, \"Instance14BC3991D\": {\"Type\": \"AWS::EC2::Instance\", \"Properties\": {\"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"IamInstanceProfile\": {\"Ref\": \"Instance1InstanceProfileC04770B7\"}, \"ImageId\": {\"Ref\": \"SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter\"}, \"InstanceType\": \"t3.small\", \"SecurityGroupIds\": [{\"Fn::GetAtt\": [\"Instance1InstanceSecurityGroup50841F79\", \"GroupId\"]}], \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-globalaccelerator/Instance1\"}], \"UserData\": {\"Fn::Base64\": \"#!/bin/bash\"}}, \"DependsOn\": [\"Instance1InstanceRoleBC4D05C6\"]}, \"GroupC77FDACD\": {\"Type\": \"AWS::GlobalAccelerator::EndpointGroup\", \"Properties\": {\"EndpointGroupRegion\": {\"Ref\": \"AWS::Region\"}, \"ListenerArn\": {\"Fn::GetAtt\": [\"Listener828B0E81\", \"ListenerArn\"]}, \"EndpointConfigurations\": [{\"EndpointId\": {\"Ref\": \"ALBAEE750D2\"}}, {\"EndpointId\": {\"Ref\": \"NLB55158F82\"}}, {\"EndpointId\": {\"Fn::GetAtt\": [\"ElasticIpAddress\", \"AllocationId\"]}}, {\"EndpointId\": {\"Ref\": \"Instance008A4B15C\"}}, {\"EndpointId\": {\"Ref\": \"Instance14BC3991D\"}}]}}, \"GroupPeerCustomResourceB3A15D36\": {\"Type\": \"Custom::AWS\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"AWS679f53fac002430cb0da5b7982bd22872D164C4C\", \"Arn\"]}, \"Create\": {\"Fn::Join\": [\"\", [\"{\\\"service\\\":\\\"EC2\\\",\\\"action\\\":\\\"describeSecurityGroups\\\",\\\"parameters\\\":{\\\"Filters\\\":[{\\\"Name\\\":\\\"group-name\\\",\\\"Values\\\":[\\\"GlobalAccelerator\\\"]},{\\\"Name\\\":\\\"vpc-id\\\",\\\"Values\\\":[\\\"\", {\"Ref\": \"VPCB9E5F0B4\"}, \"\\\"]}]},\\\"physicalResourceId\\\":{\\\"responsePath\\\":\\\"SecurityGroups.0.GroupId\\\"}}\"]]}, \"InstallLatestAwsSdk\": false}, \"DependsOn\": [\"GroupPeerCustomResourceCustomResourcePolicy42EF8263\", \"GroupC77FDACD\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"GroupPeerCustomResourceCustomResourcePolicy42EF8263\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"ec2:DescribeSecurityGroups\", \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"GroupPeerCustomResourceCustomResourcePolicy42EF8263\", \"Roles\": [{\"Ref\": \"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\"}]}, \"DependsOn\": [\"GroupC77FDACD\"]}, \"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"AWS679f53fac002430cb0da5b7982bd22872D164C4C\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"5009f77d2e9161f4799d4facb1cb8859134a40234014484b4911e924c169c9cb.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\", \"Arn\"]}, \"Handler\": \"index.handler\", \"Runtime\": {\"Fn::FindInMap\": [\"DefaultCrNodeVersionMap\", {\"Ref\": \"AWS::Region\"}, \"value\"]}, \"Timeout\": 120}, \"DependsOn\": [\"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\"]}}, \"Parameters\": {\"SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter\": {\"Type\": \"AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>\", \"Default\": \"/aws/service/ami-amazon-linux-latest/amzn-ami-hvm-x86_64-gp2\"}, \"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Mappings\": {\"DefaultCrNodeVersionMap\": {\"af-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-east-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-3\": {\"value\": \"nodejs16.x\"}, \"ap-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-south-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-3\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-4\": {\"value\": \"nodejs16.x\"}, \"ca-central-1\": {\"value\": \"nodejs16.x\"}, \"cn-north-1\": {\"value\": \"nodejs16.x\"}, \"cn-northwest-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-2\": {\"value\": \"nodejs16.x\"}, \"eu-north-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-1\": {\"value\": \"nodejs16.x\"}, \"eu-west-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-3\": {\"value\": \"nodejs16.x\"}, \"me-central-1\": {\"value\": \"nodejs16.x\"}, \"me-south-1\": {\"value\": \"nodejs16.x\"}, \"sa-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-2\": {\"value\": \"nodejs16.x\"}, \"us-gov-east-1\": {\"value\": \"nodejs16.x\"}, \"us-gov-west-1\": {\"value\": \"nodejs16.x\"}, \"us-iso-east-1\": {\"value\": \"nodejs14.x\"}, \"us-iso-west-1\": {\"value\": \"nodejs14.x\"}, \"us-isob-east-1\": {\"value\": \"nodejs14.x\"}, \"us-west-1\": {\"value\": \"nodejs16.x\"}, \"us-west-2\": {\"value\": \"nodejs16.x\"}}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as elbv2 from 'aws-cdk-lib/aws-elasticloadbalancingv2';\nimport * as ga from 'aws-cdk-lib/aws-globalaccelerator';\nimport { App, Stack } from 'aws-cdk-lib';\nimport * as constructs from 'constructs';\nimport * as endpoints from 'aws-cdk-lib/aws-globalaccelerator-endpoints';\n\nclass GaStack extends Stack {\n  constructor(scope: constructs.Construct, id: string) {\n    super(scope, id);\n\n    const vpc = new ec2.Vpc(this, 'VPC', { maxAzs: 3, natGateways: 1, restrictDefaultSecurityGroup: false });\n    const accelerator = new ga.Accelerator(this, 'Accelerator');\n    const listener = new ga.Listener(this, 'Listener', {\n      accelerator,\n      portRanges: [\n        {\n          fromPort: 80,\n          toPort: 80,\n        },\n      ],\n    });\n    const alb = new elbv2.ApplicationLoadBalancer(this, 'ALB', { vpc, internetFacing: true });\n    const nlb = new elbv2.NetworkLoadBalancer(this, 'NLB', { vpc, internetFacing: true });\n    const eip = new ec2.CfnEIP(this, 'ElasticIpAddress');\n    const instances = new Array<ec2.Instance>();\n\n    for ( let i = 0; i < 2; i++) {\n      instances.push(new ec2.Instance(this, `Instance${i}`, {\n        vpc,\n        machineImage: new ec2.AmazonLinuxImage(),\n        instanceType: new ec2.InstanceType('t3.small'),\n      }));\n    }\n\n    const group = new ga.EndpointGroup(this, 'Group', {\n      listener,\n      endpoints: [\n        new endpoints.ApplicationLoadBalancerEndpoint(alb),\n        new endpoints.NetworkLoadBalancerEndpoint(nlb),\n        new endpoints.CfnEipEndpoint(eip),\n        new endpoints.InstanceEndpoint(instances[0]),\n        new endpoints.InstanceEndpoint(instances[1]),\n      ],\n    });\n\n    alb.connections.allowFrom(group.connectionsPeer('Peer', vpc), ec2.Port.tcp(443));\n  }\n}\n\nconst app = new App();\nnew GaStack(app, 'integ-globalaccelerator');\n"}
{ "prompt": "{\"Resources\": {\"VPCB9E5F0B4\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC\"}]}}, \"VPCPublicSubnet1SubnetB4246D30\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableFEE4B781\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableAssociation0B0896DC\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}}}, \"VPCPublicSubnet1DefaultRoute91CEF279\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet1EIP6AD938E8\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1NATGatewayE0556630\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet1EIP6AD938E8\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC/PublicSubnet1\"}]}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\"]}, \"VPCPublicSubnet2Subnet74179F39\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTable6F1A15F1\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTableAssociation5A808732\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}}}, \"VPCPublicSubnet2DefaultRouteB7481BBA\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet2EIP4947BC00\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2NATGateway3C070193\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet2EIP4947BC00\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC/PublicSubnet2\"}]}, \"DependsOn\": [\"VPCPublicSubnet2DefaultRouteB7481BBA\", \"VPCPublicSubnet2RouteTableAssociation5A808732\"]}, \"VPCPrivateSubnet1Subnet8BCA10E0\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableBE8A6027\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableAssociation347902D1\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}}}, \"VPCPrivateSubnet1DefaultRouteAE1D6490\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet1NATGatewayE0556630\"}}}, \"VPCPrivateSubnet2SubnetCFCDAA7A\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTable0A19E10E\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTableAssociation0C73D413\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}}}, \"VPCPrivateSubnet2DefaultRouteF4F5CFD2\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet2NATGateway3C070193\"}}}, \"VPCIGWB7E252D3\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC\"}]}}, \"VPCVPCGW99B986DC\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"InternetGatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}}, \"LB8A12904C\": {\"Type\": \"AWS::ElasticLoadBalancingV2::LoadBalancer\", \"Properties\": {\"LoadBalancerAttributes\": [{\"Key\": \"deletion_protection.enabled\", \"Value\": \"false\"}], \"Scheme\": \"internet-facing\", \"SecurityGroups\": [{\"Fn::GetAtt\": [\"LBSecurityGroup8A41EA2B\", \"GroupId\"]}], \"Subnets\": [{\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}, {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}], \"Type\": \"application\"}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\", \"VPCPublicSubnet2DefaultRouteB7481BBA\", \"VPCPublicSubnet2RouteTableAssociation5A808732\"]}, \"LBSecurityGroup8A41EA2B\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"Automatically created Security Group for ELB awscdkelbv2integLB9950B1E4\", \"SecurityGroupEgress\": [{\"CidrIp\": \"255.255.255.255/32\", \"Description\": \"Disallow all traffic\", \"FromPort\": 252, \"IpProtocol\": \"icmp\", \"ToPort\": 86}], \"SecurityGroupIngress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow from anyone on port 80\", \"FromPort\": 80, \"IpProtocol\": \"tcp\", \"ToPort\": 80}], \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}}, \"LBListener49E825B4\": {\"Type\": \"AWS::ElasticLoadBalancingV2::Listener\", \"Properties\": {\"DefaultActions\": [{\"TargetGroupArn\": {\"Ref\": \"LBListenerTargetGroupF04FCF6D\"}, \"Type\": \"forward\"}], \"LoadBalancerArn\": {\"Ref\": \"LB8A12904C\"}, \"Port\": 80, \"Protocol\": \"HTTP\"}}, \"LBListenerTargetGroupF04FCF6D\": {\"Type\": \"AWS::ElasticLoadBalancingV2::TargetGroup\", \"Properties\": {\"Port\": 80, \"Protocol\": \"HTTP\", \"TargetGroupAttributes\": [{\"Key\": \"stickiness.enabled\", \"Value\": \"false\"}], \"Targets\": [{\"Id\": \"10.0.128.4\"}], \"TargetType\": \"ip\", \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1EIP6AD938E8\", \"VPCPublicSubnet1NATGatewayE0556630\", \"VPCPublicSubnet1RouteTableFEE4B781\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\", \"VPCPublicSubnet1SubnetB4246D30\", \"VPCPublicSubnet2DefaultRouteB7481BBA\", \"VPCPublicSubnet2EIP4947BC00\", \"VPCPublicSubnet2NATGateway3C070193\", \"VPCPublicSubnet2RouteTable6F1A15F1\", \"VPCPublicSubnet2RouteTableAssociation5A808732\", \"VPCPublicSubnet2Subnet74179F39\"]}, \"LBListenerConditionalTargetGroupA75CCCD9\": {\"Type\": \"AWS::ElasticLoadBalancingV2::TargetGroup\", \"Properties\": {\"Port\": 80, \"Protocol\": \"HTTP\", \"TargetGroupAttributes\": [{\"Key\": \"stickiness.enabled\", \"Value\": \"false\"}], \"Targets\": [{\"Id\": \"10.0.128.5\"}], \"TargetType\": \"ip\", \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1EIP6AD938E8\", \"VPCPublicSubnet1NATGatewayE0556630\", \"VPCPublicSubnet1RouteTableFEE4B781\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\", \"VPCPublicSubnet1SubnetB4246D30\", \"VPCPublicSubnet2DefaultRouteB7481BBA\", \"VPCPublicSubnet2EIP4947BC00\", \"VPCPublicSubnet2NATGateway3C070193\", \"VPCPublicSubnet2RouteTable6F1A15F1\", \"VPCPublicSubnet2RouteTableAssociation5A808732\", \"VPCPublicSubnet2Subnet74179F39\"]}, \"LBListenerConditionalTargetRule91FA260F\": {\"Type\": \"AWS::ElasticLoadBalancingV2::ListenerRule\", \"Properties\": {\"Actions\": [{\"TargetGroupArn\": {\"Ref\": \"LBListenerConditionalTargetGroupA75CCCD9\"}, \"Type\": \"forward\"}], \"Conditions\": [{\"Field\": \"host-header\", \"Values\": [\"example.com\"]}], \"ListenerArn\": {\"Ref\": \"LBListener49E825B4\"}, \"Priority\": 10}}, \"LBListeneraction1Rule86E405BB\": {\"Type\": \"AWS::ElasticLoadBalancingV2::ListenerRule\", \"Properties\": {\"Actions\": [{\"FixedResponseConfig\": {\"MessageBody\": \"success\", \"StatusCode\": \"200\"}, \"Type\": \"fixed-response\"}], \"Conditions\": [{\"Field\": \"host-header\", \"HostHeaderConfig\": {\"Values\": [\"example.com\"]}}], \"ListenerArn\": {\"Ref\": \"LBListener49E825B4\"}, \"Priority\": 1}}, \"ResponseTimeHigh1D16E109F\": {\"Type\": \"AWS::CloudWatch::Alarm\", \"Properties\": {\"ComparisonOperator\": \"GreaterThanOrEqualToThreshold\", \"EvaluationPeriods\": 2, \"Dimensions\": [{\"Name\": \"LoadBalancer\", \"Value\": {\"Fn::Join\": [\"\", [{\"Fn::Select\": [1, {\"Fn::Split\": [\"/\", {\"Ref\": \"LBListener49E825B4\"}]}]}, \"/\", {\"Fn::Select\": [2, {\"Fn::Split\": [\"/\", {\"Ref\": \"LBListener49E825B4\"}]}]}, \"/\", {\"Fn::Select\": [3, {\"Fn::Split\": [\"/\", {\"Ref\": \"LBListener49E825B4\"}]}]}]]}}, {\"Name\": \"TargetGroup\", \"Value\": {\"Fn::GetAtt\": [\"LBListenerTargetGroupF04FCF6D\", \"TargetGroupFullName\"]}}], \"MetricName\": \"TargetResponseTime\", \"Namespace\": \"AWS/ApplicationELB\", \"Period\": 300, \"Statistic\": \"Average\", \"Threshold\": 5}}, \"ResponseTimeHigh2FFCF1FE1\": {\"Type\": \"AWS::CloudWatch::Alarm\", \"Properties\": {\"ComparisonOperator\": \"GreaterThanOrEqualToThreshold\", \"EvaluationPeriods\": 2, \"Dimensions\": [{\"Name\": \"LoadBalancer\", \"Value\": {\"Fn::Join\": [\"\", [{\"Fn::Select\": [1, {\"Fn::Split\": [\"/\", {\"Ref\": \"LBListener49E825B4\"}]}]}, \"/\", {\"Fn::Select\": [2, {\"Fn::Split\": [\"/\", {\"Ref\": \"LBListener49E825B4\"}]}]}, \"/\", {\"Fn::Select\": [3, {\"Fn::Split\": [\"/\", {\"Ref\": \"LBListener49E825B4\"}]}]}]]}}, {\"Name\": \"TargetGroup\", \"Value\": {\"Fn::GetAtt\": [\"LBListenerConditionalTargetGroupA75CCCD9\", \"TargetGroupFullName\"]}}], \"MetricName\": \"TargetResponseTime\", \"Namespace\": \"AWS/ApplicationELB\", \"Period\": 300, \"Statistic\": \"Average\", \"Threshold\": 5}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "#!/usr/bin/env node\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as cdk from 'aws-cdk-lib';\nimport * as elbv2 from 'aws-cdk-lib/aws-elasticloadbalancingv2';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'aws-cdk-elbv2-integ');\n\nconst vpc = new ec2.Vpc(stack, 'VPC', {\n  restrictDefaultSecurityGroup: false,\n  maxAzs: 2,\n});\n\nconst lb = new elbv2.ApplicationLoadBalancer(stack, 'LB', {\n  vpc,\n  internetFacing: true,\n});\n\nconst listener = lb.addListener('Listener', {\n  port: 80,\n});\n\nconst group1 = listener.addTargets('Target', {\n  port: 80,\n  targets: [new elbv2.IpTarget('10.0.128.4')],\n});\n\nconst group2 = listener.addTargets('ConditionalTarget', {\n  priority: 10,\n  hostHeader: 'example.com',\n  port: 80,\n  targets: [new elbv2.IpTarget('10.0.128.5')],\n});\n\nlistener.addAction('action1', {\n  priority: 1,\n  conditions: [\n    elbv2.ListenerCondition.hostHeaders(['example.com']),\n  ],\n  action: elbv2.ListenerAction.fixedResponse(200, { messageBody: 'success' }),\n});\n\ngroup1.metricTargetResponseTime().createAlarm(stack, 'ResponseTimeHigh1', {\n  threshold: 5,\n  evaluationPeriods: 2,\n});\n\ngroup2.metricTargetResponseTime().createAlarm(stack, 'ResponseTimeHigh2', {\n  threshold: 5,\n  evaluationPeriods: 2,\n});\n\nvpc.publicSubnets.forEach(subnet => {\n  group2.node.addDependency(subnet);\n  group1.node.addDependency(subnet);\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"VPCB9E5F0B4\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc-endpoint-service/VPC\"}]}}, \"VPCPublicSubnet1SubnetB4246D30\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc-endpoint-service/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableFEE4B781\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc-endpoint-service/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableAssociation0B0896DC\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}}}, \"VPCPublicSubnet1DefaultRoute91CEF279\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet1EIP6AD938E8\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc-endpoint-service/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1NATGatewayE0556630\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet1EIP6AD938E8\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc-endpoint-service/VPC/PublicSubnet1\"}]}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\"]}, \"VPCPublicSubnet2Subnet74179F39\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc-endpoint-service/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTable6F1A15F1\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc-endpoint-service/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTableAssociation5A808732\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}}}, \"VPCPublicSubnet2DefaultRouteB7481BBA\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet2EIP4947BC00\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc-endpoint-service/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2NATGateway3C070193\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet2EIP4947BC00\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc-endpoint-service/VPC/PublicSubnet2\"}]}, \"DependsOn\": [\"VPCPublicSubnet2DefaultRouteB7481BBA\", \"VPCPublicSubnet2RouteTableAssociation5A808732\"]}, \"VPCPrivateSubnet1Subnet8BCA10E0\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc-endpoint-service/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableBE8A6027\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc-endpoint-service/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableAssociation347902D1\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}}}, \"VPCPrivateSubnet1DefaultRouteAE1D6490\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet1NATGatewayE0556630\"}}}, \"VPCPrivateSubnet2SubnetCFCDAA7A\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc-endpoint-service/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTable0A19E10E\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc-endpoint-service/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTableAssociation0C73D413\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}}}, \"VPCPrivateSubnet2DefaultRouteF4F5CFD2\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet2NATGateway3C070193\"}}}, \"VPCIGWB7E252D3\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc-endpoint-service/VPC\"}]}}, \"VPCVPCGW99B986DC\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"InternetGatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}}, \"NLBNoPrincipals25B7CFB1\": {\"Type\": \"AWS::ElasticLoadBalancingV2::LoadBalancer\", \"Properties\": {\"LoadBalancerAttributes\": [{\"Key\": \"deletion_protection.enabled\", \"Value\": \"false\"}], \"Scheme\": \"internal\", \"Subnets\": [{\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}, {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}], \"Type\": \"network\"}}, \"MyVpcEndpointServiceWithNoPrincipals9B24276E\": {\"Type\": \"AWS::EC2::VPCEndpointService\", \"Properties\": {\"AcceptanceRequired\": false, \"NetworkLoadBalancerArns\": [{\"Ref\": \"NLBNoPrincipals25B7CFB1\"}]}}, \"NLBWithPrincipals912E28FF\": {\"Type\": \"AWS::ElasticLoadBalancingV2::LoadBalancer\", \"Properties\": {\"LoadBalancerAttributes\": [{\"Key\": \"deletion_protection.enabled\", \"Value\": \"false\"}], \"Scheme\": \"internal\", \"Subnets\": [{\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}, {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}], \"Type\": \"network\"}}, \"MyVpcEndpointServiceWithPrincipals41EE2DF2\": {\"Type\": \"AWS::EC2::VPCEndpointService\", \"Properties\": {\"AcceptanceRequired\": false, \"NetworkLoadBalancerArns\": [{\"Ref\": \"NLBWithPrincipals912E28FF\"}]}}, \"MyVpcEndpointServiceWithPrincipalsPermissions29F9BD5A\": {\"Type\": \"AWS::EC2::VPCEndpointServicePermissions\", \"Properties\": {\"ServiceId\": {\"Ref\": \"MyVpcEndpointServiceWithPrincipals41EE2DF2\"}, \"AllowedPrincipals\": [\"arn:aws:iam::123456789012:root\"]}}}, \"Outputs\": {\"MyVpcEndpointServiceWithNoPrincipalsServiceName\": {\"Description\": \"Give this to service consumers so they can connect via VPC Endpoint\", \"Value\": {\"Fn::Join\": [\".\", [\"com.amazonaws.vpce\", {\"Ref\": \"AWS::Region\"}, {\"Ref\": \"MyVpcEndpointServiceWithNoPrincipals9B24276E\"}]]}, \"Export\": {\"Name\": \"ServiceName\"}}, \"MyVpcEndpointServiceWithPrincipalsEndpointServiceId\": {\"Description\": \"Reference this service from other stacks\", \"Value\": {\"Ref\": \"MyVpcEndpointServiceWithPrincipals41EE2DF2\"}, \"Export\": {\"Name\": \"EndpointServiceId\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport { ArnPrincipal } from 'aws-cdk-lib/aws-iam';\nimport * as cdk from 'aws-cdk-lib';\nimport * as elbv2 from 'aws-cdk-lib/aws-elasticloadbalancingv2';\n\nconst app = new cdk.App();\n\nclass VpcEndpointServiceStack extends cdk.Stack {\n  constructor(scope: cdk.App, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n\n    const vpc = new ec2.Vpc(this, 'VPC', { restrictDefaultSecurityGroup: false });\n    const nlbNoPrincipals = new elbv2.NetworkLoadBalancer(this, 'NLBNoPrincipals', {\n      vpc,\n    });\n\n    const service1 = new ec2.VpcEndpointService(this, 'MyVpcEndpointServiceWithNoPrincipals', {\n      vpcEndpointServiceLoadBalancers: [nlbNoPrincipals],\n      acceptanceRequired: false,\n      allowedPrincipals: [],\n    });\n\n    const nlbWithPrincipals = new elbv2.NetworkLoadBalancer(this, 'NLBWithPrincipals', {\n      vpc,\n    });\n    const principalArn = new ArnPrincipal('arn:aws:iam::123456789012:root');\n\n    const service2 = new ec2.VpcEndpointService(this, 'MyVpcEndpointServiceWithPrincipals', {\n      vpcEndpointServiceLoadBalancers: [nlbWithPrincipals],\n      acceptanceRequired: false,\n      allowedPrincipals: [principalArn],\n    });\n\n    new cdk.CfnOutput(this, 'MyVpcEndpointServiceWithNoPrincipalsServiceName', {\n      exportName: 'ServiceName',\n      value: service1.vpcEndpointServiceName,\n      description: 'Give this to service consumers so they can connect via VPC Endpoint',\n    });\n\n    new cdk.CfnOutput(this, 'MyVpcEndpointServiceWithPrincipalsEndpointServiceId', {\n      exportName: 'EndpointServiceId',\n      value: service2.vpcEndpointServiceId,\n      description: 'Reference this service from other stacks',\n    });\n  }\n}\n\nnew VpcEndpointServiceStack(app, 'aws-cdk-ec2-vpc-endpoint-service');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"VPCB9E5F0B4\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC\"}]}}, \"VPCPublicSubnet1SubnetB4246D30\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"Ipv6CidrBlock\": {\"Fn::Select\": [0, {\"Fn::Cidr\": [{\"Fn::Select\": [0, {\"Fn::GetAtt\": [\"VPCB9E5F0B4\", \"Ipv6CidrBlocks\"]}]}, 2, \"64\"]}]}, \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC/PublicSubnet1\"}]}, \"DependsOn\": [\"IPv6Block\"]}, \"VPCPublicSubnet1RouteTableFEE4B781\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableAssociation0B0896DC\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}}}, \"VPCPublicSubnet1DefaultRoute91CEF279\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet1EIP6AD938E8\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1NATGatewayE0556630\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet1EIP6AD938E8\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC/PublicSubnet1\"}]}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\"]}, \"VPCPublicSubnet1IPv6DefaultFD18367E\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"DestinationIpv6CidrBlock\": \"::/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}}, \"VPCPublicSubnet2Subnet74179F39\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"Ipv6CidrBlock\": {\"Fn::Select\": [1, {\"Fn::Cidr\": [{\"Fn::Select\": [0, {\"Fn::GetAtt\": [\"VPCB9E5F0B4\", \"Ipv6CidrBlocks\"]}]}, 2, \"64\"]}]}, \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC/PublicSubnet2\"}]}, \"DependsOn\": [\"IPv6Block\"]}, \"VPCPublicSubnet2RouteTable6F1A15F1\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTableAssociation5A808732\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}}}, \"VPCPublicSubnet2DefaultRouteB7481BBA\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet2EIP4947BC00\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2NATGateway3C070193\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet2EIP4947BC00\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC/PublicSubnet2\"}]}, \"DependsOn\": [\"VPCPublicSubnet2DefaultRouteB7481BBA\", \"VPCPublicSubnet2RouteTableAssociation5A808732\"]}, \"VPCPublicSubnet2IPv6DefaultDD0476C2\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"DestinationIpv6CidrBlock\": \"::/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}}, \"VPCPrivateSubnet1Subnet8BCA10E0\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableBE8A6027\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableAssociation347902D1\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}}}, \"VPCPrivateSubnet1DefaultRouteAE1D6490\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet1NATGatewayE0556630\"}}}, \"VPCPrivateSubnet2SubnetCFCDAA7A\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTable0A19E10E\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTableAssociation0C73D413\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}}}, \"VPCPrivateSubnet2DefaultRouteF4F5CFD2\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet2NATGateway3C070193\"}}}, \"VPCIGWB7E252D3\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC\"}]}}, \"VPCVPCGW99B986DC\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"InternetGatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}}, \"IPv6Block\": {\"Type\": \"AWS::EC2::VPCCidrBlock\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AmazonProvidedIpv6CidrBlock\": true}}, \"LB8A12904C\": {\"Type\": \"AWS::ElasticLoadBalancingV2::LoadBalancer\", \"Properties\": {\"IpAddressType\": \"dualstack\", \"LoadBalancerAttributes\": [{\"Key\": \"deletion_protection.enabled\", \"Value\": \"false\"}], \"Scheme\": \"internet-facing\", \"SecurityGroups\": [{\"Fn::GetAtt\": [\"LBSecurityGroup8A41EA2B\", \"GroupId\"]}], \"Subnets\": [{\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}, {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}], \"Type\": \"application\"}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\", \"VPCPublicSubnet2DefaultRouteB7481BBA\", \"VPCPublicSubnet2RouteTableAssociation5A808732\"]}, \"LBSecurityGroup8A41EA2B\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"Automatically created Security Group for ELB awscdkelbv2integLB9950B1E4\", \"SecurityGroupEgress\": [{\"CidrIp\": \"255.255.255.255/32\", \"Description\": \"Disallow all traffic\", \"FromPort\": 252, \"IpProtocol\": \"icmp\", \"ToPort\": 86}], \"SecurityGroupIngress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow from anyone on port 80\", \"FromPort\": 80, \"IpProtocol\": \"tcp\", \"ToPort\": 80}, {\"CidrIpv6\": \"::/0\", \"Description\": \"Allow from anyone on port 80\", \"FromPort\": 80, \"IpProtocol\": \"tcp\", \"ToPort\": 80}], \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}}, \"LBListener49E825B4\": {\"Type\": \"AWS::ElasticLoadBalancingV2::Listener\", \"Properties\": {\"DefaultActions\": [{\"TargetGroupArn\": {\"Ref\": \"LBListenerTargetGroupF04FCF6D\"}, \"Type\": \"forward\"}], \"LoadBalancerArn\": {\"Ref\": \"LB8A12904C\"}, \"Port\": 80, \"Protocol\": \"HTTP\"}}, \"LBListenerTargetGroupF04FCF6D\": {\"Type\": \"AWS::ElasticLoadBalancingV2::TargetGroup\", \"Properties\": {\"Port\": 80, \"Protocol\": \"HTTP\", \"TargetGroupAttributes\": [{\"Key\": \"stickiness.enabled\", \"Value\": \"false\"}], \"Targets\": [{\"Id\": \"10.0.128.6\"}], \"TargetType\": \"ip\", \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1EIP6AD938E8\", \"VPCPublicSubnet1IPv6DefaultFD18367E\", \"VPCPublicSubnet1NATGatewayE0556630\", \"VPCPublicSubnet1RouteTableFEE4B781\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\", \"VPCPublicSubnet1SubnetB4246D30\", \"VPCPublicSubnet2DefaultRouteB7481BBA\", \"VPCPublicSubnet2EIP4947BC00\", \"VPCPublicSubnet2IPv6DefaultDD0476C2\", \"VPCPublicSubnet2NATGateway3C070193\", \"VPCPublicSubnet2RouteTable6F1A15F1\", \"VPCPublicSubnet2RouteTableAssociation5A808732\", \"VPCPublicSubnet2Subnet74179F39\"]}, \"LBListenerConditionalTargetGroupA75CCCD9\": {\"Type\": \"AWS::ElasticLoadBalancingV2::TargetGroup\", \"Properties\": {\"Port\": 80, \"Protocol\": \"HTTP\", \"TargetGroupAttributes\": [{\"Key\": \"stickiness.enabled\", \"Value\": \"false\"}], \"Targets\": [{\"Id\": \"10.0.128.5\"}], \"TargetType\": \"ip\", \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1EIP6AD938E8\", \"VPCPublicSubnet1IPv6DefaultFD18367E\", \"VPCPublicSubnet1NATGatewayE0556630\", \"VPCPublicSubnet1RouteTableFEE4B781\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\", \"VPCPublicSubnet1SubnetB4246D30\", \"VPCPublicSubnet2DefaultRouteB7481BBA\", \"VPCPublicSubnet2EIP4947BC00\", \"VPCPublicSubnet2IPv6DefaultDD0476C2\", \"VPCPublicSubnet2NATGateway3C070193\", \"VPCPublicSubnet2RouteTable6F1A15F1\", \"VPCPublicSubnet2RouteTableAssociation5A808732\", \"VPCPublicSubnet2Subnet74179F39\"]}, \"LBListenerConditionalTargetRule91FA260F\": {\"Type\": \"AWS::ElasticLoadBalancingV2::ListenerRule\", \"Properties\": {\"Actions\": [{\"TargetGroupArn\": {\"Ref\": \"LBListenerConditionalTargetGroupA75CCCD9\"}, \"Type\": \"forward\"}], \"Conditions\": [{\"Field\": \"host-header\", \"Values\": [\"example.com\"]}], \"ListenerArn\": {\"Ref\": \"LBListener49E825B4\"}, \"Priority\": 10}}, \"LBListeneraction1Rule86E405BB\": {\"Type\": \"AWS::ElasticLoadBalancingV2::ListenerRule\", \"Properties\": {\"Actions\": [{\"FixedResponseConfig\": {\"MessageBody\": \"success\", \"StatusCode\": \"200\"}, \"Type\": \"fixed-response\"}], \"Conditions\": [{\"Field\": \"host-header\", \"HostHeaderConfig\": {\"Values\": [\"example.com\"]}}], \"ListenerArn\": {\"Ref\": \"LBListener49E825B4\"}, \"Priority\": 1}}, \"ResponseTimeHigh1D16E109F\": {\"Type\": \"AWS::CloudWatch::Alarm\", \"Properties\": {\"ComparisonOperator\": \"GreaterThanOrEqualToThreshold\", \"EvaluationPeriods\": 2, \"Dimensions\": [{\"Name\": \"LoadBalancer\", \"Value\": {\"Fn::Join\": [\"\", [{\"Fn::Select\": [1, {\"Fn::Split\": [\"/\", {\"Ref\": \"LBListener49E825B4\"}]}]}, \"/\", {\"Fn::Select\": [2, {\"Fn::Split\": [\"/\", {\"Ref\": \"LBListener49E825B4\"}]}]}, \"/\", {\"Fn::Select\": [3, {\"Fn::Split\": [\"/\", {\"Ref\": \"LBListener49E825B4\"}]}]}]]}}, {\"Name\": \"TargetGroup\", \"Value\": {\"Fn::GetAtt\": [\"LBListenerTargetGroupF04FCF6D\", \"TargetGroupFullName\"]}}], \"MetricName\": \"TargetResponseTime\", \"Namespace\": \"AWS/ApplicationELB\", \"Period\": 300, \"Statistic\": \"Average\", \"Threshold\": 5}}, \"ResponseTimeHigh2FFCF1FE1\": {\"Type\": \"AWS::CloudWatch::Alarm\", \"Properties\": {\"ComparisonOperator\": \"GreaterThanOrEqualToThreshold\", \"EvaluationPeriods\": 2, \"Dimensions\": [{\"Name\": \"LoadBalancer\", \"Value\": {\"Fn::Join\": [\"\", [{\"Fn::Select\": [1, {\"Fn::Split\": [\"/\", {\"Ref\": \"LBListener49E825B4\"}]}]}, \"/\", {\"Fn::Select\": [2, {\"Fn::Split\": [\"/\", {\"Ref\": \"LBListener49E825B4\"}]}]}, \"/\", {\"Fn::Select\": [3, {\"Fn::Split\": [\"/\", {\"Ref\": \"LBListener49E825B4\"}]}]}]]}}, {\"Name\": \"TargetGroup\", \"Value\": {\"Fn::GetAtt\": [\"LBListenerConditionalTargetGroupA75CCCD9\", \"TargetGroupFullName\"]}}], \"MetricName\": \"TargetResponseTime\", \"Namespace\": \"AWS/ApplicationELB\", \"Period\": 300, \"Statistic\": \"Average\", \"Threshold\": 5}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "#!/usr/bin/env node\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as cdk from 'aws-cdk-lib';\nimport { IConstruct } from 'constructs';\nimport * as elbv2 from 'aws-cdk-lib/aws-elasticloadbalancingv2';\n\n/* IPv6 workaround found here: https://github.com/aws/aws-cdk/issues/894 */\nconst valueOrDie = <T, C extends T = T>(value: T | undefined, err: Error): C => {\n  if (value === undefined) { throw err; }\n  return value as C;\n};\n\n/**\n * Integration test to deployability and use of dualstack ALB. Creates an ALB\n * with dualstack ipAddresType and an ipv6Block to add to VPC subnets. Main\n * test is for the inclusion of default IPv6 ingress rule.\n *\n * Stack Verification steps:\n * VPC is created with subnets that allow for IPv6 connection and then dualstack\n * ALB attaches a listener with dualstack that defaults IPv4/IPv6 ingress rule.\n *\n */\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'aws-cdk-elbv2-integ');\n\nconst vpc = new ec2.Vpc(stack, 'VPC', {\n  restrictDefaultSecurityGroup: false,\n  maxAzs: 2,\n});\n\nconst ipv6Block = new ec2.CfnVPCCidrBlock(\n  stack,\n  'IPv6_Block',\n  {\n    vpcId: vpc.vpcId,\n    amazonProvidedIpv6CidrBlock: true,\n  },\n);\n\n// Get the vpc's internet gateway so we can create default routes for the\n// public subnets.\nconst internetGateway = valueOrDie<IConstruct, ec2.CfnInternetGateway>(\n  vpc.node.children.find(c => c instanceof ec2.CfnInternetGateway),\n  new Error('Couldnt find an internet gateway'),\n);\n\nconst lb = new elbv2.ApplicationLoadBalancer(stack, 'LB', {\n  vpc,\n  ipAddressType: elbv2.IpAddressType.DUAL_STACK,\n  internetFacing: true,\n});\n\nconst listener = lb.addListener('Listener', {\n  port: 80,\n});\n\nconst group1 = listener.addTargets('Target', {\n  port: 80,\n  targets: [new elbv2.IpTarget('10.0.128.6')],\n});\n\nconst group2 = listener.addTargets('ConditionalTarget', {\n  priority: 10,\n  hostHeader: 'example.com',\n  port: 80,\n  targets: [new elbv2.IpTarget('10.0.128.5')],\n});\n\nvpc.publicSubnets.forEach((subnet, idx) => {\n  // Add a default ipv6 route to the subnet's route table.\n  const unboxedSubnet = subnet as ec2.Subnet;\n  unboxedSubnet.addRoute('IPv6Default', {\n    routerId: internetGateway.ref,\n    routerType: ec2.RouterType.GATEWAY,\n    destinationIpv6CidrBlock: '::/0',\n  });\n\n  // Find a CfnSubnet (raw cloudformation resources) child to the public\n  // subnet nodes.\n  const cfnSubnet = valueOrDie<IConstruct, ec2.CfnSubnet>(\n    subnet.node.children.find(c => c instanceof ec2.CfnSubnet),\n    new Error('Couldnt find a CfnSubnet'),\n  );\n\n  // Use the intrinsic Fn::Cidr CloudFormation function on the VPC's\n  // first IPv6 block to determine ipv6 /64 cidrs for each subnet as\n  // a function of the public subnet's index.\n  const vpcCidrBlock = cdk.Fn.select(0, vpc.vpcIpv6CidrBlocks);\n  const ipv6Cidrs = cdk.Fn.cidr(\n    vpcCidrBlock,\n    vpc.publicSubnets.length,\n    '64',\n  );\n  cfnSubnet.ipv6CidrBlock = cdk.Fn.select(idx, ipv6Cidrs);\n\n  // The subnet depends on the ipv6 cidr being allocated.\n  cfnSubnet.addDependency(ipv6Block);\n\n  group1.node.addDependency(subnet);\n  group2.node.addDependency(subnet);\n});\n\nlistener.addAction('action1', {\n  priority: 1,\n  conditions: [\n    elbv2.ListenerCondition.hostHeaders(['example.com']),\n  ],\n  action: elbv2.ListenerAction.fixedResponse(200, { messageBody: 'success' }),\n});\n\ngroup1.metricTargetResponseTime().createAlarm(stack, 'ResponseTimeHigh1', {\n  threshold: 5,\n  evaluationPeriods: 2,\n});\n\ngroup2.metricTargetResponseTime().createAlarm(stack, 'ResponseTimeHigh2', {\n  threshold: 5,\n  evaluationPeriods: 2,\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"VPCB9E5F0B4\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC\"}]}}, \"VPCPublicSubnet1SubnetB4246D30\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableFEE4B781\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableAssociation0B0896DC\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}}}, \"VPCPublicSubnet1DefaultRoute91CEF279\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet1EIP6AD938E8\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1NATGatewayE0556630\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet1EIP6AD938E8\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC/PublicSubnet1\"}]}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\"]}, \"VPCPublicSubnet2Subnet74179F39\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTable6F1A15F1\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTableAssociation5A808732\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}}}, \"VPCPublicSubnet2DefaultRouteB7481BBA\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet2EIP4947BC00\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2NATGateway3C070193\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet2EIP4947BC00\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC/PublicSubnet2\"}]}, \"DependsOn\": [\"VPCPublicSubnet2DefaultRouteB7481BBA\", \"VPCPublicSubnet2RouteTableAssociation5A808732\"]}, \"VPCPrivateSubnet1Subnet8BCA10E0\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableBE8A6027\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableAssociation347902D1\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}}}, \"VPCPrivateSubnet1DefaultRouteAE1D6490\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet1NATGatewayE0556630\"}}}, \"VPCPrivateSubnet2SubnetCFCDAA7A\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTable0A19E10E\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTableAssociation0C73D413\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}}}, \"VPCPrivateSubnet2DefaultRouteF4F5CFD2\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet2NATGateway3C070193\"}}}, \"VPCIGWB7E252D3\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC\"}]}}, \"VPCVPCGW99B986DC\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"InternetGatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}}, \"LB8A12904C\": {\"Type\": \"AWS::ElasticLoadBalancingV2::LoadBalancer\", \"Properties\": {\"LoadBalancerAttributes\": [{\"Key\": \"deletion_protection.enabled\", \"Value\": \"false\"}], \"Scheme\": \"internet-facing\", \"SecurityGroups\": [{\"Fn::GetAtt\": [\"LBSecurityGroup8A41EA2B\", \"GroupId\"]}], \"Subnets\": [{\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}, {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}], \"Type\": \"application\"}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\", \"VPCPublicSubnet2DefaultRouteB7481BBA\", \"VPCPublicSubnet2RouteTableAssociation5A808732\"]}, \"LBSecurityGroup8A41EA2B\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"Automatically created Security Group for ELB awscdkelbv2integLB9950B1E4\", \"SecurityGroupEgress\": [{\"CidrIp\": \"255.255.255.255/32\", \"Description\": \"Disallow all traffic\", \"FromPort\": 252, \"IpProtocol\": \"icmp\", \"ToPort\": 86}], \"SecurityGroupIngress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow from anyone on port 80\", \"FromPort\": 80, \"IpProtocol\": \"tcp\", \"ToPort\": 80}], \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}}, \"LBListener49E825B4\": {\"Type\": \"AWS::ElasticLoadBalancingV2::Listener\", \"Properties\": {\"DefaultActions\": [{\"TargetGroupArn\": {\"Ref\": \"LBListenerTargetGroupF04FCF6D\"}, \"Type\": \"forward\"}], \"LoadBalancerArn\": {\"Ref\": \"LB8A12904C\"}, \"Port\": 80, \"Protocol\": \"HTTP\"}}, \"LBListenerTargetGroupF04FCF6D\": {\"Type\": \"AWS::ElasticLoadBalancingV2::TargetGroup\", \"Properties\": {\"Port\": 80, \"Protocol\": \"HTTP\", \"TargetGroupAttributes\": [{\"Key\": \"stickiness.enabled\", \"Value\": \"true\"}, {\"Key\": \"stickiness.type\", \"Value\": \"lb_cookie\"}, {\"Key\": \"stickiness.lb_cookie.duration_seconds\", \"Value\": \"300\"}], \"Targets\": [{\"Id\": \"10.0.128.6\"}], \"TargetType\": \"ip\", \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1EIP6AD938E8\", \"VPCPublicSubnet1NATGatewayE0556630\", \"VPCPublicSubnet1RouteTableFEE4B781\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\", \"VPCPublicSubnet1SubnetB4246D30\", \"VPCPublicSubnet2DefaultRouteB7481BBA\", \"VPCPublicSubnet2EIP4947BC00\", \"VPCPublicSubnet2NATGateway3C070193\", \"VPCPublicSubnet2RouteTable6F1A15F1\", \"VPCPublicSubnet2RouteTableAssociation5A808732\", \"VPCPublicSubnet2Subnet74179F39\"]}, \"LBListenerConditionalTargetGroupA75CCCD9\": {\"Type\": \"AWS::ElasticLoadBalancingV2::TargetGroup\", \"Properties\": {\"Port\": 80, \"Protocol\": \"HTTP\", \"TargetGroupAttributes\": [{\"Key\": \"slow_start.duration_seconds\", \"Value\": \"60\"}, {\"Key\": \"stickiness.enabled\", \"Value\": \"true\"}, {\"Key\": \"stickiness.type\", \"Value\": \"app_cookie\"}, {\"Key\": \"stickiness.app_cookie.cookie_name\", \"Value\": \"MyDeliciousCookie\"}, {\"Key\": \"stickiness.app_cookie.duration_seconds\", \"Value\": \"300\"}], \"Targets\": [{\"Id\": \"10.0.128.5\"}], \"TargetType\": \"ip\", \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1EIP6AD938E8\", \"VPCPublicSubnet1NATGatewayE0556630\", \"VPCPublicSubnet1RouteTableFEE4B781\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\", \"VPCPublicSubnet1SubnetB4246D30\", \"VPCPublicSubnet2DefaultRouteB7481BBA\", \"VPCPublicSubnet2EIP4947BC00\", \"VPCPublicSubnet2NATGateway3C070193\", \"VPCPublicSubnet2RouteTable6F1A15F1\", \"VPCPublicSubnet2RouteTableAssociation5A808732\", \"VPCPublicSubnet2Subnet74179F39\"]}, \"LBListenerConditionalTargetRule91FA260F\": {\"Type\": \"AWS::ElasticLoadBalancingV2::ListenerRule\", \"Properties\": {\"Actions\": [{\"TargetGroupArn\": {\"Ref\": \"LBListenerConditionalTargetGroupA75CCCD9\"}, \"Type\": \"forward\"}], \"Conditions\": [{\"Field\": \"host-header\", \"Values\": [\"example.com\"]}], \"ListenerArn\": {\"Ref\": \"LBListener49E825B4\"}, \"Priority\": 10}}, \"ResponseTimeHigh1D16E109F\": {\"Type\": \"AWS::CloudWatch::Alarm\", \"Properties\": {\"ComparisonOperator\": \"GreaterThanOrEqualToThreshold\", \"EvaluationPeriods\": 2, \"Dimensions\": [{\"Name\": \"LoadBalancer\", \"Value\": {\"Fn::Join\": [\"\", [{\"Fn::Select\": [1, {\"Fn::Split\": [\"/\", {\"Ref\": \"LBListener49E825B4\"}]}]}, \"/\", {\"Fn::Select\": [2, {\"Fn::Split\": [\"/\", {\"Ref\": \"LBListener49E825B4\"}]}]}, \"/\", {\"Fn::Select\": [3, {\"Fn::Split\": [\"/\", {\"Ref\": \"LBListener49E825B4\"}]}]}]]}}, {\"Name\": \"TargetGroup\", \"Value\": {\"Fn::GetAtt\": [\"LBListenerTargetGroupF04FCF6D\", \"TargetGroupFullName\"]}}], \"MetricName\": \"TargetResponseTime\", \"Namespace\": \"AWS/ApplicationELB\", \"Period\": 300, \"Statistic\": \"Average\", \"Threshold\": 5}}, \"ResponseTimeHigh2FFCF1FE1\": {\"Type\": \"AWS::CloudWatch::Alarm\", \"Properties\": {\"ComparisonOperator\": \"GreaterThanOrEqualToThreshold\", \"EvaluationPeriods\": 2, \"Dimensions\": [{\"Name\": \"LoadBalancer\", \"Value\": {\"Fn::Join\": [\"\", [{\"Fn::Select\": [1, {\"Fn::Split\": [\"/\", {\"Ref\": \"LBListener49E825B4\"}]}]}, \"/\", {\"Fn::Select\": [2, {\"Fn::Split\": [\"/\", {\"Ref\": \"LBListener49E825B4\"}]}]}, \"/\", {\"Fn::Select\": [3, {\"Fn::Split\": [\"/\", {\"Ref\": \"LBListener49E825B4\"}]}]}]]}}, {\"Name\": \"TargetGroup\", \"Value\": {\"Fn::GetAtt\": [\"LBListenerConditionalTargetGroupA75CCCD9\", \"TargetGroupFullName\"]}}], \"MetricName\": \"TargetResponseTime\", \"Namespace\": \"AWS/ApplicationELB\", \"Period\": 300, \"Statistic\": \"Average\", \"Threshold\": 5}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "#!/usr/bin/env node\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as cdk from 'aws-cdk-lib';\nimport * as elbv2 from 'aws-cdk-lib/aws-elasticloadbalancingv2';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'aws-cdk-elbv2-integ');\n\nconst vpc = new ec2.Vpc(stack, 'VPC', {\n  restrictDefaultSecurityGroup: false,\n  maxAzs: 2,\n});\n\nconst lb = new elbv2.ApplicationLoadBalancer(stack, 'LB', {\n  vpc,\n  internetFacing: true,\n});\n\nconst listener = lb.addListener('Listener', {\n  port: 80,\n});\n\nconst group1 = listener.addTargets('Target', {\n  port: 80,\n  targets: [new elbv2.IpTarget('10.0.128.6')],\n  stickinessCookieDuration: cdk.Duration.minutes(5),\n});\n\nconst group2 = listener.addTargets('ConditionalTarget', {\n  priority: 10,\n  hostHeader: 'example.com',\n  port: 80,\n  targets: [new elbv2.IpTarget('10.0.128.5')],\n  stickinessCookieDuration: cdk.Duration.minutes(5),\n  stickinessCookieName: 'MyDeliciousCookie',\n  slowStart: cdk.Duration.minutes(1),\n});\n\ngroup1.metricTargetResponseTime().createAlarm(stack, 'ResponseTimeHigh1', {\n  threshold: 5,\n  evaluationPeriods: 2,\n});\n\ngroup2.metricTargetResponseTime().createAlarm(stack, 'ResponseTimeHigh2', {\n  threshold: 5,\n  evaluationPeriods: 2,\n});\n\nvpc.publicSubnets.forEach(subnet => {\n  group2.node.addDependency(subnet);\n  group1.node.addDependency(subnet);\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"DomainMasterUserBFAFA7D9\": {\"Type\": \"AWS::SecretsManager::Secret\", \"Properties\": {\"GenerateSecretString\": {\"ExcludeCharacters\": \"{}'\\*[]()`\", \"GenerateStringKey\": \"password\", \"SecretStringTemplate\": \"{\\\"username\\\":\\\"admin\\\"}\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"Domain66AC69E0\": {\"Type\": \"AWS::Elasticsearch::Domain\", \"Properties\": {\"AdvancedSecurityOptions\": {\"Enabled\": true, \"InternalUserDatabaseEnabled\": true, \"MasterUserOptions\": {\"MasterUserName\": \"admin\", \"MasterUserPassword\": {\"Fn::Join\": [\"\", [\"{{resolve:secretsmanager:\", {\"Ref\": \"DomainMasterUserBFAFA7D9\"}, \":SecretString:password::}}\"]]}}}, \"CognitoOptions\": {\"Enabled\": false}, \"DomainEndpointOptions\": {\"EnforceHTTPS\": true, \"TLSSecurityPolicy\": \"Policy-Min-TLS-1-0-2019-07\"}, \"EBSOptions\": {\"EBSEnabled\": true, \"VolumeSize\": 10, \"VolumeType\": \"gp2\"}, \"ElasticsearchClusterConfig\": {\"DedicatedMasterEnabled\": false, \"InstanceCount\": 1, \"InstanceType\": \"r5.large.elasticsearch\", \"ZoneAwarenessEnabled\": false}, \"ElasticsearchVersion\": \"7.1\", \"EncryptionAtRestOptions\": {\"Enabled\": true}, \"LogPublishingOptions\": {}, \"NodeToNodeEncryptionOptions\": {\"Enabled\": true}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"DomainESAccessPolicy89986F33\": {\"Type\": \"Custom::ElasticsearchAccessPolicy\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"AWS679f53fac002430cb0da5b7982bd22872D164C4C\", \"Arn\"]}, \"Create\": {\"Fn::Join\": [\"\", [\"{\\\"action\\\":\\\"updateElasticsearchDomainConfig\\\",\\\"service\\\":\\\"ES\\\",\\\"parameters\\\":{\\\"DomainName\\\":\\\"\", {\"Ref\": \"Domain66AC69E0\"}, \"\\\",\\\"AccessPolicies\\\":\\\"{\\\\\"Statement\\\\\":[{\\\\\"Action\\\\\":\\\\\"es:ESHttp*\\\\\",\\\\\"Effect\\\\\":\\\\\"Allow\\\\\",\\\\\"Principal\\\\\":{\\\\\"AWS\\\\\":\\\\\"*\\\\\"},\\\\\"Resource\\\\\":\\\\\"\", {\"Fn::GetAtt\": [\"Domain66AC69E0\", \"Arn\"]}, \"/*\\\\\"}],\\\\\"Version\\\\\":\\\\\"2012-10-17\\\\\"}\\\"},\\\"outputPaths\\\":[\\\"DomainConfig.ElasticsearchClusterConfig.AccessPolicies\\\"],\\\"physicalResourceId\\\":{\\\"id\\\":\\\"\", {\"Ref\": \"Domain66AC69E0\"}, \"AccessPolicy\\\"}}\"]]}, \"Update\": {\"Fn::Join\": [\"\", [\"{\\\"action\\\":\\\"updateElasticsearchDomainConfig\\\",\\\"service\\\":\\\"ES\\\",\\\"parameters\\\":{\\\"DomainName\\\":\\\"\", {\"Ref\": \"Domain66AC69E0\"}, \"\\\",\\\"AccessPolicies\\\":\\\"{\\\\\"Statement\\\\\":[{\\\\\"Action\\\\\":\\\\\"es:ESHttp*\\\\\",\\\\\"Effect\\\\\":\\\\\"Allow\\\\\",\\\\\"Principal\\\\\":{\\\\\"AWS\\\\\":\\\\\"*\\\\\"},\\\\\"Resource\\\\\":\\\\\"\", {\"Fn::GetAtt\": [\"Domain66AC69E0\", \"Arn\"]}, \"/*\\\\\"}],\\\\\"Version\\\\\":\\\\\"2012-10-17\\\\\"}\\\"},\\\"outputPaths\\\":[\\\"DomainConfig.ElasticsearchClusterConfig.AccessPolicies\\\"],\\\"physicalResourceId\\\":{\\\"id\\\":\\\"\", {\"Ref\": \"Domain66AC69E0\"}, \"AccessPolicy\\\"}}\"]]}, \"InstallLatestAwsSdk\": \"false\"}, \"DependsOn\": [\"DomainESAccessPolicyCustomResourcePolicy9747FC42\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"DomainESAccessPolicyCustomResourcePolicy9747FC42\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"es:UpdateElasticsearchDomainConfig\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"Domain66AC69E0\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"DomainESAccessPolicyCustomResourcePolicy9747FC42\", \"Roles\": [{\"Ref\": \"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\"}]}}, \"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"AWS679f53fac002430cb0da5b7982bd22872D164C4C\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"5009f77d2e9161f4799d4facb1cb8859134a40234014484b4911e924c169c9cb.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\", \"Arn\"]}, \"Handler\": \"index.handler\", \"Runtime\": {\"Fn::FindInMap\": [\"DefaultCrNodeVersionMap\", {\"Ref\": \"AWS::Region\"}, \"value\"]}, \"Timeout\": 120}, \"DependsOn\": [\"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\"]}}, \"Mappings\": {\"DefaultCrNodeVersionMap\": {\"af-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-east-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-3\": {\"value\": \"nodejs16.x\"}, \"ap-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-south-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-3\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-4\": {\"value\": \"nodejs16.x\"}, \"ca-central-1\": {\"value\": \"nodejs16.x\"}, \"cn-north-1\": {\"value\": \"nodejs16.x\"}, \"cn-northwest-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-2\": {\"value\": \"nodejs16.x\"}, \"eu-north-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-1\": {\"value\": \"nodejs16.x\"}, \"eu-west-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-3\": {\"value\": \"nodejs16.x\"}, \"me-central-1\": {\"value\": \"nodejs16.x\"}, \"me-south-1\": {\"value\": \"nodejs16.x\"}, \"sa-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-2\": {\"value\": \"nodejs16.x\"}, \"us-gov-east-1\": {\"value\": \"nodejs16.x\"}, \"us-gov-west-1\": {\"value\": \"nodejs16.x\"}, \"us-iso-east-1\": {\"value\": \"nodejs14.x\"}, \"us-iso-west-1\": {\"value\": \"nodejs14.x\"}, \"us-isob-east-1\": {\"value\": \"nodejs14.x\"}, \"us-west-1\": {\"value\": \"nodejs16.x\"}, \"us-west-2\": {\"value\": \"nodejs16.x\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import { App, RemovalPolicy, Stack, StackProps } from 'aws-cdk-lib';\nimport { Construct } from 'constructs';\nimport * as es from 'aws-cdk-lib/aws-elasticsearch';\n\nclass TestStack extends Stack {\n  constructor(scope: Construct, id: string, props?: StackProps) {\n    super(scope, id, props);\n\n    new es.Domain(this, 'Domain', {\n      removalPolicy: RemovalPolicy.DESTROY,\n      version: es.ElasticsearchVersion.V7_1,\n      useUnsignedBasicAuth: true,\n    });\n  }\n}\n\nconst app = new App();\nnew TestStack(app, 'cdk-integ-elasticsearch-unsignedbasicauth');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"Domain66AC69E0\": {\"Type\": \"AWS::Elasticsearch::Domain\", \"Properties\": {\"CognitoOptions\": {\"Enabled\": false}, \"DomainEndpointOptions\": {\"EnforceHTTPS\": false, \"TLSSecurityPolicy\": \"Policy-Min-TLS-1-0-2019-07\"}, \"EBSOptions\": {\"EBSEnabled\": true, \"VolumeSize\": 10, \"VolumeType\": \"gp2\"}, \"ElasticsearchClusterConfig\": {\"DedicatedMasterCount\": 2, \"DedicatedMasterEnabled\": true, \"DedicatedMasterType\": \"r5.large.elasticsearch\", \"InstanceCount\": 1, \"InstanceType\": \"r5.large.elasticsearch\", \"WarmCount\": 2, \"WarmEnabled\": true, \"WarmType\": \"ultrawarm1.medium.elasticsearch\", \"ZoneAwarenessEnabled\": false}, \"ElasticsearchVersion\": \"7.1\", \"EncryptionAtRestOptions\": {\"Enabled\": false}, \"LogPublishingOptions\": {}, \"NodeToNodeEncryptionOptions\": {\"Enabled\": false}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import { App, RemovalPolicy, Stack, StackProps } from 'aws-cdk-lib';\nimport { Construct } from 'constructs';\nimport * as es from 'aws-cdk-lib/aws-elasticsearch';\n\nclass TestStack extends Stack {\n  constructor(scope: Construct, id: string, props?: StackProps) {\n    super(scope, id, props);\n\n    new es.Domain(this, 'Domain', {\n      removalPolicy: RemovalPolicy.DESTROY,\n      version: es.ElasticsearchVersion.V7_1,\n      capacity: {\n        masterNodes: 2,\n        warmNodes: 2,\n      },\n    });\n  }\n}\n\nconst app = new App();\nnew TestStack(app, 'cdk-integ-elasticsearch-ultrawarm');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"Key961B73FD\": {\"Type\": \"AWS::KMS::Key\", \"Properties\": {\"KeyPolicy\": {\"Statement\": [{\"Action\": \"kms:*\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}, \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"DomainSlowSearchLogs5B35A97A\": {\"Type\": \"AWS::Logs::LogGroup\", \"Properties\": {\"RetentionInDays\": 30}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"DomainAppLogs21698C1B\": {\"Type\": \"AWS::Logs::LogGroup\", \"Properties\": {\"RetentionInDays\": 30}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"DomainESLogGroupPolicyc82ca7bfe2f2589b859ebab89e88da2efd284adfadA70E756D\": {\"Type\": \"Custom::CloudwatchLogResourcePolicy\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"AWS679f53fac002430cb0da5b7982bd22872D164C4C\", \"Arn\"]}, \"Create\": {\"Fn::Join\": [\"\", [\"{\\\"service\\\":\\\"CloudWatchLogs\\\",\\\"action\\\":\\\"putResourcePolicy\\\",\\\"parameters\\\":{\\\"policyName\\\":\\\"ESLogPolicyc82ca7bfe2f2589b859ebab89e88da2efd284adfad\\\",\\\"policyDocument\\\":\\\"{\\\\\"Statement\\\\\":[{\\\\\"Action\\\\\":[\\\\\"logs:PutLogEvents\\\\\",\\\\\"logs:CreateLogStream\\\\\"],\\\\\"Effect\\\\\":\\\\\"Allow\\\\\",\\\\\"Principal\\\\\":{\\\\\"Service\\\\\":\\\\\"es.amazonaws.com\\\\\"},\\\\\"Resource\\\\\":[\\\\\"\", {\"Fn::GetAtt\": [\"DomainSlowSearchLogs5B35A97A\", \"Arn\"]}, \"\\\\\",\\\\\"\", {\"Fn::GetAtt\": [\"DomainAppLogs21698C1B\", \"Arn\"]}, \"\\\\\"]}],\\\\\"Version\\\\\":\\\\\"2012-10-17\\\\\"}\\\"},\\\"physicalResourceId\\\":{\\\"id\\\":\\\"ESLogGroupPolicyc82ca7bfe2f2589b859ebab89e88da2efd284adfad\\\"}}\"]]}, \"Update\": {\"Fn::Join\": [\"\", [\"{\\\"service\\\":\\\"CloudWatchLogs\\\",\\\"action\\\":\\\"putResourcePolicy\\\",\\\"parameters\\\":{\\\"policyName\\\":\\\"ESLogPolicyc82ca7bfe2f2589b859ebab89e88da2efd284adfad\\\",\\\"policyDocument\\\":\\\"{\\\\\"Statement\\\\\":[{\\\\\"Action\\\\\":[\\\\\"logs:PutLogEvents\\\\\",\\\\\"logs:CreateLogStream\\\\\"],\\\\\"Effect\\\\\":\\\\\"Allow\\\\\",\\\\\"Principal\\\\\":{\\\\\"Service\\\\\":\\\\\"es.amazonaws.com\\\\\"},\\\\\"Resource\\\\\":[\\\\\"\", {\"Fn::GetAtt\": [\"DomainSlowSearchLogs5B35A97A\", \"Arn\"]}, \"\\\\\",\\\\\"\", {\"Fn::GetAtt\": [\"DomainAppLogs21698C1B\", \"Arn\"]}, \"\\\\\"]}],\\\\\"Version\\\\\":\\\\\"2012-10-17\\\\\"}\\\"},\\\"physicalResourceId\\\":{\\\"id\\\":\\\"ESLogGroupPolicyc82ca7bfe2f2589b859ebab89e88da2efd284adfad\\\"}}\"]]}, \"Delete\": \"{\\\"service\\\":\\\"CloudWatchLogs\\\",\\\"action\\\":\\\"deleteResourcePolicy\\\",\\\"parameters\\\":{\\\"policyName\\\":\\\"ESLogPolicyc82ca7bfe2f2589b859ebab89e88da2efd284adfad\\\"},\\\"ignoreErrorCodesMatching\\\":\\\"ResourceNotFoundException\\\"}\", \"InstallLatestAwsSdk\": \"false\"}, \"DependsOn\": [\"DomainESLogGroupPolicyc82ca7bfe2f2589b859ebab89e88da2efd284adfadCustomResourcePolicy0B41F6DF\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"DomainESLogGroupPolicyc82ca7bfe2f2589b859ebab89e88da2efd284adfadCustomResourcePolicy0B41F6DF\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"logs:DeleteResourcePolicy\", \"logs:PutResourcePolicy\"], \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"DomainESLogGroupPolicyc82ca7bfe2f2589b859ebab89e88da2efd284adfadCustomResourcePolicy0B41F6DF\", \"Roles\": [{\"Ref\": \"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\"}]}}, \"Domain66AC69E0\": {\"Type\": \"AWS::Elasticsearch::Domain\", \"Properties\": {\"CognitoOptions\": {\"Enabled\": false}, \"DomainEndpointOptions\": {\"EnforceHTTPS\": false, \"TLSSecurityPolicy\": \"Policy-Min-TLS-1-0-2019-07\"}, \"EBSOptions\": {\"EBSEnabled\": true, \"VolumeSize\": 10, \"VolumeType\": \"gp2\"}, \"ElasticsearchClusterConfig\": {\"DedicatedMasterEnabled\": false, \"InstanceCount\": 1, \"InstanceType\": \"r5.large.elasticsearch\", \"ZoneAwarenessEnabled\": false}, \"ElasticsearchVersion\": \"7.1\", \"EncryptionAtRestOptions\": {\"Enabled\": true, \"KmsKeyId\": {\"Ref\": \"Key961B73FD\"}}, \"LogPublishingOptions\": {\"ES_APPLICATION_LOGS\": {\"CloudWatchLogsLogGroupArn\": {\"Fn::GetAtt\": [\"DomainAppLogs21698C1B\", \"Arn\"]}, \"Enabled\": true}, \"SEARCH_SLOW_LOGS\": {\"CloudWatchLogsLogGroupArn\": {\"Fn::GetAtt\": [\"DomainSlowSearchLogs5B35A97A\", \"Arn\"]}, \"Enabled\": true}}, \"NodeToNodeEncryptionOptions\": {\"Enabled\": true}}, \"DependsOn\": [\"DomainESLogGroupPolicyc82ca7bfe2f2589b859ebab89e88da2efd284adfadCustomResourcePolicy0B41F6DF\", \"DomainESLogGroupPolicyc82ca7bfe2f2589b859ebab89e88da2efd284adfadA70E756D\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"DomainESAccessPolicy89986F33\": {\"Type\": \"Custom::ElasticsearchAccessPolicy\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"AWS679f53fac002430cb0da5b7982bd22872D164C4C\", \"Arn\"]}, \"Create\": {\"Fn::Join\": [\"\", [\"{\\\"action\\\":\\\"updateElasticsearchDomainConfig\\\",\\\"service\\\":\\\"ES\\\",\\\"parameters\\\":{\\\"DomainName\\\":\\\"\", {\"Ref\": \"Domain66AC69E0\"}, \"\\\",\\\"AccessPolicies\\\":\\\"{\\\\\"Statement\\\\\":[{\\\\\"Action\\\\\":\\\\\"es:ESHttp*\\\\\",\\\\\"Effect\\\\\":\\\\\"Allow\\\\\",\\\\\"Principal\\\\\":{\\\\\"AWS\\\\\":\\\\\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\\\\\"},\\\\\"Resource\\\\\":\\\\\"*\\\\\"}],\\\\\"Version\\\\\":\\\\\"2012-10-17\\\\\"}\\\"},\\\"outputPaths\\\":[\\\"DomainConfig.ElasticsearchClusterConfig.AccessPolicies\\\"],\\\"physicalResourceId\\\":{\\\"id\\\":\\\"\", {\"Ref\": \"Domain66AC69E0\"}, \"AccessPolicy\\\"}}\"]]}, \"Update\": {\"Fn::Join\": [\"\", [\"{\\\"action\\\":\\\"updateElasticsearchDomainConfig\\\",\\\"service\\\":\\\"ES\\\",\\\"parameters\\\":{\\\"DomainName\\\":\\\"\", {\"Ref\": \"Domain66AC69E0\"}, \"\\\",\\\"AccessPolicies\\\":\\\"{\\\\\"Statement\\\\\":[{\\\\\"Action\\\\\":\\\\\"es:ESHttp*\\\\\",\\\\\"Effect\\\\\":\\\\\"Allow\\\\\",\\\\\"Principal\\\\\":{\\\\\"AWS\\\\\":\\\\\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\\\\\"},\\\\\"Resource\\\\\":\\\\\"*\\\\\"}],\\\\\"Version\\\\\":\\\\\"2012-10-17\\\\\"}\\\"},\\\"outputPaths\\\":[\\\"DomainConfig.ElasticsearchClusterConfig.AccessPolicies\\\"],\\\"physicalResourceId\\\":{\\\"id\\\":\\\"\", {\"Ref\": \"Domain66AC69E0\"}, \"AccessPolicy\\\"}}\"]]}, \"InstallLatestAwsSdk\": \"false\"}, \"DependsOn\": [\"DomainESAccessPolicyCustomResourcePolicy9747FC42\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"DomainESAccessPolicyCustomResourcePolicy9747FC42\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"es:UpdateElasticsearchDomainConfig\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"Domain66AC69E0\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"DomainESAccessPolicyCustomResourcePolicy9747FC42\", \"Roles\": [{\"Ref\": \"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\"}]}}, \"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleDefaultPolicyD28E1A5E\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"kms:CreateGrant\", \"kms:Describe*\", \"kms:List*\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"Key961B73FD\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleDefaultPolicyD28E1A5E\", \"Roles\": [{\"Ref\": \"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\"}]}}, \"AWS679f53fac002430cb0da5b7982bd22872D164C4C\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"5009f77d2e9161f4799d4facb1cb8859134a40234014484b4911e924c169c9cb.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\", \"Arn\"]}, \"Handler\": \"index.handler\", \"Runtime\": {\"Fn::FindInMap\": [\"DefaultCrNodeVersionMap\", {\"Ref\": \"AWS::Region\"}, \"value\"]}, \"Timeout\": 120}, \"DependsOn\": [\"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleDefaultPolicyD28E1A5E\", \"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\"]}}, \"Mappings\": {\"DefaultCrNodeVersionMap\": {\"af-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-east-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-3\": {\"value\": \"nodejs16.x\"}, \"ap-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-south-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-3\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-4\": {\"value\": \"nodejs16.x\"}, \"ca-central-1\": {\"value\": \"nodejs16.x\"}, \"cn-north-1\": {\"value\": \"nodejs16.x\"}, \"cn-northwest-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-2\": {\"value\": \"nodejs16.x\"}, \"eu-north-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-1\": {\"value\": \"nodejs16.x\"}, \"eu-west-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-3\": {\"value\": \"nodejs16.x\"}, \"me-central-1\": {\"value\": \"nodejs16.x\"}, \"me-south-1\": {\"value\": \"nodejs16.x\"}, \"sa-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-2\": {\"value\": \"nodejs16.x\"}, \"us-gov-east-1\": {\"value\": \"nodejs16.x\"}, \"us-gov-west-1\": {\"value\": \"nodejs16.x\"}, \"us-iso-east-1\": {\"value\": \"nodejs14.x\"}, \"us-iso-west-1\": {\"value\": \"nodejs14.x\"}, \"us-isob-east-1\": {\"value\": \"nodejs14.x\"}, \"us-west-1\": {\"value\": \"nodejs16.x\"}, \"us-west-2\": {\"value\": \"nodejs16.x\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import { EbsDeviceVolumeType } from 'aws-cdk-lib/aws-ec2';\nimport * as iam from 'aws-cdk-lib/aws-iam';\nimport * as kms from 'aws-cdk-lib/aws-kms';\nimport { App, RemovalPolicy, Stack, StackProps } from 'aws-cdk-lib';\nimport { Construct } from 'constructs';\nimport * as es from 'aws-cdk-lib/aws-elasticsearch';\n\nclass TestStack extends Stack {\n  constructor(scope: Construct, id: string, props?: StackProps) {\n    super(scope, id, props);\n\n    const key = new kms.Key(this, 'Key');\n\n    const domainProps: es.DomainProps = {\n      removalPolicy: RemovalPolicy.DESTROY,\n      version: es.ElasticsearchVersion.V7_1,\n      ebs: {\n        volumeSize: 10,\n        volumeType: EbsDeviceVolumeType.GENERAL_PURPOSE_SSD,\n      },\n      logging: {\n        slowSearchLogEnabled: true,\n        appLogEnabled: true,\n      },\n      nodeToNodeEncryption: true,\n      encryptionAtRest: {\n        enabled: true,\n        kmsKey: key,\n      },\n      // test the access policies custom resource works\n      accessPolicies: [\n        new iam.PolicyStatement({\n          effect: iam.Effect.ALLOW,\n          actions: ['es:ESHttp*'],\n          principals: [new iam.AccountRootPrincipal()],\n          resources: ['*'],\n        }),\n      ],\n    };\n\n    new es.Domain(this, 'Domain', domainProps);\n  }\n}\n\nconst app = new App();\nnew TestStack(app, 'cdk-integ-elasticsearch-custom-kms-key');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"Domain1SlowSearchLogs8F3B0506\": {\"Type\": \"AWS::Logs::LogGroup\", \"Properties\": {\"RetentionInDays\": 30}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"Domain1AppLogs6E8D1D67\": {\"Type\": \"AWS::Logs::LogGroup\", \"Properties\": {\"RetentionInDays\": 30}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"Domain1ESLogGroupPolicyc8858d5dba055f677469d76cb6ad538fd732ba69a6D8BDCF36\": {\"Type\": \"Custom::CloudwatchLogResourcePolicy\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"AWS679f53fac002430cb0da5b7982bd22872D164C4C\", \"Arn\"]}, \"Create\": {\"Fn::Join\": [\"\", [\"{\\\"service\\\":\\\"CloudWatchLogs\\\",\\\"action\\\":\\\"putResourcePolicy\\\",\\\"parameters\\\":{\\\"policyName\\\":\\\"ESLogPolicyc8858d5dba055f677469d76cb6ad538fd732ba69a6\\\",\\\"policyDocument\\\":\\\"{\\\\\"Statement\\\\\":[{\\\\\"Action\\\\\":[\\\\\"logs:PutLogEvents\\\\\",\\\\\"logs:CreateLogStream\\\\\"],\\\\\"Effect\\\\\":\\\\\"Allow\\\\\",\\\\\"Principal\\\\\":{\\\\\"Service\\\\\":\\\\\"es.amazonaws.com\\\\\"},\\\\\"Resource\\\\\":[\\\\\"\", {\"Fn::GetAtt\": [\"Domain1SlowSearchLogs8F3B0506\", \"Arn\"]}, \"\\\\\",\\\\\"\", {\"Fn::GetAtt\": [\"Domain1AppLogs6E8D1D67\", \"Arn\"]}, \"\\\\\"]}],\\\\\"Version\\\\\":\\\\\"2012-10-17\\\\\"}\\\"},\\\"physicalResourceId\\\":{\\\"id\\\":\\\"ESLogGroupPolicyc8858d5dba055f677469d76cb6ad538fd732ba69a6\\\"}}\"]]}, \"Update\": {\"Fn::Join\": [\"\", [\"{\\\"service\\\":\\\"CloudWatchLogs\\\",\\\"action\\\":\\\"putResourcePolicy\\\",\\\"parameters\\\":{\\\"policyName\\\":\\\"ESLogPolicyc8858d5dba055f677469d76cb6ad538fd732ba69a6\\\",\\\"policyDocument\\\":\\\"{\\\\\"Statement\\\\\":[{\\\\\"Action\\\\\":[\\\\\"logs:PutLogEvents\\\\\",\\\\\"logs:CreateLogStream\\\\\"],\\\\\"Effect\\\\\":\\\\\"Allow\\\\\",\\\\\"Principal\\\\\":{\\\\\"Service\\\\\":\\\\\"es.amazonaws.com\\\\\"},\\\\\"Resource\\\\\":[\\\\\"\", {\"Fn::GetAtt\": [\"Domain1SlowSearchLogs8F3B0506\", \"Arn\"]}, \"\\\\\",\\\\\"\", {\"Fn::GetAtt\": [\"Domain1AppLogs6E8D1D67\", \"Arn\"]}, \"\\\\\"]}],\\\\\"Version\\\\\":\\\\\"2012-10-17\\\\\"}\\\"},\\\"physicalResourceId\\\":{\\\"id\\\":\\\"ESLogGroupPolicyc8858d5dba055f677469d76cb6ad538fd732ba69a6\\\"}}\"]]}, \"Delete\": \"{\\\"service\\\":\\\"CloudWatchLogs\\\",\\\"action\\\":\\\"deleteResourcePolicy\\\",\\\"parameters\\\":{\\\"policyName\\\":\\\"ESLogPolicyc8858d5dba055f677469d76cb6ad538fd732ba69a6\\\"},\\\"ignoreErrorCodesMatching\\\":\\\"ResourceNotFoundException\\\"}\", \"InstallLatestAwsSdk\": \"false\"}, \"DependsOn\": [\"Domain1ESLogGroupPolicyc8858d5dba055f677469d76cb6ad538fd732ba69a6CustomResourcePolicy24436E05\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"Domain1ESLogGroupPolicyc8858d5dba055f677469d76cb6ad538fd732ba69a6CustomResourcePolicy24436E05\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"logs:DeleteResourcePolicy\", \"logs:PutResourcePolicy\"], \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"Domain1ESLogGroupPolicyc8858d5dba055f677469d76cb6ad538fd732ba69a6CustomResourcePolicy24436E05\", \"Roles\": [{\"Ref\": \"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\"}]}}, \"Domain19FCBCB91\": {\"Type\": \"AWS::Elasticsearch::Domain\", \"Properties\": {\"AdvancedOptions\": {\"rest.action.multi.allow_explicit_index\": \"false\", \"indices.fielddata.cache.size\": \"25\", \"indices.query.bool.max_clause_count\": \"2048\"}, \"CognitoOptions\": {\"Enabled\": false}, \"DomainEndpointOptions\": {\"EnforceHTTPS\": false, \"TLSSecurityPolicy\": \"Policy-Min-TLS-1-0-2019-07\"}, \"EBSOptions\": {\"EBSEnabled\": true, \"VolumeSize\": 10, \"VolumeType\": \"gp2\"}, \"ElasticsearchClusterConfig\": {\"DedicatedMasterEnabled\": false, \"InstanceCount\": 1, \"InstanceType\": \"r5.large.elasticsearch\", \"ZoneAwarenessEnabled\": false}, \"ElasticsearchVersion\": \"7.1\", \"EncryptionAtRestOptions\": {\"Enabled\": true}, \"LogPublishingOptions\": {\"ES_APPLICATION_LOGS\": {\"CloudWatchLogsLogGroupArn\": {\"Fn::GetAtt\": [\"Domain1AppLogs6E8D1D67\", \"Arn\"]}, \"Enabled\": true}, \"SEARCH_SLOW_LOGS\": {\"CloudWatchLogsLogGroupArn\": {\"Fn::GetAtt\": [\"Domain1SlowSearchLogs8F3B0506\", \"Arn\"]}, \"Enabled\": true}}, \"NodeToNodeEncryptionOptions\": {\"Enabled\": true}}, \"DependsOn\": [\"Domain1ESLogGroupPolicyc8858d5dba055f677469d76cb6ad538fd732ba69a6CustomResourcePolicy24436E05\", \"Domain1ESLogGroupPolicyc8858d5dba055f677469d76cb6ad538fd732ba69a6D8BDCF36\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"Domain1ESAccessPolicy5D846A31\": {\"Type\": \"Custom::ElasticsearchAccessPolicy\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"AWS679f53fac002430cb0da5b7982bd22872D164C4C\", \"Arn\"]}, \"Create\": {\"Fn::Join\": [\"\", [\"{\\\"action\\\":\\\"updateElasticsearchDomainConfig\\\",\\\"service\\\":\\\"ES\\\",\\\"parameters\\\":{\\\"DomainName\\\":\\\"\", {\"Ref\": \"Domain19FCBCB91\"}, \"\\\",\\\"AccessPolicies\\\":\\\"{\\\\\"Statement\\\\\":[{\\\\\"Action\\\\\":\\\\\"es:ESHttp*\\\\\",\\\\\"Effect\\\\\":\\\\\"Allow\\\\\",\\\\\"Principal\\\\\":{\\\\\"AWS\\\\\":\\\\\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\\\\\"},\\\\\"Resource\\\\\":\\\\\"*\\\\\"}],\\\\\"Version\\\\\":\\\\\"2012-10-17\\\\\"}\\\"},\\\"outputPaths\\\":[\\\"DomainConfig.ElasticsearchClusterConfig.AccessPolicies\\\"],\\\"physicalResourceId\\\":{\\\"id\\\":\\\"\", {\"Ref\": \"Domain19FCBCB91\"}, \"AccessPolicy\\\"}}\"]]}, \"Update\": {\"Fn::Join\": [\"\", [\"{\\\"action\\\":\\\"updateElasticsearchDomainConfig\\\",\\\"service\\\":\\\"ES\\\",\\\"parameters\\\":{\\\"DomainName\\\":\\\"\", {\"Ref\": \"Domain19FCBCB91\"}, \"\\\",\\\"AccessPolicies\\\":\\\"{\\\\\"Statement\\\\\":[{\\\\\"Action\\\\\":\\\\\"es:ESHttp*\\\\\",\\\\\"Effect\\\\\":\\\\\"Allow\\\\\",\\\\\"Principal\\\\\":{\\\\\"AWS\\\\\":\\\\\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\\\\\"},\\\\\"Resource\\\\\":\\\\\"*\\\\\"}],\\\\\"Version\\\\\":\\\\\"2012-10-17\\\\\"}\\\"},\\\"outputPaths\\\":[\\\"DomainConfig.ElasticsearchClusterConfig.AccessPolicies\\\"],\\\"physicalResourceId\\\":{\\\"id\\\":\\\"\", {\"Ref\": \"Domain19FCBCB91\"}, \"AccessPolicy\\\"}}\"]]}, \"InstallLatestAwsSdk\": \"false\"}, \"DependsOn\": [\"Domain1ESAccessPolicyCustomResourcePolicyC04432B6\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"Domain1ESAccessPolicyCustomResourcePolicyC04432B6\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"es:UpdateElasticsearchDomainConfig\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"Domain19FCBCB91\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"Domain1ESAccessPolicyCustomResourcePolicyC04432B6\", \"Roles\": [{\"Ref\": \"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\"}]}}, \"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"AWS679f53fac002430cb0da5b7982bd22872D164C4C\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"5009f77d2e9161f4799d4facb1cb8859134a40234014484b4911e924c169c9cb.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\", \"Arn\"]}, \"Handler\": \"index.handler\", \"Runtime\": {\"Fn::FindInMap\": [\"DefaultCrNodeVersionMap\", {\"Ref\": \"AWS::Region\"}, \"value\"]}, \"Timeout\": 120}, \"DependsOn\": [\"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\"]}, \"Domain2SlowSearchLogs0C75F64B\": {\"Type\": \"AWS::Logs::LogGroup\", \"Properties\": {\"RetentionInDays\": 30}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"Domain2AppLogs810876E2\": {\"Type\": \"AWS::Logs::LogGroup\", \"Properties\": {\"RetentionInDays\": 30}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"Domain2ESLogGroupPolicyc8405238e455eeabd840cf6933e1814efc51d2de71F1DE93A1\": {\"Type\": \"Custom::CloudwatchLogResourcePolicy\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"AWS679f53fac002430cb0da5b7982bd22872D164C4C\", \"Arn\"]}, \"Create\": {\"Fn::Join\": [\"\", [\"{\\\"service\\\":\\\"CloudWatchLogs\\\",\\\"action\\\":\\\"putResourcePolicy\\\",\\\"parameters\\\":{\\\"policyName\\\":\\\"ESLogPolicyc8405238e455eeabd840cf6933e1814efc51d2de71\\\",\\\"policyDocument\\\":\\\"{\\\\\"Statement\\\\\":[{\\\\\"Action\\\\\":[\\\\\"logs:PutLogEvents\\\\\",\\\\\"logs:CreateLogStream\\\\\"],\\\\\"Effect\\\\\":\\\\\"Allow\\\\\",\\\\\"Principal\\\\\":{\\\\\"Service\\\\\":\\\\\"es.amazonaws.com\\\\\"},\\\\\"Resource\\\\\":[\\\\\"\", {\"Fn::GetAtt\": [\"Domain2SlowSearchLogs0C75F64B\", \"Arn\"]}, \"\\\\\",\\\\\"\", {\"Fn::GetAtt\": [\"Domain2AppLogs810876E2\", \"Arn\"]}, \"\\\\\"]}],\\\\\"Version\\\\\":\\\\\"2012-10-17\\\\\"}\\\"},\\\"physicalResourceId\\\":{\\\"id\\\":\\\"ESLogGroupPolicyc8405238e455eeabd840cf6933e1814efc51d2de71\\\"}}\"]]}, \"Update\": {\"Fn::Join\": [\"\", [\"{\\\"service\\\":\\\"CloudWatchLogs\\\",\\\"action\\\":\\\"putResourcePolicy\\\",\\\"parameters\\\":{\\\"policyName\\\":\\\"ESLogPolicyc8405238e455eeabd840cf6933e1814efc51d2de71\\\",\\\"policyDocument\\\":\\\"{\\\\\"Statement\\\\\":[{\\\\\"Action\\\\\":[\\\\\"logs:PutLogEvents\\\\\",\\\\\"logs:CreateLogStream\\\\\"],\\\\\"Effect\\\\\":\\\\\"Allow\\\\\",\\\\\"Principal\\\\\":{\\\\\"Service\\\\\":\\\\\"es.amazonaws.com\\\\\"},\\\\\"Resource\\\\\":[\\\\\"\", {\"Fn::GetAtt\": [\"Domain2SlowSearchLogs0C75F64B\", \"Arn\"]}, \"\\\\\",\\\\\"\", {\"Fn::GetAtt\": [\"Domain2AppLogs810876E2\", \"Arn\"]}, \"\\\\\"]}],\\\\\"Version\\\\\":\\\\\"2012-10-17\\\\\"}\\\"},\\\"physicalResourceId\\\":{\\\"id\\\":\\\"ESLogGroupPolicyc8405238e455eeabd840cf6933e1814efc51d2de71\\\"}}\"]]}, \"Delete\": \"{\\\"service\\\":\\\"CloudWatchLogs\\\",\\\"action\\\":\\\"deleteResourcePolicy\\\",\\\"parameters\\\":{\\\"policyName\\\":\\\"ESLogPolicyc8405238e455eeabd840cf6933e1814efc51d2de71\\\"},\\\"ignoreErrorCodesMatching\\\":\\\"ResourceNotFoundException\\\"}\", \"InstallLatestAwsSdk\": \"false\"}, \"DependsOn\": [\"Domain2ESLogGroupPolicyc8405238e455eeabd840cf6933e1814efc51d2de71CustomResourcePolicy77691A33\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"Domain2ESLogGroupPolicyc8405238e455eeabd840cf6933e1814efc51d2de71CustomResourcePolicy77691A33\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"logs:DeleteResourcePolicy\", \"logs:PutResourcePolicy\"], \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"Domain2ESLogGroupPolicyc8405238e455eeabd840cf6933e1814efc51d2de71CustomResourcePolicy77691A33\", \"Roles\": [{\"Ref\": \"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\"}]}}, \"Domain2644FE48C\": {\"Type\": \"AWS::Elasticsearch::Domain\", \"Properties\": {\"AdvancedOptions\": {\"rest.action.multi.allow_explicit_index\": \"false\", \"indices.fielddata.cache.size\": \"25\", \"indices.query.bool.max_clause_count\": \"2048\"}, \"CognitoOptions\": {\"Enabled\": false}, \"DomainEndpointOptions\": {\"EnforceHTTPS\": false, \"TLSSecurityPolicy\": \"Policy-Min-TLS-1-0-2019-07\"}, \"EBSOptions\": {\"EBSEnabled\": true, \"VolumeSize\": 10, \"VolumeType\": \"gp2\"}, \"ElasticsearchClusterConfig\": {\"DedicatedMasterEnabled\": false, \"InstanceCount\": 1, \"InstanceType\": \"r5.large.elasticsearch\", \"ZoneAwarenessEnabled\": false}, \"ElasticsearchVersion\": \"7.1\", \"EncryptionAtRestOptions\": {\"Enabled\": true}, \"LogPublishingOptions\": {\"ES_APPLICATION_LOGS\": {\"CloudWatchLogsLogGroupArn\": {\"Fn::GetAtt\": [\"Domain2AppLogs810876E2\", \"Arn\"]}, \"Enabled\": true}, \"SEARCH_SLOW_LOGS\": {\"CloudWatchLogsLogGroupArn\": {\"Fn::GetAtt\": [\"Domain2SlowSearchLogs0C75F64B\", \"Arn\"]}, \"Enabled\": true}}, \"NodeToNodeEncryptionOptions\": {\"Enabled\": true}}, \"DependsOn\": [\"Domain2ESLogGroupPolicyc8405238e455eeabd840cf6933e1814efc51d2de71CustomResourcePolicy77691A33\", \"Domain2ESLogGroupPolicyc8405238e455eeabd840cf6933e1814efc51d2de71F1DE93A1\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"Domain2ESAccessPolicy3DF4C2BA\": {\"Type\": \"Custom::ElasticsearchAccessPolicy\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"AWS679f53fac002430cb0da5b7982bd22872D164C4C\", \"Arn\"]}, \"Create\": {\"Fn::Join\": [\"\", [\"{\\\"action\\\":\\\"updateElasticsearchDomainConfig\\\",\\\"service\\\":\\\"ES\\\",\\\"parameters\\\":{\\\"DomainName\\\":\\\"\", {\"Ref\": \"Domain2644FE48C\"}, \"\\\",\\\"AccessPolicies\\\":\\\"{\\\\\"Statement\\\\\":[{\\\\\"Action\\\\\":\\\\\"es:ESHttp*\\\\\",\\\\\"Effect\\\\\":\\\\\"Allow\\\\\",\\\\\"Principal\\\\\":{\\\\\"AWS\\\\\":\\\\\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\\\\\"},\\\\\"Resource\\\\\":\\\\\"*\\\\\"}],\\\\\"Version\\\\\":\\\\\"2012-10-17\\\\\"}\\\"},\\\"outputPaths\\\":[\\\"DomainConfig.ElasticsearchClusterConfig.AccessPolicies\\\"],\\\"physicalResourceId\\\":{\\\"id\\\":\\\"\", {\"Ref\": \"Domain2644FE48C\"}, \"AccessPolicy\\\"}}\"]]}, \"Update\": {\"Fn::Join\": [\"\", [\"{\\\"action\\\":\\\"updateElasticsearchDomainConfig\\\",\\\"service\\\":\\\"ES\\\",\\\"parameters\\\":{\\\"DomainName\\\":\\\"\", {\"Ref\": \"Domain2644FE48C\"}, \"\\\",\\\"AccessPolicies\\\":\\\"{\\\\\"Statement\\\\\":[{\\\\\"Action\\\\\":\\\\\"es:ESHttp*\\\\\",\\\\\"Effect\\\\\":\\\\\"Allow\\\\\",\\\\\"Principal\\\\\":{\\\\\"AWS\\\\\":\\\\\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\\\\\"},\\\\\"Resource\\\\\":\\\\\"*\\\\\"}],\\\\\"Version\\\\\":\\\\\"2012-10-17\\\\\"}\\\"},\\\"outputPaths\\\":[\\\"DomainConfig.ElasticsearchClusterConfig.AccessPolicies\\\"],\\\"physicalResourceId\\\":{\\\"id\\\":\\\"\", {\"Ref\": \"Domain2644FE48C\"}, \"AccessPolicy\\\"}}\"]]}, \"InstallLatestAwsSdk\": \"false\"}, \"DependsOn\": [\"Domain2ESAccessPolicyCustomResourcePolicy8EED1F24\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"Domain2ESAccessPolicyCustomResourcePolicy8EED1F24\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"es:UpdateElasticsearchDomainConfig\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"Domain2644FE48C\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"Domain2ESAccessPolicyCustomResourcePolicy8EED1F24\", \"Roles\": [{\"Ref\": \"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\"}]}}}, \"Mappings\": {\"DefaultCrNodeVersionMap\": {\"af-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-east-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-3\": {\"value\": \"nodejs16.x\"}, \"ap-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-south-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-3\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-4\": {\"value\": \"nodejs16.x\"}, \"ca-central-1\": {\"value\": \"nodejs16.x\"}, \"cn-north-1\": {\"value\": \"nodejs16.x\"}, \"cn-northwest-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-2\": {\"value\": \"nodejs16.x\"}, \"eu-north-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-1\": {\"value\": \"nodejs16.x\"}, \"eu-west-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-3\": {\"value\": \"nodejs16.x\"}, \"me-central-1\": {\"value\": \"nodejs16.x\"}, \"me-south-1\": {\"value\": \"nodejs16.x\"}, \"sa-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-2\": {\"value\": \"nodejs16.x\"}, \"us-gov-east-1\": {\"value\": \"nodejs16.x\"}, \"us-gov-west-1\": {\"value\": \"nodejs16.x\"}, \"us-iso-east-1\": {\"value\": \"nodejs14.x\"}, \"us-iso-west-1\": {\"value\": \"nodejs14.x\"}, \"us-isob-east-1\": {\"value\": \"nodejs14.x\"}, \"us-west-1\": {\"value\": \"nodejs16.x\"}, \"us-west-2\": {\"value\": \"nodejs16.x\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import { EbsDeviceVolumeType } from 'aws-cdk-lib/aws-ec2';\nimport * as iam from 'aws-cdk-lib/aws-iam';\nimport { App, RemovalPolicy, Stack, StackProps } from 'aws-cdk-lib';\nimport { Construct } from 'constructs';\nimport * as es from 'aws-cdk-lib/aws-elasticsearch';\n\nclass TestStack extends Stack {\n  constructor(scope: Construct, id: string, props?: StackProps) {\n    super(scope, id, props);\n\n    const domainProps: es.DomainProps = {\n      removalPolicy: RemovalPolicy.DESTROY,\n      version: es.ElasticsearchVersion.V7_1,\n      ebs: {\n        volumeSize: 10,\n        volumeType: EbsDeviceVolumeType.GENERAL_PURPOSE_SSD,\n      },\n      logging: {\n        slowSearchLogEnabled: true,\n        appLogEnabled: true,\n      },\n      nodeToNodeEncryption: true,\n      encryptionAtRest: {\n        enabled: true,\n      },\n      advancedOptions: {\n        'rest.action.multi.allow_explicit_index': 'false',\n        'indices.fielddata.cache.size': '25',\n        'indices.query.bool.max_clause_count': '2048',\n      },\n      // test the access policies custom resource works\n      accessPolicies: [\n        new iam.PolicyStatement({\n          effect: iam.Effect.ALLOW,\n          actions: ['es:ESHttp*'],\n          principals: [new iam.AccountRootPrincipal()],\n          resources: ['*'],\n        }),\n      ],\n    };\n\n    // create 2 elasticsearch domains to ensure that Cloudwatch Log Group policy names dont conflict\n    new es.Domain(this, 'Domain1', domainProps);\n    new es.Domain(this, 'Domain2', domainProps);\n  }\n}\n\nconst app = new App();\nnew TestStack(app, 'cdk-integ-elasticsearch');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"User00B015A1\": {\"Type\": \"AWS::IAM::User\"}, \"Domain66AC69E0\": {\"Type\": \"AWS::Elasticsearch::Domain\", \"Properties\": {\"AdvancedSecurityOptions\": {\"Enabled\": true, \"InternalUserDatabaseEnabled\": false, \"MasterUserOptions\": {\"MasterUserARN\": {\"Fn::GetAtt\": [\"User00B015A1\", \"Arn\"]}}}, \"CognitoOptions\": {\"Enabled\": false}, \"DomainEndpointOptions\": {\"EnforceHTTPS\": true, \"TLSSecurityPolicy\": \"Policy-Min-TLS-1-0-2019-07\"}, \"EBSOptions\": {\"EBSEnabled\": true, \"VolumeSize\": 10, \"VolumeType\": \"gp2\"}, \"ElasticsearchClusterConfig\": {\"DedicatedMasterEnabled\": false, \"InstanceCount\": 1, \"InstanceType\": \"r5.large.elasticsearch\", \"ZoneAwarenessEnabled\": false}, \"ElasticsearchVersion\": \"7.1\", \"EncryptionAtRestOptions\": {\"Enabled\": true}, \"LogPublishingOptions\": {}, \"NodeToNodeEncryptionOptions\": {\"Enabled\": true}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import { User } from 'aws-cdk-lib/aws-iam';\nimport { App, RemovalPolicy, Stack, StackProps } from 'aws-cdk-lib';\nimport { Construct } from 'constructs';\nimport * as es from 'aws-cdk-lib/aws-elasticsearch';\n\nclass TestStack extends Stack {\n  constructor(scope: Construct, id: string, props?: StackProps) {\n    super(scope, id, props);\n\n    const user = new User(this, 'User');\n\n    new es.Domain(this, 'Domain', {\n      removalPolicy: RemovalPolicy.DESTROY,\n      version: es.ElasticsearchVersion.V7_1,\n      fineGrainedAccessControl: {\n        masterUserArn: user.userArn,\n      },\n      encryptionAtRest: {\n        enabled: true,\n      },\n      nodeToNodeEncryption: true,\n      enforceHttps: true,\n    });\n  }\n}\n\nconst app = new App();\nnew TestStack(app, 'cdk-integ-elasticsearch-advancedsecurity');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"StateMachineRoleB840431D\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"states.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"StateMachine2E01A3A5\": {\"Type\": \"AWS::StepFunctions::StateMachine\", \"Properties\": {\"RoleArn\": {\"Fn::GetAtt\": [\"StateMachineRoleB840431D\", \"Arn\"]}, \"DefinitionString\": \"{\\\"StartAt\\\":\\\"my custom task\\\",\\\"States\\\":{\\\"my custom task\\\":{\\\"Next\\\":\\\"final step\\\",\\\"Type\\\":\\\"Task\\\",\\\"Resource\\\":\\\"arn:aws:states:::dynamodb:putItem\\\",\\\"Parameters\\\":{\\\"TableName\\\":\\\"my-cool-table\\\",\\\"Item\\\":{\\\"id\\\":{\\\"S\\\":\\\"my-entry\\\"}}},\\\"ResultPath\\\":null},\\\"final step\\\":{\\\"Type\\\":\\\"Pass\\\",\\\"End\\\":true}},\\\"TimeoutSeconds\\\":30}\"}, \"DependsOn\": [\"StateMachineRoleB840431D\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}}, \"Outputs\": {\"StateMachineARN\": {\"Value\": {\"Ref\": \"StateMachine2E01A3A5\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as cdk from 'aws-cdk-lib';\nimport * as sfn from 'aws-cdk-lib/aws-stepfunctions';\n\n/*\n * Stack verification steps:\n *\n * -- aws stepfunctions describe-state-machine --state-machine-arn <stack-output> has a status of `ACTIVE`\n */\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'aws-stepfunctions-custom-state-integ');\n\nconst finalStatus = new sfn.Pass(stack, 'final step');\n\nconst stateJson = {\n  Type: 'Task',\n  Resource: 'arn:aws:states:::dynamodb:putItem',\n  Parameters: {\n    TableName: 'my-cool-table',\n    Item: {\n      id: {\n        S: 'my-entry',\n      },\n    },\n  },\n  ResultPath: null,\n};\n\nconst custom = new sfn.CustomState(stack, 'my custom task', {\n  stateJson,\n});\n\nconst chain = sfn.Chain.start(custom).next(finalStatus);\n\nconst sm = new sfn.StateMachine(stack, 'StateMachine', {\n  definition: chain,\n  timeout: cdk.Duration.seconds(30),\n});\n\nnew cdk.CfnOutput(stack, 'StateMachineARN', {\n  value: sm.stateMachineArn,\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"Role1ABCC5F0\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"RoleDefaultPolicy5FFB7DAB\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"states:ListExecutions\", \"states:ListStateMachines\", \"states:SendTaskSuccess\"], \"Effect\": \"Allow\", \"Resource\": {\"Ref\": \"StateMachine2E01A3A5\"}}, {\"Action\": [\"states:DescribeExecution\", \"states:DescribeStateMachineForExecution\", \"states:GetExecutionHistory\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":states:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":execution:\", {\"Fn::Select\": [6, {\"Fn::Split\": [\":\", {\"Ref\": \"StateMachine2E01A3A5\"}]}]}, \":*\"]]}}, {\"Action\": [\"states:DescribeActivity\", \"states:DescribeStateMachine\", \"states:ListActivities\"], \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"RoleDefaultPolicy5FFB7DAB\", \"Roles\": [{\"Ref\": \"Role1ABCC5F0\"}]}}, \"StateMachineRoleB840431D\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"states.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"StateMachine2E01A3A5\": {\"Type\": \"AWS::StepFunctions::StateMachine\", \"Properties\": {\"RoleArn\": {\"Fn::GetAtt\": [\"StateMachineRoleB840431D\", \"Arn\"]}, \"DefinitionString\": \"{\\\"StartAt\\\":\\\"wait time\\\",\\\"States\\\":{\\\"wait time\\\":{\\\"Type\\\":\\\"Wait\\\",\\\"SecondsPath\\\":\\\"$.waitSeconds\\\",\\\"End\\\":true}}}\"}, \"DependsOn\": [\"StateMachineRoleB840431D\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as iam from 'aws-cdk-lib/aws-iam';\nimport * as cdk from 'aws-cdk-lib';\nimport * as sfn from 'aws-cdk-lib/aws-stepfunctions';\n/*\n * Stack verification steps:\n *\n * -- aws stepfunctions describe-state-machine --state-machine-arn <stack-output> has a status of `ACTIVE`\n * -- aws iam get-role-policy --role-name <role-name> --policy-name <policy-name> has all actions mapped to respective resources.\n */\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'aws-stepfunctions-integ');\n\nconst wait = new sfn.Wait(stack, 'wait time', {\n  time: sfn.WaitTime.secondsPath('$.waitSeconds'),\n});\n\nconst role = new iam.Role(stack, 'Role', {\n  assumedBy: new iam.ServicePrincipal('lambda.amazonaws.com'),\n});\n\nconst stateMachine = new sfn.StateMachine(stack, 'StateMachine', {\n  definition: wait,\n});\n\nstateMachine.grantRead(role);\nstateMachine.grant(role, 'states:SendTaskSuccess');\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"RuleSetE30C6C48\": {\"Type\": \"AWS::SES::ReceiptRuleSet\"}, \"RuleSetDropSpamRule5809F51B\": {\"Type\": \"AWS::SES::ReceiptRule\", \"Properties\": {\"Rule\": {\"Actions\": [{\"LambdaAction\": {\"FunctionArn\": {\"Fn::GetAtt\": [\"SingletonLambda224e77f9a32e4b4dac32983477abba164533EA15\", \"Arn\"]}, \"InvocationType\": \"RequestResponse\"}}], \"Enabled\": true, \"ScanEnabled\": true}, \"RuleSetName\": {\"Ref\": \"RuleSetE30C6C48\"}}}, \"RuleSetFirstRule0A27C8CC\": {\"Type\": \"AWS::SES::ReceiptRule\", \"Properties\": {\"Rule\": {\"Enabled\": true, \"Name\": \"FirstRule\", \"Recipients\": [\"cdk-ses-receipt-test@yopmail.com\"], \"ScanEnabled\": true, \"TlsPolicy\": \"Require\"}, \"RuleSetName\": {\"Ref\": \"RuleSetE30C6C48\"}, \"After\": {\"Ref\": \"RuleSetDropSpamRule5809F51B\"}}}, \"RuleSetSecondRule03178AD4\": {\"Type\": \"AWS::SES::ReceiptRule\", \"Properties\": {\"Rule\": {\"Enabled\": true}, \"RuleSetName\": {\"Ref\": \"RuleSetE30C6C48\"}, \"After\": {\"Ref\": \"RuleSetFirstRule0A27C8CC\"}}}, \"SingletonLambda224e77f9a32e4b4dac32983477abba16ServiceRole3037F5B4\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"SingletonLambda224e77f9a32e4b4dac32983477abba164533EA15\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"96d0b6be9a64ae309bf89a86f5515453f0fa1d07b4f6b37198051cc98e251f34.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"SingletonLambda224e77f9a32e4b4dac32983477abba16ServiceRole3037F5B4\", \"Arn\"]}, \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"SingletonLambda224e77f9a32e4b4dac32983477abba16ServiceRole3037F5B4\"]}, \"SingletonLambda224e77f9a32e4b4dac32983477abba16AllowSesB42DF904\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"SingletonLambda224e77f9a32e4b4dac32983477abba164533EA15\", \"Arn\"]}, \"Principal\": \"ses.amazonaws.com\", \"SourceAccount\": {\"Ref\": \"AWS::AccountId\"}}}, \"AllowlistBlockAll7E0A7F11\": {\"Type\": \"AWS::SES::ReceiptFilter\", \"Properties\": {\"Filter\": {\"IpFilter\": {\"Cidr\": \"0.0.0.0/0\", \"Policy\": \"Block\"}}}}, \"AllowlistAllow1000016E9465A18\": {\"Type\": \"AWS::SES::ReceiptFilter\", \"Properties\": {\"Filter\": {\"IpFilter\": {\"Cidr\": \"10.0.0.0/16\", \"Policy\": \"Allow\"}}}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as cdk from 'aws-cdk-lib';\nimport * as ses from 'aws-cdk-lib/aws-ses';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'aws-cdk-ses-receipt');\n\nconst ruleSet = new ses.ReceiptRuleSet(stack, 'RuleSet', {\n  dropSpam: true,\n});\n\nruleSet.addRule('FirstRule', {\n  receiptRuleName: 'FirstRule',\n  recipients: ['cdk-ses-receipt-test@yopmail.com'],\n  scanEnabled: true,\n  tlsPolicy: ses.TlsPolicy.REQUIRE,\n});\n\nruleSet.addRule('SecondRule');\n\nnew ses.AllowListReceiptFilter(stack, 'Allowlist', {\n  ips: [\n    '10.0.0.0/16',\n  ],\n});\n"}
{ "prompt": "{\"Resources\": {\"UserRoleB7C3739B\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}}, \"UserRoleDefaultPolicyBC5E062B\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"kinesis:DescribeStream\", \"kinesis:DescribeStreamConsumer\", \"kinesis:DescribeStreamSummary\", \"kinesis:GetRecords\", \"kinesis:GetShardIterator\", \"kinesis:ListShards\", \"kinesis:ListStreams\", \"kinesis:PutRecord\", \"kinesis:PutRecords\", \"kinesis:SubscribeToShard\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"myStream547FAD7F\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"UserRoleDefaultPolicyBC5E062B\", \"Roles\": [{\"Ref\": \"UserRoleB7C3739B\"}]}}, \"myStream547FAD7F\": {\"Type\": \"AWS::Kinesis::Stream\", \"Properties\": {\"RetentionPeriodHours\": 24, \"ShardCount\": 1, \"StreamEncryption\": {\"Fn::If\": [\"AwsCdkKinesisEncryptedStreamsUnsupportedRegions\", {\"Ref\": \"AWS::NoValue\"}, {\"EncryptionType\": \"KMS\", \"KeyId\": \"alias/aws/kinesis\"}]}}}}, \"Conditions\": {\"AwsCdkKinesisEncryptedStreamsUnsupportedRegions\": {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-northwest-1\"]}]}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as iam from 'aws-cdk-lib/aws-iam';\nimport { App, Stack } from 'aws-cdk-lib';\nimport { Stream } from 'aws-cdk-lib/aws-kinesis';\n\nconst app = new App();\nconst stack = new Stack(app, 'integ-kinesis-stream');\n\nconst role = new iam.Role(stack, 'UserRole', {\n  assumedBy: new iam.AccountRootPrincipal(),\n});\n\nconst stream = new Stream(stack, 'myStream');\n\nstream.grantReadWrite(role);\n"}
{ "prompt": "{\"Resources\": {\"myStream547FAD7F\": {\"Type\": \"AWS::Kinesis::Stream\", \"Properties\": {\"RetentionPeriodHours\": 24, \"ShardCount\": 1, \"StreamEncryption\": {\"Fn::If\": [\"AwsCdkKinesisEncryptedStreamsUnsupportedRegions\", {\"Ref\": \"AWS::NoValue\"}, {\"EncryptionType\": \"KMS\", \"KeyId\": \"alias/aws/kinesis\"}]}}}, \"StreamDashboardAAF4FCF8\": {\"Type\": \"AWS::CloudWatch::Dashboard\", \"Properties\": {\"DashboardBody\": {\"Fn::Join\": [\"\", [\"{\\\"widgets\\\":[{\\\"type\\\":\\\"metric\\\",\\\"width\\\":12,\\\"height\\\":5,\\\"x\\\":0,\\\"y\\\":0,\\\"properties\\\":{\\\"view\\\":\\\"timeSeries\\\",\\\"title\\\":\\\"Get records - sum (Bytes)\\\",\\\"region\\\":\\\"\", {\"Ref\": \"AWS::Region\"}, \"\\\",\\\"metrics\\\":[[\\\"AWS/Kinesis\\\",\\\"GetRecords.Bytes\\\",\\\"StreamName\\\",\\\"\", {\"Ref\": \"myStream547FAD7F\"}, \"\\\",{\\\"stat\\\":\\\"Sum\\\"}]],\\\"yAxis\\\":{}}},{\\\"type\\\":\\\"metric\\\",\\\"width\\\":12,\\\"height\\\":5,\\\"x\\\":12,\\\"y\\\":0,\\\"properties\\\":{\\\"view\\\":\\\"timeSeries\\\",\\\"title\\\":\\\"Get records iterator age - maximum (Milliseconds)\\\",\\\"region\\\":\\\"\", {\"Ref\": \"AWS::Region\"}, \"\\\",\\\"metrics\\\":[[\\\"AWS/Kinesis\\\",\\\"GetRecords.IteratorAgeMilliseconds\\\",\\\"StreamName\\\",\\\"\", {\"Ref\": \"myStream547FAD7F\"}, \"\\\",{\\\"stat\\\":\\\"Maximum\\\"}]],\\\"yAxis\\\":{}}},{\\\"type\\\":\\\"metric\\\",\\\"width\\\":12,\\\"height\\\":5,\\\"x\\\":0,\\\"y\\\":5,\\\"properties\\\":{\\\"view\\\":\\\"timeSeries\\\",\\\"title\\\":\\\"Get records latency - average (Milliseconds)\\\",\\\"region\\\":\\\"\", {\"Ref\": \"AWS::Region\"}, \"\\\",\\\"metrics\\\":[[\\\"AWS/Kinesis\\\",\\\"GetRecords.Latency\\\",\\\"StreamName\\\",\\\"\", {\"Ref\": \"myStream547FAD7F\"}, \"\\\"]],\\\"yAxis\\\":{}}},{\\\"type\\\":\\\"metric\\\",\\\"width\\\":12,\\\"height\\\":5,\\\"x\\\":12,\\\"y\\\":5,\\\"properties\\\":{\\\"view\\\":\\\"timeSeries\\\",\\\"title\\\":\\\"Get records - sum (Count)\\\",\\\"region\\\":\\\"\", {\"Ref\": \"AWS::Region\"}, \"\\\",\\\"metrics\\\":[[\\\"AWS/Kinesis\\\",\\\"GetRecords.Records\\\",\\\"StreamName\\\",\\\"\", {\"Ref\": \"myStream547FAD7F\"}, \"\\\",{\\\"stat\\\":\\\"Sum\\\"}]],\\\"yAxis\\\":{}}},{\\\"type\\\":\\\"metric\\\",\\\"width\\\":12,\\\"height\\\":5,\\\"x\\\":0,\\\"y\\\":10,\\\"properties\\\":{\\\"view\\\":\\\"timeSeries\\\",\\\"title\\\":\\\"Get records success - average (Percent)\\\",\\\"region\\\":\\\"\", {\"Ref\": \"AWS::Region\"}, \"\\\",\\\"metrics\\\":[[\\\"AWS/Kinesis\\\",\\\"GetRecords.Success\\\",\\\"StreamName\\\",\\\"\", {\"Ref\": \"myStream547FAD7F\"}, \"\\\"]],\\\"yAxis\\\":{}}},{\\\"type\\\":\\\"metric\\\",\\\"width\\\":12,\\\"height\\\":5,\\\"x\\\":12,\\\"y\\\":10,\\\"properties\\\":{\\\"view\\\":\\\"timeSeries\\\",\\\"title\\\":\\\"Incoming data - sum (Bytes)\\\",\\\"region\\\":\\\"\", {\"Ref\": \"AWS::Region\"}, \"\\\",\\\"metrics\\\":[[\\\"AWS/Kinesis\\\",\\\"IncomingBytes\\\",\\\"StreamName\\\",\\\"\", {\"Ref\": \"myStream547FAD7F\"}, \"\\\",{\\\"stat\\\":\\\"Sum\\\"}]],\\\"yAxis\\\":{}}},{\\\"type\\\":\\\"metric\\\",\\\"width\\\":12,\\\"height\\\":5,\\\"x\\\":0,\\\"y\\\":15,\\\"properties\\\":{\\\"view\\\":\\\"timeSeries\\\",\\\"title\\\":\\\"Incoming records - sum (Count)\\\",\\\"region\\\":\\\"\", {\"Ref\": \"AWS::Region\"}, \"\\\",\\\"metrics\\\":[[\\\"AWS/Kinesis\\\",\\\"IncomingRecords\\\",\\\"StreamName\\\",\\\"\", {\"Ref\": \"myStream547FAD7F\"}, \"\\\",{\\\"stat\\\":\\\"Sum\\\"}]],\\\"yAxis\\\":{}}},{\\\"type\\\":\\\"metric\\\",\\\"width\\\":12,\\\"height\\\":5,\\\"x\\\":12,\\\"y\\\":15,\\\"properties\\\":{\\\"view\\\":\\\"timeSeries\\\",\\\"title\\\":\\\"Put record - sum (Bytes)\\\",\\\"region\\\":\\\"\", {\"Ref\": \"AWS::Region\"}, \"\\\",\\\"metrics\\\":[[\\\"AWS/Kinesis\\\",\\\"PutRecord.Bytes\\\",\\\"StreamName\\\",\\\"\", {\"Ref\": \"myStream547FAD7F\"}, \"\\\",{\\\"stat\\\":\\\"Sum\\\"}]],\\\"yAxis\\\":{}}},{\\\"type\\\":\\\"metric\\\",\\\"width\\\":12,\\\"height\\\":5,\\\"x\\\":0,\\\"y\\\":20,\\\"properties\\\":{\\\"view\\\":\\\"timeSeries\\\",\\\"title\\\":\\\"Put record latency - average (Milliseconds)\\\",\\\"region\\\":\\\"\", {\"Ref\": \"AWS::Region\"}, \"\\\",\\\"metrics\\\":[[\\\"AWS/Kinesis\\\",\\\"PutRecord.Latency\\\",\\\"StreamName\\\",\\\"\", {\"Ref\": \"myStream547FAD7F\"}, \"\\\"]],\\\"yAxis\\\":{}}},{\\\"type\\\":\\\"metric\\\",\\\"width\\\":12,\\\"height\\\":5,\\\"x\\\":12,\\\"y\\\":20,\\\"properties\\\":{\\\"view\\\":\\\"timeSeries\\\",\\\"title\\\":\\\"Put record success - average (Percent)\\\",\\\"region\\\":\\\"\", {\"Ref\": \"AWS::Region\"}, \"\\\",\\\"metrics\\\":[[\\\"AWS/Kinesis\\\",\\\"PutRecord.Success\\\",\\\"StreamName\\\",\\\"\", {\"Ref\": \"myStream547FAD7F\"}, \"\\\"]],\\\"yAxis\\\":{}}},{\\\"type\\\":\\\"metric\\\",\\\"width\\\":12,\\\"height\\\":5,\\\"x\\\":0,\\\"y\\\":25,\\\"properties\\\":{\\\"view\\\":\\\"timeSeries\\\",\\\"title\\\":\\\"Put records - sum (Bytes)\\\",\\\"region\\\":\\\"\", {\"Ref\": \"AWS::Region\"}, \"\\\",\\\"metrics\\\":[[\\\"AWS/Kinesis\\\",\\\"PutRecords.Bytes\\\",\\\"StreamName\\\",\\\"\", {\"Ref\": \"myStream547FAD7F\"}, \"\\\",{\\\"stat\\\":\\\"Sum\\\"}]],\\\"yAxis\\\":{}}},{\\\"type\\\":\\\"metric\\\",\\\"width\\\":12,\\\"height\\\":5,\\\"x\\\":12,\\\"y\\\":25,\\\"properties\\\":{\\\"view\\\":\\\"timeSeries\\\",\\\"title\\\":\\\"Put records latency - average (Milliseconds)\\\",\\\"region\\\":\\\"\", {\"Ref\": \"AWS::Region\"}, \"\\\",\\\"metrics\\\":[[\\\"AWS/Kinesis\\\",\\\"PutRecords.Latency\\\",\\\"StreamName\\\",\\\"\", {\"Ref\": \"myStream547FAD7F\"}, \"\\\"]],\\\"yAxis\\\":{}}},{\\\"type\\\":\\\"metric\\\",\\\"width\\\":12,\\\"height\\\":5,\\\"x\\\":0,\\\"y\\\":30,\\\"properties\\\":{\\\"view\\\":\\\"timeSeries\\\",\\\"title\\\":\\\"Read throughput exceeded - average (Percent)\\\",\\\"region\\\":\\\"\", {\"Ref\": \"AWS::Region\"}, \"\\\",\\\"metrics\\\":[[\\\"AWS/Kinesis\\\",\\\"ReadProvisionedThroughputExceeded\\\",\\\"StreamName\\\",\\\"\", {\"Ref\": \"myStream547FAD7F\"}, \"\\\"]],\\\"yAxis\\\":{}}},{\\\"type\\\":\\\"metric\\\",\\\"width\\\":12,\\\"height\\\":5,\\\"x\\\":12,\\\"y\\\":30,\\\"properties\\\":{\\\"view\\\":\\\"timeSeries\\\",\\\"title\\\":\\\"Write throughput exceeded - average (Count)\\\",\\\"region\\\":\\\"\", {\"Ref\": \"AWS::Region\"}, \"\\\",\\\"metrics\\\":[[\\\"AWS/Kinesis\\\",\\\"WriteProvisionedThroughputExceeded\\\",\\\"StreamName\\\",\\\"\", {\"Ref\": \"myStream547FAD7F\"}, \"\\\"]],\\\"yAxis\\\":{}}},{\\\"type\\\":\\\"metric\\\",\\\"width\\\":12,\\\"height\\\":5,\\\"x\\\":0,\\\"y\\\":35,\\\"properties\\\":{\\\"view\\\":\\\"timeSeries\\\",\\\"title\\\":\\\"Put records successful records - average (Percent)\\\",\\\"region\\\":\\\"\", {\"Ref\": \"AWS::Region\"}, \"\\\",\\\"metrics\\\":[[{\\\"label\\\":\\\"( count / total ) * 100\\\",\\\"expression\\\":\\\"( count / total ) * 100\\\"}],[\\\"AWS/Kinesis\\\",\\\"PutRecords.SuccessfulRecords\\\",\\\"StreamName\\\",\\\"\", {\"Ref\": \"myStream547FAD7F\"}, \"\\\",{\\\"visible\\\":false,\\\"id\\\":\\\"count\\\"}],[\\\"AWS/Kinesis\\\",\\\"PutRecords.TotalRecords\\\",\\\"StreamName\\\",\\\"\", {\"Ref\": \"myStream547FAD7F\"}, \"\\\",{\\\"visible\\\":false,\\\"id\\\":\\\"total\\\"}]],\\\"yAxis\\\":{}}},{\\\"type\\\":\\\"metric\\\",\\\"width\\\":12,\\\"height\\\":5,\\\"x\\\":12,\\\"y\\\":35,\\\"properties\\\":{\\\"view\\\":\\\"timeSeries\\\",\\\"title\\\":\\\"Put records failed records - average (Percent)\\\",\\\"region\\\":\\\"\", {\"Ref\": \"AWS::Region\"}, \"\\\",\\\"metrics\\\":[[{\\\"label\\\":\\\"( count / total ) * 100\\\",\\\"expression\\\":\\\"( count / total ) * 100\\\"}],[\\\"AWS/Kinesis\\\",\\\"PutRecords.FailedRecords\\\",\\\"StreamName\\\",\\\"\", {\"Ref\": \"myStream547FAD7F\"}, \"\\\",{\\\"visible\\\":false,\\\"id\\\":\\\"count\\\"}],[\\\"AWS/Kinesis\\\",\\\"PutRecords.TotalRecords\\\",\\\"StreamName\\\",\\\"\", {\"Ref\": \"myStream547FAD7F\"}, \"\\\",{\\\"visible\\\":false,\\\"id\\\":\\\"total\\\"}]],\\\"yAxis\\\":{}}},{\\\"type\\\":\\\"metric\\\",\\\"width\\\":12,\\\"height\\\":5,\\\"x\\\":0,\\\"y\\\":40,\\\"properties\\\":{\\\"view\\\":\\\"timeSeries\\\",\\\"title\\\":\\\"Put records throttled records - average (Percent)\\\",\\\"region\\\":\\\"\", {\"Ref\": \"AWS::Region\"}, \"\\\",\\\"metrics\\\":[[{\\\"label\\\":\\\"( count / total ) * 100\\\",\\\"expression\\\":\\\"( count / total ) * 100\\\"}],[\\\"AWS/Kinesis\\\",\\\"PutRecords.ThrottledRecords\\\",\\\"StreamName\\\",\\\"\", {\"Ref\": \"myStream547FAD7F\"}, \"\\\",{\\\"visible\\\":false,\\\"id\\\":\\\"count\\\"}],[\\\"AWS/Kinesis\\\",\\\"PutRecords.TotalRecords\\\",\\\"StreamName\\\",\\\"\", {\"Ref\": \"myStream547FAD7F\"}, \"\\\",{\\\"visible\\\":false,\\\"id\\\":\\\"total\\\"}]],\\\"yAxis\\\":{}}}]}\"]]}}}}, \"Conditions\": {\"AwsCdkKinesisEncryptedStreamsUnsupportedRegions\": {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-northwest-1\"]}]}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as cloudwatch from 'aws-cdk-lib/aws-cloudwatch';\nimport { App, Stack } from 'aws-cdk-lib';\nimport { Stream } from 'aws-cdk-lib/aws-kinesis';\n\nconst app = new App();\nconst stack = new Stack(app, 'integ-kinesis-stream-dashboard');\n\nconst stream = new Stream(stack, 'myStream');\n\nconst dashboard = new cloudwatch.Dashboard(stack, 'StreamDashboard');\n\nfunction graphWidget(title: string, metric: cloudwatch.Metric) {\n  return new cloudwatch.GraphWidget({\n    title,\n    left: [metric],\n    width: 12,\n    height: 5,\n  });\n}\n\nfunction percentGraphWidget(title: string, countMetric: cloudwatch.Metric, totalMetric: cloudwatch.Metric) {\n  return new cloudwatch.GraphWidget({\n    title,\n    left: [new cloudwatch.MathExpression({\n      expression: '( count / total ) * 100',\n      usingMetrics: {\n        count: countMetric,\n        total: totalMetric,\n      },\n    })],\n    width: 12,\n    height: 5,\n  });\n}\n\ndashboard.addWidgets(\n  graphWidget('Get records - sum (Bytes)', stream.metricGetRecordsBytes({ statistic: 'Sum' })),\n  graphWidget('Get records iterator age - maximum (Milliseconds)', stream.metricGetRecordsIteratorAgeMilliseconds()),\n  graphWidget('Get records latency - average (Milliseconds)', stream.metricGetRecordsLatency()),\n  graphWidget('Get records - sum (Count)', stream.metricGetRecords({ statistic: 'Sum' })),\n  graphWidget('Get records success - average (Percent)', stream.metricGetRecordsSuccess()),\n  graphWidget('Incoming data - sum (Bytes)', stream.metricIncomingBytes({ statistic: 'Sum' })),\n  graphWidget('Incoming records - sum (Count)', stream.metricIncomingRecords({ statistic: 'Sum' })),\n  graphWidget('Put record - sum (Bytes)', stream.metricPutRecordBytes({ statistic: 'Sum' })),\n  graphWidget('Put record latency - average (Milliseconds)', stream.metricPutRecordLatency()),\n  graphWidget('Put record success - average (Percent)', stream.metricPutRecordSuccess()),\n  graphWidget('Put records - sum (Bytes)', stream.metricPutRecordsBytes({ statistic: 'Sum' })),\n  graphWidget('Put records latency - average (Milliseconds)', stream.metricPutRecordsLatency()),\n  graphWidget('Read throughput exceeded - average (Percent)', stream.metricReadProvisionedThroughputExceeded()),\n  graphWidget('Write throughput exceeded - average (Count)', stream.metricWriteProvisionedThroughputExceeded()),\n  percentGraphWidget('Put records successful records - average (Percent)',\n    stream.metricPutRecordsSuccessfulRecords(), stream.metricPutRecordsTotalRecords()),\n  percentGraphWidget('Put records failed records - average (Percent)',\n    stream.metricPutRecordsFailedRecords(), stream.metricPutRecordsTotalRecords()),\n  percentGraphWidget('Put records throttled records - average (Percent)',\n    stream.metricPutRecordsThrottledRecords(), stream.metricPutRecordsTotalRecords()),\n);\n"}
{ "prompt": "{\"Resources\": {\"VPCB9E5F0B4\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-elb-integ/VPC\"}]}}, \"VPCPublicSubnet1SubnetB4246D30\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/17\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-elb-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableFEE4B781\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-elb-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableAssociation0B0896DC\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}}}, \"VPCPublicSubnet1DefaultRoute91CEF279\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet1EIP6AD938E8\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-elb-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1NATGatewayE0556630\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet1EIP6AD938E8\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-elb-integ/VPC/PublicSubnet1\"}]}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\"]}, \"VPCPrivateSubnet1Subnet8BCA10E0\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/17\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-elb-integ/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableBE8A6027\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-elb-integ/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableAssociation347902D1\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}}}, \"VPCPrivateSubnet1DefaultRouteAE1D6490\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet1NATGatewayE0556630\"}}}, \"VPCIGWB7E252D3\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-elb-integ/VPC\"}]}}, \"VPCVPCGW99B986DC\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"InternetGatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}}, \"LBSecurityGroup8A41EA2B\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"aws-cdk-elb-integ/LB/SecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"255.255.255.255/32\", \"Description\": \"Disallow all traffic\", \"FromPort\": 252, \"IpProtocol\": \"icmp\", \"ToPort\": 86}], \"SecurityGroupIngress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Default rule allow on 80\", \"FromPort\": 80, \"IpProtocol\": \"tcp\", \"ToPort\": 80}], \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}}, \"LB8A12904C\": {\"Type\": \"AWS::ElasticLoadBalancing::LoadBalancer\", \"Properties\": {\"Listeners\": [{\"InstancePort\": \"80\", \"InstanceProtocol\": \"http\", \"LoadBalancerPort\": \"80\", \"Protocol\": \"http\"}], \"CrossZone\": true, \"HealthCheck\": {\"HealthyThreshold\": \"2\", \"Interval\": \"30\", \"Target\": \"HTTP:80/\", \"Timeout\": \"5\", \"UnhealthyThreshold\": \"5\"}, \"Scheme\": \"internet-facing\", \"SecurityGroups\": [{\"Fn::GetAtt\": [\"LBSecurityGroup8A41EA2B\", \"GroupId\"]}], \"Subnets\": [{\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}]}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\"]}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "#!/usr/bin/env node\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as cdk from 'aws-cdk-lib';\nimport * as elb from 'aws-cdk-lib/aws-elasticloadbalancing';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'aws-cdk-elb-integ');\n\nconst vpc = new ec2.Vpc(stack, 'VPC', {\n  restrictDefaultSecurityGroup: false,\n  maxAzs: 1,\n});\n\nnew elb.LoadBalancer(stack, 'LB', {\n  vpc,\n  internetFacing: true,\n  listeners: [{\n    externalPort: 80,\n    allowConnectionsFrom: [ec2.Peer.anyIpv4()],\n  }],\n  healthCheck: {\n    port: 80,\n  },\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"VPCB9E5F0B4\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-s3-integ/VPC\"}]}}, \"VPCPublicSubnet1SubnetB4246D30\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-s3-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableFEE4B781\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-s3-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableAssociation0B0896DC\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}}}, \"VPCPublicSubnet1DefaultRoute91CEF279\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet1EIP6AD938E8\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-s3-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1NATGatewayE0556630\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet1EIP6AD938E8\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-s3-integ/VPC/PublicSubnet1\"}]}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\"]}, \"VPCPublicSubnet2Subnet74179F39\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-s3-integ/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTable6F1A15F1\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-s3-integ/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTableAssociation5A808732\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}}}, \"VPCPublicSubnet2DefaultRouteB7481BBA\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet2EIP4947BC00\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-s3-integ/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2NATGateway3C070193\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet2EIP4947BC00\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-s3-integ/VPC/PublicSubnet2\"}]}, \"DependsOn\": [\"VPCPublicSubnet2DefaultRouteB7481BBA\", \"VPCPublicSubnet2RouteTableAssociation5A808732\"]}, \"VPCPrivateSubnet1Subnet8BCA10E0\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-s3-integ/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableBE8A6027\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-s3-integ/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableAssociation347902D1\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}}}, \"VPCPrivateSubnet1DefaultRouteAE1D6490\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet1NATGatewayE0556630\"}}}, \"VPCPrivateSubnet2SubnetCFCDAA7A\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-s3-integ/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTable0A19E10E\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-s3-integ/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTableAssociation0C73D413\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}}}, \"VPCPrivateSubnet2DefaultRouteF4F5CFD2\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet2NATGateway3C070193\"}}}, \"VPCIGWB7E252D3\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-s3-integ/VPC\"}]}}, \"VPCVPCGW99B986DC\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"InternetGatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}}, \"DbSecurity381C2C15\": {\"Type\": \"AWS::KMS::Key\", \"Properties\": {\"KeyPolicy\": {\"Statement\": [{\"Action\": \"kms:*\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}, \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"ImportBucketBAF3A8E9\": {\"Type\": \"AWS::S3::Bucket\", \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"ExportBucket4E99310E\": {\"Type\": \"AWS::S3::Bucket\", \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"DatabaseSubnets56F17B9A\": {\"Type\": \"AWS::RDS::DBSubnetGroup\", \"Properties\": {\"DBSubnetGroupDescription\": \"Subnets for Database database\", \"SubnetIds\": [{\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}, {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}]}}, \"DatabaseSecurityGroup5C91FDCB\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"RDS security group\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}}, \"DatabaseSecurityGroupfrom00000IndirectPortF24F2E03\": {\"Type\": \"AWS::EC2::SecurityGroupIngress\", \"Properties\": {\"IpProtocol\": \"tcp\", \"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Open to the world\", \"FromPort\": {\"Fn::GetAtt\": [\"DatabaseB269D8BB\", \"Endpoint.Port\"]}, \"GroupId\": {\"Fn::GetAtt\": [\"DatabaseSecurityGroup5C91FDCB\", \"GroupId\"]}, \"ToPort\": {\"Fn::GetAtt\": [\"DatabaseB269D8BB\", \"Endpoint.Port\"]}}}, \"DatabaseS3ImportRole377BC9C0\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"rds.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"DatabaseS3ImportRoleDefaultPolicyA60A7342\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"ImportBucketBAF3A8E9\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"ImportBucketBAF3A8E9\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"ExportBucket4E99310E\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"ExportBucket4E99310E\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"DatabaseS3ImportRoleDefaultPolicyA60A7342\", \"Roles\": [{\"Ref\": \"DatabaseS3ImportRole377BC9C0\"}]}}, \"DatabaseClusterParameterGroupF2A52087\": {\"Type\": \"AWS::RDS::DBClusterParameterGroup\", \"Properties\": {\"Description\": \"Cluster parameter group for aurora-mysql8.0\", \"Family\": \"aurora-mysql8.0\", \"Parameters\": {\"aws_default_s3_role\": {\"Fn::GetAtt\": [\"DatabaseS3ImportRole377BC9C0\", \"Arn\"]}}}}, \"DatabaseB269D8BB\": {\"Type\": \"AWS::RDS::DBCluster\", \"Properties\": {\"AssociatedRoles\": [{\"RoleArn\": {\"Fn::GetAtt\": [\"DatabaseS3ImportRole377BC9C0\", \"Arn\"]}}], \"CopyTagsToSnapshot\": true, \"DBClusterParameterGroupName\": {\"Ref\": \"DatabaseClusterParameterGroupF2A52087\"}, \"DBSubnetGroupName\": {\"Ref\": \"DatabaseSubnets56F17B9A\"}, \"Engine\": \"aurora-mysql\", \"EngineVersion\": \"8.0.mysql_aurora.3.03.0\", \"KmsKeyId\": {\"Fn::GetAtt\": [\"DbSecurity381C2C15\", \"Arn\"]}, \"MasterUsername\": \"admin\", \"MasterUserPassword\": \"7959866cacc02c2d243ecfe177464fe6\", \"StorageEncrypted\": true, \"VpcSecurityGroupIds\": [{\"Fn::GetAtt\": [\"DatabaseSecurityGroup5C91FDCB\", \"GroupId\"]}]}, \"UpdateReplacePolicy\": \"Snapshot\", \"DeletionPolicy\": \"Snapshot\"}, \"DatabaseInstance1844F58FD\": {\"Type\": \"AWS::RDS::DBInstance\", \"Properties\": {\"DBClusterIdentifier\": {\"Ref\": \"DatabaseB269D8BB\"}, \"DBInstanceClass\": \"db.t3.medium\", \"DBSubnetGroupName\": {\"Ref\": \"DatabaseSubnets56F17B9A\"}, \"Engine\": \"aurora-mysql\", \"PubliclyAccessible\": true}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\", \"VPCPublicSubnet2DefaultRouteB7481BBA\", \"VPCPublicSubnet2RouteTableAssociation5A808732\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"DatabaseInstance2AA380DEE\": {\"Type\": \"AWS::RDS::DBInstance\", \"Properties\": {\"DBClusterIdentifier\": {\"Ref\": \"DatabaseB269D8BB\"}, \"DBInstanceClass\": \"db.t3.medium\", \"DBSubnetGroupName\": {\"Ref\": \"DatabaseSubnets56F17B9A\"}, \"Engine\": \"aurora-mysql\", \"PubliclyAccessible\": true}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\", \"VPCPublicSubnet2DefaultRouteB7481BBA\", \"VPCPublicSubnet2RouteTableAssociation5A808732\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as kms from 'aws-cdk-lib/aws-kms';\nimport * as s3 from 'aws-cdk-lib/aws-s3';\nimport * as cdk from 'aws-cdk-lib';\nimport { AuroraMysqlEngineVersion, ClusterInstance, Credentials, DatabaseCluster, DatabaseClusterEngine } from 'aws-cdk-lib/aws-rds';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'aws-cdk-rds-s3-integ');\n\nconst vpc = new ec2.Vpc(stack, 'VPC', { maxAzs: 2, restrictDefaultSecurityGroup: false });\n\nconst kmsKey = new kms.Key(stack, 'DbSecurity');\n\nconst importBucket = new s3.Bucket(stack, 'ImportBucket');\nconst exportBucket = new s3.Bucket(stack, 'ExportBucket');\n\nconst instanceProps = {\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.BURSTABLE3, ec2.InstanceSize.MEDIUM),\n  isFromLegacyInstanceProps: true,\n};\nconst cluster = new DatabaseCluster(stack, 'Database', {\n  credentials: Credentials.fromUsername('admin', { password: cdk.SecretValue.unsafePlainText('7959866cacc02c2d243ecfe177464fe6') }),\n  engine: DatabaseClusterEngine.auroraMysql({\n    version: AuroraMysqlEngineVersion.VER_3_03_0,\n  }),\n  vpc,\n  writer: ClusterInstance.provisioned('Instance1', {\n    ...instanceProps,\n  }),\n  readers: [\n    ClusterInstance.provisioned('Instance2', {\n      ...instanceProps,\n    }),\n  ],\n  vpcSubnets: { subnetType: ec2.SubnetType.PUBLIC },\n  storageEncryptionKey: kmsKey,\n  s3ImportBuckets: [importBucket],\n  s3ExportBuckets: [exportBucket],\n});\n\ncluster.connections.allowDefaultPortFromAnyIpv4('Open to the world');\n\napp.synth();\n"}
{ "prompt": "{\"Transform\": \"AWS::Serverless-2016-10-31\", \"Resources\": {\"VPCB9E5F0B4\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-instance/VPC\"}]}}, \"VPCPublicSubnet1SubnetB4246D30\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-instance/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableFEE4B781\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-instance/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableAssociation0B0896DC\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}}}, \"VPCPublicSubnet1DefaultRoute91CEF279\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet1EIP6AD938E8\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-instance/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1NATGatewayE0556630\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet1EIP6AD938E8\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-instance/VPC/PublicSubnet1\"}]}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\"]}, \"VPCPublicSubnet2Subnet74179F39\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-instance/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTable6F1A15F1\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-instance/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTableAssociation5A808732\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}}}, \"VPCPublicSubnet2DefaultRouteB7481BBA\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet2EIP4947BC00\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-instance/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2NATGateway3C070193\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet2EIP4947BC00\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-instance/VPC/PublicSubnet2\"}]}, \"DependsOn\": [\"VPCPublicSubnet2DefaultRouteB7481BBA\", \"VPCPublicSubnet2RouteTableAssociation5A808732\"]}, \"VPCPrivateSubnet1Subnet8BCA10E0\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-instance/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableBE8A6027\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-instance/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableAssociation347902D1\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}}}, \"VPCPrivateSubnet1DefaultRouteAE1D6490\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet1NATGatewayE0556630\"}}}, \"VPCPrivateSubnet2SubnetCFCDAA7A\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-instance/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTable0A19E10E\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-instance/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTableAssociation0C73D413\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}}}, \"VPCPrivateSubnet2DefaultRouteF4F5CFD2\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet2NATGateway3C070193\"}}}, \"VPCIGWB7E252D3\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-instance/VPC\"}]}}, \"VPCVPCGW99B986DC\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"InternetGatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}}, \"ParameterGroup5E32DECB\": {\"Type\": \"AWS::RDS::DBParameterGroup\", \"Properties\": {\"Description\": \"Parameter group for oracle-se2-19\", \"Family\": \"oracle-se2-19\", \"Parameters\": {\"open_cursors\": \"2500\"}}}, \"OptionGroupSecurityGroupOEM7E39FD8C\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"Security group for OEM option\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"SecurityGroupIngress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"from 0.0.0.0/0:1158\", \"FromPort\": 1158, \"IpProtocol\": \"tcp\", \"ToPort\": 1158}], \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}}, \"OptionGroupACA43DC1\": {\"Type\": \"AWS::RDS::OptionGroup\", \"Properties\": {\"EngineName\": \"oracle-se2\", \"MajorEngineVersion\": \"19\", \"OptionGroupDescription\": \"Option group for oracle-se2 19\", \"OptionConfigurations\": [{\"OptionName\": \"LOCATOR\"}, {\"OptionName\": \"OEM\", \"Port\": 1158, \"VpcSecurityGroupMemberships\": [{\"Fn::GetAtt\": [\"OptionGroupSecurityGroupOEM7E39FD8C\", \"GroupId\"]}]}]}}, \"InstanceSubnetGroupF2CBA54F\": {\"Type\": \"AWS::RDS::DBSubnetGroup\", \"Properties\": {\"DBSubnetGroupDescription\": \"Subnet group for Instance database\", \"SubnetIds\": [{\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}, {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}]}}, \"InstanceSecurityGroupB4E5FA83\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"Security group for Instance database\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}}, \"InstanceSecurityGroupfrom00000IndirectPort7D6BC055\": {\"Type\": \"AWS::EC2::SecurityGroupIngress\", \"Properties\": {\"IpProtocol\": \"tcp\", \"CidrIp\": \"0.0.0.0/0\", \"Description\": \"from 0.0.0.0/0:{IndirectPort}\", \"FromPort\": {\"Fn::GetAtt\": [\"InstanceC1063A87\", \"Endpoint.Port\"]}, \"GroupId\": {\"Fn::GetAtt\": [\"InstanceSecurityGroupB4E5FA83\", \"GroupId\"]}, \"ToPort\": {\"Fn::GetAtt\": [\"InstanceC1063A87\", \"Endpoint.Port\"]}}}, \"InstanceSecurityGroupfromawscdkrdsinstanceInstanceRotationSingleUserSecurityGroupE959D912IndirectPortFF39F421\": {\"Type\": \"AWS::EC2::SecurityGroupIngress\", \"Properties\": {\"IpProtocol\": \"tcp\", \"Description\": \"from awscdkrdsinstanceInstanceRotationSingleUserSecurityGroupE959D912:{IndirectPort}\", \"FromPort\": {\"Fn::GetAtt\": [\"InstanceC1063A87\", \"Endpoint.Port\"]}, \"GroupId\": {\"Fn::GetAtt\": [\"InstanceSecurityGroupB4E5FA83\", \"GroupId\"]}, \"SourceSecurityGroupId\": {\"Fn::GetAtt\": [\"InstanceRotationSingleUserSecurityGroupF3FB5C25\", \"GroupId\"]}, \"ToPort\": {\"Fn::GetAtt\": [\"InstanceC1063A87\", \"Endpoint.Port\"]}}}, \"InstanceMonitoringRole3E2B4286\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"monitoring.rds.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole\"]]}]}}, \"InstanceSecret478E0A47\": {\"Type\": \"AWS::SecretsManager::Secret\", \"Properties\": {\"Description\": {\"Fn::Join\": [\"\", [\"Generated by the CDK for stack: \", {\"Ref\": \"AWS::StackName\"}]]}, \"GenerateSecretString\": {\"ExcludeCharacters\": \" %+~`#$&*()|[]{}:;<>?!'/@\\\"\\\\\", \"GenerateStringKey\": \"password\", \"PasswordLength\": 30, \"SecretStringTemplate\": \"{\\\"username\\\":\\\"syscdk\\\"}\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"InstanceSecretAttachment83BEE581\": {\"Type\": \"AWS::SecretsManager::SecretTargetAttachment\", \"Properties\": {\"SecretId\": {\"Ref\": \"InstanceSecret478E0A47\"}, \"TargetId\": {\"Ref\": \"InstanceC1063A87\"}, \"TargetType\": \"AWS::RDS::DBInstance\"}}, \"InstanceSecretAttachmentRotationScheduleCC555119\": {\"Type\": \"AWS::SecretsManager::RotationSchedule\", \"Properties\": {\"SecretId\": {\"Ref\": \"InstanceSecretAttachment83BEE581\"}, \"RotationLambdaARN\": {\"Fn::GetAtt\": [\"InstanceRotationSingleUser90E8AB49\", \"Outputs.RotationLambdaARN\"]}, \"RotationRules\": {\"AutomaticallyAfterDays\": 30}}}, \"InstanceSecretPolicy87F03D0F\": {\"Type\": \"AWS::SecretsManager::ResourcePolicy\", \"Properties\": {\"ResourcePolicy\": {\"Statement\": [{\"Action\": \"secretsmanager:DeleteSecret\", \"Effect\": \"Deny\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}, \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"SecretId\": {\"Ref\": \"InstanceSecret478E0A47\"}}}, \"InstanceC1063A87\": {\"Type\": \"AWS::RDS::DBInstance\", \"Properties\": {\"AllocatedStorage\": \"100\", \"AutoMinorVersionUpgrade\": true, \"BackupRetentionPeriod\": 7, \"CopyTagsToSnapshot\": true, \"DBInstanceClass\": \"db.t3.medium\", \"DBName\": \"ORCL\", \"DBParameterGroupName\": {\"Ref\": \"ParameterGroup5E32DECB\"}, \"DBSubnetGroupName\": {\"Ref\": \"InstanceSubnetGroupF2CBA54F\"}, \"EnableCloudwatchLogsExports\": [\"trace\", \"audit\", \"alert\", \"listener\"], \"EnablePerformanceInsights\": true, \"Engine\": \"oracle-se2\", \"EngineVersion\": \"19.0.0.0.ru-2020-04.rur-2020-04.r1\", \"Iops\": 1000, \"LicenseModel\": \"bring-your-own-license\", \"MasterUsername\": {\"Fn::Join\": [\"\", [\"{{resolve:secretsmanager:\", {\"Ref\": \"InstanceSecret478E0A47\"}, \":SecretString:username::}}\"]]}, \"MasterUserPassword\": {\"Fn::Join\": [\"\", [\"{{resolve:secretsmanager:\", {\"Ref\": \"InstanceSecret478E0A47\"}, \":SecretString:password::}}\"]]}, \"MonitoringInterval\": 60, \"MonitoringRoleArn\": {\"Fn::GetAtt\": [\"InstanceMonitoringRole3E2B4286\", \"Arn\"]}, \"MultiAZ\": true, \"OptionGroupName\": {\"Ref\": \"OptionGroupACA43DC1\"}, \"PerformanceInsightsRetentionPeriod\": 7, \"StorageEncrypted\": true, \"StorageType\": \"io1\", \"VPCSecurityGroups\": [{\"Fn::GetAtt\": [\"InstanceSecurityGroupB4E5FA83\", \"GroupId\"]}]}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"InstanceLogRetentiontrace487771C8\": {\"Type\": \"Custom::LogRetention\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A\", \"Arn\"]}, \"LogGroupName\": {\"Fn::Join\": [\"\", [\"/aws/rds/instance/\", {\"Ref\": \"InstanceC1063A87\"}, \"/trace\"]]}, \"RetentionInDays\": 30}}, \"InstanceLogRetentionaudit55C07CF6\": {\"Type\": \"Custom::LogRetention\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A\", \"Arn\"]}, \"LogGroupName\": {\"Fn::Join\": [\"\", [\"/aws/rds/instance/\", {\"Ref\": \"InstanceC1063A87\"}, \"/audit\"]]}, \"RetentionInDays\": 30}}, \"InstanceLogRetentionalert2B4B024B\": {\"Type\": \"Custom::LogRetention\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A\", \"Arn\"]}, \"LogGroupName\": {\"Fn::Join\": [\"\", [\"/aws/rds/instance/\", {\"Ref\": \"InstanceC1063A87\"}, \"/alert\"]]}, \"RetentionInDays\": 30}}, \"InstanceLogRetentionlistener232E8C3C\": {\"Type\": \"Custom::LogRetention\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A\", \"Arn\"]}, \"LogGroupName\": {\"Fn::Join\": [\"\", [\"/aws/rds/instance/\", {\"Ref\": \"InstanceC1063A87\"}, \"/listener\"]]}, \"RetentionInDays\": 30}}, \"InstanceRotationSingleUserSecurityGroupF3FB5C25\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"aws-cdk-rds-instance/Instance/RotationSingleUser/SecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}}, \"InstanceRotationSingleUser90E8AB49\": {\"Type\": \"AWS::Serverless::Application\", \"Properties\": {\"Location\": {\"ApplicationId\": {\"Fn::FindInMap\": [\"InstanceRotationSingleUserSARMappingFEA0C86E\", {\"Ref\": \"AWS::Partition\"}, \"applicationId\"]}, \"SemanticVersion\": {\"Fn::FindInMap\": [\"InstanceRotationSingleUserSARMappingFEA0C86E\", {\"Ref\": \"AWS::Partition\"}, \"semanticVersion\"]}}, \"Parameters\": {\"endpoint\": {\"Fn::Join\": [\"\", [\"https://secretsmanager.\", {\"Ref\": \"AWS::Region\"}, \".\", {\"Ref\": \"AWS::URLSuffix\"}]]}, \"functionName\": \"awscdkrdsinstanceInstanceRotationSingleUserAFE3C214\", \"vpcSubnetIds\": {\"Fn::Join\": [\"\", [{\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}, \",\", {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}]]}, \"vpcSecurityGroupIds\": {\"Fn::GetAtt\": [\"InstanceRotationSingleUserSecurityGroupF3FB5C25\", \"GroupId\"]}, \"excludeCharacters\": \" %+~`#$&*()|[]{}:;<>?!'/@\\\"\\\\\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"InstanceAvailabilityAD5D452C\": {\"Type\": \"AWS::Events::Rule\", \"Properties\": {\"EventPattern\": {\"source\": [\"aws.rds\"], \"resources\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":rds:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":db:\", {\"Ref\": \"InstanceC1063A87\"}]]}], \"detail\": {\"EventCategories\": [\"availability\"]}}, \"State\": \"ENABLED\", \"Targets\": [{\"Arn\": {\"Fn::GetAtt\": [\"Function76856677\", \"Arn\"]}, \"Id\": \"Target0\"}]}}, \"InstanceAvailabilityAllowEventRuleawscdkrdsinstanceFunctionD515EE1969208105\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"Function76856677\", \"Arn\"]}, \"Principal\": \"events.amazonaws.com\", \"SourceArn\": {\"Fn::GetAtt\": [\"InstanceAvailabilityAD5D452C\", \"Arn\"]}}}, \"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"logs:DeleteRetentionPolicy\", \"logs:PutRetentionPolicy\"], \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB\", \"Roles\": [{\"Ref\": \"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB\"}]}}, \"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Handler\": \"index.handler\", \"Runtime\": {\"Fn::FindInMap\": [\"DefaultCrNodeVersionMap\", {\"Ref\": \"AWS::Region\"}, \"value\"]}, \"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"0f8a80f5f2310ea7e3295258fdbb79c43a1e8c0a11e863e63dc82832599412ed.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB\", \"Arn\"]}}, \"DependsOn\": [\"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB\", \"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB\"]}, \"HighCPU94686517\": {\"Type\": \"AWS::CloudWatch::Alarm\", \"Properties\": {\"ComparisonOperator\": \"GreaterThanOrEqualToThreshold\", \"EvaluationPeriods\": 1, \"Dimensions\": [{\"Name\": \"DBInstanceIdentifier\", \"Value\": {\"Ref\": \"InstanceC1063A87\"}}], \"MetricName\": \"CPUUtilization\", \"Namespace\": \"AWS/RDS\", \"Period\": 300, \"Statistic\": \"Average\", \"Threshold\": 90}}, \"FunctionServiceRole675BB04A\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"Function76856677\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"exports.handler = (event) => console.log(event);\"}, \"Role\": {\"Fn::GetAtt\": [\"FunctionServiceRole675BB04A\", \"Arn\"]}, \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"FunctionServiceRole675BB04A\"]}}, \"Mappings\": {\"InstanceRotationSingleUserSARMappingFEA0C86E\": {\"aws\": {\"applicationId\": \"arn:aws:serverlessrepo:us-east-1:297356227824:applications/SecretsManagerRDSOracleRotationSingleUser\", \"semanticVersion\": \"1.1.225\"}, \"aws-cn\": {\"applicationId\": \"arn:aws-cn:serverlessrepo:cn-north-1:193023089310:applications/SecretsManagerRDSOracleRotationSingleUser\", \"semanticVersion\": \"1.1.37\"}, \"aws-us-gov\": {\"applicationId\": \"arn:aws-us-gov:serverlessrepo:us-gov-west-1:023102451235:applications/SecretsManagerRDSOracleRotationSingleUser\", \"semanticVersion\": \"1.1.93\"}}, \"DefaultCrNodeVersionMap\": {\"af-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-east-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-3\": {\"value\": \"nodejs16.x\"}, \"ap-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-south-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-3\": {\"value\": \"nodejs16.x\"}, \"ca-central-1\": {\"value\": \"nodejs16.x\"}, \"cn-north-1\": {\"value\": \"nodejs16.x\"}, \"cn-northwest-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-2\": {\"value\": \"nodejs16.x\"}, \"eu-north-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-1\": {\"value\": \"nodejs16.x\"}, \"eu-west-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-3\": {\"value\": \"nodejs16.x\"}, \"me-central-1\": {\"value\": \"nodejs16.x\"}, \"me-south-1\": {\"value\": \"nodejs16.x\"}, \"sa-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-2\": {\"value\": \"nodejs16.x\"}, \"us-gov-east-1\": {\"value\": \"nodejs16.x\"}, \"us-gov-west-1\": {\"value\": \"nodejs16.x\"}, \"us-iso-east-1\": {\"value\": \"nodejs14.x\"}, \"us-iso-west-1\": {\"value\": \"nodejs14.x\"}, \"us-isob-east-1\": {\"value\": \"nodejs14.x\"}, \"us-west-1\": {\"value\": \"nodejs16.x\"}, \"us-west-2\": {\"value\": \"nodejs16.x\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as cloudwatch from 'aws-cdk-lib/aws-cloudwatch';\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as targets from 'aws-cdk-lib/aws-events-targets';\nimport * as lambda from 'aws-cdk-lib/aws-lambda';\nimport * as logs from 'aws-cdk-lib/aws-logs';\nimport * as cdk from 'aws-cdk-lib';\nimport { RemovalPolicy } from 'aws-cdk-lib';\nimport * as rds from 'aws-cdk-lib/aws-rds';\n\nconst app = new cdk.App();\n\nclass DatabaseInstanceStack extends cdk.Stack {\n  constructor(scope: cdk.App, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n\n    const vpc = new ec2.Vpc(this, 'VPC', { maxAzs: 2, restrictDefaultSecurityGroup: false });\n\n    /// !show\n    // Set open cursors with parameter group\n    const parameterGroup = new rds.ParameterGroup(this, 'ParameterGroup', {\n      engine: rds.DatabaseInstanceEngine.oracleSe2({ version: rds.OracleEngineVersion.VER_19_0_0_0_2020_04_R1 }),\n      parameters: {\n        open_cursors: '2500',\n      },\n    });\n\n    /// Add XMLDB and OEM with option group\n    const optionGroup = new rds.OptionGroup(this, 'OptionGroup', {\n      engine: rds.DatabaseInstanceEngine.oracleSe2({ version: rds.OracleEngineVersion.VER_19_0_0_0_2020_04_R1 }),\n      configurations: [\n        {\n          name: 'LOCATOR',\n        },\n        {\n          name: 'OEM',\n          port: 1158,\n          vpc,\n        },\n      ],\n    });\n\n    // Allow connections to OEM\n    optionGroup.optionConnections.OEM.connections.allowDefaultPortFromAnyIpv4();\n\n    // Database instance with production values\n    const instance = new rds.DatabaseInstance(this, 'Instance', {\n      engine: rds.DatabaseInstanceEngine.oracleSe2({ version: rds.OracleEngineVersion.VER_19_0_0_0_2020_04_R1 }),\n      licenseModel: rds.LicenseModel.BRING_YOUR_OWN_LICENSE,\n      instanceType: ec2.InstanceType.of(ec2.InstanceClass.BURSTABLE3, ec2.InstanceSize.MEDIUM),\n      multiAz: true,\n      storageType: rds.StorageType.IO1,\n      credentials: rds.Credentials.fromUsername('syscdk'),\n      vpc,\n      databaseName: 'ORCL',\n      storageEncrypted: true,\n      backupRetention: cdk.Duration.days(7),\n      monitoringInterval: cdk.Duration.seconds(60),\n      enablePerformanceInsights: true,\n      cloudwatchLogsExports: [\n        'trace',\n        'audit',\n        'alert',\n        'listener',\n      ],\n      cloudwatchLogsRetention: logs.RetentionDays.ONE_MONTH,\n      autoMinorVersionUpgrade: true, // required to be true if LOCATOR is used in the option group\n      optionGroup,\n      parameterGroup,\n      removalPolicy: RemovalPolicy.DESTROY,\n    });\n\n    // Allow connections on default port from any IPV4\n    instance.connections.allowDefaultPortFromAnyIpv4();\n\n    // Rotate the master user password every 30 days\n    instance.addRotationSingleUser();\n\n    // Add alarm for high CPU\n    new cloudwatch.Alarm(this, 'HighCPU', {\n      metric: instance.metricCPUUtilization(),\n      threshold: 90,\n      evaluationPeriods: 1,\n    });\n\n    // Trigger Lambda function on instance availability events\n    const fn = new lambda.Function(this, 'Function', {\n      code: lambda.Code.fromInline('exports.handler = (event) => console.log(event);'),\n      handler: 'index.handler',\n      runtime: lambda.Runtime.NODEJS_14_X,\n    });\n\n    const availabilityRule = instance.onEvent('Availability', { target: new targets.LambdaFunction(fn) });\n    availabilityRule.addEventPattern({\n      detail: {\n        EventCategories: [\n          'availability',\n        ],\n      },\n    });\n    /// !hide\n  }\n}\n\nnew DatabaseInstanceStack(app, 'aws-cdk-rds-instance');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"ServerlessDatabaseWithoutVPC93F9A752\": {\"Type\": \"AWS::RDS::DBCluster\", \"Properties\": {\"Engine\": \"aurora-mysql\", \"CopyTagsToSnapshot\": true, \"DBClusterParameterGroupName\": \"default.aurora-mysql5.7\", \"EngineMode\": \"serverless\", \"MasterUsername\": \"admin\", \"MasterUserPassword\": \"7959866cacc02c2d243ecfe177464fe6\", \"StorageEncrypted\": true, \"VpcSecurityGroupIds\": []}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"ServerlessDatabaseWithoutVPCandCopyTags216AC6C7\": {\"Type\": \"AWS::RDS::DBCluster\", \"Properties\": {\"Engine\": \"aurora-mysql\", \"CopyTagsToSnapshot\": false, \"DBClusterParameterGroupName\": \"default.aurora-mysql5.7\", \"EngineMode\": \"serverless\", \"MasterUsername\": \"admin\", \"MasterUserPassword\": \"7959866cacc02c2d243ecfe177464fe6\", \"StorageEncrypted\": true, \"VpcSecurityGroupIds\": []}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as cdk from 'aws-cdk-lib';\nimport * as rds from 'aws-cdk-lib/aws-rds';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'aws-cdk-sls-cluster-no-vpc-integ');\n\nconst cluster = new rds.ServerlessCluster(stack, 'Serverless Database Without VPC', {\n  engine: rds.DatabaseClusterEngine.AURORA_MYSQL,\n  credentials: {\n    username: 'admin',\n    password: cdk.SecretValue.unsafePlainText('7959866cacc02c2d243ecfe177464fe6'),\n  },\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\ncluster.connections.allowDefaultPortFromAnyIpv4('Open to the world');\n\nconst noCopyTagsCluster = new rds.ServerlessCluster(stack, 'Serverless Database Without VPC and Copy Tags', {\n  engine: rds.DatabaseClusterEngine.AURORA_MYSQL,\n  credentials: {\n    username: 'admin',\n    password: cdk.SecretValue.unsafePlainText('7959866cacc02c2d243ecfe177464fe6'),\n  },\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n  copyTagsToSnapshot: false,\n});\nnoCopyTagsCluster.connections.allowDefaultPortFromAnyIpv4('Open to the world');\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"VPCB9E5F0B4\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-instance-s3-integ/VPC\"}]}}, \"VPCPublicSubnet1SubnetB4246D30\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-instance-s3-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableFEE4B781\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-instance-s3-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableAssociation0B0896DC\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}}}, \"VPCPublicSubnet1DefaultRoute91CEF279\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet1EIP6AD938E8\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-instance-s3-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1NATGatewayE0556630\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet1EIP6AD938E8\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-instance-s3-integ/VPC/PublicSubnet1\"}]}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\"]}, \"VPCPublicSubnet2Subnet74179F39\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-instance-s3-integ/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTable6F1A15F1\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-instance-s3-integ/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTableAssociation5A808732\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}}}, \"VPCPublicSubnet2DefaultRouteB7481BBA\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet2EIP4947BC00\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-instance-s3-integ/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2NATGateway3C070193\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet2EIP4947BC00\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-instance-s3-integ/VPC/PublicSubnet2\"}]}, \"DependsOn\": [\"VPCPublicSubnet2DefaultRouteB7481BBA\", \"VPCPublicSubnet2RouteTableAssociation5A808732\"]}, \"VPCPrivateSubnet1Subnet8BCA10E0\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-instance-s3-integ/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableBE8A6027\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-instance-s3-integ/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableAssociation347902D1\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}}}, \"VPCPrivateSubnet1DefaultRouteAE1D6490\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet1NATGatewayE0556630\"}}}, \"VPCPrivateSubnet2SubnetCFCDAA7A\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-instance-s3-integ/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTable0A19E10E\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-instance-s3-integ/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTableAssociation0C73D413\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}}}, \"VPCPrivateSubnet2DefaultRouteF4F5CFD2\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet2NATGateway3C070193\"}}}, \"VPCIGWB7E252D3\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-instance-s3-integ/VPC\"}]}}, \"VPCVPCGW99B986DC\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"InternetGatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}}, \"ImportBucketBAF3A8E9\": {\"Type\": \"AWS::S3::Bucket\", \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"ExportBucket4E99310E\": {\"Type\": \"AWS::S3::Bucket\", \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"DatabaseSubnetGroup7D60F180\": {\"Type\": \"AWS::RDS::DBSubnetGroup\", \"Properties\": {\"DBSubnetGroupDescription\": \"Subnet group for Database database\", \"SubnetIds\": [{\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}, {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}]}}, \"DatabaseSecurityGroup5C91FDCB\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"Security group for Database database\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}}, \"DatabaseS3ImportRole377BC9C0\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"rds.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"DatabaseS3ImportRoleDefaultPolicyA60A7342\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"ImportBucketBAF3A8E9\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"ImportBucketBAF3A8E9\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"ExportBucket4E99310E\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"ExportBucket4E99310E\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"DatabaseS3ImportRoleDefaultPolicyA60A7342\", \"Roles\": [{\"Ref\": \"DatabaseS3ImportRole377BC9C0\"}]}}, \"DatabaseInstanceOptionGroupDA39E317\": {\"Type\": \"AWS::RDS::OptionGroup\", \"Properties\": {\"EngineName\": \"sqlserver-se\", \"MajorEngineVersion\": \"14.00\", \"OptionGroupDescription\": \"Option group for sqlserver-se 14.00\", \"OptionConfigurations\": [{\"OptionName\": \"SQLSERVER_BACKUP_RESTORE\", \"OptionSettings\": [{\"Name\": \"IAM_ROLE_ARN\", \"Value\": {\"Fn::GetAtt\": [\"DatabaseS3ImportRole377BC9C0\", \"Arn\"]}}]}]}}, \"DatabaseSecret3B817195\": {\"Type\": \"AWS::SecretsManager::Secret\", \"Properties\": {\"Description\": {\"Fn::Join\": [\"\", [\"Generated by the CDK for stack: \", {\"Ref\": \"AWS::StackName\"}]]}, \"GenerateSecretString\": {\"ExcludeCharacters\": \" %+~`#$&*()|[]{}:;<>?!'/@\\\"\\\\\", \"GenerateStringKey\": \"password\", \"PasswordLength\": 30, \"SecretStringTemplate\": \"{\\\"username\\\":\\\"admin\\\"}\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"DatabaseSecretAttachmentE5D1B020\": {\"Type\": \"AWS::SecretsManager::SecretTargetAttachment\", \"Properties\": {\"SecretId\": {\"Ref\": \"DatabaseSecret3B817195\"}, \"TargetId\": {\"Ref\": \"DatabaseB269D8BB\"}, \"TargetType\": \"AWS::RDS::DBInstance\"}}, \"DatabaseB269D8BB\": {\"Type\": \"AWS::RDS::DBInstance\", \"Properties\": {\"AllocatedStorage\": \"100\", \"AssociatedRoles\": [{\"FeatureName\": \"S3_INTEGRATION\", \"RoleArn\": {\"Fn::GetAtt\": [\"DatabaseS3ImportRole377BC9C0\", \"Arn\"]}}], \"CopyTagsToSnapshot\": true, \"DBInstanceClass\": \"db.m5.large\", \"DBSubnetGroupName\": {\"Ref\": \"DatabaseSubnetGroup7D60F180\"}, \"Engine\": \"sqlserver-se\", \"EngineVersion\": \"14.00\", \"LicenseModel\": \"license-included\", \"MasterUsername\": {\"Fn::Join\": [\"\", [\"{{resolve:secretsmanager:\", {\"Ref\": \"DatabaseSecret3B817195\"}, \":SecretString:username::}}\"]]}, \"MasterUserPassword\": {\"Fn::Join\": [\"\", [\"{{resolve:secretsmanager:\", {\"Ref\": \"DatabaseSecret3B817195\"}, \":SecretString:password::}}\"]]}, \"OptionGroupName\": {\"Ref\": \"DatabaseInstanceOptionGroupDA39E317\"}, \"StorageType\": \"gp2\", \"VPCSecurityGroups\": [{\"Fn::GetAtt\": [\"DatabaseSecurityGroup5C91FDCB\", \"GroupId\"]}]}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as s3 from 'aws-cdk-lib/aws-s3';\nimport * as cdk from 'aws-cdk-lib';\nimport { DatabaseInstance, DatabaseInstanceEngine, LicenseModel, SqlServerEngineVersion } from 'aws-cdk-lib/aws-rds';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'aws-cdk-rds-instance-s3-integ');\n\nconst vpc = new ec2.Vpc(stack, 'VPC', { maxAzs: 2, restrictDefaultSecurityGroup: false });\n\nconst importBucket = new s3.Bucket(stack, 'ImportBucket', { removalPolicy: cdk.RemovalPolicy.DESTROY });\nconst exportBucket = new s3.Bucket(stack, 'ExportBucket', { removalPolicy: cdk.RemovalPolicy.DESTROY });\n\nnew DatabaseInstance(stack, 'Database', {\n  engine: DatabaseInstanceEngine.sqlServerSe({ version: SqlServerEngineVersion.VER_14 }),\n  vpc,\n  licenseModel: LicenseModel.LICENSE_INCLUDED,\n  s3ImportBuckets: [importBucket],\n  s3ExportBuckets: [exportBucket],\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\n\napp.synth();\n"}
{ "prompt": "{\"Transform\": [\"AWS::Serverless-2016-10-31\"], \"Resources\": {\"VPCB9E5F0B4\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-cluster-rotation/VPC\"}]}}, \"VPCPublicSubnet1SubnetB4246D30\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-cluster-rotation/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableFEE4B781\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-cluster-rotation/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableAssociation0B0896DC\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}}}, \"VPCPublicSubnet1DefaultRoute91CEF279\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet1EIP6AD938E8\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-cluster-rotation/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1NATGatewayE0556630\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet1EIP6AD938E8\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-cluster-rotation/VPC/PublicSubnet1\"}]}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\"]}, \"VPCPublicSubnet2Subnet74179F39\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-cluster-rotation/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTable6F1A15F1\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-cluster-rotation/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTableAssociation5A808732\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}}}, \"VPCPublicSubnet2DefaultRouteB7481BBA\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet2EIP4947BC00\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-cluster-rotation/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2NATGateway3C070193\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet2EIP4947BC00\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-cluster-rotation/VPC/PublicSubnet2\"}]}, \"DependsOn\": [\"VPCPublicSubnet2DefaultRouteB7481BBA\", \"VPCPublicSubnet2RouteTableAssociation5A808732\"]}, \"VPCPrivateSubnet1Subnet8BCA10E0\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-cluster-rotation/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableBE8A6027\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-cluster-rotation/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableAssociation347902D1\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}}}, \"VPCPrivateSubnet1DefaultRouteAE1D6490\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet1NATGatewayE0556630\"}}}, \"VPCPrivateSubnet2SubnetCFCDAA7A\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-cluster-rotation/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTable0A19E10E\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-cluster-rotation/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTableAssociation0C73D413\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}}}, \"VPCPrivateSubnet2DefaultRouteF4F5CFD2\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet2NATGateway3C070193\"}}}, \"VPCIGWB7E252D3\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-cluster-rotation/VPC\"}]}}, \"VPCVPCGW99B986DC\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"InternetGatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}}, \"SecurityGroupDD263621\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"aws-cdk-rds-cluster-rotation/SecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}}, \"EndpointSecurityGroup3A4D971B\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"aws-cdk-rds-cluster-rotation/Endpoint/SecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"SecurityGroupIngress\": [{\"CidrIp\": {\"Fn::GetAtt\": [\"VPCB9E5F0B4\", \"CidrBlock\"]}, \"Description\": {\"Fn::Join\": [\"\", [\"from \", {\"Fn::GetAtt\": [\"VPCB9E5F0B4\", \"CidrBlock\"]}, \":443\"]]}, \"FromPort\": 443, \"IpProtocol\": \"tcp\", \"ToPort\": 443}], \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}}, \"EndpointEEF1FD8F\": {\"Type\": \"AWS::EC2::VPCEndpoint\", \"Properties\": {\"ServiceName\": {\"Fn::Join\": [\"\", [\"com.amazonaws.\", {\"Ref\": \"AWS::Region\"}, \".secretsmanager\"]]}, \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"PrivateDnsEnabled\": true, \"SecurityGroupIds\": [{\"Fn::GetAtt\": [\"EndpointSecurityGroup3A4D971B\", \"GroupId\"]}], \"SubnetIds\": [{\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}, {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}], \"VpcEndpointType\": \"Interface\"}}, \"DatabaseSubnets56F17B9A\": {\"Type\": \"AWS::RDS::DBSubnetGroup\", \"Properties\": {\"DBSubnetGroupDescription\": \"Subnets for Database database\", \"SubnetIds\": [{\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}, {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}]}}, \"DatabaseSecurityGroup5C91FDCB\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"RDS security group\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}}, \"DatabaseSecurityGroupfromawscdkrdsclusterrotationDatabaseRotationSingleUserSecurityGroup0FFF34B1IndirectPortE6A88723\": {\"Type\": \"AWS::EC2::SecurityGroupIngress\", \"Properties\": {\"IpProtocol\": \"tcp\", \"Description\": \"from awscdkrdsclusterrotationDatabaseRotationSingleUserSecurityGroup0FFF34B1:{IndirectPort}\", \"FromPort\": {\"Fn::GetAtt\": [\"DatabaseB269D8BB\", \"Endpoint.Port\"]}, \"GroupId\": {\"Fn::GetAtt\": [\"DatabaseSecurityGroup5C91FDCB\", \"GroupId\"]}, \"SourceSecurityGroupId\": {\"Fn::GetAtt\": [\"DatabaseRotationSingleUserSecurityGroupAC6E0E73\", \"GroupId\"]}, \"ToPort\": {\"Fn::GetAtt\": [\"DatabaseB269D8BB\", \"Endpoint.Port\"]}}}, \"DatabaseSecret3B817195\": {\"Type\": \"AWS::SecretsManager::Secret\", \"Properties\": {\"Description\": {\"Fn::Join\": [\"\", [\"Generated by the CDK for stack: \", {\"Ref\": \"AWS::StackName\"}]]}, \"GenerateSecretString\": {\"ExcludeCharacters\": \" %+~`#$&*()|[]{}:;<>?!'/@\\\"\\\\\", \"GenerateStringKey\": \"password\", \"PasswordLength\": 30, \"SecretStringTemplate\": \"{\\\"username\\\":\\\"admin\\\"}\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"DatabaseSecretAttachmentE5D1B020\": {\"Type\": \"AWS::SecretsManager::SecretTargetAttachment\", \"Properties\": {\"SecretId\": {\"Ref\": \"DatabaseSecret3B817195\"}, \"TargetId\": {\"Ref\": \"DatabaseB269D8BB\"}, \"TargetType\": \"AWS::RDS::DBCluster\"}}, \"DatabaseSecretAttachmentRotationScheduleA4E9F034\": {\"Type\": \"AWS::SecretsManager::RotationSchedule\", \"Properties\": {\"SecretId\": {\"Ref\": \"DatabaseSecretAttachmentE5D1B020\"}, \"RotationLambdaARN\": {\"Fn::GetAtt\": [\"DatabaseRotationSingleUser65F55654\", \"Outputs.RotationLambdaARN\"]}, \"RotationRules\": {\"AutomaticallyAfterDays\": 30}}}, \"DatabaseSecretPolicyEE73D3F8\": {\"Type\": \"AWS::SecretsManager::ResourcePolicy\", \"Properties\": {\"ResourcePolicy\": {\"Statement\": [{\"Action\": \"secretsmanager:DeleteSecret\", \"Effect\": \"Deny\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}, \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"SecretId\": {\"Ref\": \"DatabaseSecret3B817195\"}}}, \"DatabaseB269D8BB\": {\"Type\": \"AWS::RDS::DBCluster\", \"Properties\": {\"CopyTagsToSnapshot\": true, \"DBClusterParameterGroupName\": \"default.aurora-mysql8.0\", \"DBSubnetGroupName\": {\"Ref\": \"DatabaseSubnets56F17B9A\"}, \"Engine\": \"aurora-mysql\", \"EngineVersion\": \"8.0.mysql_aurora.3.03.0\", \"MasterUsername\": {\"Fn::Join\": [\"\", [\"{{resolve:secretsmanager:\", {\"Ref\": \"DatabaseSecret3B817195\"}, \":SecretString:username::}}\"]]}, \"MasterUserPassword\": {\"Fn::Join\": [\"\", [\"{{resolve:secretsmanager:\", {\"Ref\": \"DatabaseSecret3B817195\"}, \":SecretString:password::}}\"]]}, \"VpcSecurityGroupIds\": [{\"Fn::GetAtt\": [\"DatabaseSecurityGroup5C91FDCB\", \"GroupId\"]}]}, \"UpdateReplacePolicy\": \"Snapshot\", \"DeletionPolicy\": \"Snapshot\"}, \"DatabaseInstance1844F58FD\": {\"Type\": \"AWS::RDS::DBInstance\", \"Properties\": {\"DBClusterIdentifier\": {\"Ref\": \"DatabaseB269D8BB\"}, \"DBInstanceClass\": \"db.t3.medium\", \"DBSubnetGroupName\": {\"Ref\": \"DatabaseSubnets56F17B9A\"}, \"Engine\": \"aurora-mysql\"}, \"DependsOn\": [\"VPCPrivateSubnet1DefaultRouteAE1D6490\", \"VPCPrivateSubnet1RouteTableAssociation347902D1\", \"VPCPrivateSubnet2DefaultRouteF4F5CFD2\", \"VPCPrivateSubnet2RouteTableAssociation0C73D413\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"DatabaseInstance2AA380DEE\": {\"Type\": \"AWS::RDS::DBInstance\", \"Properties\": {\"DBClusterIdentifier\": {\"Ref\": \"DatabaseB269D8BB\"}, \"DBInstanceClass\": \"db.t3.medium\", \"DBSubnetGroupName\": {\"Ref\": \"DatabaseSubnets56F17B9A\"}, \"Engine\": \"aurora-mysql\"}, \"DependsOn\": [\"VPCPrivateSubnet1DefaultRouteAE1D6490\", \"VPCPrivateSubnet1RouteTableAssociation347902D1\", \"VPCPrivateSubnet2DefaultRouteF4F5CFD2\", \"VPCPrivateSubnet2RouteTableAssociation0C73D413\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"DatabaseRotationSingleUserSecurityGroupAC6E0E73\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"aws-cdk-rds-cluster-rotation/Database/RotationSingleUser/SecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}}, \"DatabaseRotationSingleUser65F55654\": {\"Type\": \"AWS::Serverless::Application\", \"Properties\": {\"Location\": {\"ApplicationId\": {\"Fn::FindInMap\": [\"DatabaseRotationSingleUserSARMapping9AEB3E55\", {\"Ref\": \"AWS::Partition\"}, \"applicationId\"]}, \"SemanticVersion\": {\"Fn::FindInMap\": [\"DatabaseRotationSingleUserSARMapping9AEB3E55\", {\"Ref\": \"AWS::Partition\"}, \"semanticVersion\"]}}, \"Parameters\": {\"endpoint\": {\"Fn::Join\": [\"\", [\"https://secretsmanager.\", {\"Ref\": \"AWS::Region\"}, \".\", {\"Ref\": \"AWS::URLSuffix\"}]]}, \"functionName\": \"awscdkrdsclusterrotationDatabaseRotationSingleUser171A8E3A\", \"vpcSubnetIds\": {\"Fn::Join\": [\"\", [{\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}, \",\", {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}]]}, \"vpcSecurityGroupIds\": {\"Fn::GetAtt\": [\"DatabaseRotationSingleUserSecurityGroupAC6E0E73\", \"GroupId\"]}, \"excludeCharacters\": \" %+~`#$&*()|[]{}:;<>?!'/@\\\"\\\\\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"CustomRotationOptionsSubnets52AEBCED\": {\"Type\": \"AWS::RDS::DBSubnetGroup\", \"Properties\": {\"DBSubnetGroupDescription\": \"Subnets for CustomRotationOptions database\", \"SubnetIds\": [{\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}, {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}]}}, \"CustomRotationOptionsSecurityGroup9F3B46A1\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"RDS security group\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}}, \"CustomRotationOptionsSecurityGroupfromawscdkrdsclusterrotationSecurityGroupB986D266IndirectPortF3255731\": {\"Type\": \"AWS::EC2::SecurityGroupIngress\", \"Properties\": {\"IpProtocol\": \"tcp\", \"Description\": \"from awscdkrdsclusterrotationSecurityGroupB986D266:{IndirectPort}\", \"FromPort\": {\"Fn::GetAtt\": [\"CustomRotationOptions7CA9E132\", \"Endpoint.Port\"]}, \"GroupId\": {\"Fn::GetAtt\": [\"CustomRotationOptionsSecurityGroup9F3B46A1\", \"GroupId\"]}, \"SourceSecurityGroupId\": {\"Fn::GetAtt\": [\"SecurityGroupDD263621\", \"GroupId\"]}, \"ToPort\": {\"Fn::GetAtt\": [\"CustomRotationOptions7CA9E132\", \"Endpoint.Port\"]}}}, \"CustomRotationOptionsSecret7DCFFFDB\": {\"Type\": \"AWS::SecretsManager::Secret\", \"Properties\": {\"Description\": {\"Fn::Join\": [\"\", [\"Generated by the CDK for stack: \", {\"Ref\": \"AWS::StackName\"}]]}, \"GenerateSecretString\": {\"ExcludeCharacters\": \" %+~`#$&*()|[]{}:;<>?!'/@\\\"\\\\\", \"GenerateStringKey\": \"password\", \"PasswordLength\": 30, \"SecretStringTemplate\": \"{\\\"username\\\":\\\"admin\\\"}\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"CustomRotationOptionsSecretAttachment697A23BF\": {\"Type\": \"AWS::SecretsManager::SecretTargetAttachment\", \"Properties\": {\"SecretId\": {\"Ref\": \"CustomRotationOptionsSecret7DCFFFDB\"}, \"TargetId\": {\"Ref\": \"CustomRotationOptions7CA9E132\"}, \"TargetType\": \"AWS::RDS::DBCluster\"}}, \"CustomRotationOptionsSecretAttachmentRotationScheduleD5AEB622\": {\"Type\": \"AWS::SecretsManager::RotationSchedule\", \"Properties\": {\"SecretId\": {\"Ref\": \"CustomRotationOptionsSecretAttachment697A23BF\"}, \"RotationLambdaARN\": {\"Fn::GetAtt\": [\"CustomRotationOptionsRotationSingleUserC555446F\", \"Outputs.RotationLambdaARN\"]}, \"RotationRules\": {\"AutomaticallyAfterDays\": 7}}}, \"CustomRotationOptionsSecretPolicyA73E17A8\": {\"Type\": \"AWS::SecretsManager::ResourcePolicy\", \"Properties\": {\"ResourcePolicy\": {\"Statement\": [{\"Action\": \"secretsmanager:DeleteSecret\", \"Effect\": \"Deny\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}, \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"SecretId\": {\"Ref\": \"CustomRotationOptionsSecret7DCFFFDB\"}}}, \"CustomRotationOptions7CA9E132\": {\"Type\": \"AWS::RDS::DBCluster\", \"Properties\": {\"CopyTagsToSnapshot\": true, \"DBClusterParameterGroupName\": \"default.aurora-mysql8.0\", \"DBSubnetGroupName\": {\"Ref\": \"CustomRotationOptionsSubnets52AEBCED\"}, \"Engine\": \"aurora-mysql\", \"EngineVersion\": \"8.0.mysql_aurora.3.03.0\", \"MasterUsername\": {\"Fn::Join\": [\"\", [\"{{resolve:secretsmanager:\", {\"Ref\": \"CustomRotationOptionsSecret7DCFFFDB\"}, \":SecretString:username::}}\"]]}, \"MasterUserPassword\": {\"Fn::Join\": [\"\", [\"{{resolve:secretsmanager:\", {\"Ref\": \"CustomRotationOptionsSecret7DCFFFDB\"}, \":SecretString:password::}}\"]]}, \"VpcSecurityGroupIds\": [{\"Fn::GetAtt\": [\"CustomRotationOptionsSecurityGroup9F3B46A1\", \"GroupId\"]}]}, \"UpdateReplacePolicy\": \"Snapshot\", \"DeletionPolicy\": \"Snapshot\"}, \"CustomRotationOptionsInstance1D693E87C\": {\"Type\": \"AWS::RDS::DBInstance\", \"Properties\": {\"DBClusterIdentifier\": {\"Ref\": \"CustomRotationOptions7CA9E132\"}, \"DBInstanceClass\": \"db.t3.medium\", \"DBSubnetGroupName\": {\"Ref\": \"CustomRotationOptionsSubnets52AEBCED\"}, \"Engine\": \"aurora-mysql\"}, \"DependsOn\": [\"VPCPrivateSubnet1DefaultRouteAE1D6490\", \"VPCPrivateSubnet1RouteTableAssociation347902D1\", \"VPCPrivateSubnet2DefaultRouteF4F5CFD2\", \"VPCPrivateSubnet2RouteTableAssociation0C73D413\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"CustomRotationOptionsInstance2A21FADD8\": {\"Type\": \"AWS::RDS::DBInstance\", \"Properties\": {\"DBClusterIdentifier\": {\"Ref\": \"CustomRotationOptions7CA9E132\"}, \"DBInstanceClass\": \"db.t3.medium\", \"DBSubnetGroupName\": {\"Ref\": \"CustomRotationOptionsSubnets52AEBCED\"}, \"Engine\": \"aurora-mysql\"}, \"DependsOn\": [\"VPCPrivateSubnet1DefaultRouteAE1D6490\", \"VPCPrivateSubnet1RouteTableAssociation347902D1\", \"VPCPrivateSubnet2DefaultRouteF4F5CFD2\", \"VPCPrivateSubnet2RouteTableAssociation0C73D413\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"CustomRotationOptionsRotationSingleUserC555446F\": {\"Type\": \"AWS::Serverless::Application\", \"Properties\": {\"Location\": {\"ApplicationId\": {\"Fn::FindInMap\": [\"CustomRotationOptionsRotationSingleUserSARMapping635D6F45\", {\"Ref\": \"AWS::Partition\"}, \"applicationId\"]}, \"SemanticVersion\": {\"Fn::FindInMap\": [\"CustomRotationOptionsRotationSingleUserSARMapping635D6F45\", {\"Ref\": \"AWS::Partition\"}, \"semanticVersion\"]}}, \"Parameters\": {\"endpoint\": {\"Fn::Join\": [\"\", [\"https://\", {\"Ref\": \"EndpointEEF1FD8F\"}, \".secretsmanager.\", {\"Ref\": \"AWS::Region\"}, \".\", {\"Ref\": \"AWS::URLSuffix\"}]]}, \"functionName\": \"dsclusterrotationCustomRotationOptionsRotationSingleUserBBE9175F\", \"vpcSubnetIds\": {\"Fn::Join\": [\"\", [{\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}, \",\", {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}]]}, \"vpcSecurityGroupIds\": {\"Fn::GetAtt\": [\"SecurityGroupDD263621\", \"GroupId\"]}, \"excludeCharacters\": \"!@#$%^&*\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}}, \"Mappings\": {\"DatabaseRotationSingleUserSARMapping9AEB3E55\": {\"aws\": {\"applicationId\": \"arn:aws:serverlessrepo:us-east-1:297356227824:applications/SecretsManagerRDSMySQLRotationSingleUser\", \"semanticVersion\": \"1.1.225\"}, \"aws-cn\": {\"applicationId\": \"arn:aws-cn:serverlessrepo:cn-north-1:193023089310:applications/SecretsManagerRDSMySQLRotationSingleUser\", \"semanticVersion\": \"1.1.37\"}, \"aws-us-gov\": {\"applicationId\": \"arn:aws-us-gov:serverlessrepo:us-gov-west-1:023102451235:applications/SecretsManagerRDSMySQLRotationSingleUser\", \"semanticVersion\": \"1.1.93\"}}, \"CustomRotationOptionsRotationSingleUserSARMapping635D6F45\": {\"aws\": {\"applicationId\": \"arn:aws:serverlessrepo:us-east-1:297356227824:applications/SecretsManagerRDSMySQLRotationSingleUser\", \"semanticVersion\": \"1.1.225\"}, \"aws-cn\": {\"applicationId\": \"arn:aws-cn:serverlessrepo:cn-north-1:193023089310:applications/SecretsManagerRDSMySQLRotationSingleUser\", \"semanticVersion\": \"1.1.37\"}, \"aws-us-gov\": {\"applicationId\": \"arn:aws-us-gov:serverlessrepo:us-gov-west-1:023102451235:applications/SecretsManagerRDSMySQLRotationSingleUser\", \"semanticVersion\": \"1.1.93\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as cdk from 'aws-cdk-lib';\nimport * as rds from 'aws-cdk-lib/aws-rds';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'aws-cdk-rds-cluster-rotation');\n\nconst vpc = new ec2.Vpc(stack, 'VPC', { restrictDefaultSecurityGroup: false });\nconst securityGroup = new ec2.SecurityGroup(stack, 'SecurityGroup', { vpc });\nconst endpoint = new ec2.InterfaceVpcEndpoint(stack, 'Endpoint', {\n  vpc,\n  service: ec2.InterfaceVpcEndpointAwsService.SECRETS_MANAGER,\n});\n\n/// !show\nconst instanceProps = {\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.BURSTABLE3, ec2.InstanceSize.MEDIUM),\n  isFromLegacyInstanceProps: true,\n};\nconst cluster = new rds.DatabaseCluster(stack, 'Database', {\n  engine: rds.DatabaseClusterEngine.auroraMysql({\n    version: rds.AuroraMysqlEngineVersion.VER_3_03_0,\n  }),\n  vpc,\n  writer: rds.ClusterInstance.provisioned('Instance1', {\n    ...instanceProps,\n  }),\n  readers: [\n    rds.ClusterInstance.provisioned('Instance2', {\n      ...instanceProps,\n    }),\n  ],\n});\n\ncluster.addRotationSingleUser();\n\nconst clusterWithCustomRotationOptions = new rds.DatabaseCluster(stack, 'CustomRotationOptions', {\n  engine: rds.DatabaseClusterEngine.auroraMysql({\n    version: rds.AuroraMysqlEngineVersion.VER_3_03_0,\n  }),\n  vpc,\n  writer: rds.ClusterInstance.provisioned('Instance1', {\n    ...instanceProps,\n  }),\n  readers: [\n    rds.ClusterInstance.provisioned('Instance2', {\n      ...instanceProps,\n    }),\n  ],\n});\nclusterWithCustomRotationOptions.addRotationSingleUser({\n  automaticallyAfter: cdk.Duration.days(7),\n  excludeCharacters: '!@#$%^&*',\n  securityGroup,\n  vpcSubnets: { subnetType: ec2.SubnetType.PRIVATE_WITH_EGRESS },\n  endpoint: endpoint,\n});\n/// !hide\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"Vpc8378EB38\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-fixed-username/Vpc\"}]}}, \"VpcPublicSubnet1Subnet5C2D37C4\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-fixed-username/Vpc/PublicSubnet1\"}]}}, \"VpcPublicSubnet1RouteTable6C95E38E\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-fixed-username/Vpc/PublicSubnet1\"}]}}, \"VpcPublicSubnet1RouteTableAssociation97140677\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet1RouteTable6C95E38E\"}, \"SubnetId\": {\"Ref\": \"VpcPublicSubnet1Subnet5C2D37C4\"}}}, \"VpcPublicSubnet1DefaultRoute3DA9E72A\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet1RouteTable6C95E38E\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VpcIGWD7BA715C\"}}, \"DependsOn\": [\"VpcVPCGWBF912B6E\"]}, \"VpcPublicSubnet1EIPD7E02669\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-fixed-username/Vpc/PublicSubnet1\"}]}}, \"VpcPublicSubnet1NATGateway4D7517AA\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VpcPublicSubnet1Subnet5C2D37C4\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VpcPublicSubnet1EIPD7E02669\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-fixed-username/Vpc/PublicSubnet1\"}]}, \"DependsOn\": [\"VpcPublicSubnet1DefaultRoute3DA9E72A\", \"VpcPublicSubnet1RouteTableAssociation97140677\"]}, \"VpcPublicSubnet2Subnet691E08A3\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-fixed-username/Vpc/PublicSubnet2\"}]}}, \"VpcPublicSubnet2RouteTable94F7E489\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-fixed-username/Vpc/PublicSubnet2\"}]}}, \"VpcPublicSubnet2RouteTableAssociationDD5762D8\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet2RouteTable94F7E489\"}, \"SubnetId\": {\"Ref\": \"VpcPublicSubnet2Subnet691E08A3\"}}}, \"VpcPublicSubnet2DefaultRoute97F91067\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet2RouteTable94F7E489\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VpcIGWD7BA715C\"}}, \"DependsOn\": [\"VpcVPCGWBF912B6E\"]}, \"VpcPublicSubnet2EIP3C605A87\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-fixed-username/Vpc/PublicSubnet2\"}]}}, \"VpcPublicSubnet2NATGateway9182C01D\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VpcPublicSubnet2Subnet691E08A3\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VpcPublicSubnet2EIP3C605A87\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-fixed-username/Vpc/PublicSubnet2\"}]}, \"DependsOn\": [\"VpcPublicSubnet2DefaultRoute97F91067\", \"VpcPublicSubnet2RouteTableAssociationDD5762D8\"]}, \"VpcPrivateSubnet1Subnet536B997A\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-fixed-username/Vpc/PrivateSubnet1\"}]}}, \"VpcPrivateSubnet1RouteTableB2C5B500\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-fixed-username/Vpc/PrivateSubnet1\"}]}}, \"VpcPrivateSubnet1RouteTableAssociation70C59FA6\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet1RouteTableB2C5B500\"}, \"SubnetId\": {\"Ref\": \"VpcPrivateSubnet1Subnet536B997A\"}}}, \"VpcPrivateSubnet1DefaultRouteBE02A9ED\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet1RouteTableB2C5B500\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VpcPublicSubnet1NATGateway4D7517AA\"}}}, \"VpcPrivateSubnet2Subnet3788AAA1\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-fixed-username/Vpc/PrivateSubnet2\"}]}}, \"VpcPrivateSubnet2RouteTableA678073B\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-fixed-username/Vpc/PrivateSubnet2\"}]}}, \"VpcPrivateSubnet2RouteTableAssociationA89CAD56\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet2RouteTableA678073B\"}, \"SubnetId\": {\"Ref\": \"VpcPrivateSubnet2Subnet3788AAA1\"}}}, \"VpcPrivateSubnet2DefaultRoute060D2087\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet2RouteTableA678073B\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VpcPublicSubnet2NATGateway9182C01D\"}}}, \"VpcIGWD7BA715C\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-fixed-username/Vpc\"}]}}, \"VpcVPCGWBF912B6E\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"InternetGatewayId\": {\"Ref\": \"VpcIGWD7BA715C\"}}}, \"InstanceSubnetGroupF2CBA54F\": {\"Type\": \"AWS::RDS::DBSubnetGroup\", \"Properties\": {\"DBSubnetGroupDescription\": \"Subnet group for Instance database\", \"SubnetIds\": [{\"Ref\": \"VpcPrivateSubnet1Subnet536B997A\"}, {\"Ref\": \"VpcPrivateSubnet2Subnet3788AAA1\"}]}}, \"InstanceSecurityGroupB4E5FA83\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"Security group for Instance database\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"VpcId\": {\"Ref\": \"Vpc8378EB38\"}}}, \"awscdkrdsfixedusernameInstanceSecretADA7FA0A0ae21a5e1432db367b627106107972de\": {\"Type\": \"AWS::SecretsManager::Secret\", \"Properties\": {\"Description\": {\"Fn::Join\": [\"\", [\"Generated by the CDK for stack: \", {\"Ref\": \"AWS::StackName\"}]]}, \"GenerateSecretString\": {\"ExcludeCharacters\": \"!&*^#@()\", \"GenerateStringKey\": \"password\", \"PasswordLength\": 30, \"SecretStringTemplate\": \"{\\\"username\\\":\\\"admin\\\"}\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"InstanceSecretAttachment83BEE581\": {\"Type\": \"AWS::SecretsManager::SecretTargetAttachment\", \"Properties\": {\"SecretId\": {\"Ref\": \"awscdkrdsfixedusernameInstanceSecretADA7FA0A0ae21a5e1432db367b627106107972de\"}, \"TargetId\": {\"Ref\": \"InstanceC1063A87\"}, \"TargetType\": \"AWS::RDS::DBInstance\"}}, \"InstanceC1063A87\": {\"Type\": \"AWS::RDS::DBInstance\", \"Properties\": {\"AllocatedStorage\": \"100\", \"BackupRetentionPeriod\": 0, \"CopyTagsToSnapshot\": true, \"DBInstanceClass\": \"db.t3.small\", \"DBName\": \"CDKDB\", \"DBSubnetGroupName\": {\"Ref\": \"InstanceSubnetGroupF2CBA54F\"}, \"DeleteAutomatedBackups\": true, \"Engine\": \"mysql\", \"EngineVersion\": \"8.0.21\", \"MasterUsername\": \"admin\", \"MasterUserPassword\": {\"Fn::Join\": [\"\", [\"{{resolve:secretsmanager:\", {\"Ref\": \"awscdkrdsfixedusernameInstanceSecretADA7FA0A0ae21a5e1432db367b627106107972de\"}, \":SecretString:password::}}\"]]}, \"StorageEncrypted\": true, \"StorageType\": \"gp2\", \"VPCSecurityGroups\": [{\"Fn::GetAtt\": [\"InstanceSecurityGroupB4E5FA83\", \"GroupId\"]}]}, \"UpdateReplacePolicy\": \"Snapshot\", \"DeletionPolicy\": \"Snapshot\"}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as cdk from 'aws-cdk-lib';\nimport * as rds from 'aws-cdk-lib/aws-rds';\n\nconst app = new cdk.App();\n\nclass DatabaseInstanceStack extends cdk.Stack {\n  constructor(scope: cdk.App, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n\n    const vpc = new ec2.Vpc(this, 'Vpc', { restrictDefaultSecurityGroup: false });\n\n    new rds.DatabaseInstance(this, 'Instance', {\n      engine: rds.DatabaseInstanceEngine.mysql({ version: rds.MysqlEngineVersion.VER_8_0_21 }),\n      instanceType: ec2.InstanceType.of(ec2.InstanceClass.BURSTABLE3, ec2.InstanceSize.SMALL),\n      credentials: rds.Credentials.fromGeneratedSecret('admin', { excludeCharacters: '!&*^#@()' }),\n      vpc,\n      databaseName: 'CDKDB',\n      storageEncrypted: true,\n      backupRetention: cdk.Duration.days(0),\n      deleteAutomatedBackups: true,\n    });\n  }\n}\n\nnew DatabaseInstanceStack(app, 'aws-cdk-rds-fixed-username');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"VPCB9E5F0B4\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-instance-s3-postgres-integ/VPC\"}]}}, \"VPCPublicSubnet1SubnetB4246D30\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-instance-s3-postgres-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableFEE4B781\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-instance-s3-postgres-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableAssociation0B0896DC\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}}}, \"VPCPublicSubnet1DefaultRoute91CEF279\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet1EIP6AD938E8\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-instance-s3-postgres-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1NATGatewayE0556630\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet1EIP6AD938E8\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-instance-s3-postgres-integ/VPC/PublicSubnet1\"}]}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\"]}, \"VPCPublicSubnet2Subnet74179F39\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-instance-s3-postgres-integ/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTable6F1A15F1\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-instance-s3-postgres-integ/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTableAssociation5A808732\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}}}, \"VPCPublicSubnet2DefaultRouteB7481BBA\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPrivateSubnet1Subnet8BCA10E0\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-instance-s3-postgres-integ/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableBE8A6027\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-instance-s3-postgres-integ/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableAssociation347902D1\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}}}, \"VPCPrivateSubnet1DefaultRouteAE1D6490\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet1NATGatewayE0556630\"}}}, \"VPCPrivateSubnet2SubnetCFCDAA7A\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-instance-s3-postgres-integ/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTable0A19E10E\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-instance-s3-postgres-integ/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTableAssociation0C73D413\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}}}, \"VPCPrivateSubnet2DefaultRouteF4F5CFD2\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet1NATGatewayE0556630\"}}}, \"VPCIGWB7E252D3\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-instance-s3-postgres-integ/VPC\"}]}}, \"VPCVPCGW99B986DC\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"InternetGatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}}, \"ImportBucketBAF3A8E9\": {\"Type\": \"AWS::S3::Bucket\", \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"ExportBucket4E99310E\": {\"Type\": \"AWS::S3::Bucket\", \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"InstanceSubnetGroupF2CBA54F\": {\"Type\": \"AWS::RDS::DBSubnetGroup\", \"Properties\": {\"DBSubnetGroupDescription\": \"Subnet group for Instance database\", \"SubnetIds\": [{\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}, {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}]}}, \"InstanceSecurityGroupB4E5FA83\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"Security group for Instance database\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}}, \"InstanceS3ImportRole30959D06\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"rds.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"InstanceS3ImportRoleDefaultPolicy297F292A\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"ImportBucketBAF3A8E9\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"ImportBucketBAF3A8E9\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"InstanceS3ImportRoleDefaultPolicy297F292A\", \"Roles\": [{\"Ref\": \"InstanceS3ImportRole30959D06\"}]}}, \"InstanceS3ExportRole9891C2F7\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"rds.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"InstanceS3ExportRoleDefaultPolicy62C930BC\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"ExportBucket4E99310E\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"ExportBucket4E99310E\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"InstanceS3ExportRoleDefaultPolicy62C930BC\", \"Roles\": [{\"Ref\": \"InstanceS3ExportRole9891C2F7\"}]}}, \"InstanceSecret478E0A47\": {\"Type\": \"AWS::SecretsManager::Secret\", \"Properties\": {\"Description\": {\"Fn::Join\": [\"\", [\"Generated by the CDK for stack: \", {\"Ref\": \"AWS::StackName\"}]]}, \"GenerateSecretString\": {\"ExcludeCharacters\": \" %+~`#$&*()|[]{}:;<>?!'/@\\\"\\\\\", \"GenerateStringKey\": \"password\", \"PasswordLength\": 30, \"SecretStringTemplate\": \"{\\\"username\\\":\\\"postgres\\\"}\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"InstanceSecretAttachment83BEE581\": {\"Type\": \"AWS::SecretsManager::SecretTargetAttachment\", \"Properties\": {\"SecretId\": {\"Ref\": \"InstanceSecret478E0A47\"}, \"TargetId\": {\"Ref\": \"InstanceC1063A87\"}, \"TargetType\": \"AWS::RDS::DBInstance\"}}, \"InstanceC1063A87\": {\"Type\": \"AWS::RDS::DBInstance\", \"Properties\": {\"AllocatedStorage\": \"100\", \"AssociatedRoles\": [{\"FeatureName\": \"s3Import\", \"RoleArn\": {\"Fn::GetAtt\": [\"InstanceS3ImportRole30959D06\", \"Arn\"]}}, {\"FeatureName\": \"s3Export\", \"RoleArn\": {\"Fn::GetAtt\": [\"InstanceS3ExportRole9891C2F7\", \"Arn\"]}}], \"CopyTagsToSnapshot\": true, \"DBInstanceClass\": \"db.m5.large\", \"DBSubnetGroupName\": {\"Ref\": \"InstanceSubnetGroupF2CBA54F\"}, \"EnableIAMDatabaseAuthentication\": true, \"Engine\": \"postgres\", \"EngineVersion\": \"15.2\", \"MasterUsername\": {\"Fn::Join\": [\"\", [\"{{resolve:secretsmanager:\", {\"Ref\": \"InstanceSecret478E0A47\"}, \":SecretString:username::}}\"]]}, \"MasterUserPassword\": {\"Fn::Join\": [\"\", [\"{{resolve:secretsmanager:\", {\"Ref\": \"InstanceSecret478E0A47\"}, \":SecretString:password::}}\"]]}, \"MultiAZ\": false, \"PubliclyAccessible\": true, \"StorageType\": \"gp2\", \"VPCSecurityGroups\": [{\"Fn::GetAtt\": [\"InstanceSecurityGroupB4E5FA83\", \"GroupId\"]}]}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as s3 from 'aws-cdk-lib/aws-s3';\nimport * as cdk from 'aws-cdk-lib';\nimport * as rds from 'aws-cdk-lib/aws-rds';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'aws-cdk-rds-instance-s3-postgres-integ');\n\nnew rds.DatabaseInstance(stack, 'Instance', {\n  engine: rds.DatabaseInstanceEngine.postgres({ version: rds.PostgresEngineVersion.VER_15_2 }),\n  vpc: new ec2.Vpc(stack, 'VPC', { maxAzs: 2, natGateways: 1, restrictDefaultSecurityGroup: false }),\n  multiAz: false,\n  publiclyAccessible: true,\n  iamAuthentication: true,\n  s3ImportBuckets: [new s3.Bucket(stack, 'ImportBucket', { removalPolicy: cdk.RemovalPolicy.DESTROY })],\n  s3ExportBuckets: [new s3.Bucket(stack, 'ExportBucket', { removalPolicy: cdk.RemovalPolicy.DESTROY })],\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"VPCB9E5F0B4\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-integ/VPC\"}]}}, \"VPCPublicSubnet1SubnetB4246D30\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableFEE4B781\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableAssociation0B0896DC\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}}}, \"VPCPublicSubnet1DefaultRoute91CEF279\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet1EIP6AD938E8\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1NATGatewayE0556630\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet1EIP6AD938E8\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-integ/VPC/PublicSubnet1\"}]}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\"]}, \"VPCPublicSubnet2Subnet74179F39\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-integ/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTable6F1A15F1\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-integ/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTableAssociation5A808732\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}}}, \"VPCPublicSubnet2DefaultRouteB7481BBA\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet2EIP4947BC00\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-integ/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2NATGateway3C070193\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet2EIP4947BC00\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-integ/VPC/PublicSubnet2\"}]}, \"DependsOn\": [\"VPCPublicSubnet2DefaultRouteB7481BBA\", \"VPCPublicSubnet2RouteTableAssociation5A808732\"]}, \"VPCPrivateSubnet1Subnet8BCA10E0\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-integ/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableBE8A6027\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-integ/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableAssociation347902D1\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}}}, \"VPCPrivateSubnet1DefaultRouteAE1D6490\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet1NATGatewayE0556630\"}}}, \"VPCPrivateSubnet2SubnetCFCDAA7A\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-integ/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTable0A19E10E\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-integ/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTableAssociation0C73D413\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}}}, \"VPCPrivateSubnet2DefaultRouteF4F5CFD2\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet2NATGateway3C070193\"}}}, \"VPCIGWB7E252D3\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-integ/VPC\"}]}}, \"VPCVPCGW99B986DC\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"InternetGatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}}, \"SubnetGroup\": {\"Type\": \"AWS::RDS::DBSubnetGroup\", \"Properties\": {\"DBSubnetGroupDescription\": \"My Subnet Group\", \"SubnetIds\": [{\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}, {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}], \"DBSubnetGroupName\": \"mynotlowercasesubnetgroupname\"}}, \"ServerlessDatabaseSecurityGroup1E143FBB\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"RDS security group\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}}, \"ServerlessDatabaseSecurityGroupfrom00000IndirectPortE0823E20\": {\"Type\": \"AWS::EC2::SecurityGroupIngress\", \"Properties\": {\"IpProtocol\": \"tcp\", \"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Open to the world\", \"FromPort\": {\"Fn::GetAtt\": [\"ServerlessDatabaseDF340AE1\", \"Endpoint.Port\"]}, \"GroupId\": {\"Fn::GetAtt\": [\"ServerlessDatabaseSecurityGroup1E143FBB\", \"GroupId\"]}, \"ToPort\": {\"Fn::GetAtt\": [\"ServerlessDatabaseDF340AE1\", \"Endpoint.Port\"]}}}, \"ServerlessDatabaseDF340AE1\": {\"Type\": \"AWS::RDS::DBCluster\", \"Properties\": {\"Engine\": \"aurora-mysql\", \"CopyTagsToSnapshot\": true, \"DBClusterParameterGroupName\": \"default.aurora-mysql5.7\", \"DBSubnetGroupName\": {\"Ref\": \"SubnetGroup\"}, \"EngineMode\": \"serverless\", \"MasterUsername\": \"admin\", \"MasterUserPassword\": \"7959866cacc02c2d243ecfe177464fe6\", \"StorageEncrypted\": true, \"VpcSecurityGroupIds\": [{\"Fn::GetAtt\": [\"ServerlessDatabaseSecurityGroup1E143FBB\", \"GroupId\"]}]}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"ServerlessDatabaseWithoutCopyTagsSecurityGroup9C8F4A01\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"RDS security group\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}}, \"ServerlessDatabaseWithoutCopyTagsSecurityGroupfrom00000IndirectPortEFBD728B\": {\"Type\": \"AWS::EC2::SecurityGroupIngress\", \"Properties\": {\"IpProtocol\": \"tcp\", \"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Open to the world\", \"FromPort\": {\"Fn::GetAtt\": [\"ServerlessDatabaseWithoutCopyTagsB34876C9\", \"Endpoint.Port\"]}, \"GroupId\": {\"Fn::GetAtt\": [\"ServerlessDatabaseWithoutCopyTagsSecurityGroup9C8F4A01\", \"GroupId\"]}, \"ToPort\": {\"Fn::GetAtt\": [\"ServerlessDatabaseWithoutCopyTagsB34876C9\", \"Endpoint.Port\"]}}}, \"ServerlessDatabaseWithoutCopyTagsB34876C9\": {\"Type\": \"AWS::RDS::DBCluster\", \"Properties\": {\"Engine\": \"aurora-mysql\", \"CopyTagsToSnapshot\": false, \"DBClusterParameterGroupName\": \"default.aurora-mysql5.7\", \"DBSubnetGroupName\": {\"Ref\": \"SubnetGroup\"}, \"EngineMode\": \"serverless\", \"MasterUsername\": \"admin\", \"MasterUserPassword\": \"7959866cacc02c2d243ecfe177464fe6\", \"StorageEncrypted\": true, \"VpcSecurityGroupIds\": [{\"Fn::GetAtt\": [\"ServerlessDatabaseWithoutCopyTagsSecurityGroup9C8F4A01\", \"GroupId\"]}]}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as cdk from 'aws-cdk-lib';\nimport * as rds from 'aws-cdk-lib/aws-rds';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'aws-cdk-rds-integ');\n\nconst vpc = new ec2.Vpc(stack, 'VPC', {\n  restrictDefaultSecurityGroup: false,\n  maxAzs: 2,\n});\nconst subnetGroup = new rds.SubnetGroup(stack, 'SubnetGroup', {\n  vpc,\n  vpcSubnets: { subnetType: ec2.SubnetType.PUBLIC },\n  description: 'My Subnet Group',\n  subnetGroupName: 'MyNotLowerCaseSubnetGroupName',\n});\n\nconst cluster = new rds.ServerlessCluster(stack, 'Serverless Database', {\n  engine: rds.DatabaseClusterEngine.AURORA_MYSQL,\n  credentials: {\n    username: 'admin',\n    password: cdk.SecretValue.unsafePlainText('7959866cacc02c2d243ecfe177464fe6'),\n  },\n  vpc,\n  vpcSubnets: { subnetType: ec2.SubnetType.PUBLIC },\n  subnetGroup,\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\ncluster.connections.allowDefaultPortFromAnyIpv4('Open to the world');\n\nconst noCopyTagsCluster = new rds.ServerlessCluster(stack, 'Serverless Database Without Copy Tags', {\n  engine: rds.DatabaseClusterEngine.AURORA_MYSQL,\n  credentials: {\n    username: 'admin',\n    password: cdk.SecretValue.unsafePlainText('7959866cacc02c2d243ecfe177464fe6'),\n  },\n  vpc,\n  vpcSubnets: { subnetType: ec2.SubnetType.PUBLIC },\n  subnetGroup,\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n  copyTagsToSnapshot: false,\n});\nnoCopyTagsCluster.connections.allowDefaultPortFromAnyIpv4('Open to the world');\n\napp.synth();\n"}
{ "prompt": "{\"Transform\": \"AWS::Serverless-2016-10-31\", \"Resources\": {\"Vpc8378EB38\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"cdk-integ-cluster-snapshot/Vpc\"}]}}, \"VpcPublicSubnet1Subnet5C2D37C4\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"cdk-integ-cluster-snapshot/Vpc/PublicSubnet1\"}]}}, \"VpcPublicSubnet1RouteTable6C95E38E\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"cdk-integ-cluster-snapshot/Vpc/PublicSubnet1\"}]}}, \"VpcPublicSubnet1RouteTableAssociation97140677\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet1RouteTable6C95E38E\"}, \"SubnetId\": {\"Ref\": \"VpcPublicSubnet1Subnet5C2D37C4\"}}}, \"VpcPublicSubnet1DefaultRoute3DA9E72A\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet1RouteTable6C95E38E\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VpcIGWD7BA715C\"}}, \"DependsOn\": [\"VpcVPCGWBF912B6E\"]}, \"VpcPublicSubnet1EIPD7E02669\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"cdk-integ-cluster-snapshot/Vpc/PublicSubnet1\"}]}}, \"VpcPublicSubnet1NATGateway4D7517AA\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VpcPublicSubnet1Subnet5C2D37C4\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VpcPublicSubnet1EIPD7E02669\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"cdk-integ-cluster-snapshot/Vpc/PublicSubnet1\"}]}, \"DependsOn\": [\"VpcPublicSubnet1DefaultRoute3DA9E72A\", \"VpcPublicSubnet1RouteTableAssociation97140677\"]}, \"VpcPublicSubnet2Subnet691E08A3\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"cdk-integ-cluster-snapshot/Vpc/PublicSubnet2\"}]}}, \"VpcPublicSubnet2RouteTable94F7E489\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"cdk-integ-cluster-snapshot/Vpc/PublicSubnet2\"}]}}, \"VpcPublicSubnet2RouteTableAssociationDD5762D8\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet2RouteTable94F7E489\"}, \"SubnetId\": {\"Ref\": \"VpcPublicSubnet2Subnet691E08A3\"}}}, \"VpcPublicSubnet2DefaultRoute97F91067\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet2RouteTable94F7E489\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VpcIGWD7BA715C\"}}, \"DependsOn\": [\"VpcVPCGWBF912B6E\"]}, \"VpcPrivateSubnet1Subnet536B997A\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"cdk-integ-cluster-snapshot/Vpc/PrivateSubnet1\"}]}}, \"VpcPrivateSubnet1RouteTableB2C5B500\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"cdk-integ-cluster-snapshot/Vpc/PrivateSubnet1\"}]}}, \"VpcPrivateSubnet1RouteTableAssociation70C59FA6\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet1RouteTableB2C5B500\"}, \"SubnetId\": {\"Ref\": \"VpcPrivateSubnet1Subnet536B997A\"}}}, \"VpcPrivateSubnet1DefaultRouteBE02A9ED\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet1RouteTableB2C5B500\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VpcPublicSubnet1NATGateway4D7517AA\"}}}, \"VpcPrivateSubnet2Subnet3788AAA1\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"cdk-integ-cluster-snapshot/Vpc/PrivateSubnet2\"}]}}, \"VpcPrivateSubnet2RouteTableA678073B\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"cdk-integ-cluster-snapshot/Vpc/PrivateSubnet2\"}]}}, \"VpcPrivateSubnet2RouteTableAssociationA89CAD56\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet2RouteTableA678073B\"}, \"SubnetId\": {\"Ref\": \"VpcPrivateSubnet2Subnet3788AAA1\"}}}, \"VpcPrivateSubnet2DefaultRoute060D2087\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet2RouteTableA678073B\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VpcPublicSubnet1NATGateway4D7517AA\"}}}, \"VpcIGWD7BA715C\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"cdk-integ-cluster-snapshot/Vpc\"}]}}, \"VpcVPCGWBF912B6E\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"InternetGatewayId\": {\"Ref\": \"VpcIGWD7BA715C\"}}}, \"ClusterSubnetsDCFA5CB7\": {\"Type\": \"AWS::RDS::DBSubnetGroup\", \"Properties\": {\"DBSubnetGroupDescription\": \"Subnets for Cluster database\", \"SubnetIds\": [{\"Ref\": \"VpcPrivateSubnet1Subnet536B997A\"}, {\"Ref\": \"VpcPrivateSubnet2Subnet3788AAA1\"}]}}, \"ClusterSecurityGroup0921994B\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"RDS security group\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"VpcId\": {\"Ref\": \"Vpc8378EB38\"}}}, \"ClusterSecret6368BD0F\": {\"Type\": \"AWS::SecretsManager::Secret\", \"Properties\": {\"Description\": {\"Fn::Join\": [\"\", [\"Generated by the CDK for stack: \", {\"Ref\": \"AWS::StackName\"}]]}, \"GenerateSecretString\": {\"ExcludeCharacters\": \" %+~`#$&*()|[]{}:;<>?!'/@\\\"\\\\\", \"GenerateStringKey\": \"password\", \"PasswordLength\": 30, \"SecretStringTemplate\": \"{\\\"username\\\":\\\"admin\\\"}\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"ClusterSecretAttachment769E6258\": {\"Type\": \"AWS::SecretsManager::SecretTargetAttachment\", \"Properties\": {\"SecretId\": {\"Ref\": \"ClusterSecret6368BD0F\"}, \"TargetId\": {\"Ref\": \"ClusterEB0386A7\"}, \"TargetType\": \"AWS::RDS::DBCluster\"}}, \"ClusterEB0386A7\": {\"Type\": \"AWS::RDS::DBCluster\", \"Properties\": {\"CopyTagsToSnapshot\": true, \"DBClusterParameterGroupName\": \"default.aurora-mysql5.7\", \"DBSubnetGroupName\": {\"Ref\": \"ClusterSubnetsDCFA5CB7\"}, \"Engine\": \"aurora-mysql\", \"EngineVersion\": \"5.7.mysql_aurora.2.10.2\", \"MasterUsername\": {\"Fn::Join\": [\"\", [\"{{resolve:secretsmanager:\", {\"Ref\": \"ClusterSecret6368BD0F\"}, \":SecretString:username::}}\"]]}, \"MasterUserPassword\": {\"Fn::Join\": [\"\", [\"{{resolve:secretsmanager:\", {\"Ref\": \"ClusterSecret6368BD0F\"}, \":SecretString:password::}}\"]]}, \"VpcSecurityGroupIds\": [{\"Fn::GetAtt\": [\"ClusterSecurityGroup0921994B\", \"GroupId\"]}]}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"ClusterInstance1448F06E4\": {\"Type\": \"AWS::RDS::DBInstance\", \"Properties\": {\"DBClusterIdentifier\": {\"Ref\": \"ClusterEB0386A7\"}, \"DBInstanceClass\": \"db.t3.small\", \"DBSubnetGroupName\": {\"Ref\": \"ClusterSubnetsDCFA5CB7\"}, \"Engine\": \"aurora-mysql\"}, \"DependsOn\": [\"VpcPrivateSubnet1DefaultRouteBE02A9ED\", \"VpcPrivateSubnet1RouteTableAssociation70C59FA6\", \"VpcPrivateSubnet2DefaultRoute060D2087\", \"VpcPrivateSubnet2RouteTableAssociationA89CAD56\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"ClusterInstance2C3E0561B\": {\"Type\": \"AWS::RDS::DBInstance\", \"Properties\": {\"DBClusterIdentifier\": {\"Ref\": \"ClusterEB0386A7\"}, \"DBInstanceClass\": \"db.t3.small\", \"DBSubnetGroupName\": {\"Ref\": \"ClusterSubnetsDCFA5CB7\"}, \"Engine\": \"aurora-mysql\"}, \"DependsOn\": [\"VpcPrivateSubnet1DefaultRouteBE02A9ED\", \"VpcPrivateSubnet1RouteTableAssociation70C59FA6\", \"VpcPrivateSubnet2DefaultRoute060D2087\", \"VpcPrivateSubnet2RouteTableAssociationA89CAD56\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"SnapshoterOnEventHandlerServiceRole7F84B26D\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"SnapshoterOnEventHandlerServiceRoleDefaultPolicyAF0DFD57\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"rds:CreateDBClusterSnapshot\", \"rds:DeleteDBClusterSnapshot\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":rds:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":cluster-snapshot:cdk-integ-cluster-snapshot\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":rds:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":cluster:\", {\"Ref\": \"ClusterEB0386A7\"}]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"SnapshoterOnEventHandlerServiceRoleDefaultPolicyAF0DFD57\", \"Roles\": [{\"Ref\": \"SnapshoterOnEventHandlerServiceRole7F84B26D\"}]}}, \"SnapshoterOnEventHandlerDF82DF85\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"4d4dc74a9beb8e44733e1a95b570d30a58a658c6b1896bf7da5db1940d5fed82.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"SnapshoterOnEventHandlerServiceRole7F84B26D\", \"Arn\"]}, \"Handler\": \"index.onEventHandler\", \"Runtime\": \"nodejs16.x\"}, \"DependsOn\": [\"SnapshoterOnEventHandlerServiceRoleDefaultPolicyAF0DFD57\", \"SnapshoterOnEventHandlerServiceRole7F84B26D\"]}, \"SnapshoterIsCompleteHandlerServiceRole40F5F1A8\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"SnapshoterIsCompleteHandlerServiceRoleDefaultPolicyA43EB222\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"rds:DescribeDBClusterSnapshots\", \"Effect\": \"Allow\", \"Resource\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":rds:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":cluster-snapshot:cdk-integ-cluster-snapshot\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":rds:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":cluster:\", {\"Ref\": \"ClusterEB0386A7\"}]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"SnapshoterIsCompleteHandlerServiceRoleDefaultPolicyA43EB222\", \"Roles\": [{\"Ref\": \"SnapshoterIsCompleteHandlerServiceRole40F5F1A8\"}]}}, \"SnapshoterIsCompleteHandler93DE2591\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"4d4dc74a9beb8e44733e1a95b570d30a58a658c6b1896bf7da5db1940d5fed82.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"SnapshoterIsCompleteHandlerServiceRole40F5F1A8\", \"Arn\"]}, \"Handler\": \"index.isCompleteHandler\", \"Runtime\": \"nodejs16.x\"}, \"DependsOn\": [\"SnapshoterIsCompleteHandlerServiceRoleDefaultPolicyA43EB222\", \"SnapshoterIsCompleteHandlerServiceRole40F5F1A8\"]}, \"SnapshoterSnapshotProviderframeworkonEventServiceRole29C21F76\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"SnapshoterSnapshotProviderframeworkonEventServiceRoleDefaultPolicy21CE9686\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"lambda:InvokeFunction\", \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"SnapshoterIsCompleteHandler93DE2591\", \"Arn\"]}, {\"Fn::GetAtt\": [\"SnapshoterOnEventHandlerDF82DF85\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"SnapshoterIsCompleteHandler93DE2591\", \"Arn\"]}, \":*\"]]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"SnapshoterOnEventHandlerDF82DF85\", \"Arn\"]}, \":*\"]]}]}, {\"Action\": \"states:StartExecution\", \"Effect\": \"Allow\", \"Resource\": {\"Ref\": \"SnapshoterSnapshotProviderwaiterstatemachineE1F05D1F\"}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"SnapshoterSnapshotProviderframeworkonEventServiceRoleDefaultPolicy21CE9686\", \"Roles\": [{\"Ref\": \"SnapshoterSnapshotProviderframeworkonEventServiceRole29C21F76\"}]}}, \"SnapshoterSnapshotProviderframeworkonEventF0C0D052\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"45017ac1fb5b50dac36a255c328b0fe125f18a8e6d3689e188eab5e3a1bf8146.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"SnapshoterSnapshotProviderframeworkonEventServiceRole29C21F76\", \"Arn\"]}, \"Description\": \"AWS CDK resource provider framework - onEvent (cdk-integ-cluster-snapshot/Snapshoter/SnapshotProvider)\", \"Environment\": {\"Variables\": {\"USER_ON_EVENT_FUNCTION_ARN\": {\"Fn::GetAtt\": [\"SnapshoterOnEventHandlerDF82DF85\", \"Arn\"]}, \"USER_IS_COMPLETE_FUNCTION_ARN\": {\"Fn::GetAtt\": [\"SnapshoterIsCompleteHandler93DE2591\", \"Arn\"]}, \"WAITER_STATE_MACHINE_ARN\": {\"Ref\": \"SnapshoterSnapshotProviderwaiterstatemachineE1F05D1F\"}}}, \"Handler\": \"framework.onEvent\", \"Runtime\": {\"Fn::FindInMap\": [\"DefaultCrNodeVersionMap\", {\"Ref\": \"AWS::Region\"}, \"value\"]}, \"Timeout\": 900}, \"DependsOn\": [\"SnapshoterSnapshotProviderframeworkonEventServiceRoleDefaultPolicy21CE9686\", \"SnapshoterSnapshotProviderframeworkonEventServiceRole29C21F76\"]}, \"SnapshoterSnapshotProviderframeworkisCompleteServiceRoleFAA9C6CB\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"SnapshoterSnapshotProviderframeworkisCompleteServiceRoleDefaultPolicyF410E478\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"lambda:InvokeFunction\", \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"SnapshoterIsCompleteHandler93DE2591\", \"Arn\"]}, {\"Fn::GetAtt\": [\"SnapshoterOnEventHandlerDF82DF85\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"SnapshoterIsCompleteHandler93DE2591\", \"Arn\"]}, \":*\"]]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"SnapshoterOnEventHandlerDF82DF85\", \"Arn\"]}, \":*\"]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"SnapshoterSnapshotProviderframeworkisCompleteServiceRoleDefaultPolicyF410E478\", \"Roles\": [{\"Ref\": \"SnapshoterSnapshotProviderframeworkisCompleteServiceRoleFAA9C6CB\"}]}}, \"SnapshoterSnapshotProviderframeworkisComplete803B4F1B\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"45017ac1fb5b50dac36a255c328b0fe125f18a8e6d3689e188eab5e3a1bf8146.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"SnapshoterSnapshotProviderframeworkisCompleteServiceRoleFAA9C6CB\", \"Arn\"]}, \"Description\": \"AWS CDK resource provider framework - isComplete (cdk-integ-cluster-snapshot/Snapshoter/SnapshotProvider)\", \"Environment\": {\"Variables\": {\"USER_ON_EVENT_FUNCTION_ARN\": {\"Fn::GetAtt\": [\"SnapshoterOnEventHandlerDF82DF85\", \"Arn\"]}, \"USER_IS_COMPLETE_FUNCTION_ARN\": {\"Fn::GetAtt\": [\"SnapshoterIsCompleteHandler93DE2591\", \"Arn\"]}}}, \"Handler\": \"framework.isComplete\", \"Runtime\": {\"Fn::FindInMap\": [\"DefaultCrNodeVersionMap\", {\"Ref\": \"AWS::Region\"}, \"value\"]}, \"Timeout\": 900}, \"DependsOn\": [\"SnapshoterSnapshotProviderframeworkisCompleteServiceRoleDefaultPolicyF410E478\", \"SnapshoterSnapshotProviderframeworkisCompleteServiceRoleFAA9C6CB\"]}, \"SnapshoterSnapshotProviderframeworkonTimeoutServiceRole0B00A1BD\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"SnapshoterSnapshotProviderframeworkonTimeoutServiceRoleDefaultPolicy05DF1C30\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"lambda:InvokeFunction\", \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"SnapshoterIsCompleteHandler93DE2591\", \"Arn\"]}, {\"Fn::GetAtt\": [\"SnapshoterOnEventHandlerDF82DF85\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"SnapshoterIsCompleteHandler93DE2591\", \"Arn\"]}, \":*\"]]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"SnapshoterOnEventHandlerDF82DF85\", \"Arn\"]}, \":*\"]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"SnapshoterSnapshotProviderframeworkonTimeoutServiceRoleDefaultPolicy05DF1C30\", \"Roles\": [{\"Ref\": \"SnapshoterSnapshotProviderframeworkonTimeoutServiceRole0B00A1BD\"}]}}, \"SnapshoterSnapshotProviderframeworkonTimeout04342B00\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"45017ac1fb5b50dac36a255c328b0fe125f18a8e6d3689e188eab5e3a1bf8146.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"SnapshoterSnapshotProviderframeworkonTimeoutServiceRole0B00A1BD\", \"Arn\"]}, \"Description\": \"AWS CDK resource provider framework - onTimeout (cdk-integ-cluster-snapshot/Snapshoter/SnapshotProvider)\", \"Environment\": {\"Variables\": {\"USER_ON_EVENT_FUNCTION_ARN\": {\"Fn::GetAtt\": [\"SnapshoterOnEventHandlerDF82DF85\", \"Arn\"]}, \"USER_IS_COMPLETE_FUNCTION_ARN\": {\"Fn::GetAtt\": [\"SnapshoterIsCompleteHandler93DE2591\", \"Arn\"]}}}, \"Handler\": \"framework.onTimeout\", \"Runtime\": {\"Fn::FindInMap\": [\"DefaultCrNodeVersionMap\", {\"Ref\": \"AWS::Region\"}, \"value\"]}, \"Timeout\": 900}, \"DependsOn\": [\"SnapshoterSnapshotProviderframeworkonTimeoutServiceRoleDefaultPolicy05DF1C30\", \"SnapshoterSnapshotProviderframeworkonTimeoutServiceRole0B00A1BD\"]}, \"SnapshoterSnapshotProviderwaiterstatemachineRole76E414C5\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"states.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"SnapshoterSnapshotProviderwaiterstatemachineRoleDefaultPolicyCF7716B2\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"lambda:InvokeFunction\", \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"SnapshoterSnapshotProviderframeworkisComplete803B4F1B\", \"Arn\"]}, {\"Fn::GetAtt\": [\"SnapshoterSnapshotProviderframeworkonTimeout04342B00\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"SnapshoterSnapshotProviderframeworkisComplete803B4F1B\", \"Arn\"]}, \":*\"]]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"SnapshoterSnapshotProviderframeworkonTimeout04342B00\", \"Arn\"]}, \":*\"]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"SnapshoterSnapshotProviderwaiterstatemachineRoleDefaultPolicyCF7716B2\", \"Roles\": [{\"Ref\": \"SnapshoterSnapshotProviderwaiterstatemachineRole76E414C5\"}]}}, \"SnapshoterSnapshotProviderwaiterstatemachineE1F05D1F\": {\"Type\": \"AWS::StepFunctions::StateMachine\", \"Properties\": {\"DefinitionString\": {\"Fn::Join\": [\"\", [\"{\\\"StartAt\\\":\\\"framework-isComplete-task\\\",\\\"States\\\":{\\\"framework-isComplete-task\\\":{\\\"End\\\":true,\\\"Retry\\\":[{\\\"ErrorEquals\\\":[\\\"States.ALL\\\"],\\\"IntervalSeconds\\\":5,\\\"MaxAttempts\\\":360,\\\"BackoffRate\\\":1}],\\\"Catch\\\":[{\\\"ErrorEquals\\\":[\\\"States.ALL\\\"],\\\"Next\\\":\\\"framework-onTimeout-task\\\"}],\\\"Type\\\":\\\"Task\\\",\\\"Resource\\\":\\\"\", {\"Fn::GetAtt\": [\"SnapshoterSnapshotProviderframeworkisComplete803B4F1B\", \"Arn\"]}, \"\\\"},\\\"framework-onTimeout-task\\\":{\\\"End\\\":true,\\\"Type\\\":\\\"Task\\\",\\\"Resource\\\":\\\"\", {\"Fn::GetAtt\": [\"SnapshoterSnapshotProviderframeworkonTimeout04342B00\", \"Arn\"]}, \"\\\"}}}\"]]}, \"RoleArn\": {\"Fn::GetAtt\": [\"SnapshoterSnapshotProviderwaiterstatemachineRole76E414C5\", \"Arn\"]}}, \"DependsOn\": [\"SnapshoterSnapshotProviderwaiterstatemachineRoleDefaultPolicyCF7716B2\", \"SnapshoterSnapshotProviderwaiterstatemachineRole76E414C5\"]}, \"SnapshoterSnapshotAA1755BE\": {\"Type\": \"Custom::Snapshoter\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"SnapshoterSnapshotProviderframeworkonEventF0C0D052\", \"Arn\"]}, \"DBClusterIdentifier\": {\"Ref\": \"ClusterEB0386A7\"}, \"DBClusterSnapshotIdentifier\": \"cdk-integ-cluster-snapshot\"}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"FromSnapshotSubnets9ED4B8EE\": {\"Type\": \"AWS::RDS::DBSubnetGroup\", \"Properties\": {\"DBSubnetGroupDescription\": \"Subnets for FromSnapshot database\", \"SubnetIds\": [{\"Ref\": \"VpcPrivateSubnet1Subnet536B997A\"}, {\"Ref\": \"VpcPrivateSubnet2Subnet3788AAA1\"}]}}, \"FromSnapshotSecurityGroup72F11E81\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"RDS security group\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"VpcId\": {\"Ref\": \"Vpc8378EB38\"}}}, \"FromSnapshotSecurityGroupfromcdkintegclustersnapshotFromSnapshotRotationSingleUserSecurityGroup8B231219IndirectPort7C6DDFDF\": {\"Type\": \"AWS::EC2::SecurityGroupIngress\", \"Properties\": {\"IpProtocol\": \"tcp\", \"Description\": \"from cdkintegclustersnapshotFromSnapshotRotationSingleUserSecurityGroup8B231219:{IndirectPort}\", \"FromPort\": {\"Fn::GetAtt\": [\"FromSnapshotEE0682C5\", \"Endpoint.Port\"]}, \"GroupId\": {\"Fn::GetAtt\": [\"FromSnapshotSecurityGroup72F11E81\", \"GroupId\"]}, \"SourceSecurityGroupId\": {\"Fn::GetAtt\": [\"FromSnapshotRotationSingleUserSecurityGroupF78A9956\", \"GroupId\"]}, \"ToPort\": {\"Fn::GetAtt\": [\"FromSnapshotEE0682C5\", \"Endpoint.Port\"]}}}, \"FromSnapshotSecret9100F61C\": {\"Type\": \"AWS::SecretsManager::Secret\", \"Properties\": {\"Description\": {\"Fn::Join\": [\"\", [\"Generated by the CDK for stack: \", {\"Ref\": \"AWS::StackName\"}]]}, \"GenerateSecretString\": {\"ExcludeCharacters\": \" %+~`#$&*()|[]{}:;<>?!'/@\\\"\\\\\", \"GenerateStringKey\": \"password\", \"PasswordLength\": 30, \"SecretStringTemplate\": \"{\\\"username\\\":\\\"admin\\\"}\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"FromSnapshotSecretAttachmentB62DA1C6\": {\"Type\": \"AWS::SecretsManager::SecretTargetAttachment\", \"Properties\": {\"SecretId\": {\"Ref\": \"FromSnapshotSecret9100F61C\"}, \"TargetId\": {\"Ref\": \"FromSnapshotEE0682C5\"}, \"TargetType\": \"AWS::RDS::DBCluster\"}}, \"cdkintegclustersnapshotFromSnapshotSnapshotSecretD93327943fdaad7efa858a3daf9490cf0a702aeb\": {\"Type\": \"AWS::SecretsManager::Secret\", \"Properties\": {\"Description\": {\"Fn::Join\": [\"\", [\"Generated by the CDK for stack: \", {\"Ref\": \"AWS::StackName\"}]]}, \"GenerateSecretString\": {\"ExcludeCharacters\": \" %+~`#$&*()|[]{}:;<>?!'/@\\\"\\\\\", \"GenerateStringKey\": \"password\", \"PasswordLength\": 30, \"SecretStringTemplate\": \"{\\\"username\\\":\\\"admin\\\"}\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"FromSnapshotSnapshotSecretAttachmentA3F619B8\": {\"Type\": \"AWS::SecretsManager::SecretTargetAttachment\", \"Properties\": {\"SecretId\": {\"Ref\": \"cdkintegclustersnapshotFromSnapshotSnapshotSecretD93327943fdaad7efa858a3daf9490cf0a702aeb\"}, \"TargetId\": {\"Ref\": \"FromSnapshotEE0682C5\"}, \"TargetType\": \"AWS::RDS::DBCluster\"}}, \"FromSnapshotSnapshotSecretAttachmentRotationSchedule102BDEB3\": {\"Type\": \"AWS::SecretsManager::RotationSchedule\", \"Properties\": {\"SecretId\": {\"Ref\": \"FromSnapshotSnapshotSecretAttachmentA3F619B8\"}, \"RotationLambdaARN\": {\"Fn::GetAtt\": [\"FromSnapshotRotationSingleUserEBCAA50C\", \"Outputs.RotationLambdaARN\"]}, \"RotationRules\": {\"AutomaticallyAfterDays\": 30}}}, \"FromSnapshotSnapshotSecretPolicyA5C332BE\": {\"Type\": \"AWS::SecretsManager::ResourcePolicy\", \"Properties\": {\"ResourcePolicy\": {\"Statement\": [{\"Action\": \"secretsmanager:DeleteSecret\", \"Effect\": \"Deny\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}, \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"SecretId\": {\"Ref\": \"cdkintegclustersnapshotFromSnapshotSnapshotSecretD93327943fdaad7efa858a3daf9490cf0a702aeb\"}}}, \"FromSnapshotEE0682C5\": {\"Type\": \"AWS::RDS::DBCluster\", \"Properties\": {\"CopyTagsToSnapshot\": true, \"DBClusterParameterGroupName\": \"default.aurora-mysql5.7\", \"DBSubnetGroupName\": {\"Ref\": \"FromSnapshotSubnets9ED4B8EE\"}, \"Engine\": \"aurora-mysql\", \"EngineVersion\": \"5.7.mysql_aurora.2.10.2\", \"MasterUserPassword\": {\"Fn::Join\": [\"\", [\"{{resolve:secretsmanager:\", {\"Ref\": \"cdkintegclustersnapshotFromSnapshotSnapshotSecretD93327943fdaad7efa858a3daf9490cf0a702aeb\"}, \":SecretString:password::}}\"]]}, \"SnapshotIdentifier\": {\"Fn::GetAtt\": [\"SnapshoterSnapshotAA1755BE\", \"DBClusterSnapshotArn\"]}, \"VpcSecurityGroupIds\": [{\"Fn::GetAtt\": [\"FromSnapshotSecurityGroup72F11E81\", \"GroupId\"]}]}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"FromSnapshotInstance167EFB569\": {\"Type\": \"AWS::RDS::DBInstance\", \"Properties\": {\"DBClusterIdentifier\": {\"Ref\": \"FromSnapshotEE0682C5\"}, \"DBInstanceClass\": \"db.t3.small\", \"DBSubnetGroupName\": {\"Ref\": \"FromSnapshotSubnets9ED4B8EE\"}, \"Engine\": \"aurora-mysql\"}, \"DependsOn\": [\"VpcPrivateSubnet1DefaultRouteBE02A9ED\", \"VpcPrivateSubnet1RouteTableAssociation70C59FA6\", \"VpcPrivateSubnet2DefaultRoute060D2087\", \"VpcPrivateSubnet2RouteTableAssociationA89CAD56\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"FromSnapshotInstance2CD342D07\": {\"Type\": \"AWS::RDS::DBInstance\", \"Properties\": {\"DBClusterIdentifier\": {\"Ref\": \"FromSnapshotEE0682C5\"}, \"DBInstanceClass\": \"db.t3.small\", \"DBSubnetGroupName\": {\"Ref\": \"FromSnapshotSubnets9ED4B8EE\"}, \"Engine\": \"aurora-mysql\"}, \"DependsOn\": [\"VpcPrivateSubnet1DefaultRouteBE02A9ED\", \"VpcPrivateSubnet1RouteTableAssociation70C59FA6\", \"VpcPrivateSubnet2DefaultRoute060D2087\", \"VpcPrivateSubnet2RouteTableAssociationA89CAD56\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"FromSnapshotRotationSingleUserSecurityGroupF78A9956\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"cdk-integ-cluster-snapshot/FromSnapshot/RotationSingleUser/SecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"VpcId\": {\"Ref\": \"Vpc8378EB38\"}}}, \"FromSnapshotRotationSingleUserEBCAA50C\": {\"Type\": \"AWS::Serverless::Application\", \"Properties\": {\"Location\": {\"ApplicationId\": {\"Fn::FindInMap\": [\"FromSnapshotRotationSingleUserSARMapping4464D796\", {\"Ref\": \"AWS::Partition\"}, \"applicationId\"]}, \"SemanticVersion\": {\"Fn::FindInMap\": [\"FromSnapshotRotationSingleUserSARMapping4464D796\", {\"Ref\": \"AWS::Partition\"}, \"semanticVersion\"]}}, \"Parameters\": {\"endpoint\": {\"Fn::Join\": [\"\", [\"https://secretsmanager.\", {\"Ref\": \"AWS::Region\"}, \".\", {\"Ref\": \"AWS::URLSuffix\"}]]}, \"functionName\": \"cdkintegclustersnapshotFromSnapshotRotationSingleUserAE675488\", \"vpcSubnetIds\": {\"Fn::Join\": [\"\", [{\"Ref\": \"VpcPrivateSubnet1Subnet536B997A\"}, \",\", {\"Ref\": \"VpcPrivateSubnet2Subnet3788AAA1\"}]]}, \"vpcSecurityGroupIds\": {\"Fn::GetAtt\": [\"FromSnapshotRotationSingleUserSecurityGroupF78A9956\", \"GroupId\"]}, \"excludeCharacters\": \" %+~`#$&*()|[]{}:;<>?!'/@\\\"\\\\\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}}, \"Mappings\": {\"DefaultCrNodeVersionMap\": {\"af-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-east-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-3\": {\"value\": \"nodejs16.x\"}, \"ap-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-south-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-3\": {\"value\": \"nodejs16.x\"}, \"ca-central-1\": {\"value\": \"nodejs16.x\"}, \"cn-north-1\": {\"value\": \"nodejs16.x\"}, \"cn-northwest-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-2\": {\"value\": \"nodejs16.x\"}, \"eu-north-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-1\": {\"value\": \"nodejs16.x\"}, \"eu-west-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-3\": {\"value\": \"nodejs16.x\"}, \"me-central-1\": {\"value\": \"nodejs16.x\"}, \"me-south-1\": {\"value\": \"nodejs16.x\"}, \"sa-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-2\": {\"value\": \"nodejs16.x\"}, \"us-gov-east-1\": {\"value\": \"nodejs16.x\"}, \"us-gov-west-1\": {\"value\": \"nodejs16.x\"}, \"us-iso-east-1\": {\"value\": \"nodejs14.x\"}, \"us-iso-west-1\": {\"value\": \"nodejs14.x\"}, \"us-isob-east-1\": {\"value\": \"nodejs14.x\"}, \"us-west-1\": {\"value\": \"nodejs16.x\"}, \"us-west-2\": {\"value\": \"nodejs16.x\"}}, \"FromSnapshotRotationSingleUserSARMapping4464D796\": {\"aws\": {\"applicationId\": \"arn:aws:serverlessrepo:us-east-1:297356227824:applications/SecretsManagerRDSMySQLRotationSingleUser\", \"semanticVersion\": \"1.1.225\"}, \"aws-cn\": {\"applicationId\": \"arn:aws-cn:serverlessrepo:cn-north-1:193023089310:applications/SecretsManagerRDSMySQLRotationSingleUser\", \"semanticVersion\": \"1.1.37\"}, \"aws-us-gov\": {\"applicationId\": \"arn:aws-us-gov:serverlessrepo:us-gov-west-1:023102451235:applications/SecretsManagerRDSMySQLRotationSingleUser\", \"semanticVersion\": \"1.1.93\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as path from 'path';\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as iam from 'aws-cdk-lib/aws-iam';\nimport * as lambda from 'aws-cdk-lib/aws-lambda';\nimport { App, ArnFormat, CustomResource, RemovalPolicy, Stack, StackProps } from 'aws-cdk-lib';\nimport * as cr from 'aws-cdk-lib/custom-resources';\nimport { Construct } from 'constructs';\nimport * as rds from 'aws-cdk-lib/aws-rds';\nimport { ClusterInstance } from 'aws-cdk-lib/aws-rds';\n\nclass TestStack extends Stack {\n  constructor(scope: Construct, id: string, props?: StackProps) {\n    super(scope, id, props);\n\n    const vpc = new ec2.Vpc(this, 'Vpc', { maxAzs: 2, natGateways: 1, restrictDefaultSecurityGroup: false });\n\n    const instanceProps = {\n      instanceType: ec2.InstanceType.of(ec2.InstanceClass.BURSTABLE3, ec2.InstanceSize.SMALL),\n      isFromLegacyInstanceProps: true,\n    };\n    const cluster = new rds.DatabaseCluster(this, 'Cluster', {\n      engine: rds.DatabaseClusterEngine.auroraMysql({ version: rds.AuroraMysqlEngineVersion.VER_2_10_2 }),\n      writer: ClusterInstance.provisioned('Instance1', {\n        ...instanceProps,\n      }),\n      readers: [\n        ClusterInstance.provisioned('Instance2', {\n          ...instanceProps,\n        }),\n      ],\n      vpc,\n      removalPolicy: RemovalPolicy.DESTROY,\n    });\n\n    const snapshoter = new Snapshoter(this, 'Snapshoter', {\n      cluster,\n      snapshotIdentifier: 'cdk-integ-cluster-snapshot',\n    });\n\n    const fromSnapshot = new rds.DatabaseClusterFromSnapshot(this, 'FromSnapshot', {\n      snapshotIdentifier: snapshoter.snapshotArn,\n      snapshotCredentials: rds.SnapshotCredentials.fromGeneratedSecret('admin'),\n      engine: rds.DatabaseClusterEngine.auroraMysql({ version: rds.AuroraMysqlEngineVersion.VER_2_10_2 }),\n      writer: ClusterInstance.provisioned('Instance1', {\n        ...instanceProps,\n      }),\n      readers: [\n        ClusterInstance.provisioned('Instance2', {\n          ...instanceProps,\n        }),\n      ],\n      vpc,\n      removalPolicy: RemovalPolicy.DESTROY,\n    });\n    fromSnapshot.addRotationSingleUser();\n  }\n}\n\ninterface SnapshoterProps {\n  readonly cluster: rds.IDatabaseCluster;\n  readonly snapshotIdentifier: string;\n}\n\nclass Snapshoter extends Construct {\n  public readonly snapshotArn: string;\n\n  constructor(scope: Construct, id: string, props: SnapshoterProps) {\n    super(scope, id);\n\n    const clusterArn = Stack.of(this).formatArn({\n      service: 'rds',\n      resource: 'cluster',\n      resourceName: props.cluster.clusterIdentifier,\n      arnFormat: ArnFormat.COLON_RESOURCE_NAME,\n    });\n\n    const snapshotArn = Stack.of(this).formatArn({\n      service: 'rds',\n      resource: 'cluster-snapshot',\n      resourceName: props.snapshotIdentifier,\n      arnFormat: ArnFormat.COLON_RESOURCE_NAME,\n    });\n\n    const code = lambda.Code.fromAsset(path.join(__dirname, 'snapshot-handler'));\n    const onEventHandler = new lambda.Function(this, 'OnEventHandler', {\n      code,\n      runtime: lambda.Runtime.NODEJS_16_X,\n      handler: 'index.onEventHandler',\n    });\n    onEventHandler.addToRolePolicy(new iam.PolicyStatement({\n      actions: ['rds:CreateDBClusterSnapshot', 'rds:DeleteDBClusterSnapshot'],\n      resources: [clusterArn, snapshotArn],\n    }));\n\n    const isCompleteHandler = new lambda.Function(this, 'IsCompleteHandler', {\n      code,\n      runtime: lambda.Runtime.NODEJS_16_X,\n      handler: 'index.isCompleteHandler',\n    });\n    isCompleteHandler.addToRolePolicy(new iam.PolicyStatement({\n      actions: ['rds:DescribeDBClusterSnapshots'],\n      resources: [clusterArn, snapshotArn],\n    }));\n\n    const provider = new cr.Provider(this, 'SnapshotProvider', {\n      onEventHandler,\n      isCompleteHandler,\n    });\n\n    const customResource = new CustomResource(this, 'Snapshot', {\n      resourceType: 'Custom::Snapshoter',\n      serviceToken: provider.serviceToken,\n      properties: {\n        DBClusterIdentifier: props.cluster.clusterIdentifier,\n        DBClusterSnapshotIdentifier: props.snapshotIdentifier,\n      },\n    });\n    this.snapshotArn = customResource.getAttString('DBClusterSnapshotArn');\n  }\n}\n\nconst app = new App();\nnew TestStack(app, 'cdk-integ-cluster-snapshot');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"VPCB9E5F0B4\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-s3-mysql-8-integ/VPC\"}]}}, \"VPCPublicSubnet1SubnetB4246D30\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-s3-mysql-8-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableFEE4B781\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-s3-mysql-8-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableAssociation0B0896DC\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}}}, \"VPCPublicSubnet1DefaultRoute91CEF279\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet1EIP6AD938E8\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-s3-mysql-8-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1NATGatewayE0556630\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet1EIP6AD938E8\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-s3-mysql-8-integ/VPC/PublicSubnet1\"}]}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\"]}, \"VPCPublicSubnet2Subnet74179F39\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-s3-mysql-8-integ/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTable6F1A15F1\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-s3-mysql-8-integ/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTableAssociation5A808732\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}}}, \"VPCPublicSubnet2DefaultRouteB7481BBA\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet2EIP4947BC00\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-s3-mysql-8-integ/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2NATGateway3C070193\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet2EIP4947BC00\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-s3-mysql-8-integ/VPC/PublicSubnet2\"}]}, \"DependsOn\": [\"VPCPublicSubnet2DefaultRouteB7481BBA\", \"VPCPublicSubnet2RouteTableAssociation5A808732\"]}, \"VPCPrivateSubnet1Subnet8BCA10E0\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-s3-mysql-8-integ/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableBE8A6027\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-s3-mysql-8-integ/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableAssociation347902D1\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}}}, \"VPCPrivateSubnet1DefaultRouteAE1D6490\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet1NATGatewayE0556630\"}}}, \"VPCPrivateSubnet2SubnetCFCDAA7A\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-s3-mysql-8-integ/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTable0A19E10E\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-s3-mysql-8-integ/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTableAssociation0C73D413\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}}}, \"VPCPrivateSubnet2DefaultRouteF4F5CFD2\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet2NATGateway3C070193\"}}}, \"VPCIGWB7E252D3\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-s3-mysql-8-integ/VPC\"}]}}, \"VPCVPCGW99B986DC\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"InternetGatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}}, \"ImportExportBucket642DD829\": {\"Type\": \"AWS::S3::Bucket\", \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"DatabaseSubnets56F17B9A\": {\"Type\": \"AWS::RDS::DBSubnetGroup\", \"Properties\": {\"DBSubnetGroupDescription\": \"Subnets for Database database\", \"SubnetIds\": [{\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}, {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}]}}, \"DatabaseSecurityGroup5C91FDCB\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"RDS security group\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}}, \"DatabaseS3ImportRole377BC9C0\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"rds.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"DatabaseS3ImportRoleDefaultPolicyA60A7342\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"ImportExportBucket642DD829\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"ImportExportBucket642DD829\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"DatabaseS3ImportRoleDefaultPolicyA60A7342\", \"Roles\": [{\"Ref\": \"DatabaseS3ImportRole377BC9C0\"}]}}, \"DatabaseClusterParameterGroupF2A52087\": {\"Type\": \"AWS::RDS::DBClusterParameterGroup\", \"Properties\": {\"Description\": \"Cluster parameter group for aurora-mysql8.0\", \"Family\": \"aurora-mysql8.0\", \"Parameters\": {\"aws_default_s3_role\": {\"Fn::GetAtt\": [\"DatabaseS3ImportRole377BC9C0\", \"Arn\"]}}}}, \"DatabaseB269D8BB\": {\"Type\": \"AWS::RDS::DBCluster\", \"Properties\": {\"Engine\": \"aurora-mysql\", \"AssociatedRoles\": [{\"RoleArn\": {\"Fn::GetAtt\": [\"DatabaseS3ImportRole377BC9C0\", \"Arn\"]}}], \"CopyTagsToSnapshot\": true, \"DBClusterParameterGroupName\": {\"Ref\": \"DatabaseClusterParameterGroupF2A52087\"}, \"DBSubnetGroupName\": {\"Ref\": \"DatabaseSubnets56F17B9A\"}, \"EngineVersion\": \"8.0.mysql_aurora.3.01.0\", \"MasterUsername\": \"admin\", \"MasterUserPassword\": \"7959866cacc02c2d243ecfe177464fe6\", \"VpcSecurityGroupIds\": [{\"Fn::GetAtt\": [\"DatabaseSecurityGroup5C91FDCB\", \"GroupId\"]}]}, \"UpdateReplacePolicy\": \"Snapshot\", \"DeletionPolicy\": \"Snapshot\"}, \"DatabaseInstance1844F58FD\": {\"Type\": \"AWS::RDS::DBInstance\", \"Properties\": {\"DBClusterIdentifier\": {\"Ref\": \"DatabaseB269D8BB\"}, \"DBInstanceClass\": \"db.t3.medium\", \"DBSubnetGroupName\": {\"Ref\": \"DatabaseSubnets56F17B9A\"}, \"Engine\": \"aurora-mysql\"}, \"DependsOn\": [\"VPCPrivateSubnet1DefaultRouteAE1D6490\", \"VPCPrivateSubnet1RouteTableAssociation347902D1\", \"VPCPrivateSubnet2DefaultRouteF4F5CFD2\", \"VPCPrivateSubnet2RouteTableAssociation0C73D413\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as s3 from 'aws-cdk-lib/aws-s3';\nimport * as cdk from 'aws-cdk-lib';\nimport * as rds from 'aws-cdk-lib/aws-rds';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'aws-cdk-rds-s3-mysql-8-integ');\n\nconst vpc = new ec2.Vpc(stack, 'VPC', { maxAzs: 2, restrictDefaultSecurityGroup: false });\nconst importExportBucket = new s3.Bucket(stack, 'ImportExportBucket', {\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\n\nnew rds.DatabaseCluster(stack, 'Database', {\n  engine: rds.DatabaseClusterEngine.auroraMysql({\n    version: rds.AuroraMysqlEngineVersion.VER_3_01_0,\n  }),\n  credentials: rds.Credentials.fromUsername('admin', {\n    password: cdk.SecretValue.plainText('7959866cacc02c2d243ecfe177464fe6'),\n  }),\n  writer: rds.ClusterInstance.provisioned('Instance1', { isFromLegacyInstanceProps: true }),\n  vpc,\n  s3ImportBuckets: [importExportBucket],\n  s3ExportBuckets: [importExportBucket],\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"VPCB9E5F0B4\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-integ/VPC\"}]}}, \"VPCPublicSubnet1SubnetB4246D30\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableFEE4B781\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableAssociation0B0896DC\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}}}, \"VPCPublicSubnet1DefaultRoute91CEF279\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet1EIP6AD938E8\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1NATGatewayE0556630\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet1EIP6AD938E8\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-integ/VPC/PublicSubnet1\"}]}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\"]}, \"VPCPublicSubnet2Subnet74179F39\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-integ/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTable6F1A15F1\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-integ/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTableAssociation5A808732\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}}}, \"VPCPublicSubnet2DefaultRouteB7481BBA\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet2EIP4947BC00\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-integ/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2NATGateway3C070193\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet2EIP4947BC00\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-integ/VPC/PublicSubnet2\"}]}, \"DependsOn\": [\"VPCPublicSubnet2DefaultRouteB7481BBA\", \"VPCPublicSubnet2RouteTableAssociation5A808732\"]}, \"VPCPrivateSubnet1Subnet8BCA10E0\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-integ/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableBE8A6027\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-integ/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableAssociation347902D1\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}}}, \"VPCPrivateSubnet1DefaultRouteAE1D6490\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet1NATGatewayE0556630\"}}}, \"VPCPrivateSubnet2SubnetCFCDAA7A\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-integ/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTable0A19E10E\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-integ/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTableAssociation0C73D413\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}}}, \"VPCPrivateSubnet2DefaultRouteF4F5CFD2\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet2NATGateway3C070193\"}}}, \"VPCIGWB7E252D3\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-rds-integ/VPC\"}]}}, \"VPCVPCGW99B986DC\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"InternetGatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}}, \"ParamsA8366201\": {\"Type\": \"AWS::RDS::DBClusterParameterGroup\", \"Properties\": {\"Description\": \"A nice parameter group\", \"Family\": \"aurora-mysql8.0\", \"Parameters\": {\"character_set_database\": \"utf8mb4\"}}}, \"DbSecurity381C2C15\": {\"Type\": \"AWS::KMS::Key\", \"Properties\": {\"KeyPolicy\": {\"Statement\": [{\"Action\": \"kms:*\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}, \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"DatabaseSubnets56F17B9A\": {\"Type\": \"AWS::RDS::DBSubnetGroup\", \"Properties\": {\"DBSubnetGroupDescription\": \"Subnets for Database database\", \"SubnetIds\": [{\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}, {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}]}}, \"DatabaseSecurityGroup5C91FDCB\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"RDS security group\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}}, \"DatabaseSecurityGroupfrom00000IndirectPortF24F2E03\": {\"Type\": \"AWS::EC2::SecurityGroupIngress\", \"Properties\": {\"IpProtocol\": \"tcp\", \"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Open to the world\", \"FromPort\": {\"Fn::GetAtt\": [\"DatabaseB269D8BB\", \"Endpoint.Port\"]}, \"GroupId\": {\"Fn::GetAtt\": [\"DatabaseSecurityGroup5C91FDCB\", \"GroupId\"]}, \"ToPort\": {\"Fn::GetAtt\": [\"DatabaseB269D8BB\", \"Endpoint.Port\"]}}}, \"DatabaseB269D8BB\": {\"Type\": \"AWS::RDS::DBCluster\", \"Properties\": {\"CopyTagsToSnapshot\": true, \"DBClusterParameterGroupName\": {\"Ref\": \"ParamsA8366201\"}, \"DBSubnetGroupName\": {\"Ref\": \"DatabaseSubnets56F17B9A\"}, \"Engine\": \"aurora-mysql\", \"EngineVersion\": \"8.0.mysql_aurora.3.03.0\", \"KmsKeyId\": {\"Fn::GetAtt\": [\"DbSecurity381C2C15\", \"Arn\"]}, \"MasterUsername\": \"admin\", \"MasterUserPassword\": \"7959866cacc02c2d243ecfe177464fe6\", \"StorageEncrypted\": true, \"VpcSecurityGroupIds\": [{\"Fn::GetAtt\": [\"DatabaseSecurityGroup5C91FDCB\", \"GroupId\"]}]}, \"UpdateReplacePolicy\": \"Snapshot\", \"DeletionPolicy\": \"Snapshot\"}, \"DatabaseInstance1844F58FD\": {\"Type\": \"AWS::RDS::DBInstance\", \"Properties\": {\"DBClusterIdentifier\": {\"Ref\": \"DatabaseB269D8BB\"}, \"DBInstanceClass\": \"db.t3.medium\", \"DBSubnetGroupName\": {\"Ref\": \"DatabaseSubnets56F17B9A\"}, \"Engine\": \"aurora-mysql\", \"PubliclyAccessible\": true}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\", \"VPCPublicSubnet2DefaultRouteB7481BBA\", \"VPCPublicSubnet2RouteTableAssociation5A808732\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"DatabaseInstance2AA380DEE\": {\"Type\": \"AWS::RDS::DBInstance\", \"Properties\": {\"DBClusterIdentifier\": {\"Ref\": \"DatabaseB269D8BB\"}, \"DBInstanceClass\": \"db.t3.medium\", \"DBSubnetGroupName\": {\"Ref\": \"DatabaseSubnets56F17B9A\"}, \"Engine\": \"aurora-mysql\", \"PubliclyAccessible\": true}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\", \"VPCPublicSubnet2DefaultRouteB7481BBA\", \"VPCPublicSubnet2RouteTableAssociation5A808732\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"ClusterIamAccess93AC3DF3\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"ecs-tasks.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"ClusterIamAccessDefaultPolicyA088E4DA\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"rds-db:connect\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":rds-db:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":dbuser:\", {\"Fn::GetAtt\": [\"DatabaseB269D8BB\", \"DBClusterResourceId\"]}, \"/db_user\"]]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"ClusterIamAccessDefaultPolicyA088E4DA\", \"Roles\": [{\"Ref\": \"ClusterIamAccess93AC3DF3\"}]}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as iam from 'aws-cdk-lib/aws-iam';\nimport * as kms from 'aws-cdk-lib/aws-kms';\nimport * as cdk from 'aws-cdk-lib';\nimport { AuroraMysqlEngineVersion, ClusterInstance, Credentials, DatabaseCluster, DatabaseClusterEngine, ParameterGroup } from 'aws-cdk-lib/aws-rds';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'aws-cdk-rds-integ');\n\nconst vpc = new ec2.Vpc(stack, 'VPC', { maxAzs: 2, restrictDefaultSecurityGroup: false });\n\nconst params = new ParameterGroup(stack, 'Params', {\n  engine: DatabaseClusterEngine.auroraMysql({\n    version: AuroraMysqlEngineVersion.VER_3_03_0,\n  }),\n  description: 'A nice parameter group',\n  parameters: {\n    character_set_database: 'utf8mb4',\n  },\n});\n\nconst kmsKey = new kms.Key(stack, 'DbSecurity');\n\nconst instanceProps = {\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.BURSTABLE3, ec2.InstanceSize.MEDIUM),\n  isFromLegacyInstanceProps: true,\n};\nconst cluster = new DatabaseCluster(stack, 'Database', {\n  engine: DatabaseClusterEngine.auroraMysql({\n    version: AuroraMysqlEngineVersion.VER_3_03_0,\n  }),\n  credentials: Credentials.fromUsername('admin', { password: cdk.SecretValue.unsafePlainText('7959866cacc02c2d243ecfe177464fe6') }),\n  vpcSubnets: { subnetType: ec2.SubnetType.PUBLIC },\n  vpc,\n  writer: ClusterInstance.provisioned('Instance1', {\n    ...instanceProps,\n  }),\n  readers: [\n    ClusterInstance.provisioned('Instance2', {\n      ...instanceProps,\n    }),\n  ],\n  parameterGroup: params,\n  storageEncryptionKey: kmsKey,\n});\n\ncluster.connections.allowDefaultPortFromAnyIpv4('Open to the world');\n\nconst role = new iam.Role(stack, 'ClusterIamAccess', {\n  assumedBy: new iam.ServicePrincipal('ecs-tasks.amazonaws.com'),\n});\nconst clusterIamAuthArn = stack.formatArn({\n  service: 'rds-db',\n  resource: `dbuser:${cluster.clusterResourceIdentifier}`,\n  resourceName: 'db_user',\n});\nrole.addToPolicy(\n  new iam.PolicyStatement({\n    effect: iam.Effect.ALLOW,\n    actions: ['rds-db:connect'],\n    resources: [clusterIamAuthArn],\n  }),\n);\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"Vpc8378EB38\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"cdk-rds-read-replica/Vpc\"}]}}, \"VpcisolatedSubnet1SubnetE62B1B9B\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/17\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"isolated\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Isolated\"}, {\"Key\": \"Name\", \"Value\": \"cdk-rds-read-replica/Vpc/isolatedSubnet1\"}]}}, \"VpcisolatedSubnet1RouteTableE442650B\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"cdk-rds-read-replica/Vpc/isolatedSubnet1\"}]}}, \"VpcisolatedSubnet1RouteTableAssociationD259E31A\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcisolatedSubnet1RouteTableE442650B\"}, \"SubnetId\": {\"Ref\": \"VpcisolatedSubnet1SubnetE62B1B9B\"}}}, \"VpcisolatedSubnet2Subnet39217055\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/17\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"isolated\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Isolated\"}, {\"Key\": \"Name\", \"Value\": \"cdk-rds-read-replica/Vpc/isolatedSubnet2\"}]}}, \"VpcisolatedSubnet2RouteTable334F9764\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"cdk-rds-read-replica/Vpc/isolatedSubnet2\"}]}}, \"VpcisolatedSubnet2RouteTableAssociation25A4716F\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcisolatedSubnet2RouteTable334F9764\"}, \"SubnetId\": {\"Ref\": \"VpcisolatedSubnet2Subnet39217055\"}}}, \"PostgresSourceSubnetGroupBEEB1740\": {\"Type\": \"AWS::RDS::DBSubnetGroup\", \"Properties\": {\"DBSubnetGroupDescription\": \"Subnet group for PostgresSource database\", \"SubnetIds\": [{\"Ref\": \"VpcisolatedSubnet1SubnetE62B1B9B\"}, {\"Ref\": \"VpcisolatedSubnet2Subnet39217055\"}]}}, \"PostgresSourceSecurityGroup69289E68\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"Security group for PostgresSource database\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"VpcId\": {\"Ref\": \"Vpc8378EB38\"}}}, \"PostgresSourceSecret0A09A7AD\": {\"Type\": \"AWS::SecretsManager::Secret\", \"Properties\": {\"Description\": {\"Fn::Join\": [\"\", [\"Generated by the CDK for stack: \", {\"Ref\": \"AWS::StackName\"}]]}, \"GenerateSecretString\": {\"ExcludeCharacters\": \" %+~`#$&*()|[]{}:;<>?!'/@\\\"\\\\\", \"GenerateStringKey\": \"password\", \"PasswordLength\": 30, \"SecretStringTemplate\": \"{\\\"username\\\":\\\"postgres\\\"}\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"PostgresSourceSecretAttachmentE3C3B705\": {\"Type\": \"AWS::SecretsManager::SecretTargetAttachment\", \"Properties\": {\"SecretId\": {\"Ref\": \"PostgresSourceSecret0A09A7AD\"}, \"TargetId\": {\"Ref\": \"PostgresSourceEB66BFC9\"}, \"TargetType\": \"AWS::RDS::DBInstance\"}}, \"PostgresSourceEB66BFC9\": {\"Type\": \"AWS::RDS::DBInstance\", \"Properties\": {\"AllocatedStorage\": \"100\", \"BackupRetentionPeriod\": 5, \"CopyTagsToSnapshot\": true, \"DBInstanceClass\": \"db.t3.small\", \"DBSubnetGroupName\": {\"Ref\": \"PostgresSourceSubnetGroupBEEB1740\"}, \"Engine\": \"postgres\", \"EngineVersion\": \"15.2\", \"MasterUsername\": {\"Fn::Join\": [\"\", [\"{{resolve:secretsmanager:\", {\"Ref\": \"PostgresSourceSecret0A09A7AD\"}, \":SecretString:username::}}\"]]}, \"MasterUserPassword\": {\"Fn::Join\": [\"\", [\"{{resolve:secretsmanager:\", {\"Ref\": \"PostgresSourceSecret0A09A7AD\"}, \":SecretString:password::}}\"]]}, \"PubliclyAccessible\": false, \"StorageType\": \"gp2\", \"VPCSecurityGroups\": [{\"Fn::GetAtt\": [\"PostgresSourceSecurityGroup69289E68\", \"GroupId\"]}]}, \"UpdateReplacePolicy\": \"Snapshot\", \"DeletionPolicy\": \"Snapshot\"}, \"PostgresReplicaSubnetGroup301B59DA\": {\"Type\": \"AWS::RDS::DBSubnetGroup\", \"Properties\": {\"DBSubnetGroupDescription\": \"Subnet group for PostgresReplica database\", \"SubnetIds\": [{\"Ref\": \"VpcisolatedSubnet1SubnetE62B1B9B\"}, {\"Ref\": \"VpcisolatedSubnet2Subnet39217055\"}]}}, \"PostgresReplicaSecurityGroup5385C4C2\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"Security group for PostgresReplica database\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"VpcId\": {\"Ref\": \"Vpc8378EB38\"}}}, \"PostgresReplica23A3C738\": {\"Type\": \"AWS::RDS::DBInstance\", \"Properties\": {\"CopyTagsToSnapshot\": true, \"DBInstanceClass\": \"db.t3.small\", \"DBSubnetGroupName\": {\"Ref\": \"PostgresReplicaSubnetGroup301B59DA\"}, \"PubliclyAccessible\": false, \"SourceDBInstanceIdentifier\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":rds:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":db:\", {\"Ref\": \"PostgresSourceEB66BFC9\"}]]}, \"StorageType\": \"gp2\", \"VPCSecurityGroups\": [{\"Fn::GetAtt\": [\"PostgresReplicaSecurityGroup5385C4C2\", \"GroupId\"]}]}, \"UpdateReplacePolicy\": \"Snapshot\", \"DeletionPolicy\": \"Snapshot\"}, \"MysqlSourceSubnetGroup213E979B\": {\"Type\": \"AWS::RDS::DBSubnetGroup\", \"Properties\": {\"DBSubnetGroupDescription\": \"Subnet group for MysqlSource database\", \"SubnetIds\": [{\"Ref\": \"VpcisolatedSubnet1SubnetE62B1B9B\"}, {\"Ref\": \"VpcisolatedSubnet2Subnet39217055\"}]}}, \"MysqlSourceSecurityGroupC691E169\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"Security group for MysqlSource database\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"VpcId\": {\"Ref\": \"Vpc8378EB38\"}}}, \"MysqlSourceSecretB727C3F2\": {\"Type\": \"AWS::SecretsManager::Secret\", \"Properties\": {\"Description\": {\"Fn::Join\": [\"\", [\"Generated by the CDK for stack: \", {\"Ref\": \"AWS::StackName\"}]]}, \"GenerateSecretString\": {\"ExcludeCharacters\": \" %+~`#$&*()|[]{}:;<>?!'/@\\\"\\\\\", \"GenerateStringKey\": \"password\", \"PasswordLength\": 30, \"SecretStringTemplate\": \"{\\\"username\\\":\\\"admin\\\"}\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"MysqlSourceSecretAttachment5E4EDF73\": {\"Type\": \"AWS::SecretsManager::SecretTargetAttachment\", \"Properties\": {\"SecretId\": {\"Ref\": \"MysqlSourceSecretB727C3F2\"}, \"TargetId\": {\"Ref\": \"MysqlSource9A10350C\"}, \"TargetType\": \"AWS::RDS::DBInstance\"}}, \"MysqlSource9A10350C\": {\"Type\": \"AWS::RDS::DBInstance\", \"Properties\": {\"AllocatedStorage\": \"100\", \"BackupRetentionPeriod\": 5, \"CopyTagsToSnapshot\": true, \"DBInstanceClass\": \"db.t3.small\", \"DBSubnetGroupName\": {\"Ref\": \"MysqlSourceSubnetGroup213E979B\"}, \"Engine\": \"mysql\", \"EngineVersion\": \"8.0\", \"MasterUsername\": {\"Fn::Join\": [\"\", [\"{{resolve:secretsmanager:\", {\"Ref\": \"MysqlSourceSecretB727C3F2\"}, \":SecretString:username::}}\"]]}, \"MasterUserPassword\": {\"Fn::Join\": [\"\", [\"{{resolve:secretsmanager:\", {\"Ref\": \"MysqlSourceSecretB727C3F2\"}, \":SecretString:password::}}\"]]}, \"PubliclyAccessible\": false, \"StorageType\": \"gp2\", \"VPCSecurityGroups\": [{\"Fn::GetAtt\": [\"MysqlSourceSecurityGroupC691E169\", \"GroupId\"]}]}, \"UpdateReplacePolicy\": \"Snapshot\", \"DeletionPolicy\": \"Snapshot\"}, \"ReplicaParameterGroup4BE5EE70\": {\"Type\": \"AWS::RDS::DBParameterGroup\", \"Properties\": {\"Description\": \"Parameter group for mysql8.0\", \"Family\": \"mysql8.0\", \"Parameters\": {\"wait_timeout\": \"86400\"}}}, \"MysqlReplicaSubnetGroup79E1F72A\": {\"Type\": \"AWS::RDS::DBSubnetGroup\", \"Properties\": {\"DBSubnetGroupDescription\": \"Subnet group for MysqlReplica database\", \"SubnetIds\": [{\"Ref\": \"VpcisolatedSubnet1SubnetE62B1B9B\"}, {\"Ref\": \"VpcisolatedSubnet2Subnet39217055\"}]}}, \"MysqlReplicaSecurityGroup169FAFAA\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"Security group for MysqlReplica database\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"VpcId\": {\"Ref\": \"Vpc8378EB38\"}}}, \"MysqlReplica87D29F78\": {\"Type\": \"AWS::RDS::DBInstance\", \"Properties\": {\"BackupRetentionPeriod\": 3, \"CopyTagsToSnapshot\": true, \"DBInstanceClass\": \"db.t3.small\", \"DBParameterGroupName\": {\"Ref\": \"ReplicaParameterGroup4BE5EE70\"}, \"DBSubnetGroupName\": {\"Ref\": \"MysqlReplicaSubnetGroup79E1F72A\"}, \"PubliclyAccessible\": false, \"SourceDBInstanceIdentifier\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":rds:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":db:\", {\"Ref\": \"MysqlSource9A10350C\"}]]}, \"StorageType\": \"gp2\", \"VPCSecurityGroups\": [{\"Fn::GetAtt\": [\"MysqlReplicaSecurityGroup169FAFAA\", \"GroupId\"]}]}, \"UpdateReplacePolicy\": \"Snapshot\", \"DeletionPolicy\": \"Snapshot\"}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import { InstanceClass, InstanceSize, InstanceType, SubnetSelection, SubnetType, Vpc } from 'aws-cdk-lib/aws-ec2';\nimport { App, Duration, Stack, StackProps } from 'aws-cdk-lib';\nimport { Construct } from 'constructs';\nimport * as rds from 'aws-cdk-lib/aws-rds';\n\nclass TestStack extends Stack {\n  constructor(scope: Construct, id: string, props?: StackProps) {\n    super(scope, id, props);\n\n    const vpc = new Vpc(this, 'Vpc', {\n      restrictDefaultSecurityGroup: false,\n      maxAzs: 2,\n      subnetConfiguration: [\n        {\n          name: 'isolated',\n          subnetType: SubnetType.PRIVATE_ISOLATED,\n        },\n      ],\n    });\n\n    const instanceType = InstanceType.of(InstanceClass.T3, InstanceSize.SMALL);\n\n    const vpcSubnets: SubnetSelection = { subnetType: SubnetType.PRIVATE_ISOLATED };\n\n    const postgresSource = new rds.DatabaseInstance(this, 'PostgresSource', {\n      engine: rds.DatabaseInstanceEngine.postgres({ version: rds.PostgresEngineVersion.VER_15_2 }),\n      backupRetention: Duration.days(5),\n      instanceType,\n      vpc,\n      vpcSubnets,\n    });\n\n    new rds.DatabaseInstanceReadReplica(this, 'PostgresReplica', {\n      sourceDatabaseInstance: postgresSource,\n      instanceType,\n      vpc,\n      vpcSubnets,\n    });\n\n    const mysqlSource = new rds.DatabaseInstance(this, 'MysqlSource', {\n      engine: rds.DatabaseInstanceEngine.mysql({ version: rds.MysqlEngineVersion.VER_8_0 }),\n      backupRetention: Duration.days(5),\n      instanceType,\n      vpc,\n      vpcSubnets,\n    });\n\n    const parameterGroup = new rds.ParameterGroup(this, 'ReplicaParameterGroup', {\n      engine: rds.DatabaseInstanceEngine.mysql({ version: rds.MysqlEngineVersion.VER_8_0 }),\n      parameters: {\n        wait_timeout: '86400',\n      },\n    });\n\n    new rds.DatabaseInstanceReadReplica(this, 'MysqlReplica', {\n      sourceDatabaseInstance: mysqlSource,\n      backupRetention: Duration.days(3),\n      instanceType,\n      vpc,\n      vpcSubnets,\n      parameterGroup,\n    });\n  }\n}\n\nconst app = new App();\nnew TestStack(app, 'cdk-rds-read-replica');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"AnAmazingWebsiteProbablyCFDistribution47E3983B\": {\"Type\": \"AWS::CloudFront::Distribution\", \"Properties\": {\"DistributionConfig\": {\"DefaultCacheBehavior\": {\"AllowedMethods\": [\"GET\", \"HEAD\"], \"CachedMethods\": [\"GET\", \"HEAD\"], \"Compress\": true, \"ForwardedValues\": {\"Cookies\": {\"Forward\": \"none\"}, \"QueryString\": false}, \"TargetOriginId\": \"origin1\", \"ViewerProtocolPolicy\": \"redirect-to-https\"}, \"DefaultRootObject\": \"\", \"Enabled\": true, \"HttpVersion\": \"http2\", \"IPV6Enabled\": true, \"Origins\": [{\"ConnectionAttempts\": 3, \"ConnectionTimeout\": 10, \"CustomOriginConfig\": {\"HTTPPort\": 80, \"HTTPSPort\": 443, \"OriginKeepaliveTimeout\": 5, \"OriginProtocolPolicy\": \"https-only\", \"OriginReadTimeout\": 30, \"OriginSSLProtocols\": [\"TLSv1.2\"]}, \"DomainName\": \"brelandm.a2z.com\", \"Id\": \"origin1\", \"OriginCustomHeaders\": [{\"HeaderName\": \"X-Custom-Header\", \"HeaderValue\": \"somevalue\"}]}], \"PriceClass\": \"PriceClass_100\", \"ViewerCertificate\": {\"CloudFrontDefaultCertificate\": true}}}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "\nimport * as cdk from 'aws-cdk-lib';\nimport * as cloudfront from 'aws-cdk-lib/aws-cloudfront';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'aws-cdk-cloudfront-custom');\n\nnew cloudfront.CloudFrontWebDistribution(stack, 'AnAmazingWebsiteProbably', {\n  originConfigs: [\n    {\n      originHeaders: {\n        'X-Custom-Header': 'somevalue',\n      },\n      customOriginSource: {\n        domainName: 'brelandm.a2z.com',\n      },\n      behaviors: [\n        {\n          isDefaultBehavior: true,\n        },\n      ],\n    },\n  ],\n  defaultRootObject: '',\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"AwesomePublicKeyED3E7F55\": {\"Type\": \"AWS::CloudFront::PublicKey\", \"Properties\": {\"PublicKeyConfig\": {\"CallerReference\": \"c88e460888c5762c9c47ac0cdc669370d787fb2d9f\", \"EncodedKey\": \"-----BEGIN PUBLIC KEY-----\n      MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAudf8/iNkQgdvjEdm6xYS\n      JAyxd/kGTbJfQNg9YhInb7TSm0dGu0yx8yZ3fnpmxuRPqJIlaVr+fT4YRl71gEYa\n      dlhHmnVegyPNjP9dNqZ7zwNqMEPOPnS/NOHbJj1KYKpn1f8pPNycQ5MQCntKGnSj\n      6fc+nbcC0joDvGz80xuy1W4hLV9oC9c3GT26xfZb2jy9MVtA3cppNuTwqrFi3t6e\n      0iGpraxZlT5wewjZLpQkngqYr6s3aucPAZVsGTEYPo4nD5mswmtZOm+tgcOrivtD\n      /3sD/qZLQ6c5siqyS8aTraD6y+VXugujfarTU65IeZ6QAUbLMsWuZOIi5Jn8zAwx\n      NQIDAQAB\n      -----END PUBLIC KEY-----\n      \", \"Name\": \"awscdkcloudfrontcustomAwesomePublicKey0E83393B\"}}}, \"AwesomeKeyGroup3EF8348B\": {\"Type\": \"AWS::CloudFront::KeyGroup\", \"Properties\": {\"KeyGroupConfig\": {\"Items\": [{\"Ref\": \"AwesomePublicKeyED3E7F55\"}], \"Name\": \"awscdkcloudfrontcustomAwesomeKeyGroup73FD4DCA\"}}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as cdk from 'aws-cdk-lib';\nimport * as cloudfront from 'aws-cdk-lib/aws-cloudfront';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'aws-cdk-cloudfront-custom');\n\nnew cloudfront.KeyGroup(stack, 'AwesomeKeyGroup', {\n  items: [\n    new cloudfront.PublicKey(stack, 'AwesomePublicKey', {\n      encodedKey: `-----BEGIN PUBLIC KEY-----\n      MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAudf8/iNkQgdvjEdm6xYS\n      JAyxd/kGTbJfQNg9YhInb7TSm0dGu0yx8yZ3fnpmxuRPqJIlaVr+fT4YRl71gEYa\n      dlhHmnVegyPNjP9dNqZ7zwNqMEPOPnS/NOHbJj1KYKpn1f8pPNycQ5MQCntKGnSj\n      6fc+nbcC0joDvGz80xuy1W4hLV9oC9c3GT26xfZb2jy9MVtA3cppNuTwqrFi3t6e\n      0iGpraxZlT5wewjZLpQkngqYr6s3aucPAZVsGTEYPo4nD5mswmtZOm+tgcOrivtD\n      /3sD/qZLQ6c5siqyS8aTraD6y+VXugujfarTU65IeZ6QAUbLMsWuZOIi5Jn8zAwx\n      NQIDAQAB\n      -----END PUBLIC KEY-----\n      `,\n    }),\n  ],\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"bucket1D4C77784\": {\"Type\": \"AWS::S3::Bucket\", \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"bucket231DE1803\": {\"Type\": \"AWS::S3::Bucket\", \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"DistributionCFDistribution882A7313\": {\"Type\": \"AWS::CloudFront::Distribution\", \"Properties\": {\"DistributionConfig\": {\"DefaultCacheBehavior\": {\"AllowedMethods\": [\"GET\", \"HEAD\"], \"CachedMethods\": [\"GET\", \"HEAD\"], \"Compress\": true, \"ForwardedValues\": {\"Cookies\": {\"Forward\": \"none\"}, \"QueryString\": false}, \"TargetOriginId\": \"OriginGroup1\", \"ViewerProtocolPolicy\": \"redirect-to-https\"}, \"DefaultRootObject\": \"index.html\", \"Enabled\": true, \"HttpVersion\": \"http2\", \"IPV6Enabled\": true, \"OriginGroups\": {\"Items\": [{\"FailoverCriteria\": {\"StatusCodes\": {\"Items\": [500], \"Quantity\": 1}}, \"Id\": \"OriginGroup1\", \"Members\": {\"Items\": [{\"OriginId\": \"origin1\"}, {\"OriginId\": \"originSecondary1\"}], \"Quantity\": 2}}], \"Quantity\": 1}, \"Origins\": [{\"ConnectionAttempts\": 3, \"ConnectionTimeout\": 10, \"DomainName\": {\"Fn::GetAtt\": [\"bucket231DE1803\", \"RegionalDomainName\"]}, \"Id\": \"originSecondary1\", \"S3OriginConfig\": {}}, {\"ConnectionAttempts\": 3, \"ConnectionTimeout\": 10, \"DomainName\": {\"Fn::GetAtt\": [\"bucket1D4C77784\", \"RegionalDomainName\"]}, \"Id\": \"origin1\", \"S3OriginConfig\": {}}], \"PriceClass\": \"PriceClass_100\", \"ViewerCertificate\": {\"CloudFrontDefaultCertificate\": true}}}}}, \"Outputs\": {\"DistributionDomainName\": {\"Value\": {\"Fn::GetAtt\": [\"DistributionCFDistribution882A7313\", \"DomainName\"]}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as s3 from 'aws-cdk-lib/aws-s3';\nimport * as cdk from 'aws-cdk-lib';\nimport * as cloudfront from 'aws-cdk-lib/aws-cloudfront';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'integ-cloudfront-failover');\n\nconst dist = new cloudfront.CloudFrontWebDistribution(stack, 'Distribution', {\n  originConfigs: [{\n    behaviors: [{ isDefaultBehavior: true }],\n    s3OriginSource: {\n      s3BucketSource: new s3.Bucket(stack, 'bucket1'),\n    },\n    failoverS3OriginSource: {\n      s3BucketSource: new s3.Bucket(stack, 'bucket2'),\n    },\n    failoverCriteriaStatusCodes: [cloudfront.FailoverStatusCode.INTERNAL_SERVER_ERROR],\n  }],\n});\n\nnew cdk.CfnOutput(stack, 'DistributionDomainName', { value: dist.domainName });\n"}
{ "prompt": "{\"Resources\": {\"Bucket83908E77\": {\"Type\": \"AWS::S3::Bucket\", \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"MyDistributionCFDistributionDE147309\": {\"Type\": \"AWS::CloudFront::Distribution\", \"Properties\": {\"DistributionConfig\": {\"DefaultCacheBehavior\": {\"AllowedMethods\": [\"GET\", \"HEAD\"], \"CachedMethods\": [\"GET\", \"HEAD\"], \"Compress\": true, \"ForwardedValues\": {\"Cookies\": {\"Forward\": \"none\"}, \"QueryString\": false}, \"TargetOriginId\": \"origin1\", \"ViewerProtocolPolicy\": \"redirect-to-https\"}, \"DefaultRootObject\": \"index.html\", \"Enabled\": true, \"HttpVersion\": \"http2\", \"IPV6Enabled\": false, \"Origins\": [{\"ConnectionAttempts\": 3, \"ConnectionTimeout\": 10, \"DomainName\": {\"Fn::GetAtt\": [\"Bucket83908E77\", \"RegionalDomainName\"]}, \"Id\": \"origin1\", \"S3OriginConfig\": {}}], \"PriceClass\": \"PriceClass_100\", \"ViewerCertificate\": {\"CloudFrontDefaultCertificate\": true}}}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "\nimport * as s3 from 'aws-cdk-lib/aws-s3';\nimport * as cdk from 'aws-cdk-lib';\nimport * as cloudfront from 'aws-cdk-lib/aws-cloudfront';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'aws-cdk-cloudfront');\n\nconst sourceBucket = new s3.Bucket(stack, 'Bucket', {\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\n\nnew cloudfront.CloudFrontWebDistribution(stack, 'MyDistribution', {\n  originConfigs: [\n    {\n      s3OriginSource: {\n        s3BucketSource: sourceBucket,\n      },\n      behaviors: [{ isDefaultBehavior: true }],\n    },\n  ],\n  enableIpV6: false,\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"Bucket83908E77\": {\"Type\": \"AWS::S3::Bucket\", \"Properties\": {\"WebsiteConfiguration\": {\"ErrorDocument\": \"404.html\", \"IndexDocument\": \"index.html\"}}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"BucketPolicyE9A3008A\": {\"Type\": \"AWS::S3::BucketPolicy\", \"Properties\": {\"Bucket\": {\"Ref\": \"Bucket83908E77\"}, \"PolicyDocument\": {\"Statement\": [{\"Action\": \"s3:GetObject\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": \"*\"}, \"Resource\": {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"Bucket83908E77\", \"Arn\"]}, \"/*\"]]}}], \"Version\": \"2012-10-17\"}}}, \"DistributionCFDistribution882A7313\": {\"Type\": \"AWS::CloudFront::Distribution\", \"Properties\": {\"DistributionConfig\": {\"DefaultCacheBehavior\": {\"AllowedMethods\": [\"GET\", \"HEAD\"], \"CachedMethods\": [\"GET\", \"HEAD\"], \"Compress\": true, \"ForwardedValues\": {\"Cookies\": {\"Forward\": \"none\"}, \"QueryString\": false}, \"TargetOriginId\": \"origin1\", \"ViewerProtocolPolicy\": \"redirect-to-https\"}, \"DefaultRootObject\": \"index.html\", \"Enabled\": true, \"HttpVersion\": \"http2\", \"IPV6Enabled\": true, \"Origins\": [{\"ConnectionAttempts\": 3, \"ConnectionTimeout\": 10, \"CustomOriginConfig\": {\"HTTPPort\": 80, \"HTTPSPort\": 443, \"OriginKeepaliveTimeout\": 5, \"OriginProtocolPolicy\": \"http-only\", \"OriginReadTimeout\": 30, \"OriginSSLProtocols\": [\"TLSv1.2\"]}, \"DomainName\": {\"Fn::Select\": [2, {\"Fn::Split\": [\"/\", {\"Fn::GetAtt\": [\"Bucket83908E77\", \"WebsiteURL\"]}]}]}, \"Id\": \"origin1\"}], \"PriceClass\": \"PriceClass_200\", \"ViewerCertificate\": {\"CloudFrontDefaultCertificate\": true}}}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as s3 from 'aws-cdk-lib/aws-s3';\nimport { App, Stack } from 'aws-cdk-lib';\nimport { Construct } from 'constructs';\nimport * as cloudfront from 'aws-cdk-lib/aws-cloudfront';\n\nclass TestStack extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    const bucket = new s3.Bucket(this, 'Bucket', {\n      publicReadAccess: true,\n      websiteIndexDocument: 'index.html',\n      websiteErrorDocument: '404.html',\n    });\n\n    new cloudfront.CloudFrontWebDistribution(this, 'Distribution', {\n      viewerProtocolPolicy: cloudfront.ViewerProtocolPolicy.REDIRECT_TO_HTTPS,\n      priceClass: cloudfront.PriceClass.PRICE_CLASS_200,\n      originConfigs: [\n        {\n          behaviors: [{ isDefaultBehavior: true }],\n          customOriginSource: {\n            originProtocolPolicy: cloudfront.OriginProtocolPolicy.HTTP_ONLY,\n            domainName: bucket.bucketWebsiteDomainName,\n          },\n        },\n      ],\n    },\n    );\n  }\n}\n\nconst app = new App();\nnew TestStack(app, 'cloudfront-custom-s3-integ');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"Bucket83908E77\": {\"Type\": \"AWS::S3::Bucket\", \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"AnAmazingWebsiteProbablyCFDistribution47E3983B\": {\"Type\": \"AWS::CloudFront::Distribution\", \"Properties\": {\"DistributionConfig\": {\"DefaultCacheBehavior\": {\"AllowedMethods\": [\"GET\", \"HEAD\"], \"CachedMethods\": [\"GET\", \"HEAD\"], \"Compress\": true, \"ForwardedValues\": {\"Cookies\": {\"Forward\": \"none\"}, \"QueryString\": false}, \"TargetOriginId\": \"origin1\", \"ViewerProtocolPolicy\": \"redirect-to-https\"}, \"DefaultRootObject\": \"index.html\", \"Enabled\": true, \"HttpVersion\": \"http2\", \"IPV6Enabled\": true, \"Logging\": {\"Bucket\": {\"Fn::GetAtt\": [\"Bucket83908E77\", \"RegionalDomainName\"]}, \"IncludeCookies\": true, \"Prefix\": \"test-prefix\"}, \"Origins\": [{\"ConnectionAttempts\": 3, \"ConnectionTimeout\": 10, \"CustomOriginConfig\": {\"HTTPPort\": 80, \"HTTPSPort\": 443, \"OriginKeepaliveTimeout\": 5, \"OriginProtocolPolicy\": \"https-only\", \"OriginReadTimeout\": 30, \"OriginSSLProtocols\": [\"TLSv1.2\"]}, \"DomainName\": \"brelandm.a2z.com\", \"Id\": \"origin1\", \"OriginCustomHeaders\": [{\"HeaderName\": \"X-Custom-Header\", \"HeaderValue\": \"somevalue\"}]}], \"PriceClass\": \"PriceClass_100\", \"ViewerCertificate\": {\"CloudFrontDefaultCertificate\": true}}}}, \"AnAmazingWebsiteProbably2LoggingBucket222F7CE9\": {\"Type\": \"AWS::S3::Bucket\", \"Properties\": {\"BucketEncryption\": {\"ServerSideEncryptionConfiguration\": [{\"ServerSideEncryptionByDefault\": {\"SSEAlgorithm\": \"AES256\"}}]}}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"AnAmazingWebsiteProbably2CFDistribution7C1CCD12\": {\"Type\": \"AWS::CloudFront::Distribution\", \"Properties\": {\"DistributionConfig\": {\"DefaultCacheBehavior\": {\"AllowedMethods\": [\"GET\", \"HEAD\"], \"CachedMethods\": [\"GET\", \"HEAD\"], \"Compress\": true, \"ForwardedValues\": {\"Cookies\": {\"Forward\": \"none\"}, \"QueryString\": false}, \"TargetOriginId\": \"origin1\", \"ViewerProtocolPolicy\": \"redirect-to-https\"}, \"DefaultRootObject\": \"index.html\", \"Enabled\": true, \"HttpVersion\": \"http2\", \"IPV6Enabled\": true, \"Logging\": {\"Bucket\": {\"Fn::GetAtt\": [\"AnAmazingWebsiteProbably2LoggingBucket222F7CE9\", \"RegionalDomainName\"]}, \"IncludeCookies\": false}, \"Origins\": [{\"ConnectionAttempts\": 3, \"ConnectionTimeout\": 10, \"CustomOriginConfig\": {\"HTTPPort\": 80, \"HTTPSPort\": 443, \"OriginKeepaliveTimeout\": 5, \"OriginProtocolPolicy\": \"https-only\", \"OriginReadTimeout\": 30, \"OriginSSLProtocols\": [\"TLSv1.2\"]}, \"DomainName\": \"brelandm.a2z.com\", \"Id\": \"origin1\", \"OriginCustomHeaders\": [{\"HeaderName\": \"X-Custom-Header\", \"HeaderValue\": \"somevalue\"}]}], \"PriceClass\": \"PriceClass_100\", \"ViewerCertificate\": {\"CloudFrontDefaultCertificate\": true}}}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as s3 from 'aws-cdk-lib/aws-s3';\nimport * as cdk from 'aws-cdk-lib';\nimport * as cloudfront from 'aws-cdk-lib/aws-cloudfront';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'aws-cdk-cloudfront-custom');\n\nconst loggingBucket = new s3.Bucket(stack, 'Bucket', {\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\n\nnew cloudfront.CloudFrontWebDistribution(stack, 'AnAmazingWebsiteProbably', {\n  originConfigs: [\n    {\n      originHeaders: {\n        'X-Custom-Header': 'somevalue',\n      },\n      customOriginSource: {\n        domainName: 'brelandm.a2z.com',\n      },\n      behaviors: [\n        {\n          isDefaultBehavior: true,\n        },\n      ],\n    },\n  ],\n  loggingConfig: {\n    bucket: loggingBucket,\n    includeCookies: true,\n    prefix: 'test-prefix',\n  },\n});\n\nnew cloudfront.CloudFrontWebDistribution(stack, 'AnAmazingWebsiteProbably2', {\n  originConfigs: [\n    {\n      originHeaders: {\n        'X-Custom-Header': 'somevalue',\n      },\n      customOriginSource: {\n        domainName: 'brelandm.a2z.com',\n      },\n      behaviors: [\n        {\n          isDefaultBehavior: true,\n        },\n      ],\n    },\n  ],\n  loggingConfig: {},\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"AnAmazingWebsiteProbablyCFDistribution47E3983B\": {\"Type\": \"AWS::CloudFront::Distribution\", \"Properties\": {\"DistributionConfig\": {\"DefaultCacheBehavior\": {\"AllowedMethods\": [\"GET\", \"HEAD\"], \"CachedMethods\": [\"GET\", \"HEAD\"], \"Compress\": true, \"ForwardedValues\": {\"Cookies\": {\"Forward\": \"none\"}, \"QueryString\": false}, \"TargetOriginId\": \"origin1\", \"ViewerProtocolPolicy\": \"redirect-to-https\"}, \"DefaultRootObject\": \"index.html\", \"Enabled\": true, \"HttpVersion\": \"http2\", \"IPV6Enabled\": true, \"Origins\": [{\"ConnectionAttempts\": 3, \"ConnectionTimeout\": 10, \"CustomOriginConfig\": {\"HTTPPort\": 80, \"HTTPSPort\": 443, \"OriginKeepaliveTimeout\": 5, \"OriginProtocolPolicy\": \"https-only\", \"OriginReadTimeout\": 30, \"OriginSSLProtocols\": [\"TLSv1.2\"]}, \"DomainName\": \"brelandm.a2z.com\", \"Id\": \"origin1\", \"OriginCustomHeaders\": [{\"HeaderName\": \"X-Custom-Header\", \"HeaderValue\": \"somevalue\"}]}], \"PriceClass\": \"PriceClass_100\", \"ViewerCertificate\": {\"CloudFrontDefaultCertificate\": true}}}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "\nimport * as cdk from 'aws-cdk-lib';\nimport * as cloudfront from 'aws-cdk-lib/aws-cloudfront';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'aws-cdk-cloudfront-custom');\n\nnew cloudfront.CloudFrontWebDistribution(stack, 'AnAmazingWebsiteProbably', {\n  originConfigs: [\n    {\n      originHeaders: {\n        'X-Custom-Header': 'somevalue',\n      },\n      customOriginSource: {\n        domainName: 'brelandm.a2z.com',\n      },\n      behaviors: [\n        {\n          isDefaultBehavior: true,\n        },\n      ],\n    },\n  ],\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyPublicKey78071F3D\": {\"Type\": \"AWS::CloudFront::PublicKey\", \"Properties\": {\"PublicKeyConfig\": {\"CallerReference\": \"c8752fac3fe06fc93f3fbd12d7e0282d8967409e4d\", \"EncodedKey\": \"-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAudf8/iNkQgdvjEdm6xYS\nJAyxd/kGTbJfQNg9YhInb7TSm0dGu0yx8yZ3fnpmxuRPqJIlaVr+fT4YRl71gEYa\ndlhHmnVegyPNjP9dNqZ7zwNqMEPOPnS/NOHbJj1KYKpn1f8pPNycQ5MQCntKGnSj\n6fc+nbcC0joDvGz80xuy1W4hLV9oC9c3GT26xfZb2jy9MVtA3cppNuTwqrFi3t6e\n0iGpraxZlT5wewjZLpQkngqYr6s3aucPAZVsGTEYPo4nD5mswmtZOm+tgcOrivtD\n/3sD/qZLQ6c5siqyS8aTraD6y+VXugujfarTU65IeZ6QAUbLMsWuZOIi5Jn8zAwx\nNQIDAQAB\n-----END PUBLIC KEY-----\", \"Name\": \"integdistributionkeygroupMyPublicKeyC0F3B115\"}}}, \"MyKeyGroupAF22FD35\": {\"Type\": \"AWS::CloudFront::KeyGroup\", \"Properties\": {\"KeyGroupConfig\": {\"Items\": [{\"Ref\": \"MyPublicKey78071F3D\"}], \"Name\": \"integdistributionkeygroupMyKeyGroupF179E01A\"}}}, \"DistB3B78991\": {\"Type\": \"AWS::CloudFront::Distribution\", \"Properties\": {\"DistributionConfig\": {\"DefaultCacheBehavior\": {\"CachePolicyId\": \"658327ea-f89d-4fab-a63d-7e88639e58f6\", \"Compress\": true, \"TargetOriginId\": \"integdistributionkeygroupDistOrigin1B9677703\", \"TrustedKeyGroups\": [{\"Ref\": \"MyKeyGroupAF22FD35\"}], \"ViewerProtocolPolicy\": \"allow-all\"}, \"Enabled\": true, \"HttpVersion\": \"http2\", \"IPV6Enabled\": true, \"Origins\": [{\"CustomOriginConfig\": {\"OriginProtocolPolicy\": \"https-only\"}, \"DomainName\": \"www.example.com\", \"Id\": \"integdistributionkeygroupDistOrigin1B9677703\"}]}}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as cdk from 'aws-cdk-lib';\nimport { TestOrigin } from './test-origin';\nimport * as cloudfront from 'aws-cdk-lib/aws-cloudfront';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'integ-distribution-key-group');\nconst publicKey = `-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAudf8/iNkQgdvjEdm6xYS\nJAyxd/kGTbJfQNg9YhInb7TSm0dGu0yx8yZ3fnpmxuRPqJIlaVr+fT4YRl71gEYa\ndlhHmnVegyPNjP9dNqZ7zwNqMEPOPnS/NOHbJj1KYKpn1f8pPNycQ5MQCntKGnSj\n6fc+nbcC0joDvGz80xuy1W4hLV9oC9c3GT26xfZb2jy9MVtA3cppNuTwqrFi3t6e\n0iGpraxZlT5wewjZLpQkngqYr6s3aucPAZVsGTEYPo4nD5mswmtZOm+tgcOrivtD\n/3sD/qZLQ6c5siqyS8aTraD6y+VXugujfarTU65IeZ6QAUbLMsWuZOIi5Jn8zAwx\nNQIDAQAB\n-----END PUBLIC KEY-----`;\n\nnew cloudfront.Distribution(stack, 'Dist', {\n  defaultBehavior: {\n    origin: new TestOrigin('www.example.com'),\n    trustedKeyGroups: [\n      new cloudfront.KeyGroup(stack, 'MyKeyGroup', {\n        items: [\n          new cloudfront.PublicKey(stack, 'MyPublicKey', {\n            encodedKey: publicKey,\n          }),\n        ],\n      }),\n    ],\n  },\n});\n\napp.synth();"}
{ "prompt": "{\"Resources\": {\"Bucket83908E77\": {\"Type\": \"AWS::S3::Bucket\", \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"LambdaServiceRoleA8ED4D3B\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": [\"edgelambda.amazonaws.com\", \"lambda.amazonaws.com\"]}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"LambdaD247545B\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"foo\"}, \"Role\": {\"Fn::GetAtt\": [\"LambdaServiceRoleA8ED4D3B\", \"Arn\"]}, \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"LambdaServiceRoleA8ED4D3B\"]}, \"LambdaVersionFA49E61E\": {\"Type\": \"AWS::Lambda::Version\", \"Properties\": {\"FunctionName\": {\"Ref\": \"LambdaD247545B\"}}}, \"MyDistributionCFDistributionDE147309\": {\"Type\": \"AWS::CloudFront::Distribution\", \"Properties\": {\"DistributionConfig\": {\"DefaultCacheBehavior\": {\"AllowedMethods\": [\"GET\", \"HEAD\"], \"CachedMethods\": [\"GET\", \"HEAD\"], \"Compress\": true, \"ForwardedValues\": {\"Cookies\": {\"Forward\": \"none\"}, \"QueryString\": false}, \"LambdaFunctionAssociations\": [{\"EventType\": \"origin-request\", \"LambdaFunctionARN\": {\"Ref\": \"LambdaVersionFA49E61E\"}}], \"TargetOriginId\": \"origin1\", \"ViewerProtocolPolicy\": \"redirect-to-https\"}, \"DefaultRootObject\": \"index.html\", \"Enabled\": true, \"HttpVersion\": \"http2\", \"IPV6Enabled\": true, \"Origins\": [{\"ConnectionAttempts\": 3, \"ConnectionTimeout\": 10, \"DomainName\": {\"Fn::GetAtt\": [\"Bucket83908E77\", \"RegionalDomainName\"]}, \"Id\": \"origin1\", \"S3OriginConfig\": {}}], \"PriceClass\": \"PriceClass_100\", \"ViewerCertificate\": {\"CloudFrontDefaultCertificate\": true}}}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as lambda from 'aws-cdk-lib/aws-lambda';\nimport * as s3 from 'aws-cdk-lib/aws-s3';\nimport * as cdk from 'aws-cdk-lib';\nimport * as cloudfront from 'aws-cdk-lib/aws-cloudfront';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'aws-cdk-cloudfront');\n\nconst sourceBucket = new s3.Bucket(stack, 'Bucket', {\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\n\nconst lambdaFunction = new lambda.Function(stack, 'Lambda', {\n  code: lambda.Code.fromInline('foo'),\n  handler: 'index.handler',\n  runtime: lambda.Runtime.NODEJS_14_X,\n});\n\nconst lambdaVersion = new lambda.Version(stack, 'LambdaVersion', {\n  lambda: lambdaFunction,\n});\n\nnew cloudfront.CloudFrontWebDistribution(stack, 'MyDistribution', {\n  originConfigs: [\n    {\n      s3OriginSource: {\n        s3BucketSource: sourceBucket,\n      },\n      behaviors: [{\n        isDefaultBehavior: true,\n        lambdaFunctionAssociations: [{\n          eventType: cloudfront.LambdaEdgeEventType.ORIGIN_REQUEST,\n          lambdaFunction: lambdaVersion,\n        }],\n      }],\n    },\n  ],\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"LambdaServiceRoleA8ED4D3B\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": [\"edgelambda.amazonaws.com\", \"lambda.amazonaws.com\"]}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"LambdaD247545B\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"foo\"}, \"Role\": {\"Fn::GetAtt\": [\"LambdaServiceRoleA8ED4D3B\", \"Arn\"]}, \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"LambdaServiceRoleA8ED4D3B\"]}, \"LambdaCurrentVersionDF706F6A1ee13d0fa54e9f5621e8c7b616fc53fc\": {\"Type\": \"AWS::Lambda::Version\", \"Properties\": {\"FunctionName\": {\"Ref\": \"LambdaD247545B\"}}}, \"DistB3B78991\": {\"Type\": \"AWS::CloudFront::Distribution\", \"Properties\": {\"DistributionConfig\": {\"DefaultCacheBehavior\": {\"CachePolicyId\": \"4135ea2d-6df8-44a3-9df3-4b5a84be39ad\", \"Compress\": true, \"LambdaFunctionAssociations\": [{\"EventType\": \"origin-request\", \"LambdaFunctionARN\": {\"Ref\": \"LambdaCurrentVersionDF706F6A1ee13d0fa54e9f5621e8c7b616fc53fc\"}}], \"TargetOriginId\": \"integdistributionlambdaDistOrigin133A13098\", \"ViewerProtocolPolicy\": \"allow-all\"}, \"Enabled\": true, \"HttpVersion\": \"http2\", \"IPV6Enabled\": true, \"Origins\": [{\"CustomOriginConfig\": {\"OriginProtocolPolicy\": \"https-only\"}, \"DomainName\": \"www.example.com\", \"Id\": \"integdistributionlambdaDistOrigin133A13098\"}]}}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as lambda from 'aws-cdk-lib/aws-lambda';\nimport * as cdk from 'aws-cdk-lib';\nimport { TestOrigin } from './test-origin';\nimport * as cloudfront from 'aws-cdk-lib/aws-cloudfront';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'integ-distribution-lambda', { env: { region: 'us-east-1' } });\n\nconst lambdaFunction = new lambda.Function(stack, 'Lambda', {\n  code: lambda.Code.fromInline('foo'),\n  handler: 'index.handler',\n  runtime: lambda.Runtime.NODEJS_14_X,\n});\n\nnew cloudfront.Distribution(stack, 'Dist', {\n  defaultBehavior: {\n    origin: new TestOrigin('www.example.com'),\n    cachePolicy: cloudfront.CachePolicy.CACHING_DISABLED,\n    edgeLambdas: [{\n      functionVersion: lambdaFunction.currentVersion,\n      eventType: cloudfront.LambdaEdgeEventType.ORIGIN_REQUEST,\n    }],\n  },\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"AnAmazingWebsiteProbablyCFDistribution47E3983B\": {\"Type\": \"AWS::CloudFront::Distribution\", \"Properties\": {\"DistributionConfig\": {\"Aliases\": [\"test.test.com\"], \"DefaultCacheBehavior\": {\"AllowedMethods\": [\"GET\", \"HEAD\"], \"CachedMethods\": [\"GET\", \"HEAD\"], \"Compress\": true, \"ForwardedValues\": {\"Cookies\": {\"Forward\": \"none\"}, \"QueryString\": false}, \"TargetOriginId\": \"origin1\", \"ViewerProtocolPolicy\": \"redirect-to-https\"}, \"DefaultRootObject\": \"index.html\", \"Enabled\": true, \"HttpVersion\": \"http2\", \"IPV6Enabled\": true, \"Origins\": [{\"ConnectionAttempts\": 3, \"ConnectionTimeout\": 10, \"CustomOriginConfig\": {\"HTTPPort\": 80, \"HTTPSPort\": 443, \"OriginKeepaliveTimeout\": 5, \"OriginProtocolPolicy\": \"https-only\", \"OriginReadTimeout\": 30, \"OriginSSLProtocols\": [\"TLSv1.2\"]}, \"DomainName\": \"brelandm.a2z.com\", \"Id\": \"origin1\", \"OriginCustomHeaders\": [{\"HeaderName\": \"X-Custom-Header\", \"HeaderValue\": \"somevalue\"}]}], \"PriceClass\": \"PriceClass_100\", \"ViewerCertificate\": {\"AcmCertificateArn\": \"arn:aws:acm:us-east-1:1111111:certificate/11-3336f1-44483d-adc7-9cd375c5169d\", \"MinimumProtocolVersion\": \"TLSv1\", \"SslSupportMethod\": \"sni-only\"}}}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as cdk from 'aws-cdk-lib';\nimport * as cloudfront from 'aws-cdk-lib/aws-cloudfront';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'aws-cdk-cloudfront-custom');\n\nnew cloudfront.CloudFrontWebDistribution(stack, 'AnAmazingWebsiteProbably', {\n  originConfigs: [\n    {\n      originHeaders: {\n        'X-Custom-Header': 'somevalue',\n      },\n      customOriginSource: {\n        domainName: 'brelandm.a2z.com',\n      },\n      behaviors: [\n        {\n          isDefaultBehavior: true,\n        },\n      ],\n    },\n  ],\n  aliasConfiguration: {\n    acmCertRef: 'arn:aws:acm:us-east-1:1111111:certificate/11-3336f1-44483d-adc7-9cd375c5169d',\n    names: ['test.test.com'],\n    sslMethod: cloudfront.SSLMethod.SNI,\n    securityPolicy: cloudfront.SecurityPolicyProtocol.TLS_V1,\n  },\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyDistLoggingBucket9B8976BC\": {\"Type\": \"AWS::S3::Bucket\", \"Properties\": {\"BucketEncryption\": {\"ServerSideEncryptionConfiguration\": [{\"ServerSideEncryptionByDefault\": {\"SSEAlgorithm\": \"AES256\"}}]}, \"OwnershipControls\": {\"Rules\": [{\"ObjectOwnership\": \"ObjectWriter\"}]}}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"MyDistDB88FD9A\": {\"Type\": \"AWS::CloudFront::Distribution\", \"Properties\": {\"DistributionConfig\": {\"Comment\": \"a test\", \"DefaultCacheBehavior\": {\"CachePolicyId\": \"658327ea-f89d-4fab-a63d-7e88639e58f6\", \"Compress\": true, \"TargetOriginId\": \"integdistributionextensiveMyDistOrigin185F089B3\", \"ViewerProtocolPolicy\": \"allow-all\"}, \"DefaultRootObject\": \"index.html\", \"Enabled\": true, \"HttpVersion\": \"http2\", \"IPV6Enabled\": true, \"Logging\": {\"Bucket\": {\"Fn::GetAtt\": [\"MyDistLoggingBucket9B8976BC\", \"RegionalDomainName\"]}, \"IncludeCookies\": true, \"Prefix\": \"logs/\"}, \"Origins\": [{\"CustomOriginConfig\": {\"OriginProtocolPolicy\": \"https-only\"}, \"DomainName\": \"www.example.com\", \"Id\": \"integdistributionextensiveMyDistOrigin185F089B3\", \"OriginShield\": {\"Enabled\": true, \"OriginShieldRegion\": \"us-west-2\"}}], \"PriceClass\": \"PriceClass_100\", \"Restrictions\": {\"GeoRestriction\": {\"Locations\": [\"US\", \"GB\"], \"RestrictionType\": \"whitelist\"}}}}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as cdk from 'aws-cdk-lib';\nimport { TestOrigin } from './test-origin';\nimport * as cloudfront from 'aws-cdk-lib/aws-cloudfront';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'integ-distribution-extensive');\n\nnew cloudfront.Distribution(stack, 'MyDist', {\n  defaultBehavior: {\n    origin: new TestOrigin('www.example.com', {\n      originShieldRegion: 'us-west-2',\n    }),\n  },\n  comment: 'a test',\n  defaultRootObject: 'index.html',\n  enabled: true,\n  enableIpv6: true,\n  enableLogging: true,\n  geoRestriction: cloudfront.GeoRestriction.whitelist('US', 'GB'),\n  httpVersion: cloudfront.HttpVersion.HTTP2,\n  logFilePrefix: 'logs/',\n  logIncludesCookies: true,\n  priceClass: cloudfront.PriceClass.PRICE_CLASS_100,\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"Function76856677\": {\"Type\": \"AWS::CloudFront::Function\", \"Properties\": {\"Name\": \"eu-west-1integdistributionfunctionFunctionDCD62A02\", \"AutoPublish\": true, \"FunctionCode\": \"function handler(event) { return event.request }\", \"FunctionConfig\": {\"Comment\": \"eu-west-1integdistributionfunctionFunctionDCD62A02\", \"Runtime\": \"cloudfront-js-1.0\"}}}, \"DistB3B78991\": {\"Type\": \"AWS::CloudFront::Distribution\", \"Properties\": {\"DistributionConfig\": {\"DefaultCacheBehavior\": {\"CachePolicyId\": \"4135ea2d-6df8-44a3-9df3-4b5a84be39ad\", \"Compress\": true, \"FunctionAssociations\": [{\"EventType\": \"viewer-request\", \"FunctionARN\": {\"Fn::GetAtt\": [\"Function76856677\", \"FunctionARN\"]}}], \"TargetOriginId\": \"integdistributionfunctionDistOrigin1D1E9DF17\", \"ViewerProtocolPolicy\": \"allow-all\"}, \"Enabled\": true, \"HttpVersion\": \"http2\", \"IPV6Enabled\": true, \"Origins\": [{\"CustomOriginConfig\": {\"OriginProtocolPolicy\": \"https-only\"}, \"DomainName\": \"www.example.com\", \"Id\": \"integdistributionfunctionDistOrigin1D1E9DF17\"}]}}}}, \"Outputs\": {\"FunctionArn\": {\"Value\": {\"Fn::GetAtt\": [\"Function76856677\", \"FunctionARN\"]}}, \"FunctionStage\": {\"Value\": {\"Fn::GetAtt\": [\"Function76856677\", \"Stage\"]}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as cdk from 'aws-cdk-lib';\nimport { TestOrigin } from './test-origin';\nimport * as cloudfront from 'aws-cdk-lib/aws-cloudfront';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'integ-distribution-function', { env: { region: 'eu-west-1' } });\n\nconst cfFunction = new cloudfront.Function(stack, 'Function', {\n  code: cloudfront.FunctionCode.fromInline('function handler(event) { return event.request }'),\n});\n\nnew cloudfront.Distribution(stack, 'Dist', {\n  defaultBehavior: {\n    origin: new TestOrigin('www.example.com'),\n    cachePolicy: cloudfront.CachePolicy.CACHING_DISABLED,\n    functionAssociations: [{\n      function: cfFunction,\n      eventType: cloudfront.FunctionEventType.VIEWER_REQUEST,\n    }],\n  },\n});\n\nnew cdk.CfnOutput(stack, 'FunctionArn', { value: cfFunction.functionArn });\nnew cdk.CfnOutput(stack, 'FunctionStage', { value: cfFunction.functionStage });\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"Bucket83908E77\": {\"Type\": \"AWS::S3::Bucket\", \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"MyDistributionCFDistributionDE147309\": {\"Type\": \"AWS::CloudFront::Distribution\", \"Properties\": {\"DistributionConfig\": {\"DefaultCacheBehavior\": {\"AllowedMethods\": [\"GET\", \"HEAD\"], \"CachedMethods\": [\"GET\", \"HEAD\"], \"Compress\": true, \"ForwardedValues\": {\"Cookies\": {\"Forward\": \"none\"}, \"QueryString\": false}, \"TargetOriginId\": \"origin1\", \"ViewerProtocolPolicy\": \"redirect-to-https\"}, \"DefaultRootObject\": \"index.html\", \"Enabled\": true, \"HttpVersion\": \"http2\", \"IPV6Enabled\": true, \"Origins\": [{\"ConnectionAttempts\": 3, \"ConnectionTimeout\": 10, \"DomainName\": {\"Fn::GetAtt\": [\"Bucket83908E77\", \"RegionalDomainName\"]}, \"Id\": \"origin1\", \"S3OriginConfig\": {}}], \"PriceClass\": \"PriceClass_100\", \"Restrictions\": {\"GeoRestriction\": {\"Locations\": [\"US\", \"GB\"], \"RestrictionType\": \"whitelist\"}}, \"ViewerCertificate\": {\"CloudFrontDefaultCertificate\": true}}}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as s3 from 'aws-cdk-lib/aws-s3';\nimport * as cdk from 'aws-cdk-lib';\nimport * as cloudfront from 'aws-cdk-lib/aws-cloudfront';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'cloudfront-geo-restrictions');\n\nconst sourceBucket = new s3.Bucket(stack, 'Bucket', {\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\n\nnew cloudfront.CloudFrontWebDistribution(stack, 'MyDistribution', {\n  originConfigs: [\n    {\n      s3OriginSource: {\n        s3BucketSource: sourceBucket,\n      },\n      behaviors: [{ isDefaultBehavior: true }],\n    },\n  ],\n  geoRestriction: cloudfront.GeoRestriction.allowlist('US', 'GB'),\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"Bucket83908E77\": {\"Type\": \"AWS::S3::Bucket\", \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"MyDistributionCFDistributionDE147309\": {\"Type\": \"AWS::CloudFront::Distribution\", \"Properties\": {\"DistributionConfig\": {\"DefaultCacheBehavior\": {\"AllowedMethods\": [\"GET\", \"HEAD\"], \"CachedMethods\": [\"GET\", \"HEAD\"], \"Compress\": true, \"ForwardedValues\": {\"Cookies\": {\"Forward\": \"none\"}, \"QueryString\": false}, \"TargetOriginId\": \"origin1\", \"ViewerProtocolPolicy\": \"redirect-to-https\"}, \"DefaultRootObject\": \"index.html\", \"Enabled\": true, \"HttpVersion\": \"http2\", \"IPV6Enabled\": true, \"Origins\": [{\"ConnectionAttempts\": 3, \"ConnectionTimeout\": 10, \"DomainName\": {\"Fn::GetAtt\": [\"Bucket83908E77\", \"RegionalDomainName\"]}, \"Id\": \"origin1\", \"S3OriginConfig\": {}}], \"PriceClass\": \"PriceClass_100\", \"ViewerCertificate\": {\"CloudFrontDefaultCertificate\": true}}}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "\nimport * as s3 from 'aws-cdk-lib/aws-s3';\nimport * as cdk from 'aws-cdk-lib';\nimport * as cloudfront from 'aws-cdk-lib/aws-cloudfront';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'aws-cdk-cloudfront');\n\nconst sourceBucket = new s3.Bucket(stack, 'Bucket', {\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\n\nnew cloudfront.CloudFrontWebDistribution(stack, 'MyDistribution', {\n  originConfigs: [\n    {\n      s3OriginSource: {\n        s3BucketSource: sourceBucket,\n      },\n      behaviors: [{ isDefaultBehavior: true }],\n    },\n  ],\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"Bucket83908E77\": {\"Type\": \"AWS::S3::Bucket\", \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"BucketPolicyE9A3008A\": {\"Type\": \"AWS::S3::BucketPolicy\", \"Properties\": {\"Bucket\": {\"Ref\": \"Bucket83908E77\"}, \"PolicyDocument\": {\"Statement\": [{\"Action\": \"s3:GetObject\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::cloudfront:user/CloudFront Origin Access Identity \", {\"Ref\": \"OAI\"}]]}}, \"Resource\": {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"Bucket83908E77\", \"Arn\"]}, \"/*\"]]}}], \"Version\": \"2012-10-17\"}}}, \"OAI\": {\"Type\": \"AWS::CloudFront::CloudFrontOriginAccessIdentity\", \"Properties\": {\"CloudFrontOriginAccessIdentityConfig\": {\"Comment\": \"Allows CloudFront to reach the bucket!\"}}}, \"DistributionCFDistribution882A7313\": {\"Type\": \"AWS::CloudFront::Distribution\", \"Properties\": {\"DistributionConfig\": {\"DefaultCacheBehavior\": {\"AllowedMethods\": [\"GET\", \"HEAD\"], \"CachedMethods\": [\"GET\", \"HEAD\"], \"Compress\": true, \"ForwardedValues\": {\"Cookies\": {\"Forward\": \"none\"}, \"QueryString\": false}, \"TargetOriginId\": \"origin1\", \"ViewerProtocolPolicy\": \"redirect-to-https\"}, \"DefaultRootObject\": \"index.html\", \"Enabled\": true, \"HttpVersion\": \"http2\", \"IPV6Enabled\": true, \"Origins\": [{\"ConnectionAttempts\": 3, \"ConnectionTimeout\": 10, \"DomainName\": {\"Fn::GetAtt\": [\"Bucket83908E77\", \"RegionalDomainName\"]}, \"Id\": \"origin1\", \"S3OriginConfig\": {\"OriginAccessIdentity\": {\"Fn::Join\": [\"\", [\"origin-access-identity/cloudfront/\", {\"Ref\": \"OAI\"}]]}}}], \"PriceClass\": \"PriceClass_100\", \"ViewerCertificate\": {\"CloudFrontDefaultCertificate\": true}}}}}, \"Outputs\": {\"DistributionDomainName\": {\"Value\": {\"Fn::GetAtt\": [\"DistributionCFDistribution882A7313\", \"DomainName\"]}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as s3 from 'aws-cdk-lib/aws-s3';\nimport * as cdk from 'aws-cdk-lib';\nimport * as cloudfront from 'aws-cdk-lib/aws-cloudfront';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'integ-cloudfront-s3');\n\nconst bucket = new s3.Bucket(stack, 'Bucket', { removalPolicy: cdk.RemovalPolicy.DESTROY });\nconst oai = new cloudfront.CfnCloudFrontOriginAccessIdentity(stack, 'OAI', {\n  cloudFrontOriginAccessIdentityConfig: {\n    comment: 'Allows CloudFront to reach the bucket!',\n  },\n});\n\nconst oaiImported = cloudfront.OriginAccessIdentity.fromOriginAccessIdentityId(\n  stack,\n  'OAIImported',\n  oai.ref,\n);\n\nconst dist = new cloudfront.CloudFrontWebDistribution(stack, 'Distribution', {\n  originConfigs: [{\n    behaviors: [{ isDefaultBehavior: true }],\n    s3OriginSource: {\n      s3BucketSource: bucket,\n      originAccessIdentity: oaiImported,\n    },\n  }],\n});\n\nnew cdk.CfnOutput(stack, 'DistributionDomainName', { value: dist.domainName });\n"}
{ "prompt": "{\"Resources\": {\"MyUserDC45028B\": {\"Type\": \"AWS::IAM::User\"}, \"MyUserDefaultPolicy7B897426\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"ecr:BatchCheckLayerAvailability\", \"ecr:BatchGetImage\", \"ecr:GetDownloadUrlForLayer\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":ecr:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":repository/\", {\"Fn::Sub\": \"cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}\"}]]}}, {\"Action\": \"ecr:GetAuthorizationToken\", \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyUserDefaultPolicy7B897426\", \"Users\": [{\"Ref\": \"MyUserDC45028B\"}]}}}, \"Outputs\": {\"ImageUri\": {\"Value\": {\"Fn::Sub\": \"${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:0a3355be12051c9984bf2b0b2bba4e6ea535968e5b6e7396449701732fe5ed14\"}}, \"ImageUri2\": {\"Value\": {\"Fn::Sub\": \"${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:0a3355be12051c9984bf2b0b2bba4e6ea535968e5b6e7396449701732fe5ed14\"}}, \"ImageUri3\": {\"Value\": {\"Fn::Sub\": \"${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:394b24fcdc153a83b1fc400bf2e812ee67e3a5ffafdf977d531cfe2187d95f38\"}}, \"ImageUri4\": {\"Value\": {\"Fn::Sub\": \"${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:fa08370824fa0a7eab2c59a4f371fe7631019044d6c906b4268193120dc213b4\"}}, \"ImageUri5\": {\"Value\": {\"Fn::Sub\": \"${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:60dea2e16e94d1977b92fe03fa7085fea446233f1fe499702b69593438baa59f\"}}, \"ImageUri6\": {\"Value\": {\"Fn::Sub\": \"${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:0a3355be12051c9984bf2b0b2bba4e6ea535968e5b6e7396449701732fe5ed14\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as path from 'path';\nimport * as iam from 'aws-cdk-lib/aws-iam';\nimport * as cdk from 'aws-cdk-lib';\nimport * as assets from 'aws-cdk-lib/aws-ecr-assets';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'integ-assets-docker');\n\nconst asset = new assets.DockerImageAsset(stack, 'DockerImage', {\n  directory: path.join(__dirname, 'demo-image'),\n});\n\nconst asset2 = new assets.DockerImageAsset(stack, 'DockerImage2', {\n  directory: path.join(__dirname, 'demo-image'),\n});\n\nconst asset3 = new assets.DockerImageAsset(stack, 'DockerImage3', {\n  directory: path.join(__dirname, 'demo-image'),\n  platform: assets.Platform.LINUX_ARM64,\n});\n\nconst asset4 = new assets.DockerImageAsset(stack, 'DockerImage4', {\n  directory: path.join(__dirname, 'demo-image'),\n  outputs: ['type=docker'],\n});\n\nconst asset5 = new assets.DockerImageAsset(stack, 'DockerImage5', {\n  directory: path.join(__dirname, 'demo-image-secret'),\n  buildSecrets: {\n    mysecret: cdk.DockerBuildSecret.fromSrc('index.py'),\n  },\n});\n\nconst asset6 = new assets.DockerImageAsset(stack, 'DockerImage6', {\n  directory: path.join(__dirname, 'demo-image'),\n  cacheTo: { type: 'inline' },\n});\n\nconst user = new iam.User(stack, 'MyUser');\nasset.repository.grantPull(user);\nasset2.repository.grantPull(user);\nasset3.repository.grantPull(user);\nasset4.repository.grantPull(user);\nasset5.repository.grantPull(user);\nasset6.repository.grantPull(user);\n\nnew cdk.CfnOutput(stack, 'ImageUri', { value: asset.imageUri });\nnew cdk.CfnOutput(stack, 'ImageUri2', { value: asset2.imageUri });\nnew cdk.CfnOutput(stack, 'ImageUri3', { value: asset3.imageUri });\nnew cdk.CfnOutput(stack, 'ImageUri4', { value: asset4.imageUri });\nnew cdk.CfnOutput(stack, 'ImageUri5', { value: asset5.imageUri });\nnew cdk.CfnOutput(stack, 'ImageUri6', { value: asset6.imageUri });\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"emailLambdaServiceRole7569D9F6\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"emailLambda61F82360\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"exports.handler = function(event, ctx, cb) { console.log(\\\"Mocked custom email send\\\");return cb(null, \\\"success\\\"); }\"}, \"Role\": {\"Fn::GetAtt\": [\"emailLambdaServiceRole7569D9F6\", \"Arn\"]}, \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"emailLambdaServiceRole7569D9F6\"]}, \"keyFEDD6EC0\": {\"Type\": \"AWS::KMS::Key\", \"Properties\": {\"KeyPolicy\": {\"Statement\": [{\"Action\": \"kms:*\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}, \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"poolCustomEmailSenderCognitoE3D88E99\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"emailLambda61F82360\", \"Arn\"]}, \"Principal\": \"cognito-idp.amazonaws.com\", \"SourceArn\": {\"Fn::GetAtt\": [\"pool056F3F7E\", \"Arn\"]}}}, \"pool056F3F7E\": {\"Type\": \"AWS::Cognito::UserPool\", \"Properties\": {\"AccountRecoverySetting\": {\"RecoveryMechanisms\": [{\"Name\": \"verified_phone_number\", \"Priority\": 1}, {\"Name\": \"verified_email\", \"Priority\": 2}]}, \"AdminCreateUserConfig\": {\"AllowAdminCreateUserOnly\": false}, \"AutoVerifiedAttributes\": [\"email\"], \"EmailVerificationMessage\": \"The verification code to your new account is {####}\", \"EmailVerificationSubject\": \"Verify your new account\", \"LambdaConfig\": {\"CustomEmailSender\": {\"LambdaArn\": {\"Fn::GetAtt\": [\"emailLambda61F82360\", \"Arn\"]}, \"LambdaVersion\": \"V1_0\"}, \"KMSKeyID\": {\"Fn::GetAtt\": [\"keyFEDD6EC0\", \"Arn\"]}}, \"SmsVerificationMessage\": \"The verification code to your new account is {####}\", \"UsernameAttributes\": [\"email\"], \"VerificationMessageTemplate\": {\"DefaultEmailOption\": \"CONFIRM_WITH_CODE\", \"EmailMessage\": \"The verification code to your new account is {####}\", \"EmailSubject\": \"Verify your new account\", \"SmsMessage\": \"The verification code to your new account is {####}\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"poolclient2623294C\": {\"Type\": \"AWS::Cognito::UserPoolClient\", \"Properties\": {\"UserPoolId\": {\"Ref\": \"pool056F3F7E\"}, \"AllowedOAuthFlows\": [\"implicit\", \"code\"], \"AllowedOAuthFlowsUserPoolClient\": true, \"AllowedOAuthScopes\": [\"profile\", \"phone\", \"email\", \"openid\", \"aws.cognito.signin.user.admin\"], \"CallbackURLs\": [\"https://example.com\"], \"ExplicitAuthFlows\": [\"ALLOW_USER_SRP_AUTH\", \"ALLOW_REFRESH_TOKEN_AUTH\"], \"SupportedIdentityProviders\": [\"COGNITO\"]}}}, \"Outputs\": {\"UserPoolId\": {\"Value\": {\"Ref\": \"pool056F3F7E\"}}, \"ClientId\": {\"Value\": {\"Ref\": \"poolclient2623294C\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as kms from 'aws-cdk-lib/aws-kms';\nimport * as lambda from 'aws-cdk-lib/aws-lambda';\nimport { App, CfnOutput, RemovalPolicy, Stack } from 'aws-cdk-lib';\nimport { UserPool } from 'aws-cdk-lib/aws-cognito';\n\n/*\n * Stack verification steps\n * * Sign up to the created user pool using an email address as the username, and password.\n * * Verify the CustomEmailSender lambda was called via logged message in CloudWatch.\n */\nconst app = new App();\nconst stack = new Stack(app, 'integ-user-pool-custom-sender');\n\nconst customSenderLambda = new lambda.Function(stack, 'emailLambda', {\n  runtime: lambda.Runtime.NODEJS_14_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromInline('exports.handler = function(event, ctx, cb) { console.log(\"Mocked custom email send\");return cb(null, \"success\"); }'),\n});\n\nconst userpool = new UserPool(stack, 'pool', {\n  autoVerify: {\n    email: true,\n  },\n  selfSignUpEnabled: true,\n  signInAliases: {\n    email: true,\n  },\n  customSenderKmsKey: new kms.Key(stack, 'key'),\n  lambdaTriggers: {\n    customEmailSender: customSenderLambda,\n  },\n  removalPolicy: RemovalPolicy.DESTROY,\n});\n\nconst client = userpool.addClient('client', {\n  authFlows: {\n    userSrp: true,\n  },\n});\n\nnew CfnOutput(stack, 'UserPoolId', {\n  value: userpool.userPoolId,\n});\n\nnew CfnOutput(stack, 'ClientId', {\n  value: client.userPoolClientId,\n});\n"}
{ "prompt": "{\"Resources\": {\"UserPool6BA7E5F2\": {\"Type\": \"AWS::Cognito::UserPool\", \"Properties\": {\"AccountRecoverySetting\": {\"RecoveryMechanisms\": [{\"Name\": \"verified_phone_number\", \"Priority\": 1}, {\"Name\": \"verified_email\", \"Priority\": 2}]}, \"AdminCreateUserConfig\": {\"AllowAdminCreateUserOnly\": true}, \"EmailVerificationMessage\": \"The verification code to your new account is {####}\", \"EmailVerificationSubject\": \"Verify your new account\", \"SmsVerificationMessage\": \"The verification code to your new account is {####}\", \"VerificationMessageTemplate\": {\"DefaultEmailOption\": \"CONFIRM_WITH_CODE\", \"EmailMessage\": \"The verification code to your new account is {####}\", \"EmailSubject\": \"Verify your new account\", \"SmsMessage\": \"The verification code to your new account is {####}\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"UserPoolDomainD0EA232A\": {\"Type\": \"AWS::Cognito::UserPoolDomain\", \"Properties\": {\"Domain\": \"cdk-integ-user-pool-domain\", \"UserPoolId\": {\"Ref\": \"UserPool6BA7E5F2\"}}}, \"UserPoolUserPoolClient40176907\": {\"Type\": \"AWS::Cognito::UserPoolClient\", \"Properties\": {\"UserPoolId\": {\"Ref\": \"UserPool6BA7E5F2\"}, \"AllowedOAuthFlows\": [\"implicit\", \"code\"], \"AllowedOAuthFlowsUserPoolClient\": true, \"AllowedOAuthScopes\": [\"profile\", \"phone\", \"email\", \"openid\", \"aws.cognito.signin.user.admin\"], \"CallbackURLs\": [\"https://example.com\"], \"SupportedIdentityProviders\": [\"COGNITO\"]}}}, \"Outputs\": {\"SignInUrl\": {\"Value\": {\"Fn::Join\": [\"\", [\"https://\", {\"Ref\": \"UserPoolDomainD0EA232A\"}, \".auth.\", {\"Ref\": \"AWS::Region\"}, \".amazoncognito.com/login?client_id=\", {\"Ref\": \"UserPoolUserPoolClient40176907\"}, \"&response_type=code&redirect_uri=https://example.com\"]]}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import { App, CfnOutput, RemovalPolicy, Stack } from 'aws-cdk-lib';\nimport { UserPool } from 'aws-cdk-lib/aws-cognito';\n\n/*\n * Stack verification steps:\n * * Run the command `curl -sS -D - '<stack output SignInUrl>' -o /dev/null` should return HTTP/2 200.\n * * It didn't work if it returns 302 or 400.\n */\n\nconst app = new App();\nconst stack = new Stack(app, 'integ-user-pool-domain-signinurl');\n\nconst userpool = new UserPool(stack, 'UserPool', {\n  removalPolicy: RemovalPolicy.DESTROY,\n});\n\nconst domain = userpool.addDomain('Domain', {\n  cognitoDomain: {\n    domainPrefix: 'cdk-integ-user-pool-domain',\n  },\n});\n\nconst client = userpool.addClient('UserPoolClient', {\n  oAuth: {\n    callbackUrls: ['https://example.com'],\n  },\n});\n\nnew CfnOutput(stack, 'SignInUrl', {\n  value: domain.signInUrl(client, {\n    redirectUri: 'https://example.com',\n  }),\n});"}
{ "prompt": "{\"Resources\": {\"pool056F3F7E\": {\"Type\": \"AWS::Cognito::UserPool\", \"Properties\": {\"AccountRecoverySetting\": {\"RecoveryMechanisms\": [{\"Name\": \"verified_phone_number\", \"Priority\": 1}, {\"Name\": \"verified_email\", \"Priority\": 2}]}, \"AdminCreateUserConfig\": {\"AllowAdminCreateUserOnly\": true}, \"EmailVerificationMessage\": \"The verification code to your new account is {####}\", \"EmailVerificationSubject\": \"Verify your new account\", \"SmsVerificationMessage\": \"The verification code to your new account is {####}\", \"VerificationMessageTemplate\": {\"DefaultEmailOption\": \"CONFIRM_WITH_CODE\", \"EmailMessage\": \"The verification code to your new account is {####}\", \"EmailSubject\": \"Verify your new account\", \"SmsMessage\": \"The verification code to your new account is {####}\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"poolclient2623294C\": {\"Type\": \"AWS::Cognito::UserPoolClient\", \"Properties\": {\"UserPoolId\": {\"Ref\": \"pool056F3F7E\"}, \"AllowedOAuthFlows\": [\"implicit\", \"code\"], \"AllowedOAuthFlowsUserPoolClient\": true, \"AllowedOAuthScopes\": [\"profile\", \"phone\", \"email\", \"openid\", \"aws.cognito.signin.user.admin\"], \"CallbackURLs\": [\"https://example.com\"], \"SupportedIdentityProviders\": [{\"Ref\": \"amazon2D32744A\"}, \"COGNITO\"]}}, \"pooldomain430FA744\": {\"Type\": \"AWS::Cognito::UserPoolDomain\", \"Properties\": {\"Domain\": \"nija-test-pool\", \"UserPoolId\": {\"Ref\": \"pool056F3F7E\"}}}, \"amazon2D32744A\": {\"Type\": \"AWS::Cognito::UserPoolIdentityProvider\", \"Properties\": {\"ProviderName\": \"LoginWithAmazon\", \"ProviderType\": \"LoginWithAmazon\", \"UserPoolId\": {\"Ref\": \"pool056F3F7E\"}, \"AttributeMapping\": {\"given_name\": \"name\", \"email\": \"email\", \"userId\": \"user_id\"}, \"ProviderDetails\": {\"client_id\": \"amzn-client-id\", \"client_secret\": \"amzn-client-secret\", \"authorize_scopes\": \"profile\"}}}}, \"Outputs\": {\"SignInLink\": {\"Value\": {\"Fn::Join\": [\"\", [\"https://\", {\"Ref\": \"pooldomain430FA744\"}, \".auth.\", {\"Ref\": \"AWS::Region\"}, \".amazoncognito.com/login?client_id=\", {\"Ref\": \"poolclient2623294C\"}, \"&response_type=code&redirect_uri=https://example.com\"]]}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import { App, CfnOutput, RemovalPolicy, Stack } from 'aws-cdk-lib';\nimport { ProviderAttribute, UserPool, UserPoolIdentityProviderAmazon } from 'aws-cdk-lib/aws-cognito';\n\n/*\n * Stack verification steps\n * * Visit the URL provided by stack output 'SignInLink' in a browser, and verify the 'Login with Amazon' link shows up.\n * * If you plug in valid 'Login with Amazon' credentials, the federated log in should work.\n */\nconst app = new App();\nconst stack = new Stack(app, 'integ-user-pool-idp-amazon');\n\nconst userpool = new UserPool(stack, 'pool', {\n  removalPolicy: RemovalPolicy.DESTROY,\n});\n\nnew UserPoolIdentityProviderAmazon(stack, 'amazon', {\n  userPool: userpool,\n  clientId: 'amzn-client-id',\n  clientSecret: 'amzn-client-secret',\n  attributeMapping: {\n    givenName: ProviderAttribute.AMAZON_NAME,\n    email: ProviderAttribute.AMAZON_EMAIL,\n    custom: {\n      userId: ProviderAttribute.AMAZON_USER_ID,\n    },\n  },\n});\n\nconst client = userpool.addClient('client');\n\nconst domain = userpool.addDomain('domain', {\n  cognitoDomain: {\n    domainPrefix: 'nija-test-pool',\n  },\n});\n\nnew CfnOutput(stack, 'SignInLink', {\n  value: domain.signInUrl(client, {\n    redirectUri: 'https://example.com',\n  }),\n});"}
{ "prompt": "{\"Resources\": {\"myuserpool01998219\": {\"Type\": \"AWS::Cognito::UserPool\", \"Properties\": {\"AccountRecoverySetting\": {\"RecoveryMechanisms\": [{\"Name\": \"verified_phone_number\", \"Priority\": 1}, {\"Name\": \"verified_email\", \"Priority\": 2}]}, \"AdminCreateUserConfig\": {\"AllowAdminCreateUserOnly\": true}, \"EmailVerificationMessage\": \"The verification code to your new account is {####}\", \"EmailVerificationSubject\": \"Verify your new account\", \"Schema\": [{\"AttributeDataType\": \"String\", \"Name\": \"attribute_one\"}, {\"AttributeDataType\": \"String\", \"Name\": \"attribute_two\"}], \"SmsVerificationMessage\": \"The verification code to your new account is {####}\", \"VerificationMessageTemplate\": {\"DefaultEmailOption\": \"CONFIRM_WITH_CODE\", \"EmailMessage\": \"The verification code to your new account is {####}\", \"EmailSubject\": \"Verify your new account\", \"SmsMessage\": \"The verification code to your new account is {####}\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"myuserpoolmyuserpoolclientAFB2274E\": {\"Type\": \"AWS::Cognito::UserPoolClient\", \"Properties\": {\"UserPoolId\": {\"Ref\": \"myuserpool01998219\"}, \"AllowedOAuthFlows\": [\"implicit\", \"code\"], \"AllowedOAuthFlowsUserPoolClient\": true, \"AllowedOAuthScopes\": [\"phone\", \"email\", \"openid\", \"profile\", \"aws.cognito.signin.user.admin\"], \"AuthSessionValidity\": 3, \"CallbackURLs\": [\"https://redirect-here.myapp.com\"], \"ClientName\": \"myuserpoolclient\", \"ExplicitAuthFlows\": [\"ALLOW_USER_PASSWORD_AUTH\", \"ALLOW_ADMIN_USER_PASSWORD_AUTH\", \"ALLOW_CUSTOM_AUTH\", \"ALLOW_USER_SRP_AUTH\", \"ALLOW_REFRESH_TOKEN_AUTH\"], \"GenerateSecret\": true, \"PreventUserExistenceErrors\": \"ENABLED\", \"SupportedIdentityProviders\": [\"COGNITO\"], \"WriteAttributes\": [\"address\", \"birthdate\", \"custom:attribute_one\", \"custom:attribute_two\", \"email\", \"family_name\", \"gender\", \"given_name\", \"locale\", \"middle_name\", \"name\", \"nickname\", \"phone_number\", \"picture\", \"preferred_username\", \"profile\", \"updated_at\", \"website\", \"zoneinfo\"]}}, \"myuserpoolmyuserpoolclientDescribeCognitoUserPoolClientEA733B32\": {\"Type\": \"Custom::DescribeCognitoUserPoolClient\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"AWS679f53fac002430cb0da5b7982bd22872D164C4C\", \"Arn\"]}, \"Create\": {\"Fn::Join\": [\"\", [\"{\\\"region\\\":\\\"\", {\"Ref\": \"AWS::Region\"}, \"\\\",\\\"service\\\":\\\"CognitoIdentityServiceProvider\\\",\\\"action\\\":\\\"describeUserPoolClient\\\",\\\"parameters\\\":{\\\"UserPoolId\\\":\\\"\", {\"Ref\": \"myuserpool01998219\"}, \"\\\",\\\"ClientId\\\":\\\"\", {\"Ref\": \"myuserpoolmyuserpoolclientAFB2274E\"}, \"\\\"},\\\"physicalResourceId\\\":{\\\"id\\\":\\\"\", {\"Ref\": \"myuserpoolmyuserpoolclientAFB2274E\"}, \"\\\"}}\"]]}, \"Update\": {\"Fn::Join\": [\"\", [\"{\\\"region\\\":\\\"\", {\"Ref\": \"AWS::Region\"}, \"\\\",\\\"service\\\":\\\"CognitoIdentityServiceProvider\\\",\\\"action\\\":\\\"describeUserPoolClient\\\",\\\"parameters\\\":{\\\"UserPoolId\\\":\\\"\", {\"Ref\": \"myuserpool01998219\"}, \"\\\",\\\"ClientId\\\":\\\"\", {\"Ref\": \"myuserpoolmyuserpoolclientAFB2274E\"}, \"\\\"},\\\"physicalResourceId\\\":{\\\"id\\\":\\\"\", {\"Ref\": \"myuserpoolmyuserpoolclientAFB2274E\"}, \"\\\"}}\"]]}, \"InstallLatestAwsSdk\": false}, \"DependsOn\": [\"myuserpoolmyuserpoolclientDescribeCognitoUserPoolClientCustomResourcePolicyF83BED40\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"myuserpoolmyuserpoolclientDescribeCognitoUserPoolClientCustomResourcePolicyF83BED40\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"cognito-idp:DescribeUserPoolClient\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"myuserpool01998219\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"myuserpoolmyuserpoolclientDescribeCognitoUserPoolClientCustomResourcePolicyF83BED40\", \"Roles\": [{\"Ref\": \"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\"}]}}, \"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"AWS679f53fac002430cb0da5b7982bd22872D164C4C\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"5009f77d2e9161f4799d4facb1cb8859134a40234014484b4911e924c169c9cb.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\", \"Arn\"]}, \"Handler\": \"index.handler\", \"Runtime\": {\"Fn::FindInMap\": [\"DefaultCrNodeVersionMap\", {\"Ref\": \"AWS::Region\"}, \"value\"]}, \"Timeout\": 120}, \"DependsOn\": [\"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\"]}, \"SecretA720EF05\": {\"Type\": \"AWS::SecretsManager::Secret\", \"Properties\": {\"SecretString\": {\"Fn::GetAtt\": [\"myuserpoolmyuserpoolclientDescribeCognitoUserPoolClientEA733B32\", \"UserPoolClient.ClientSecret\"]}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}}, \"Mappings\": {\"DefaultCrNodeVersionMap\": {\"af-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-east-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-3\": {\"value\": \"nodejs16.x\"}, \"ap-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-south-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-3\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-4\": {\"value\": \"nodejs16.x\"}, \"ca-central-1\": {\"value\": \"nodejs16.x\"}, \"cn-north-1\": {\"value\": \"nodejs16.x\"}, \"cn-northwest-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-2\": {\"value\": \"nodejs16.x\"}, \"eu-north-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-1\": {\"value\": \"nodejs16.x\"}, \"eu-west-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-3\": {\"value\": \"nodejs16.x\"}, \"me-central-1\": {\"value\": \"nodejs16.x\"}, \"me-south-1\": {\"value\": \"nodejs16.x\"}, \"sa-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-2\": {\"value\": \"nodejs16.x\"}, \"us-gov-east-1\": {\"value\": \"nodejs16.x\"}, \"us-gov-west-1\": {\"value\": \"nodejs16.x\"}, \"us-iso-east-1\": {\"value\": \"nodejs14.x\"}, \"us-iso-west-1\": {\"value\": \"nodejs14.x\"}, \"us-isob-east-1\": {\"value\": \"nodejs14.x\"}, \"us-west-1\": {\"value\": \"nodejs16.x\"}, \"us-west-2\": {\"value\": \"nodejs16.x\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import { Secret } from 'aws-cdk-lib/aws-secretsmanager';\nimport { App, Duration, RemovalPolicy, Stack } from 'aws-cdk-lib';\nimport { ClientAttributes, OAuthScope, StringAttribute, UserPool } from 'aws-cdk-lib/aws-cognito';\n\nconst app = new App();\nconst stack = new Stack(app, 'integ-user-pool-client-explicit-props');\n\nconst userpool = new UserPool(stack, 'myuserpool', {\n  removalPolicy: RemovalPolicy.DESTROY,\n  customAttributes: {\n    attribute_one: new StringAttribute(),\n    attribute_two: new StringAttribute(),\n  },\n});\n\nconst client = userpool.addClient('myuserpoolclient', {\n  userPoolClientName: 'myuserpoolclient',\n  authFlows: {\n    adminUserPassword: true,\n    custom: true,\n    userPassword: true,\n    userSrp: true,\n  },\n  generateSecret: true,\n  oAuth: {\n    flows: {\n      implicitCodeGrant: true,\n      authorizationCodeGrant: true,\n    },\n    scopes: [\n      OAuthScope.PHONE,\n      OAuthScope.EMAIL,\n      OAuthScope.OPENID,\n      OAuthScope.PROFILE,\n      OAuthScope.COGNITO_ADMIN,\n    ],\n    callbackUrls: ['https://redirect-here.myapp.com'],\n  },\n  preventUserExistenceErrors: true,\n  authSessionValidity: Duration.minutes(3),\n  writeAttributes: (new ClientAttributes()).withStandardAttributes(\n    {\n      address: true,\n      birthdate: true,\n      email: true,\n      familyName: true,\n      fullname: true,\n      gender: true,\n      givenName: true,\n      lastUpdateTime: true,\n      locale: true,\n      middleName: true,\n      nickname: true,\n      phoneNumber: true,\n      preferredUsername: true,\n      profilePage: true,\n      profilePicture: true,\n      timezone: true,\n      website: true,\n    }).withCustomAttributes('attribute_one', 'attribute_two'),\n});\n\nnew Secret(stack, 'Secret', {\n  secretStringValue: client.userPoolClientSecret,\n});"}
{ "prompt": "{\"Resources\": {\"pool056F3F7E\": {\"Type\": \"AWS::Cognito::UserPool\", \"Properties\": {\"AccountRecoverySetting\": {\"RecoveryMechanisms\": [{\"Name\": \"verified_phone_number\", \"Priority\": 1}, {\"Name\": \"verified_email\", \"Priority\": 2}]}, \"AdminCreateUserConfig\": {\"AllowAdminCreateUserOnly\": true}, \"EmailVerificationMessage\": \"The verification code to your new account is {####}\", \"EmailVerificationSubject\": \"Verify your new account\", \"SmsVerificationMessage\": \"The verification code to your new account is {####}\", \"VerificationMessageTemplate\": {\"DefaultEmailOption\": \"CONFIRM_WITH_CODE\", \"EmailMessage\": \"The verification code to your new account is {####}\", \"EmailSubject\": \"Verify your new account\", \"SmsMessage\": \"The verification code to your new account is {####}\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"poolclient2623294C\": {\"Type\": \"AWS::Cognito::UserPoolClient\", \"Properties\": {\"UserPoolId\": {\"Ref\": \"pool056F3F7E\"}, \"AllowedOAuthFlows\": [\"implicit\", \"code\"], \"AllowedOAuthFlowsUserPoolClient\": true, \"AllowedOAuthScopes\": [\"profile\", \"phone\", \"email\", \"openid\", \"aws.cognito.signin.user.admin\"], \"CallbackURLs\": [\"https://example.com\"], \"SupportedIdentityProviders\": [{\"Ref\": \"cdk52888317\"}, \"COGNITO\"]}}, \"pooldomain430FA744\": {\"Type\": \"AWS::Cognito::UserPoolDomain\", \"Properties\": {\"Domain\": \"cdk-test-pool\", \"UserPoolId\": {\"Ref\": \"pool056F3F7E\"}}}, \"cdk52888317\": {\"Type\": \"AWS::Cognito::UserPoolIdentityProvider\", \"Properties\": {\"ProviderName\": \"cdk\", \"ProviderType\": \"OIDC\", \"UserPoolId\": {\"Ref\": \"pool056F3F7E\"}, \"AttributeMapping\": {\"phone_number\": \"phone_number\"}, \"ProviderDetails\": {\"client_id\": \"client-id\", \"client_secret\": \"client-secret\", \"authorize_scopes\": \"openid phone\", \"attributes_request_method\": \"GET\", \"oidc_issuer\": \"https://www.issuer-url.com\", \"authorize_url\": \"https://www.issuer-url.com/authorize\", \"token_url\": \"https://www.issuer-url.com/token\", \"attributes_url\": \"https://www.issuer-url.com/userinfo\", \"jwks_uri\": \"https://www.issuer-url.com/jwks\"}}}}, \"Outputs\": {\"SignInLink\": {\"Value\": {\"Fn::Join\": [\"\", [\"https://\", {\"Ref\": \"pooldomain430FA744\"}, \".auth.\", {\"Ref\": \"AWS::Region\"}, \".amazoncognito.com/login?client_id=\", {\"Ref\": \"poolclient2623294C\"}, \"&response_type=code&redirect_uri=https://example.com\"]]}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import { App, CfnOutput, RemovalPolicy, Stack } from 'aws-cdk-lib';\nimport { ProviderAttribute, UserPool, UserPoolIdentityProviderOidc } from 'aws-cdk-lib/aws-cognito';\n\n/*\n * Stack verification steps\n * * Visit the URL provided by stack output 'SignInLink' in a browser, and verify the 'cdk' sign in link shows up.\n */\nconst app = new App();\nconst stack = new Stack(app, 'integ-user-pool-idp-google');\n\nconst userpool = new UserPool(stack, 'pool', {\n  removalPolicy: RemovalPolicy.DESTROY,\n});\n\nnew UserPoolIdentityProviderOidc(stack, 'cdk', {\n  userPool: userpool,\n  name: 'cdk',\n  clientId: 'client-id',\n  clientSecret: 'client-secret',\n  issuerUrl: 'https://www.issuer-url.com',\n  endpoints: {\n    authorization: 'https://www.issuer-url.com/authorize',\n    token: 'https://www.issuer-url.com/token',\n    userInfo: 'https://www.issuer-url.com/userinfo',\n    jwksUri: 'https://www.issuer-url.com/jwks',\n  },\n  scopes: ['openid', 'phone'],\n  attributeMapping: {\n    phoneNumber: ProviderAttribute.other('phone_number'),\n  },\n});\n\nconst client = userpool.addClient('client');\n\nconst domain = userpool.addDomain('domain', {\n  cognitoDomain: {\n    domainPrefix: 'cdk-test-pool',\n  },\n});\n\nnew CfnOutput(stack, 'SignInLink', {\n  value: domain.signInUrl(client, {\n    redirectUri: 'https://example.com',\n  }),\n});\n"}
{ "prompt": "{\"Resources\": {\"UserPool6BA7E5F2\": {\"Type\": \"AWS::Cognito::UserPool\", \"Properties\": {\"AccountRecoverySetting\": {\"RecoveryMechanisms\": [{\"Name\": \"verified_phone_number\", \"Priority\": 1}, {\"Name\": \"verified_email\", \"Priority\": 2}]}, \"AdminCreateUserConfig\": {\"AllowAdminCreateUserOnly\": true}, \"EmailVerificationMessage\": \"The verification code to your new account is {####}\", \"EmailVerificationSubject\": \"Verify your new account\", \"SmsVerificationMessage\": \"The verification code to your new account is {####}\", \"VerificationMessageTemplate\": {\"DefaultEmailOption\": \"CONFIRM_WITH_CODE\", \"EmailMessage\": \"The verification code to your new account is {####}\", \"EmailSubject\": \"Verify your new account\", \"SmsMessage\": \"The verification code to your new account is {####}\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"UserPoolDomainD0EA232A\": {\"Type\": \"AWS::Cognito::UserPoolDomain\", \"Properties\": {\"Domain\": \"cdk-integ-user-pool-domain\", \"UserPoolId\": {\"Ref\": \"UserPool6BA7E5F2\"}}}, \"UserPoolDomainCloudFrontDomainNameE213E594\": {\"Type\": \"Custom::UserPoolCloudFrontDomainName\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"AWS679f53fac002430cb0da5b7982bd22872D164C4C\", \"Arn\"]}, \"Create\": {\"Fn::Join\": [\"\", [\"{\\\"service\\\":\\\"CognitoIdentityServiceProvider\\\",\\\"action\\\":\\\"describeUserPoolDomain\\\",\\\"parameters\\\":{\\\"Domain\\\":\\\"\", {\"Ref\": \"UserPoolDomainD0EA232A\"}, \"\\\"},\\\"physicalResourceId\\\":{\\\"id\\\":\\\"\", {\"Ref\": \"UserPoolDomainD0EA232A\"}, \"\\\"}}\"]]}, \"Update\": {\"Fn::Join\": [\"\", [\"{\\\"service\\\":\\\"CognitoIdentityServiceProvider\\\",\\\"action\\\":\\\"describeUserPoolDomain\\\",\\\"parameters\\\":{\\\"Domain\\\":\\\"\", {\"Ref\": \"UserPoolDomainD0EA232A\"}, \"\\\"},\\\"physicalResourceId\\\":{\\\"id\\\":\\\"\", {\"Ref\": \"UserPoolDomainD0EA232A\"}, \"\\\"}}\"]]}, \"InstallLatestAwsSdk\": false}, \"DependsOn\": [\"UserPoolDomainCloudFrontDomainNameCustomResourcePolicy7DE54188\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"UserPoolDomainCloudFrontDomainNameCustomResourcePolicy7DE54188\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"cognito-idp:DescribeUserPoolDomain\", \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"UserPoolDomainCloudFrontDomainNameCustomResourcePolicy7DE54188\", \"Roles\": [{\"Ref\": \"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\"}]}}, \"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"AWS679f53fac002430cb0da5b7982bd22872D164C4C\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"5009f77d2e9161f4799d4facb1cb8859134a40234014484b4911e924c169c9cb.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\", \"Arn\"]}, \"Handler\": \"index.handler\", \"Runtime\": {\"Fn::FindInMap\": [\"DefaultCrNodeVersionMap\", {\"Ref\": \"AWS::Region\"}, \"value\"]}, \"Timeout\": 120}, \"DependsOn\": [\"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\"]}}, \"Outputs\": {\"Domain\": {\"Value\": {\"Ref\": \"UserPoolDomainD0EA232A\"}}, \"CloudFrontDomainName\": {\"Value\": {\"Fn::GetAtt\": [\"UserPoolDomainCloudFrontDomainNameE213E594\", \"DomainDescription.CloudFrontDistribution\"]}}}, \"Mappings\": {\"DefaultCrNodeVersionMap\": {\"af-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-east-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-3\": {\"value\": \"nodejs16.x\"}, \"ap-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-south-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-3\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-4\": {\"value\": \"nodejs16.x\"}, \"ca-central-1\": {\"value\": \"nodejs16.x\"}, \"cn-north-1\": {\"value\": \"nodejs16.x\"}, \"cn-northwest-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-2\": {\"value\": \"nodejs16.x\"}, \"eu-north-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-1\": {\"value\": \"nodejs16.x\"}, \"eu-west-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-3\": {\"value\": \"nodejs16.x\"}, \"me-central-1\": {\"value\": \"nodejs16.x\"}, \"me-south-1\": {\"value\": \"nodejs16.x\"}, \"sa-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-2\": {\"value\": \"nodejs16.x\"}, \"us-gov-east-1\": {\"value\": \"nodejs16.x\"}, \"us-gov-west-1\": {\"value\": \"nodejs16.x\"}, \"us-iso-east-1\": {\"value\": \"nodejs14.x\"}, \"us-iso-west-1\": {\"value\": \"nodejs14.x\"}, \"us-isob-east-1\": {\"value\": \"nodejs14.x\"}, \"us-west-1\": {\"value\": \"nodejs16.x\"}, \"us-west-2\": {\"value\": \"nodejs16.x\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import { App, CfnOutput, RemovalPolicy, Stack } from 'aws-cdk-lib';\nimport { UserPool } from 'aws-cdk-lib/aws-cognito';\n\n/*\n * Stack verification steps:\n * * Verify that the CloudFrontDistribution stack output is of the format 'xxxxxxxxxxxxxx.cloudfront.net'\n */\n\nconst app = new App();\nconst stack = new Stack(app, 'integ-user-pool-domain-cfdist');\n\nconst userpool = new UserPool(stack, 'UserPool', {\n  removalPolicy: RemovalPolicy.DESTROY,\n});\n\nconst domain = userpool.addDomain('Domain', {\n  cognitoDomain: {\n    domainPrefix: 'cdk-integ-user-pool-domain',\n  },\n});\n\nnew CfnOutput(stack, 'Domain', {\n  value: domain.domainName,\n});\n\nnew CfnOutput(stack, 'CloudFrontDomainName', {\n  value: domain.cloudFrontDomainName,\n});\n"}
{ "prompt": "{\"Resources\": {\"myuserpool01998219\": {\"Type\": \"AWS::Cognito::UserPool\", \"Properties\": {\"AccountRecoverySetting\": {\"RecoveryMechanisms\": [{\"Name\": \"verified_phone_number\", \"Priority\": 1}, {\"Name\": \"verified_email\", \"Priority\": 2}]}, \"AdminCreateUserConfig\": {\"AllowAdminCreateUserOnly\": true}, \"DeletionProtection\": \"INACTIVE\", \"EmailVerificationMessage\": \"The verification code to your new account is {####}\", \"EmailVerificationSubject\": \"Verify your new account\", \"SmsVerificationMessage\": \"The verification code to your new account is {####}\", \"UserPoolName\": \"MyUserPool\", \"VerificationMessageTemplate\": {\"DefaultEmailOption\": \"CONFIRM_WITH_CODE\", \"EmailMessage\": \"The verification code to your new account is {####}\", \"EmailSubject\": \"Verify your new account\", \"SmsMessage\": \"The verification code to your new account is {####}\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}}, \"Outputs\": {\"userpoolid\": {\"Value\": {\"Ref\": \"myuserpool01998219\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import { App, CfnOutput, RemovalPolicy, Stack } from 'aws-cdk-lib';\nimport { UserPool } from 'aws-cdk-lib/aws-cognito';\n\nconst app = new App();\nconst stack = new Stack(app, 'integ-user-pool');\n\nconst userpool = new UserPool(stack, 'myuserpool', {\n  userPoolName: 'MyUserPool',\n  removalPolicy: RemovalPolicy.DESTROY,\n  deletionProtection: false,\n});\n\nnew CfnOutput(stack, 'user-pool-id', {\n  value: userpool.userPoolId,\n});\n"}
{ "prompt": "{\"Resources\": {\"myuserpoolsmsRole0E16FDD9\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Condition\": {\"StringEquals\": {\"sts:ExternalId\": \"integuserpoolsignuplinkmyuserpoolA8374994\"}}, \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"cognito-idp.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"Policies\": [{\"PolicyDocument\": {\"Statement\": [{\"Action\": \"sns:Publish\", \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"sns-publish\"}]}}, \"myuserpool01998219\": {\"Type\": \"AWS::Cognito::UserPool\", \"Properties\": {\"AccountRecoverySetting\": {\"RecoveryMechanisms\": [{\"Name\": \"verified_phone_number\", \"Priority\": 1}, {\"Name\": \"verified_email\", \"Priority\": 2}]}, \"AdminCreateUserConfig\": {\"AllowAdminCreateUserOnly\": false}, \"AutoVerifiedAttributes\": [\"email\", \"phone_number\"], \"Policies\": {\"PasswordPolicy\": {\"MinimumLength\": 8, \"RequireLowercase\": false, \"RequireNumbers\": false, \"RequireSymbols\": false, \"RequireUppercase\": false}}, \"SmsConfiguration\": {\"ExternalId\": \"integuserpoolsignuplinkmyuserpoolA8374994\", \"SnsCallerArn\": {\"Fn::GetAtt\": [\"myuserpoolsmsRole0E16FDD9\", \"Arn\"]}}, \"SmsVerificationMessage\": \"integ-test: Account verification code is {####}\", \"UserPoolName\": \"MyUserPool\", \"VerificationMessageTemplate\": {\"DefaultEmailOption\": \"CONFIRM_WITH_LINK\", \"EmailMessageByLink\": \"integ-test: Verify by clicking on {##Verify Email##}\", \"EmailSubjectByLink\": \"integ-test: Verify your account\", \"SmsMessage\": \"integ-test: Account verification code is {####}\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"myuserpoolmyuserpooldomainEE1E11AF\": {\"Type\": \"AWS::Cognito::UserPoolDomain\", \"Properties\": {\"Domain\": \"integ-user-pool-signup-link\", \"UserPoolId\": {\"Ref\": \"myuserpool01998219\"}}}, \"myuserpoolclient8A58A3E4\": {\"Type\": \"AWS::Cognito::UserPoolClient\", \"Properties\": {\"UserPoolId\": {\"Ref\": \"myuserpool01998219\"}, \"AllowedOAuthFlows\": [\"implicit\", \"code\"], \"AllowedOAuthFlowsUserPoolClient\": true, \"AllowedOAuthScopes\": [\"profile\", \"phone\", \"email\", \"openid\", \"aws.cognito.signin.user.admin\"], \"CallbackURLs\": [\"https://example.com\"], \"ClientName\": \"signup-test\", \"GenerateSecret\": false, \"SupportedIdentityProviders\": [\"COGNITO\"]}}}, \"Outputs\": {\"userpoolid\": {\"Value\": {\"Ref\": \"myuserpool01998219\"}}, \"clientid\": {\"Value\": {\"Ref\": \"myuserpoolclient8A58A3E4\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import { App, CfnOutput, RemovalPolicy, Stack } from 'aws-cdk-lib';\nimport { UserPool, UserPoolClient, VerificationEmailStyle } from 'aws-cdk-lib/aws-cognito';\n\n/*\n * Stack verification steps:\n * * `aws cognito-idp sign-up --client-id <cfnoutput-client-id> --username user-1 --password pass1234 \\\n *   --user-attributes Name=\"phone_number\",Value=\"<valid-phone-number-with-intl-extension>\"\n * * `aws cognito-idp sign-up --client-id <cfnoutput-client-id> --username user-2 --password pass1234 \\\n *   --user-attributes Name=\"email\",Value=\"<valid-email-address>\"\n * * An email with the message 'integ-test: Verify by clicking on <link>' should be received.\n * * An SMS with the message 'integ-test: Account verification code is <code>' should be received.\n */\n\nconst app = new App();\nconst stack = new Stack(app, 'integ-user-pool-signup-link');\n\nconst userpool = new UserPool(stack, 'myuserpool', {\n  removalPolicy: RemovalPolicy.DESTROY,\n  userPoolName: 'MyUserPool',\n  autoVerify: {\n    email: true,\n    phone: true,\n  },\n  selfSignUpEnabled: true,\n  userVerification: {\n    emailStyle: VerificationEmailStyle.LINK,\n    emailSubject: 'integ-test: Verify your account',\n    emailBody: 'integ-test: Verify by clicking on {##Verify Email##}',\n    smsMessage: 'integ-test: Account verification code is {####}',\n  },\n  passwordPolicy: {\n    requireUppercase: false,\n    requireLowercase: false,\n    requireDigits: false,\n    requireSymbols: false,\n  },\n});\n\nconst client = new UserPoolClient(stack, 'myuserpoolclient', {\n  userPool: userpool,\n  userPoolClientName: 'signup-test',\n  generateSecret: false,\n});\n\nuserpool.addDomain('myuserpooldomain', {\n  cognitoDomain: {\n    domainPrefix: 'integ-user-pool-signup-link',\n  },\n});\n\nnew CfnOutput(stack, 'user-pool-id', {\n  value: userpool.userPoolId,\n});\n\nnew CfnOutput(stack, 'client-id', {\n  value: client.userPoolClientId,\n});"}
{ "prompt": "{\"Resources\": {\"myuserpool01998219\": {\"Type\": \"AWS::Cognito::UserPool\", \"Properties\": {\"AccountRecoverySetting\": {\"RecoveryMechanisms\": [{\"Name\": \"verified_phone_number\", \"Priority\": 1}, {\"Name\": \"verified_email\", \"Priority\": 2}]}, \"AdminCreateUserConfig\": {\"AllowAdminCreateUserOnly\": true}, \"EmailVerificationMessage\": \"The verification code to your new account is {####}\", \"EmailVerificationSubject\": \"Verify your new account\", \"SmsVerificationMessage\": \"The verification code to your new account is {####}\", \"UserPoolName\": \"MyUserPool\", \"VerificationMessageTemplate\": {\"DefaultEmailOption\": \"CONFIRM_WITH_CODE\", \"EmailMessage\": \"The verification code to your new account is {####}\", \"EmailSubject\": \"Verify your new account\", \"SmsMessage\": \"The verification code to your new account is {####}\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"myuserpoolmyserver50C4D8E9\": {\"Type\": \"AWS::Cognito::UserPoolResourceServer\", \"Properties\": {\"Identifier\": \"users\", \"Name\": \"users\", \"UserPoolId\": {\"Ref\": \"myuserpool01998219\"}, \"Scopes\": [{\"ScopeDescription\": \"read only\", \"ScopeName\": \"read\"}]}}, \"myuserpoolclientC5FA41EC\": {\"Type\": \"AWS::Cognito::UserPoolClient\", \"Properties\": {\"UserPoolId\": {\"Ref\": \"myuserpool01998219\"}, \"AllowedOAuthFlows\": [\"client_credentials\"], \"AllowedOAuthFlowsUserPoolClient\": true, \"AllowedOAuthScopes\": [{\"Fn::Join\": [\"\", [{\"Ref\": \"myuserpoolmyserver50C4D8E9\"}, \"/read\"]]}], \"ClientName\": \"users-app\", \"GenerateSecret\": true, \"SupportedIdentityProviders\": [\"COGNITO\"]}}}, \"Outputs\": {\"poolid\": {\"Value\": {\"Ref\": \"myuserpool01998219\"}}, \"clientid\": {\"Value\": {\"Ref\": \"myuserpoolclientC5FA41EC\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import { App, CfnOutput, RemovalPolicy, Stack } from 'aws-cdk-lib';\nimport { OAuthScope, ResourceServerScope, UserPool } from 'aws-cdk-lib/aws-cognito';\n\nconst app = new App();\nconst stack = new Stack(app, 'integ-user-pool-resource-server');\n\n/*\n * Stack verification steps:\n * Cognito will only allow you to add a custom scope on a user pool client that is defined by a resource server.\n * Checking the app client scopes will verify if the resource server is configured correctly.\n * The exports userPoolId and userPoolClientId are exported here to test\n *\n * * `aws cognito-idp describe-user-pool-client --user-pool-id $userPoolId --client-id $userPoolClientId` should return \"users/read\" in \"AllowedOAuthScopes\"\n */\nconst userPool = new UserPool(stack, 'myuserpool', {\n  userPoolName: 'MyUserPool',\n  removalPolicy: RemovalPolicy.DESTROY,\n});\n\nconst readScope = new ResourceServerScope({ scopeName: 'read', scopeDescription: 'read only' });\nconst userServer = userPool.addResourceServer('myserver', {\n  identifier: 'users',\n  scopes: [readScope],\n});\n\nconst client = userPool.addClient('client', {\n  userPoolClientName: 'users-app',\n  generateSecret: true,\n  oAuth: {\n    flows: {\n      clientCredentials: true,\n    },\n    scopes: [\n      OAuthScope.resourceServer(userServer, readScope),\n    ],\n  },\n});\n\nnew CfnOutput(stack, 'pool-id', {\n  value: userPool.userPoolId,\n});\n\nnew CfnOutput(stack, 'client-id', {\n  value: client.userPoolClientId,\n});\n"}
{ "prompt": "{\"Resources\": {\"createAuthChallengeServiceRole611710B5\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"createAuthChallengeB185B225\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"foo\"}, \"Role\": {\"Fn::GetAtt\": [\"createAuthChallengeServiceRole611710B5\", \"Arn\"]}, \"FunctionName\": \"createAuthChallenge\", \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"createAuthChallengeServiceRole611710B5\"]}, \"customMessageServiceRoleB4AE7F17\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"customMessage52BA91E2\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"foo\"}, \"Role\": {\"Fn::GetAtt\": [\"customMessageServiceRoleB4AE7F17\", \"Arn\"]}, \"FunctionName\": \"customMessage\", \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"customMessageServiceRoleB4AE7F17\"]}, \"defineAuthChallengeServiceRole9E2D15DF\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"defineAuthChallengeAE7BCDA1\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"foo\"}, \"Role\": {\"Fn::GetAtt\": [\"defineAuthChallengeServiceRole9E2D15DF\", \"Arn\"]}, \"FunctionName\": \"defineAuthChallenge\", \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"defineAuthChallengeServiceRole9E2D15DF\"]}, \"postAuthenticationServiceRole5B3B242A\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"postAuthentication741BD8E3\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"foo\"}, \"Role\": {\"Fn::GetAtt\": [\"postAuthenticationServiceRole5B3B242A\", \"Arn\"]}, \"FunctionName\": \"postAuthentication\", \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"postAuthenticationServiceRole5B3B242A\"]}, \"postConfirmationServiceRole864BE5F9\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"postConfirmationD5E3F1DD\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"foo\"}, \"Role\": {\"Fn::GetAtt\": [\"postConfirmationServiceRole864BE5F9\", \"Arn\"]}, \"FunctionName\": \"postConfirmation\", \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"postConfirmationServiceRole864BE5F9\"]}, \"preAuthenticationServiceRole9712F4D8\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"preAuthentication56F78C81\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"foo\"}, \"Role\": {\"Fn::GetAtt\": [\"preAuthenticationServiceRole9712F4D8\", \"Arn\"]}, \"FunctionName\": \"preAuthentication\", \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"preAuthenticationServiceRole9712F4D8\"]}, \"preSignUpServiceRole0A7E91EB\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"preSignUp1934B27C\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"foo\"}, \"Role\": {\"Fn::GetAtt\": [\"preSignUpServiceRole0A7E91EB\", \"Arn\"]}, \"FunctionName\": \"preSignUp\", \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"preSignUpServiceRole0A7E91EB\"]}, \"preTokenGenerationServiceRole430C3D14\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"preTokenGeneration1E968302\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"foo\"}, \"Role\": {\"Fn::GetAtt\": [\"preTokenGenerationServiceRole430C3D14\", \"Arn\"]}, \"FunctionName\": \"preTokenGeneration\", \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"preTokenGenerationServiceRole430C3D14\"]}, \"userMigrationServiceRole091766B0\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"userMigrationAAA960EC\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"foo\"}, \"Role\": {\"Fn::GetAtt\": [\"userMigrationServiceRole091766B0\", \"Arn\"]}, \"FunctionName\": \"userMigration\", \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"userMigrationServiceRole091766B0\"]}, \"verifyAuthChallengeResponseServiceRole7077884C\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"verifyAuthChallengeResponse211FE4A6\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"foo\"}, \"Role\": {\"Fn::GetAtt\": [\"verifyAuthChallengeResponseServiceRole7077884C\", \"Arn\"]}, \"FunctionName\": \"verifyAuthChallengeResponse\", \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"verifyAuthChallengeResponseServiceRole7077884C\"]}, \"myuserpoolCreateAuthChallengeCognitoCE4A6821\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"createAuthChallengeB185B225\", \"Arn\"]}, \"Principal\": \"cognito-idp.amazonaws.com\", \"SourceArn\": {\"Fn::GetAtt\": [\"myuserpool01998219\", \"Arn\"]}}}, \"myuserpoolCustomMessageCognito8057432C\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"customMessage52BA91E2\", \"Arn\"]}, \"Principal\": \"cognito-idp.amazonaws.com\", \"SourceArn\": {\"Fn::GetAtt\": [\"myuserpool01998219\", \"Arn\"]}}}, \"myuserpoolDefineAuthChallengeCognito81526ECF\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"defineAuthChallengeAE7BCDA1\", \"Arn\"]}, \"Principal\": \"cognito-idp.amazonaws.com\", \"SourceArn\": {\"Fn::GetAtt\": [\"myuserpool01998219\", \"Arn\"]}}}, \"myuserpoolPostAuthenticationCognito83D5BAE9\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"postAuthentication741BD8E3\", \"Arn\"]}, \"Principal\": \"cognito-idp.amazonaws.com\", \"SourceArn\": {\"Fn::GetAtt\": [\"myuserpool01998219\", \"Arn\"]}}}, \"myuserpoolPostConfirmationCognitoB4F79E1C\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"postConfirmationD5E3F1DD\", \"Arn\"]}, \"Principal\": \"cognito-idp.amazonaws.com\", \"SourceArn\": {\"Fn::GetAtt\": [\"myuserpool01998219\", \"Arn\"]}}}, \"myuserpoolPreAuthenticationCognitoE1C7AED3\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"preAuthentication56F78C81\", \"Arn\"]}, \"Principal\": \"cognito-idp.amazonaws.com\", \"SourceArn\": {\"Fn::GetAtt\": [\"myuserpool01998219\", \"Arn\"]}}}, \"myuserpoolPreSignUpCognitoD6CE8CAD\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"preSignUp1934B27C\", \"Arn\"]}, \"Principal\": \"cognito-idp.amazonaws.com\", \"SourceArn\": {\"Fn::GetAtt\": [\"myuserpool01998219\", \"Arn\"]}}}, \"myuserpoolPreTokenGenerationCognitoF1714665\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"preTokenGeneration1E968302\", \"Arn\"]}, \"Principal\": \"cognito-idp.amazonaws.com\", \"SourceArn\": {\"Fn::GetAtt\": [\"myuserpool01998219\", \"Arn\"]}}}, \"myuserpoolUserMigrationCognito56734AFB\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"userMigrationAAA960EC\", \"Arn\"]}, \"Principal\": \"cognito-idp.amazonaws.com\", \"SourceArn\": {\"Fn::GetAtt\": [\"myuserpool01998219\", \"Arn\"]}}}, \"myuserpoolVerifyAuthChallengeResponseCognitoAEAB40FD\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"verifyAuthChallengeResponse211FE4A6\", \"Arn\"]}, \"Principal\": \"cognito-idp.amazonaws.com\", \"SourceArn\": {\"Fn::GetAtt\": [\"myuserpool01998219\", \"Arn\"]}}}, \"myuserpoolsmsRole0E16FDD9\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Condition\": {\"StringEquals\": {\"sts:ExternalId\": \"integuserpoolmyuserpoolDA38443C\"}}, \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"cognito-idp.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"Policies\": [{\"PolicyDocument\": {\"Statement\": [{\"Action\": \"sns:Publish\", \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"sns-publish\"}]}}, \"myuserpool01998219\": {\"Type\": \"AWS::Cognito::UserPool\", \"Properties\": {\"AccountRecoverySetting\": {\"RecoveryMechanisms\": [{\"Name\": \"verified_phone_number\", \"Priority\": 1}, {\"Name\": \"verified_email\", \"Priority\": 2}]}, \"AdminCreateUserConfig\": {\"AllowAdminCreateUserOnly\": false, \"InviteMessageTemplate\": {\"EmailMessage\": \"invitation email body from the integ test for {username}. Temp password is {####}.\", \"EmailSubject\": \"invitation email subject from the integ test\", \"SMSMessage\": \"invitation sms message from the integ test for {username}. Temp password is {####}.\"}}, \"AliasAttributes\": [\"email\"], \"AutoVerifiedAttributes\": [\"email\", \"phone_number\"], \"EmailVerificationMessage\": \"verification email body from the integ test. Code is {####}.\", \"EmailVerificationSubject\": \"verification email subject from the integ test\", \"LambdaConfig\": {\"CreateAuthChallenge\": {\"Fn::GetAtt\": [\"createAuthChallengeB185B225\", \"Arn\"]}, \"CustomMessage\": {\"Fn::GetAtt\": [\"customMessage52BA91E2\", \"Arn\"]}, \"DefineAuthChallenge\": {\"Fn::GetAtt\": [\"defineAuthChallengeAE7BCDA1\", \"Arn\"]}, \"PostAuthentication\": {\"Fn::GetAtt\": [\"postAuthentication741BD8E3\", \"Arn\"]}, \"PostConfirmation\": {\"Fn::GetAtt\": [\"postConfirmationD5E3F1DD\", \"Arn\"]}, \"PreAuthentication\": {\"Fn::GetAtt\": [\"preAuthentication56F78C81\", \"Arn\"]}, \"PreSignUp\": {\"Fn::GetAtt\": [\"preSignUp1934B27C\", \"Arn\"]}, \"PreTokenGeneration\": {\"Fn::GetAtt\": [\"preTokenGeneration1E968302\", \"Arn\"]}, \"UserMigration\": {\"Fn::GetAtt\": [\"userMigrationAAA960EC\", \"Arn\"]}, \"VerifyAuthChallengeResponse\": {\"Fn::GetAtt\": [\"verifyAuthChallengeResponse211FE4A6\", \"Arn\"]}}, \"MfaConfiguration\": \"OFF\", \"Policies\": {\"PasswordPolicy\": {\"MinimumLength\": 12, \"RequireLowercase\": true, \"RequireNumbers\": true, \"RequireSymbols\": true, \"RequireUppercase\": true, \"TemporaryPasswordValidityDays\": 10}}, \"Schema\": [{\"Mutable\": true, \"Name\": \"name\", \"Required\": true}, {\"Mutable\": true, \"Name\": \"email\", \"Required\": true}, {\"AttributeDataType\": \"String\", \"Name\": \"some-string-attr\"}, {\"AttributeDataType\": \"String\", \"Name\": \"another-string-attr\", \"StringAttributeConstraints\": {\"MaxLength\": \"100\", \"MinLength\": \"4\"}}, {\"AttributeDataType\": \"Number\", \"Name\": \"some-number-attr\"}, {\"AttributeDataType\": \"Number\", \"Name\": \"another-number-attr\", \"NumberAttributeConstraints\": {\"MaxValue\": \"50\", \"MinValue\": \"10\"}}, {\"AttributeDataType\": \"Boolean\", \"Name\": \"some-boolean-attr\"}, {\"AttributeDataType\": \"DateTime\", \"Name\": \"some-datetime-attr\"}], \"SmsConfiguration\": {\"ExternalId\": \"integuserpoolmyuserpoolDA38443C\", \"SnsCallerArn\": {\"Fn::GetAtt\": [\"myuserpoolsmsRole0E16FDD9\", \"Arn\"]}, \"SnsRegion\": {\"Ref\": \"AWS::Region\"}}, \"SmsVerificationMessage\": \"verification sms message from the integ test. Code is {####}.\", \"UserAttributeUpdateSettings\": {\"AttributesRequireVerificationBeforeUpdate\": [\"email\", \"phone_number\"]}, \"UserPoolAddOns\": {\"AdvancedSecurityMode\": \"ENFORCED\"}, \"UserPoolName\": \"MyUserPool\", \"VerificationMessageTemplate\": {\"DefaultEmailOption\": \"CONFIRM_WITH_CODE\", \"EmailMessage\": \"verification email body from the integ test. Code is {####}.\", \"EmailSubject\": \"verification email subject from the integ test\", \"SmsMessage\": \"verification sms message from the integ test. Code is {####}.\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"myuserpoolmyuserpooldomainEE1E11AF\": {\"Type\": \"AWS::Cognito::UserPoolDomain\", \"Properties\": {\"Domain\": \"cdkintegrationtestuserpoolexplicitprops\", \"UserPoolId\": {\"Ref\": \"myuserpool01998219\"}}}}, \"Outputs\": {\"userpoolId\": {\"Value\": {\"Ref\": \"myuserpool01998219\"}}, \"cognitoDomainName\": {\"Value\": {\"Fn::Join\": [\"\", [{\"Ref\": \"myuserpoolmyuserpooldomainEE1E11AF\"}, \".auth.\", {\"Ref\": \"AWS::Region\"}, \".amazoncognito.com\"]]}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import { Code, Function, IFunction, Runtime } from 'aws-cdk-lib/aws-lambda';\nimport { App, CfnOutput, Duration, RemovalPolicy, Stack } from 'aws-cdk-lib';\nimport { AdvancedSecurityMode, BooleanAttribute, DateTimeAttribute, Mfa, NumberAttribute, StringAttribute, UserPool } from 'aws-cdk-lib/aws-cognito';\n\nconst app = new App();\nconst stack = new Stack(app, 'integ-user-pool');\n\nconst userpool = new UserPool(stack, 'myuserpool', {\n  removalPolicy: RemovalPolicy.DESTROY,\n  userPoolName: 'MyUserPool',\n  userInvitation: {\n    emailSubject: 'invitation email subject from the integ test',\n    emailBody: 'invitation email body from the integ test for {username}. Temp password is {####}.',\n    smsMessage: 'invitation sms message from the integ test for {username}. Temp password is {####}.',\n  },\n  selfSignUpEnabled: true,\n  userVerification: {\n    emailBody: 'verification email body from the integ test. Code is {####}.',\n    emailSubject: 'verification email subject from the integ test',\n    smsMessage: 'verification sms message from the integ test. Code is {####}.',\n  },\n  signInAliases: {\n    username: true,\n    email: true,\n  },\n  autoVerify: {\n    email: true,\n    phone: true,\n  },\n  keepOriginal: {\n    email: true,\n    phone: true,\n  },\n  standardAttributes: {\n    fullname: {\n      required: true,\n      mutable: true,\n    },\n    email: {\n      required: true,\n    },\n  },\n  customAttributes: {\n    'some-string-attr': new StringAttribute(),\n    'another-string-attr': new StringAttribute({ minLen: 4, maxLen: 100 }),\n    'some-number-attr': new NumberAttribute(),\n    'another-number-attr': new NumberAttribute({ min: 10, max: 50 }),\n    'some-boolean-attr': new BooleanAttribute(),\n    'some-datetime-attr': new DateTimeAttribute(),\n  },\n  mfa: Mfa.OFF,\n  mfaSecondFactor: {\n    sms: true,\n    otp: true,\n  },\n  passwordPolicy: {\n    tempPasswordValidity: Duration.days(10),\n    minLength: 12,\n    requireDigits: true,\n    requireLowercase: true,\n    requireUppercase: true,\n    requireSymbols: true,\n  },\n  lambdaTriggers: {\n    createAuthChallenge: dummyTrigger('createAuthChallenge'),\n    customMessage: dummyTrigger('customMessage'),\n    defineAuthChallenge: dummyTrigger('defineAuthChallenge'),\n    postAuthentication: dummyTrigger('postAuthentication'),\n    postConfirmation: dummyTrigger('postConfirmation'),\n    preAuthentication: dummyTrigger('preAuthentication'),\n    preSignUp: dummyTrigger('preSignUp'),\n    preTokenGeneration: dummyTrigger('preTokenGeneration'),\n    userMigration: dummyTrigger('userMigration'),\n    verifyAuthChallengeResponse: dummyTrigger('verifyAuthChallengeResponse'),\n  },\n  advancedSecurityMode: AdvancedSecurityMode.ENFORCED,\n  snsRegion: Stack.of(stack).region,\n});\n\nconst cognitoDomain = userpool.addDomain('myuserpooldomain', {\n  cognitoDomain: {\n    domainPrefix: 'cdkintegrationtestuserpoolexplicitprops',\n  },\n});\n\nnew CfnOutput(stack, 'userpoolId', {\n  value: userpool.userPoolId,\n});\n\nnew CfnOutput(stack, 'cognitoDomainName', {\n  value: `${cognitoDomain.domainName}.auth.${stack.region}.amazoncognito.com`,\n});\n\nfunction dummyTrigger(name: string): IFunction {\n  return new Function(stack, name, {\n    functionName: name,\n    handler: 'index.handler',\n    runtime: Runtime.NODEJS_14_X,\n    code: Code.fromInline('foo'),\n  });\n}\n"}
{ "prompt": "{\"Resources\": {\"pool056F3F7E\": {\"Type\": \"AWS::Cognito::UserPool\", \"Properties\": {\"AccountRecoverySetting\": {\"RecoveryMechanisms\": [{\"Name\": \"verified_phone_number\", \"Priority\": 1}, {\"Name\": \"verified_email\", \"Priority\": 2}]}, \"AdminCreateUserConfig\": {\"AllowAdminCreateUserOnly\": true}, \"EmailVerificationMessage\": \"The verification code to your new account is {####}\", \"EmailVerificationSubject\": \"Verify your new account\", \"SmsVerificationMessage\": \"The verification code to your new account is {####}\", \"VerificationMessageTemplate\": {\"DefaultEmailOption\": \"CONFIRM_WITH_CODE\", \"EmailMessage\": \"The verification code to your new account is {####}\", \"EmailSubject\": \"Verify your new account\", \"SmsMessage\": \"The verification code to your new account is {####}\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"poolclient2623294C\": {\"Type\": \"AWS::Cognito::UserPoolClient\", \"Properties\": {\"UserPoolId\": {\"Ref\": \"pool056F3F7E\"}, \"AllowedOAuthFlows\": [\"implicit\", \"code\"], \"AllowedOAuthFlowsUserPoolClient\": true, \"AllowedOAuthScopes\": [\"profile\", \"phone\", \"email\", \"openid\", \"aws.cognito.signin.user.admin\"], \"CallbackURLs\": [\"https://example.com\"], \"SupportedIdentityProviders\": [{\"Ref\": \"apple9B5408AC\"}, \"COGNITO\"]}}, \"pooldomain430FA744\": {\"Type\": \"AWS::Cognito::UserPoolDomain\", \"Properties\": {\"Domain\": \"nija-test-pool\", \"UserPoolId\": {\"Ref\": \"pool056F3F7E\"}}}, \"apple9B5408AC\": {\"Type\": \"AWS::Cognito::UserPoolIdentityProvider\", \"Properties\": {\"ProviderName\": \"SignInWithApple\", \"ProviderType\": \"SignInWithApple\", \"UserPoolId\": {\"Ref\": \"pool056F3F7E\"}, \"AttributeMapping\": {\"family_name\": \"lastName\", \"given_name\": \"firstName\"}, \"ProviderDetails\": {\"client_id\": \"com.amzn.cdk\", \"team_id\": \"CDKTEAMCDK\", \"key_id\": \"CDKKEYCDK1\", \"private_key\": \"PRIV_KEY_CDK\", \"authorize_scopes\": \"email name\"}}}}, \"Outputs\": {\"SignInLink\": {\"Value\": {\"Fn::Join\": [\"\", [\"https://\", {\"Ref\": \"pooldomain430FA744\"}, \".auth.\", {\"Ref\": \"AWS::Region\"}, \".amazoncognito.com/login?client_id=\", {\"Ref\": \"poolclient2623294C\"}, \"&response_type=code&redirect_uri=https://example.com\"]]}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import { App, CfnOutput, RemovalPolicy, Stack } from 'aws-cdk-lib';\nimport { ProviderAttribute, UserPool, UserPoolIdentityProviderApple } from 'aws-cdk-lib/aws-cognito';\n\n/*\n * Stack verification steps\n * * Visit the URL provided by stack output 'SignInLink' in a browser, and verify the 'Sign In With Apple' link shows up.\n * * If you plug in valid 'Sign In With Apple' credentials, the federated log in should work.\n */\nconst app = new App();\nconst stack = new Stack(app, 'integ-user-pool-idp-apple');\n\nconst userpool = new UserPool(stack, 'pool', {\n  removalPolicy: RemovalPolicy.DESTROY,\n});\n\nnew UserPoolIdentityProviderApple(stack, 'apple', {\n  userPool: userpool,\n  clientId: 'com.amzn.cdk',\n  teamId: 'CDKTEAMCDK',\n  keyId: 'CDKKEYCDK1',\n  privateKey: 'PRIV_KEY_CDK',\n  scopes: ['email', 'name'],\n  attributeMapping: {\n    familyName: ProviderAttribute.APPLE_LAST_NAME,\n    givenName: ProviderAttribute.APPLE_FIRST_NAME,\n  },\n});\n\nconst client = userpool.addClient('client');\n\nconst domain = userpool.addDomain('domain', {\n  cognitoDomain: {\n    domainPrefix: 'nija-test-pool',\n  },\n});\n\nnew CfnOutput(stack, 'SignInLink', {\n  value: domain.signInUrl(client, {\n    redirectUri: 'https://example.com',\n  }),\n});"}
{ "prompt": "{\"Resources\": {\"myuserpoolsmsRole0E16FDD9\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Condition\": {\"StringEquals\": {\"sts:ExternalId\": \"integuserpoolsignupcodemyuserpool08E7AAA5\"}}, \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"cognito-idp.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"Policies\": [{\"PolicyDocument\": {\"Statement\": [{\"Action\": \"sns:Publish\", \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"sns-publish\"}]}}, \"myuserpool01998219\": {\"Type\": \"AWS::Cognito::UserPool\", \"Properties\": {\"AccountRecoverySetting\": {\"RecoveryMechanisms\": [{\"Name\": \"verified_phone_number\", \"Priority\": 1}, {\"Name\": \"verified_email\", \"Priority\": 2}]}, \"AdminCreateUserConfig\": {\"AllowAdminCreateUserOnly\": false}, \"AutoVerifiedAttributes\": [\"email\", \"phone_number\"], \"EmailVerificationMessage\": \"integ-test: Account verification code is {####}\", \"EmailVerificationSubject\": \"integ-test: Verify your account\", \"Policies\": {\"PasswordPolicy\": {\"MinimumLength\": 8, \"RequireLowercase\": false, \"RequireNumbers\": false, \"RequireSymbols\": false, \"RequireUppercase\": false}}, \"SmsConfiguration\": {\"ExternalId\": \"integuserpoolsignupcodemyuserpool08E7AAA5\", \"SnsCallerArn\": {\"Fn::GetAtt\": [\"myuserpoolsmsRole0E16FDD9\", \"Arn\"]}}, \"SmsVerificationMessage\": \"integ-test: Account verification code is {####}\", \"UserPoolName\": \"MyUserPool\", \"VerificationMessageTemplate\": {\"DefaultEmailOption\": \"CONFIRM_WITH_CODE\", \"EmailMessage\": \"integ-test: Account verification code is {####}\", \"EmailSubject\": \"integ-test: Verify your account\", \"SmsMessage\": \"integ-test: Account verification code is {####}\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"myuserpoolclient8A58A3E4\": {\"Type\": \"AWS::Cognito::UserPoolClient\", \"Properties\": {\"UserPoolId\": {\"Ref\": \"myuserpool01998219\"}, \"AllowedOAuthFlows\": [\"implicit\", \"code\"], \"AllowedOAuthFlowsUserPoolClient\": true, \"AllowedOAuthScopes\": [\"profile\", \"phone\", \"email\", \"openid\", \"aws.cognito.signin.user.admin\"], \"CallbackURLs\": [\"https://example.com\"], \"ClientName\": \"signup-test\", \"GenerateSecret\": false, \"SupportedIdentityProviders\": [\"COGNITO\"]}}}, \"Outputs\": {\"userpoolid\": {\"Value\": {\"Ref\": \"myuserpool01998219\"}}, \"clientid\": {\"Value\": {\"Ref\": \"myuserpoolclient8A58A3E4\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import { App, CfnOutput, RemovalPolicy, Stack } from 'aws-cdk-lib';\nimport { UserPool, UserPoolClient, VerificationEmailStyle } from 'aws-cdk-lib/aws-cognito';\n\n/*\n * Stack verification steps:\n * * `aws cognito-idp sign-up --client-id <cfnoutput-client-id> --username user-1 --password pass1234 \\\n *   --user-attributes Name=\"phone_number\",Value=\"<valid-phone-number-with-intl-extension>\"\n * * `aws cognito-idp sign-up --client-id <cfnoutput-client-id> --username user-2 --password pass1234 \\\n *   --user-attributes Name=\"email\",Value=\"<valid-email-address>\"\n * * An email with the message 'integ-test: Account verification code is <code>' should be received.\n * * An SMS with the message 'integ-test: Account verification code is <code>' should be received.\n */\n\nconst app = new App();\nconst stack = new Stack(app, 'integ-user-pool-signup-code');\n\nconst userpool = new UserPool(stack, 'myuserpool', {\n  removalPolicy: RemovalPolicy.DESTROY,\n  userPoolName: 'MyUserPool',\n  autoVerify: {\n    email: true,\n    phone: true,\n  },\n  selfSignUpEnabled: true,\n  userVerification: {\n    emailStyle: VerificationEmailStyle.CODE,\n    emailSubject: 'integ-test: Verify your account',\n    emailBody: 'integ-test: Account verification code is {####}',\n    smsMessage: 'integ-test: Account verification code is {####}',\n  },\n  passwordPolicy: {\n    requireUppercase: false,\n    requireLowercase: false,\n    requireDigits: false,\n    requireSymbols: false,\n  },\n});\n\nconst client = new UserPoolClient(stack, 'myuserpoolclient', {\n  userPool: userpool,\n  userPoolClientName: 'signup-test',\n  generateSecret: false,\n});\n\nnew CfnOutput(stack, 'user-pool-id', {\n  value: userpool.userPoolId,\n});\n\nnew CfnOutput(stack, 'client-id', {\n  value: client.userPoolClientId,\n});"}
{ "prompt": "{\"Resources\": {\"pool056F3F7E\": {\"Type\": \"AWS::Cognito::UserPool\", \"Properties\": {\"AccountRecoverySetting\": {\"RecoveryMechanisms\": [{\"Name\": \"verified_phone_number\", \"Priority\": 1}, {\"Name\": \"verified_email\", \"Priority\": 2}]}, \"AdminCreateUserConfig\": {\"AllowAdminCreateUserOnly\": true}, \"EmailVerificationMessage\": \"The verification code to your new account is {####}\", \"EmailVerificationSubject\": \"Verify your new account\", \"SmsVerificationMessage\": \"The verification code to your new account is {####}\", \"VerificationMessageTemplate\": {\"DefaultEmailOption\": \"CONFIRM_WITH_CODE\", \"EmailMessage\": \"The verification code to your new account is {####}\", \"EmailSubject\": \"Verify your new account\", \"SmsMessage\": \"The verification code to your new account is {####}\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"poolclient2623294C\": {\"Type\": \"AWS::Cognito::UserPoolClient\", \"Properties\": {\"UserPoolId\": {\"Ref\": \"pool056F3F7E\"}, \"AllowedOAuthFlows\": [\"implicit\", \"code\"], \"AllowedOAuthFlowsUserPoolClient\": true, \"AllowedOAuthScopes\": [\"profile\", \"phone\", \"email\", \"openid\", \"aws.cognito.signin.user.admin\"], \"CallbackURLs\": [\"https://example.com\"], \"SupportedIdentityProviders\": [{\"Ref\": \"googleDB2C5242\"}, \"COGNITO\"]}}, \"pooldomain430FA744\": {\"Type\": \"AWS::Cognito::UserPoolDomain\", \"Properties\": {\"Domain\": \"nija-test-pool\", \"UserPoolId\": {\"Ref\": \"pool056F3F7E\"}}}, \"GoogleClientSecretValueD28C3034\": {\"Type\": \"AWS::SecretsManager::Secret\", \"Properties\": {\"GenerateSecretString\": {\"ExcludePunctuation\": true, \"PasswordLength\": 20}, \"Name\": \"GoogleClientSecretValueName\"}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"googleDB2C5242\": {\"Type\": \"AWS::Cognito::UserPoolIdentityProvider\", \"Properties\": {\"ProviderName\": \"Google\", \"ProviderType\": \"Google\", \"UserPoolId\": {\"Ref\": \"pool056F3F7E\"}, \"AttributeMapping\": {\"given_name\": \"given_name\", \"family_name\": \"family_name\", \"email\": \"email\", \"gender\": \"gender\", \"names\": \"names\"}, \"ProviderDetails\": {\"client_id\": \"google-client-id\", \"client_secret\": {\"Fn::Join\": [\"\", [\"{{resolve:secretsmanager:\", {\"Ref\": \"GoogleClientSecretValueD28C3034\"}, \":SecretString:::}}\"]]}, \"authorize_scopes\": \"profile\"}}}}, \"Outputs\": {\"SignInLink\": {\"Value\": {\"Fn::Join\": [\"\", [\"https://\", {\"Ref\": \"pooldomain430FA744\"}, \".auth.\", {\"Ref\": \"AWS::Region\"}, \".amazoncognito.com/login?client_id=\", {\"Ref\": \"poolclient2623294C\"}, \"&response_type=code&redirect_uri=https://example.com\"]]}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import { Secret } from 'aws-cdk-lib/aws-secretsmanager';\nimport { App, CfnOutput, RemovalPolicy, Stack } from 'aws-cdk-lib';\nimport { ProviderAttribute, UserPool, UserPoolIdentityProviderGoogle } from 'aws-cdk-lib/aws-cognito';\n\n/*\n * Stack verification steps\n * * Visit the URL provided by stack output 'SignInLink' in a browser, and verify the 'Google' sign in link shows up.\n * * If you plug in valid 'Google' credentials, the federated log in should work.\n */\n\nconst app = new App();\nconst stack = new Stack(app, 'integ-user-pool-idp-google');\n\nconst userpool = new UserPool(stack, 'pool', {\n  removalPolicy: RemovalPolicy.DESTROY,\n});\n\nconst secret = new Secret(stack, 'GoogleClientSecretValue', {\n  secretName: 'GoogleClientSecretValueName',\n  generateSecretString: {\n    excludePunctuation: true,\n    passwordLength: 20,\n  },\n});\n\nconst clientSecret = Secret.fromSecretAttributes(stack, 'GoogleClientSecretValue2', {\n  secretCompleteArn: secret.secretArn,\n}).secretValue;\n\nnew UserPoolIdentityProviderGoogle(stack, 'google', {\n  userPool: userpool,\n  clientId: 'google-client-id',\n  clientSecretValue: clientSecret,\n  attributeMapping: {\n    givenName: ProviderAttribute.GOOGLE_GIVEN_NAME,\n    familyName: ProviderAttribute.GOOGLE_FAMILY_NAME,\n    email: ProviderAttribute.GOOGLE_EMAIL,\n    gender: ProviderAttribute.GOOGLE_GENDER,\n    custom: {\n      names: ProviderAttribute.GOOGLE_NAMES,\n    },\n  },\n});\n\nconst client = userpool.addClient('client');\n\nconst domain = userpool.addDomain('domain', {\n  cognitoDomain: {\n    domainPrefix: 'nija-test-pool',\n  },\n});\n\nnew CfnOutput(stack, 'SignInLink', {\n  value: domain.signInUrl(client, {\n    redirectUri: 'https://example.com',\n  }),\n});"}
{ "prompt": "{\"Resources\": {\"Vpc8378EB38\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"test-efs-integ/Vpc\"}]}}, \"VpcPublicSubnet1Subnet5C2D37C4\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"test-efs-integ/Vpc/PublicSubnet1\"}]}}, \"VpcPublicSubnet1RouteTable6C95E38E\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"test-efs-integ/Vpc/PublicSubnet1\"}]}}, \"VpcPublicSubnet1RouteTableAssociation97140677\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet1RouteTable6C95E38E\"}, \"SubnetId\": {\"Ref\": \"VpcPublicSubnet1Subnet5C2D37C4\"}}}, \"VpcPublicSubnet1DefaultRoute3DA9E72A\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet1RouteTable6C95E38E\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VpcIGWD7BA715C\"}}, \"DependsOn\": [\"VpcVPCGWBF912B6E\"]}, \"VpcPublicSubnet1EIPD7E02669\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"test-efs-integ/Vpc/PublicSubnet1\"}]}}, \"VpcPublicSubnet1NATGateway4D7517AA\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VpcPublicSubnet1Subnet5C2D37C4\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VpcPublicSubnet1EIPD7E02669\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"test-efs-integ/Vpc/PublicSubnet1\"}]}, \"DependsOn\": [\"VpcPublicSubnet1DefaultRoute3DA9E72A\", \"VpcPublicSubnet1RouteTableAssociation97140677\"]}, \"VpcPublicSubnet2Subnet691E08A3\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"test-efs-integ/Vpc/PublicSubnet2\"}]}}, \"VpcPublicSubnet2RouteTable94F7E489\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"test-efs-integ/Vpc/PublicSubnet2\"}]}}, \"VpcPublicSubnet2RouteTableAssociationDD5762D8\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet2RouteTable94F7E489\"}, \"SubnetId\": {\"Ref\": \"VpcPublicSubnet2Subnet691E08A3\"}}}, \"VpcPublicSubnet2DefaultRoute97F91067\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet2RouteTable94F7E489\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VpcIGWD7BA715C\"}}, \"DependsOn\": [\"VpcVPCGWBF912B6E\"]}, \"VpcPrivateSubnet1Subnet536B997A\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"test-efs-integ/Vpc/PrivateSubnet1\"}]}}, \"VpcPrivateSubnet1RouteTableB2C5B500\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"test-efs-integ/Vpc/PrivateSubnet1\"}]}}, \"VpcPrivateSubnet1RouteTableAssociation70C59FA6\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet1RouteTableB2C5B500\"}, \"SubnetId\": {\"Ref\": \"VpcPrivateSubnet1Subnet536B997A\"}}}, \"VpcPrivateSubnet1DefaultRouteBE02A9ED\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet1RouteTableB2C5B500\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VpcPublicSubnet1NATGateway4D7517AA\"}}}, \"VpcPrivateSubnet2Subnet3788AAA1\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"test-efs-integ/Vpc/PrivateSubnet2\"}]}}, \"VpcPrivateSubnet2RouteTableA678073B\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"test-efs-integ/Vpc/PrivateSubnet2\"}]}}, \"VpcPrivateSubnet2RouteTableAssociationA89CAD56\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet2RouteTableA678073B\"}, \"SubnetId\": {\"Ref\": \"VpcPrivateSubnet2Subnet3788AAA1\"}}}, \"VpcPrivateSubnet2DefaultRoute060D2087\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet2RouteTableA678073B\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VpcPublicSubnet1NATGateway4D7517AA\"}}}, \"VpcIGWD7BA715C\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"test-efs-integ/Vpc\"}]}}, \"VpcVPCGWBF912B6E\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"InternetGatewayId\": {\"Ref\": \"VpcIGWD7BA715C\"}}}, \"FileSystem8A8E25C0\": {\"Type\": \"AWS::EFS::FileSystem\", \"Properties\": {\"Encrypted\": true, \"FileSystemTags\": [{\"Key\": \"Name\", \"Value\": \"test-efs-integ/FileSystem\"}]}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"FileSystemEfsSecurityGroup212D3ACB\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"test-efs-integ/FileSystem/EfsSecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"Tags\": [{\"Key\": \"Name\", \"Value\": \"test-efs-integ/FileSystem\"}], \"VpcId\": {\"Ref\": \"Vpc8378EB38\"}}}, \"FileSystemEfsMountTarget1586453F0\": {\"Type\": \"AWS::EFS::MountTarget\", \"Properties\": {\"FileSystemId\": {\"Ref\": \"FileSystem8A8E25C0\"}, \"SecurityGroups\": [{\"Fn::GetAtt\": [\"FileSystemEfsSecurityGroup212D3ACB\", \"GroupId\"]}], \"SubnetId\": {\"Ref\": \"VpcPrivateSubnet1Subnet536B997A\"}}}, \"FileSystemEfsMountTarget24B8EBB43\": {\"Type\": \"AWS::EFS::MountTarget\", \"Properties\": {\"FileSystemId\": {\"Ref\": \"FileSystem8A8E25C0\"}, \"SecurityGroups\": [{\"Fn::GetAtt\": [\"FileSystemEfsSecurityGroup212D3ACB\", \"GroupId\"]}], \"SubnetId\": {\"Ref\": \"VpcPrivateSubnet2Subnet3788AAA1\"}}}, \"FileSystemAccessPointF8178182\": {\"Type\": \"AWS::EFS::AccessPoint\", \"Properties\": {\"FileSystemId\": {\"Ref\": \"FileSystem8A8E25C0\"}, \"AccessPointTags\": [{\"Key\": \"Name\", \"Value\": \"test-efs-integ/FileSystem/AccessPoint\"}], \"PosixUser\": {\"Gid\": \"1000\", \"Uid\": \"1000\"}, \"RootDirectory\": {\"CreationInfo\": {\"OwnerGid\": \"1000\", \"OwnerUid\": \"1000\", \"Permissions\": \"755\"}, \"Path\": \"/custom-path\"}}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as cdk from 'aws-cdk-lib';\nimport { FileSystem } from 'aws-cdk-lib/aws-efs';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'test-efs-integ');\n\nconst vpc = new ec2.Vpc(stack, 'Vpc', { maxAzs: 3, natGateways: 1, restrictDefaultSecurityGroup: false });\n\nconst fileSystem = new FileSystem(stack, 'FileSystem', {\n  vpc,\n});\n\nfileSystem.addAccessPoint('AccessPoint', {\n  createAcl: {\n    ownerGid: '1000',\n    ownerUid: '1000',\n    permissions: '755',\n  },\n  path: '/custom-path',\n  posixUser: {\n    gid: '1000',\n    uid: '1000',\n  },\n});\n"}
{ "prompt": "{\"Transform\": [\"AWS::SecretsManager-2020-07-23\"], \"Resources\": {\"SecretA720EF05\": {\"Type\": \"AWS::SecretsManager::Secret\", \"Properties\": {\"GenerateSecretString\": {}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"SecretSchedule18F2CB66\": {\"Type\": \"AWS::SecretsManager::RotationSchedule\", \"Properties\": {\"SecretId\": {\"Ref\": \"SecretA720EF05\"}, \"HostedRotationLambda\": {\"ExcludeCharacters\": \" %+~`#$&*()|[]{}:;<>?!'/@\\\"\\\\\", \"RotationType\": \"MySQLSingleUser\"}, \"RotationRules\": {\"AutomaticallyAfterDays\": 30}}}, \"SecretPolicy06C9821C\": {\"Type\": \"AWS::SecretsManager::ResourcePolicy\", \"Properties\": {\"ResourcePolicy\": {\"Statement\": [{\"Action\": \"secretsmanager:DeleteSecret\", \"Effect\": \"Deny\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}, \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"SecretId\": {\"Ref\": \"SecretA720EF05\"}}}, \"CustomSecret5DC95D87\": {\"Type\": \"AWS::SecretsManager::Secret\", \"Properties\": {\"GenerateSecretString\": {\"ExcludeCharacters\": \"&@/\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"CustomSecretScheduleDD99F351\": {\"Type\": \"AWS::SecretsManager::RotationSchedule\", \"Properties\": {\"SecretId\": {\"Ref\": \"CustomSecret5DC95D87\"}, \"HostedRotationLambda\": {\"ExcludeCharacters\": \"&@/\", \"RotationType\": \"MySQLSingleUser\"}, \"RotateImmediatelyOnUpdate\": false, \"RotationRules\": {\"AutomaticallyAfterDays\": 30}}}, \"CustomSecretPolicy8E81D2EB\": {\"Type\": \"AWS::SecretsManager::ResourcePolicy\", \"Properties\": {\"ResourcePolicy\": {\"Statement\": [{\"Action\": \"secretsmanager:DeleteSecret\", \"Effect\": \"Deny\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}, \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"SecretId\": {\"Ref\": \"CustomSecret5DC95D87\"}}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as cdk from 'aws-cdk-lib';\nimport * as secretsmanager from 'aws-cdk-lib/aws-secretsmanager';\n\nclass TestStack extends cdk.Stack {\n  constructor(scope: cdk.App, id: string) {\n    super(scope, id);\n\n    const secret = new secretsmanager.Secret(this, 'Secret');\n    secret.addRotationSchedule('Schedule', {\n      hostedRotation: secretsmanager.HostedRotation.mysqlSingleUser(),\n    });\n\n    const customSecret = new secretsmanager.Secret(this, 'CustomSecret', {\n      generateSecretString: {\n        excludeCharacters: '&@/',\n      },\n    });\n    customSecret.addRotationSchedule('Schedule', {\n      hostedRotation: secretsmanager.HostedRotation.mysqlSingleUser(),\n      rotateImmediatelyOnUpdate: false,\n    });\n  }\n}\n\nconst app = new cdk.App();\nnew TestStack(app, 'cdk-integ-secret-hosted-rotation');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"SecretA720EF05\": {\"Type\": \"AWS::SecretsManager::Secret\", \"Properties\": {\"GenerateSecretString\": {}, \"ReplicaRegions\": [{\"Region\": \"eu-central-1\"}]}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as cdk from 'aws-cdk-lib';\nimport * as secretsmanager from 'aws-cdk-lib/aws-secretsmanager';\n\nclass TestStack extends cdk.Stack {\n  constructor(scope: cdk.App, id: string) {\n    super(scope, id);\n\n    const secret = new secretsmanager.Secret(this, 'Secret');\n    secret.addReplicaRegion('eu-central-1');\n  }\n}\n\nconst app = new cdk.App();\nnew TestStack(app, 'cdk-integ-secrets-replica');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"DefaultSecret67034726\": {\"Type\": \"AWS::SecretsManager::Secret\", \"Properties\": {\"GenerateSecretString\": {}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"NamedSecret7CD5422D\": {\"Type\": \"AWS::SecretsManager::Secret\", \"Properties\": {\"GenerateSecretString\": {}, \"Name\": \"namedSecret\"}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"NamedSecretWithHyphen6DC9716A\": {\"Type\": \"AWS::SecretsManager::Secret\", \"Properties\": {\"GenerateSecretString\": {}, \"Name\": \"named-secret-1\"}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"AReallyLongLogicalIThatWillBeTrimmedBeforeItsUsedInTheName83476586\": {\"Type\": \"AWS::SecretsManager::Secret\", \"Properties\": {\"GenerateSecretString\": {}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"CustomIntegVerificationSecretNameMatchesCustomResourceProviderRole4A6F8B2A\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Version\": \"2012-10-17\", \"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}]}, \"ManagedPolicyArns\": [{\"Fn::Sub\": \"arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"}], \"Policies\": [{\"PolicyName\": \"Inline\", \"PolicyDocument\": {\"Version\": \"2012-10-17\", \"Statement\": [{\"Effect\": \"Allow\", \"Resource\": [{\"Ref\": \"DefaultSecret67034726\"}, {\"Ref\": \"NamedSecret7CD5422D\"}, {\"Ref\": \"NamedSecretWithHyphen6DC9716A\"}, {\"Ref\": \"AReallyLongLogicalIThatWillBeTrimmedBeforeItsUsedInTheName83476586\"}], \"Action\": [\"secretsmanager:DescribeSecret\"]}]}}]}}, \"CustomIntegVerificationSecretNameMatchesCustomResourceProviderHandler2A57F6AE\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"3457452f641c1ca5c1e19a921fee42f695d632fe3200b2f5ed8da685bc286ebc.zip\"}, \"Timeout\": 900, \"MemorySize\": 128, \"Handler\": \"__entrypoint__.handler\", \"Role\": {\"Fn::GetAtt\": [\"CustomIntegVerificationSecretNameMatchesCustomResourceProviderRole4A6F8B2A\", \"Arn\"]}, \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"CustomIntegVerificationSecretNameMatchesCustomResourceProviderRole4A6F8B2A\"]}, \"SecretNameVerification\": {\"Type\": \"Custom::IntegVerificationSecretNameMatches\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"CustomIntegVerificationSecretNameMatchesCustomResourceProviderHandler2A57F6AE\", \"Arn\"]}, \"Secrets\": [{\"secretArn\": {\"Ref\": \"DefaultSecret67034726\"}, \"secretName\": {\"Fn::Join\": [\"-\", [{\"Fn::Select\": [0, {\"Fn::Split\": [\"-\", {\"Fn::Select\": [6, {\"Fn::Split\": [\":\", {\"Ref\": \"DefaultSecret67034726\"}]}]}]}]}, {\"Fn::Select\": [1, {\"Fn::Split\": [\"-\", {\"Fn::Select\": [6, {\"Fn::Split\": [\":\", {\"Ref\": \"DefaultSecret67034726\"}]}]}]}]}]]}}, {\"secretArn\": {\"Ref\": \"NamedSecret7CD5422D\"}, \"secretName\": {\"Fn::Select\": [0, {\"Fn::Split\": [\"-\", {\"Fn::Select\": [6, {\"Fn::Split\": [\":\", {\"Ref\": \"NamedSecret7CD5422D\"}]}]}]}]}}, {\"secretArn\": {\"Ref\": \"NamedSecretWithHyphen6DC9716A\"}, \"secretName\": {\"Fn::Join\": [\"-\", [{\"Fn::Select\": [0, {\"Fn::Split\": [\"-\", {\"Fn::Select\": [6, {\"Fn::Split\": [\":\", {\"Ref\": \"NamedSecretWithHyphen6DC9716A\"}]}]}]}]}, {\"Fn::Select\": [1, {\"Fn::Split\": [\"-\", {\"Fn::Select\": [6, {\"Fn::Split\": [\":\", {\"Ref\": \"NamedSecretWithHyphen6DC9716A\"}]}]}]}]}, {\"Fn::Select\": [2, {\"Fn::Split\": [\"-\", {\"Fn::Select\": [6, {\"Fn::Split\": [\":\", {\"Ref\": \"NamedSecretWithHyphen6DC9716A\"}]}]}]}]}]]}}, {\"secretArn\": {\"Ref\": \"AReallyLongLogicalIThatWillBeTrimmedBeforeItsUsedInTheName83476586\"}, \"secretName\": {\"Fn::Join\": [\"-\", [{\"Fn::Select\": [0, {\"Fn::Split\": [\"-\", {\"Fn::Select\": [6, {\"Fn::Split\": [\":\", {\"Ref\": \"AReallyLongLogicalIThatWillBeTrimmedBeforeItsUsedInTheName83476586\"}]}]}]}]}, {\"Fn::Select\": [1, {\"Fn::Split\": [\"-\", {\"Fn::Select\": [6, {\"Fn::Split\": [\":\", {\"Ref\": \"AReallyLongLogicalIThatWillBeTrimmedBeforeItsUsedInTheName83476586\"}]}]}]}]}]]}}]}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as path from 'path';\nimport * as cdk from 'aws-cdk-lib';\nimport * as secretsmanager from 'aws-cdk-lib/aws-secretsmanager';\n\n/**\n * Creates several secrets, with varying names and IDs, with the parseOwnedSecretName feature flag set,\n * to verify the secretName returned by `Secret.secretName` matches the `Name` returned by `DescribeSecrets`.\n */\n\nclass SecretsManagerStack extends cdk.Stack {\n  constructor(scope: cdk.App, id: string) {\n    super(scope, id);\n\n    const defaultSecret = new secretsmanager.Secret(this, 'DefaultSecret');\n    const namedSecret = new secretsmanager.Secret(this, 'NamedSecret', { secretName: 'namedSecret' });\n    const namedSecretWithHyphen = new secretsmanager.Secret(this, 'NamedSecretWithHyphen', { secretName: 'named-secret-1' });\n    const longSecret = new secretsmanager.Secret(this, 'AReallyLongLogicalIThatWillBeTrimmedBeforeItsUsedInTheName');\n\n    const secrets = [defaultSecret, namedSecret, namedSecretWithHyphen, longSecret];\n\n    const resourceType = 'Custom::IntegVerificationSecretNameMatches';\n    const serviceToken = cdk.CustomResourceProvider.getOrCreate(this, resourceType, {\n      codeDirectory: path.join(__dirname, 'integ.secret-name-parsed.handler'),\n      runtime: cdk.CustomResourceProviderRuntime.NODEJS_14_X,\n      policyStatements: [{\n        Effect: 'Allow',\n        Resource: secrets.map(s => s.secretArn),\n        Action: ['secretsmanager:DescribeSecret'],\n      }],\n    });\n    new cdk.CustomResource(this, 'SecretNameVerification', {\n      resourceType: resourceType,\n      serviceToken,\n      properties: {\n        Secrets: secrets.map(s => ({ secretArn: s.secretArn, secretName: s.secretName })),\n      },\n    });\n  }\n}\n\nconst app = new cdk.App();\nnew SecretsManagerStack(app, 'Integ-SecretsManager-ParsedSecretName');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"Key961B73FD\": {\"Type\": \"AWS::KMS::Key\", \"Properties\": {\"KeyPolicy\": {\"Statement\": [{\"Action\": \"kms:*\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}, \"Resource\": \"*\"}, {\"Action\": [\"kms:CreateGrant\", \"kms:Decrypt\", \"kms:DescribeKey\", \"kms:Encrypt\", \"kms:GenerateDataKey*\", \"kms:ReEncrypt*\"], \"Condition\": {\"StringEquals\": {\"kms:ViaService\": {\"Fn::Join\": [\"\", [\"secretsmanager.\", {\"Ref\": \"AWS::Region\"}, \".amazonaws.com\"]]}}}, \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}, \"Resource\": \"*\"}, {\"Action\": [\"kms:Decrypt\", \"kms:Encrypt\", \"kms:GenerateDataKey*\", \"kms:ReEncrypt*\"], \"Condition\": {\"StringEquals\": {\"kms:ViaService\": {\"Fn::Join\": [\"\", [\"secretsmanager.\", {\"Ref\": \"AWS::Region\"}, \".amazonaws.com\"]]}}}, \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::GetAtt\": [\"LambdaServiceRoleA8ED4D3B\", \"Arn\"]}}, \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"SecretA720EF05\": {\"Type\": \"AWS::SecretsManager::Secret\", \"Properties\": {\"GenerateSecretString\": {}, \"KmsKeyId\": {\"Fn::GetAtt\": [\"Key961B73FD\", \"Arn\"]}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"SecretSchedule18F2CB66\": {\"Type\": \"AWS::SecretsManager::RotationSchedule\", \"Properties\": {\"SecretId\": {\"Ref\": \"SecretA720EF05\"}, \"RotationLambdaARN\": {\"Fn::GetAtt\": [\"LambdaD247545B\", \"Arn\"]}, \"RotationRules\": {\"AutomaticallyAfterDays\": 30}}}, \"SecretPolicy06C9821C\": {\"Type\": \"AWS::SecretsManager::ResourcePolicy\", \"Properties\": {\"ResourcePolicy\": {\"Statement\": [{\"Action\": \"secretsmanager:DeleteSecret\", \"Effect\": \"Deny\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}, \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"SecretId\": {\"Ref\": \"SecretA720EF05\"}}}, \"LambdaServiceRoleA8ED4D3B\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"LambdaServiceRoleDefaultPolicyDAE46E21\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"secretsmanager:DescribeSecret\", \"secretsmanager:GetSecretValue\", \"secretsmanager:PutSecretValue\", \"secretsmanager:UpdateSecretVersionStage\"], \"Effect\": \"Allow\", \"Resource\": {\"Ref\": \"SecretA720EF05\"}}, {\"Action\": \"secretsmanager:GetRandomPassword\", \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"LambdaServiceRoleDefaultPolicyDAE46E21\", \"Roles\": [{\"Ref\": \"LambdaServiceRoleA8ED4D3B\"}]}}, \"LambdaD247545B\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"NOOP\"}, \"Role\": {\"Fn::GetAtt\": [\"LambdaServiceRoleA8ED4D3B\", \"Arn\"]}, \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"LambdaServiceRoleDefaultPolicyDAE46E21\", \"LambdaServiceRoleA8ED4D3B\"]}, \"LambdaInvokeN0a2GKfZP0JmDqDEVhhu6A0TUv3NyNbk4YMFKNc69846677\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"LambdaD247545B\", \"Arn\"]}, \"Principal\": \"secretsmanager.amazonaws.com\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as kms from 'aws-cdk-lib/aws-kms';\nimport * as lambda from 'aws-cdk-lib/aws-lambda';\nimport * as cdk from 'aws-cdk-lib';\nimport * as secretsmanager from 'aws-cdk-lib/aws-secretsmanager';\n\nclass TestStack extends cdk.Stack {\n  constructor(scope: cdk.App, id: string) {\n    super(scope, id);\n\n    const key = new kms.Key(this, 'Key', { removalPolicy: cdk.RemovalPolicy.DESTROY });\n\n    const secret = new secretsmanager.Secret(this, 'Secret', {\n      encryptionKey: key,\n    });\n\n    secret.addRotationSchedule('Schedule', {\n      rotationLambda: new lambda.Function(this, 'Lambda', {\n        runtime: lambda.Runtime.NODEJS_14_X,\n        handler: 'index.handler',\n        code: lambda.Code.fromInline('NOOP'),\n      }),\n    });\n  }\n}\n\nconst app = new cdk.App();\nnew TestStack(app, 'cdk-integ-secret-lambda-rotation');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"TestRole6C9272DF\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}}, \"TestRoleDefaultPolicyD1C92014\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"secretsmanager:DescribeSecret\", \"secretsmanager:GetSecretValue\"], \"Effect\": \"Allow\", \"Resource\": {\"Ref\": \"SecretA720EF05\"}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"TestRoleDefaultPolicyD1C92014\", \"Roles\": [{\"Ref\": \"TestRole6C9272DF\"}]}}, \"SecretA720EF05\": {\"Type\": \"AWS::SecretsManager::Secret\", \"Properties\": {\"GenerateSecretString\": {}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"User00B015A1\": {\"Type\": \"AWS::IAM::User\", \"Properties\": {\"LoginProfile\": {\"Password\": {\"Fn::Join\": [\"\", [\"{{resolve:secretsmanager:\", {\"Ref\": \"SecretA720EF05\"}, \":SecretString:::}}\"]]}}}}, \"TemplatedSecret3D98B577\": {\"Type\": \"AWS::SecretsManager::Secret\", \"Properties\": {\"GenerateSecretString\": {\"GenerateStringKey\": \"password\", \"SecretStringTemplate\": \"{\\\"username\\\":\\\"user\\\"}\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"OtherUser6093621C\": {\"Type\": \"AWS::IAM::User\", \"Properties\": {\"LoginProfile\": {\"Password\": {\"Fn::Join\": [\"\", [\"{{resolve:secretsmanager:\", {\"Ref\": \"TemplatedSecret3D98B577\"}, \":SecretString:password::}}\"]]}}, \"UserName\": {\"Fn::Join\": [\"\", [\"{{resolve:secretsmanager:\", {\"Ref\": \"TemplatedSecret3D98B577\"}, \":SecretString:username::}}\"]]}}}, \"AccessKeyE6B25659\": {\"Type\": \"AWS::IAM::AccessKey\", \"Properties\": {\"UserName\": {\"Ref\": \"User00B015A1\"}}}, \"PredefinedSecret660AF4EC\": {\"Type\": \"AWS::SecretsManager::Secret\", \"Properties\": {\"SecretString\": {\"Fn::GetAtt\": [\"AccessKeyE6B25659\", \"SecretAccessKey\"]}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"JSONSecret6FE68AEF\": {\"Type\": \"AWS::SecretsManager::Secret\", \"Properties\": {\"SecretString\": {\"Fn::Join\": [\"\", [\"{\\\"username\\\":\\\"\", {\"Ref\": \"User00B015A1\"}, \"\\\",\\\"database\\\":\\\"foo\\\",\\\"password\\\":\\\"\", {\"Fn::GetAtt\": [\"AccessKeyE6B25659\", \"SecretAccessKey\"]}, \"\\\"}\"]]}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as iam from 'aws-cdk-lib/aws-iam';\nimport * as cdk from 'aws-cdk-lib';\nimport { SecretValue } from 'aws-cdk-lib';\nimport * as secretsmanager from 'aws-cdk-lib/aws-secretsmanager';\n\nclass SecretsManagerStack extends cdk.Stack {\n  constructor(scope: cdk.App, id: string) {\n    super(scope, id);\n\n    const role = new iam.Role(this, 'TestRole', { assumedBy: new iam.AccountRootPrincipal() });\n\n    /// !show\n    // Default secret\n    const secret = new secretsmanager.Secret(this, 'Secret');\n    secret.grantRead(role);\n\n    const user = new iam.User(this, 'User', {\n      password: secret.secretValue,\n    });\n\n    // Templated secret\n    const templatedSecret = new secretsmanager.Secret(this, 'TemplatedSecret', {\n      generateSecretString: {\n        secretStringTemplate: JSON.stringify({ username: 'user' }),\n        generateStringKey: 'password',\n      },\n    });\n\n    new iam.User(this, 'OtherUser', {\n      // 'userName' is not actually a secret, so it's okay to use `unsafeUnwrap` to convert\n      // the `SecretValue` into a 'string'.\n      userName: templatedSecret.secretValueFromJson('username').unsafeUnwrap(),\n      password: templatedSecret.secretValueFromJson('password'),\n    });\n\n    // Secret with predefined value\n    const accessKey = new iam.AccessKey(this, 'AccessKey', { user });\n    new secretsmanager.Secret(this, 'PredefinedSecret', {\n      secretStringValue: accessKey.secretAccessKey,\n    });\n\n    // JSON secret\n    new secretsmanager.Secret(this, 'JSONSecret', {\n      secretObjectValue: {\n        username: SecretValue.unsafePlainText(user.userName),\n        database: SecretValue.unsafePlainText('foo'),\n        password: accessKey.secretAccessKey,\n      },\n    });\n    /// !hide\n  }\n}\n\nconst app = new cdk.App();\nnew SecretsManagerStack(app, 'Integ-SecretsManager-Secret');\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"VPCB9E5F0B4\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStack/VPC\"}]}}, \"VPCPublicSubnet1SubnetB4246D30\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"TestStack/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableFEE4B781\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStack/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableAssociation0B0896DC\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}}}, \"VPCPublicSubnet1DefaultRoute91CEF279\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet1EIP6AD938E8\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStack/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1NATGatewayE0556630\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet1EIP6AD938E8\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStack/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet2Subnet74179F39\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"TestStack/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTable6F1A15F1\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStack/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTableAssociation5A808732\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}}}, \"VPCPublicSubnet2DefaultRouteB7481BBA\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet2EIP4947BC00\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStack/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2NATGateway3C070193\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet2EIP4947BC00\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStack/VPC/PublicSubnet2\"}]}}, \"VPCPrivateSubnet1Subnet8BCA10E0\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"TestStack/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableBE8A6027\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStack/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableAssociation347902D1\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}}}, \"VPCPrivateSubnet1DefaultRouteAE1D6490\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet1NATGatewayE0556630\"}}}, \"VPCPrivateSubnet2SubnetCFCDAA7A\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"TestStack/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTable0A19E10E\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStack/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTableAssociation0C73D413\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}}}, \"VPCPrivateSubnet2DefaultRouteF4F5CFD2\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet2NATGateway3C070193\"}}}, \"VPCIGWB7E252D3\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStack/VPC\"}]}}, \"VPCVPCGW99B986DC\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"InternetGatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}}, \"BastionHostInstanceSecurityGroupE75D4274\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"TestStack/BastionHost/Resource/InstanceSecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"Tags\": [{\"Key\": \"Name\", \"Value\": \"BastionHost\"}], \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}}, \"BastionHostInstanceRoleDD3FA5F1\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": {\"Fn::Join\": [\"\", [\"ec2.\", {\"Ref\": \"AWS::URLSuffix\"}]]}}}], \"Version\": \"2012-10-17\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"BastionHost\"}]}}, \"BastionHostInstanceRoleDefaultPolicy17347525\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"ec2messages:*\", \"ssm:UpdateInstanceInformation\", \"ssmmessages:*\"], \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"BastionHostInstanceRoleDefaultPolicy17347525\", \"Roles\": [{\"Ref\": \"BastionHostInstanceRoleDD3FA5F1\"}]}}, \"BastionHostInstanceProfile770FCA07\": {\"Type\": \"AWS::IAM::InstanceProfile\", \"Properties\": {\"Roles\": [{\"Ref\": \"BastionHostInstanceRoleDD3FA5F1\"}]}}, \"BastionHost30F9ED05\": {\"Type\": \"AWS::EC2::Instance\", \"Properties\": {\"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"IamInstanceProfile\": {\"Ref\": \"BastionHostInstanceProfile770FCA07\"}, \"ImageId\": {\"Ref\": \"SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter\"}, \"InstanceType\": \"t3.nano\", \"SecurityGroupIds\": [{\"Fn::GetAtt\": [\"BastionHostInstanceSecurityGroupE75D4274\", \"GroupId\"]}], \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"BastionHost\"}], \"UserData\": {\"Fn::Base64\": \"#!/bin/bash\"}}, \"DependsOn\": [\"BastionHostInstanceRoleDefaultPolicy17347525\", \"BastionHostInstanceRoleDD3FA5F1\"]}}, \"Outputs\": {\"BastionHostBastionHostIdC743CBD6\": {\"Description\": \"Instance ID of the bastion host. Use this to connect via SSM Session Manager\", \"Value\": {\"Ref\": \"BastionHost30F9ED05\"}}}, \"Parameters\": {\"SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter\": {\"Type\": \"AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>\", \"Default\": \"/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2\"}}}", "completion": "/// !cdk-integ *\nimport * as cdk from 'aws-cdk-lib';\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport { EC2_RESTRICT_DEFAULT_SECURITY_GROUP } from 'aws-cdk-lib/cx-api';\n\nconst app = new cdk.App();\n\nclass TestStack extends cdk.Stack {\n  constructor(scope: cdk.App, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n    this.node.setContext(EC2_RESTRICT_DEFAULT_SECURITY_GROUP, false);\n\n    const vpc = new ec2.Vpc(this, 'VPC');\n\n    new ec2.BastionHostLinux(this, 'BastionHost', { vpc });\n  }\n}\n\nnew TestStack(app, 'TestStack');\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"VPCB9E5F0B4\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc-endpoint/VPC\"}]}}, \"VPCingressSubnet1SubnetBB7FDF67\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"ingress\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc-endpoint/VPC/ingressSubnet1\"}]}}, \"VPCingressSubnet1RouteTableEEF02A64\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc-endpoint/VPC/ingressSubnet1\"}]}}, \"VPCingressSubnet1RouteTableAssociation7700457B\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCingressSubnet1RouteTableEEF02A64\"}, \"SubnetId\": {\"Ref\": \"VPCingressSubnet1SubnetBB7FDF67\"}}}, \"VPCingressSubnet1DefaultRouteC1C9D77C\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCingressSubnet1RouteTableEEF02A64\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCingressSubnet2SubnetE30F0091\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"ingress\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc-endpoint/VPC/ingressSubnet2\"}]}}, \"VPCingressSubnet2RouteTable8565F2D0\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc-endpoint/VPC/ingressSubnet2\"}]}}, \"VPCingressSubnet2RouteTableAssociation35C35494\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCingressSubnet2RouteTable8565F2D0\"}, \"SubnetId\": {\"Ref\": \"VPCingressSubnet2SubnetE30F0091\"}}}, \"VPCingressSubnet2DefaultRoute8E2F45A7\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCingressSubnet2RouteTable8565F2D0\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCIGWB7E252D3\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc-endpoint/VPC\"}]}}, \"VPCVPCGW99B986DC\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"InternetGatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as cdk from 'aws-cdk-lib';\nimport { EC2_RESTRICT_DEFAULT_SECURITY_GROUP } from 'aws-cdk-lib/cx-api';\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\n\n/*\n * Creates a simple vpc with a public subnet and a private reserved subnet.\n * Public subnet should be visible but a private reserved subnet only has IP space reserved.\n * No resources are provisioned in a reserved subnet.\n *\n * Stack verification steps:\n * -- aws ec2 describe-nat-gateways returns { \"natGateways\": []}\n */\n\nconst app = new cdk.App();\n\nclass VpcReservedPrivateSubnetStack extends cdk.Stack {\n  constructor(scope: cdk.App, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n    this.node.setContext(EC2_RESTRICT_DEFAULT_SECURITY_GROUP, false);\n\n    /// !show\n    // Specify no NAT gateways with a reserved private subnet\n    new ec2.Vpc(this, 'VPC', {\n      ipAddresses: ec2.IpAddresses.cidr('10.0.0.0/16'),\n      subnetConfiguration: [\n        {\n          name: 'ingress',\n          subnetType: ec2.SubnetType.PUBLIC,\n        },\n        {\n          name: 'private',\n          subnetType: ec2.SubnetType.PRIVATE_WITH_EGRESS,\n          reserved: true,\n        },\n      ],\n      natGateways: 0,\n    });\n    /// !hide\n  }\n}\nnew VpcReservedPrivateSubnetStack(app, 'aws-cdk-ec2-vpc-endpoint');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"ImportCertificatesCreateCertificates71085A81\": {\"Type\": \"Custom::ACMImportCertificates\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"CustomACMImportCertificatesCustomResourceProviderHandler2EB12457\", \"Arn\"]}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"ImportCertificatesDeleteCertificates6462F0A6\": {\"Type\": \"Custom::ACMImportCertificates\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"CustomACMImportCertificatesCustomResourceProviderHandler2EB12457\", \"Arn\"]}, \"ServerCertificateArn\": {\"Fn::GetAtt\": [\"ImportCertificatesCreateCertificates71085A81\", \"ClientCertificateArn\"]}, \"ClientCertificateArn\": {\"Fn::GetAtt\": [\"ImportCertificatesCreateCertificates71085A81\", \"ServerCertificateArn\"]}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"CustomACMImportCertificatesCustomResourceProviderRole2CE46D14\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Version\": \"2012-10-17\", \"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}]}, \"ManagedPolicyArns\": [{\"Fn::Sub\": \"arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"}], \"Policies\": [{\"PolicyName\": \"Inline\", \"PolicyDocument\": {\"Version\": \"2012-10-17\", \"Statement\": [{\"Effect\": \"Allow\", \"Action\": [\"acm:ImportCertificate\", \"acm:DeleteCertificate\"], \"Resource\": \"*\"}]}}]}}, \"CustomACMImportCertificatesCustomResourceProviderHandler2EB12457\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"1ef463e71119677d383a964bbb0740f0c4de382c21d5a8d68be98334d514ae8a.zip\"}, \"Timeout\": 900, \"MemorySize\": 128, \"Handler\": \"__entrypoint__.handler\", \"Role\": {\"Fn::GetAtt\": [\"CustomACMImportCertificatesCustomResourceProviderRole2CE46D14\", \"Arn\"]}, \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"CustomACMImportCertificatesCustomResourceProviderRole2CE46D14\"]}, \"Vpc8378EB38\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"cdk-ec2-client-vpn-endpoint/Vpc\"}]}, \"DependsOn\": [\"ImportCertificatesCreateCertificates71085A81\", \"ImportCertificatesDeleteCertificates6462F0A6\"]}, \"VpcPublicSubnet1Subnet5C2D37C4\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"cdk-ec2-client-vpn-endpoint/Vpc/PublicSubnet1\"}]}, \"DependsOn\": [\"ImportCertificatesCreateCertificates71085A81\", \"ImportCertificatesDeleteCertificates6462F0A6\"]}, \"VpcPublicSubnet1RouteTable6C95E38E\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"cdk-ec2-client-vpn-endpoint/Vpc/PublicSubnet1\"}]}, \"DependsOn\": [\"ImportCertificatesCreateCertificates71085A81\", \"ImportCertificatesDeleteCertificates6462F0A6\"]}, \"VpcPublicSubnet1RouteTableAssociation97140677\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet1RouteTable6C95E38E\"}, \"SubnetId\": {\"Ref\": \"VpcPublicSubnet1Subnet5C2D37C4\"}}, \"DependsOn\": [\"ImportCertificatesCreateCertificates71085A81\", \"ImportCertificatesDeleteCertificates6462F0A6\"]}, \"VpcPublicSubnet1DefaultRoute3DA9E72A\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet1RouteTable6C95E38E\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VpcIGWD7BA715C\"}}, \"DependsOn\": [\"ImportCertificatesCreateCertificates71085A81\", \"ImportCertificatesDeleteCertificates6462F0A6\", \"VpcVPCGWBF912B6E\"]}, \"VpcPublicSubnet2Subnet691E08A3\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"cdk-ec2-client-vpn-endpoint/Vpc/PublicSubnet2\"}]}, \"DependsOn\": [\"ImportCertificatesCreateCertificates71085A81\", \"ImportCertificatesDeleteCertificates6462F0A6\"]}, \"VpcPublicSubnet2RouteTable94F7E489\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"cdk-ec2-client-vpn-endpoint/Vpc/PublicSubnet2\"}]}, \"DependsOn\": [\"ImportCertificatesCreateCertificates71085A81\", \"ImportCertificatesDeleteCertificates6462F0A6\"]}, \"VpcPublicSubnet2RouteTableAssociationDD5762D8\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet2RouteTable94F7E489\"}, \"SubnetId\": {\"Ref\": \"VpcPublicSubnet2Subnet691E08A3\"}}, \"DependsOn\": [\"ImportCertificatesCreateCertificates71085A81\", \"ImportCertificatesDeleteCertificates6462F0A6\"]}, \"VpcPublicSubnet2DefaultRoute97F91067\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet2RouteTable94F7E489\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VpcIGWD7BA715C\"}}, \"DependsOn\": [\"ImportCertificatesCreateCertificates71085A81\", \"ImportCertificatesDeleteCertificates6462F0A6\", \"VpcVPCGWBF912B6E\"]}, \"VpcIsolatedSubnet1SubnetE48C5737\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Isolated\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Isolated\"}, {\"Key\": \"Name\", \"Value\": \"cdk-ec2-client-vpn-endpoint/Vpc/IsolatedSubnet1\"}]}, \"DependsOn\": [\"ImportCertificatesCreateCertificates71085A81\", \"ImportCertificatesDeleteCertificates6462F0A6\"]}, \"VpcIsolatedSubnet1RouteTable4771E3E5\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"cdk-ec2-client-vpn-endpoint/Vpc/IsolatedSubnet1\"}]}, \"DependsOn\": [\"ImportCertificatesCreateCertificates71085A81\", \"ImportCertificatesDeleteCertificates6462F0A6\"]}, \"VpcIsolatedSubnet1RouteTableAssociationD300FCBB\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcIsolatedSubnet1RouteTable4771E3E5\"}, \"SubnetId\": {\"Ref\": \"VpcIsolatedSubnet1SubnetE48C5737\"}}, \"DependsOn\": [\"ImportCertificatesCreateCertificates71085A81\", \"ImportCertificatesDeleteCertificates6462F0A6\"]}, \"VpcIsolatedSubnet2Subnet16364B91\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Isolated\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Isolated\"}, {\"Key\": \"Name\", \"Value\": \"cdk-ec2-client-vpn-endpoint/Vpc/IsolatedSubnet2\"}]}, \"DependsOn\": [\"ImportCertificatesCreateCertificates71085A81\", \"ImportCertificatesDeleteCertificates6462F0A6\"]}, \"VpcIsolatedSubnet2RouteTable1D30AF7D\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"cdk-ec2-client-vpn-endpoint/Vpc/IsolatedSubnet2\"}]}, \"DependsOn\": [\"ImportCertificatesCreateCertificates71085A81\", \"ImportCertificatesDeleteCertificates6462F0A6\"]}, \"VpcIsolatedSubnet2RouteTableAssociationF7B18CCA\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcIsolatedSubnet2RouteTable1D30AF7D\"}, \"SubnetId\": {\"Ref\": \"VpcIsolatedSubnet2Subnet16364B91\"}}, \"DependsOn\": [\"ImportCertificatesCreateCertificates71085A81\", \"ImportCertificatesDeleteCertificates6462F0A6\"]}, \"VpcIGWD7BA715C\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"cdk-ec2-client-vpn-endpoint/Vpc\"}]}, \"DependsOn\": [\"ImportCertificatesCreateCertificates71085A81\", \"ImportCertificatesDeleteCertificates6462F0A6\"]}, \"VpcVPCGWBF912B6E\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"InternetGatewayId\": {\"Ref\": \"VpcIGWD7BA715C\"}}, \"DependsOn\": [\"ImportCertificatesCreateCertificates71085A81\", \"ImportCertificatesDeleteCertificates6462F0A6\"]}, \"VpcEndpointSecurityGroup7B25EFDC\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"cdk-ec2-client-vpn-endpoint/Vpc/Endpoint/SecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"Tags\": [{\"Key\": \"Name\", \"Value\": \"cdk-ec2-client-vpn-endpoint/Vpc\"}], \"VpcId\": {\"Ref\": \"Vpc8378EB38\"}}, \"DependsOn\": [\"ImportCertificatesCreateCertificates71085A81\", \"ImportCertificatesDeleteCertificates6462F0A6\"]}, \"VpcEndpoint6FF034F6\": {\"Type\": \"AWS::EC2::ClientVpnEndpoint\", \"Properties\": {\"AuthenticationOptions\": [{\"MutualAuthentication\": {\"ClientRootCertificateChainArn\": {\"Fn::GetAtt\": [\"ImportCertificatesCreateCertificates71085A81\", \"ServerCertificateArn\"]}}, \"Type\": \"certificate-authentication\"}], \"ClientCidrBlock\": \"10.100.0.0/16\", \"ConnectionLogOptions\": {\"CloudwatchLogGroup\": {\"Ref\": \"LogGroupF5B46931\"}, \"Enabled\": true}, \"ServerCertificateArn\": {\"Fn::GetAtt\": [\"ImportCertificatesCreateCertificates71085A81\", \"ClientCertificateArn\"]}, \"SecurityGroupIds\": [{\"Fn::GetAtt\": [\"VpcEndpointSecurityGroup7B25EFDC\", \"GroupId\"]}], \"VpcId\": {\"Ref\": \"Vpc8378EB38\"}}, \"DependsOn\": [\"ImportCertificatesCreateCertificates71085A81\", \"ImportCertificatesDeleteCertificates6462F0A6\"]}, \"VpcEndpointAssociation06B066321\": {\"Type\": \"AWS::EC2::ClientVpnTargetNetworkAssociation\", \"Properties\": {\"ClientVpnEndpointId\": {\"Ref\": \"VpcEndpoint6FF034F6\"}, \"SubnetId\": {\"Ref\": \"VpcIsolatedSubnet1SubnetE48C5737\"}}, \"DependsOn\": [\"ImportCertificatesCreateCertificates71085A81\", \"ImportCertificatesDeleteCertificates6462F0A6\"]}, \"VpcEndpointAssociation12B51A67F\": {\"Type\": \"AWS::EC2::ClientVpnTargetNetworkAssociation\", \"Properties\": {\"ClientVpnEndpointId\": {\"Ref\": \"VpcEndpoint6FF034F6\"}, \"SubnetId\": {\"Ref\": \"VpcIsolatedSubnet2Subnet16364B91\"}}, \"DependsOn\": [\"ImportCertificatesCreateCertificates71085A81\", \"ImportCertificatesDeleteCertificates6462F0A6\"]}, \"VpcEndpointAuthorizeAll70F0E613\": {\"Type\": \"AWS::EC2::ClientVpnAuthorizationRule\", \"Properties\": {\"ClientVpnEndpointId\": {\"Ref\": \"VpcEndpoint6FF034F6\"}, \"TargetNetworkCidr\": {\"Fn::GetAtt\": [\"Vpc8378EB38\", \"CidrBlock\"]}, \"AuthorizeAllGroups\": true}, \"DependsOn\": [\"ImportCertificatesCreateCertificates71085A81\", \"ImportCertificatesDeleteCertificates6462F0A6\"]}, \"LogGroupF5B46931\": {\"Type\": \"AWS::Logs::LogGroup\", \"Properties\": {\"RetentionInDays\": 731}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as path from 'path';\nimport * as logs from 'aws-cdk-lib/aws-logs';\nimport { App, CustomResource, CustomResourceProvider, CustomResourceProviderRuntime, RemovalPolicy, Stack, StackProps } from 'aws-cdk-lib';\nimport { Construct } from 'constructs';\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport { EC2_RESTRICT_DEFAULT_SECURITY_GROUP } from 'aws-cdk-lib/cx-api';\n\nclass TestStack extends Stack {\n  constructor(scope: Construct, id: string, props?: StackProps) {\n    super(scope, id, props);\n    this.node.setContext(EC2_RESTRICT_DEFAULT_SECURITY_GROUP, false);\n\n    // Import server and client certificates in ACM\n    const certificates = new ImportCertificates(this, 'ImportCertificates');\n\n    const vpc = new ec2.Vpc(this, 'Vpc', { maxAzs: 2, natGateways: 0 });\n    vpc.node.addDependency(certificates); // ensure certificates are deleted last, when not in use anymore\n\n    const logGroup = new logs.LogGroup(this, 'LogGroup', {\n      removalPolicy: RemovalPolicy.DESTROY,\n    });\n\n    vpc.addClientVpnEndpoint('Endpoint', {\n      cidr: '10.100.0.0/16',\n      serverCertificateArn: certificates.serverCertificateArn,\n      clientCertificateArn: certificates.clientCertificateArn,\n      logGroup,\n    });\n  }\n}\n\nconst IMPORT_CERTIFICATES_RESOURCE_TYPE = 'Custom::ACMImportCertificates';\n\nclass ImportCertificates extends Construct {\n  public readonly serverCertificateArn: string;\n  public readonly clientCertificateArn: string;\n\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    const serviceToken = CustomResourceProvider.getOrCreate(this, IMPORT_CERTIFICATES_RESOURCE_TYPE, {\n      codeDirectory: path.join(__dirname, 'import-certificates-handler'),\n      runtime: CustomResourceProviderRuntime.NODEJS_14_X,\n      policyStatements: [{\n        Effect: 'Allow',\n        Action: ['acm:ImportCertificate', 'acm:DeleteCertificate'],\n        Resource: '*',\n      }],\n    });\n\n    const createCertificates = new CustomResource(this, 'CreateCertificates', {\n      resourceType: IMPORT_CERTIFICATES_RESOURCE_TYPE,\n      serviceToken,\n    });\n    this.serverCertificateArn = createCertificates.getAttString('ClientCertificateArn');\n    this.clientCertificateArn = createCertificates.getAttString('ServerCertificateArn');\n\n    new CustomResource(this, 'DeleteCertificates', {\n      resourceType: IMPORT_CERTIFICATES_RESOURCE_TYPE,\n      serviceToken,\n      properties: {\n        ServerCertificateArn: this.serverCertificateArn,\n        ClientCertificateArn: this.clientCertificateArn,\n      },\n    });\n  }\n}\n\nconst app = new App();\nnew TestStack(app, 'cdk-ec2-client-vpn-endpoint');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyVpcF9F0CA6F\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.10.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpn/MyVpc\"}]}}, \"MyVpcPublicSubnet1SubnetF6608456\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.10.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpn/MyVpc/PublicSubnet1\"}]}}, \"MyVpcPublicSubnet1RouteTableC46AB2F4\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpn/MyVpc/PublicSubnet1\"}]}}, \"MyVpcPublicSubnet1RouteTableAssociation2ECEE1CB\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPublicSubnet1RouteTableC46AB2F4\"}, \"SubnetId\": {\"Ref\": \"MyVpcPublicSubnet1SubnetF6608456\"}}}, \"MyVpcPublicSubnet1DefaultRoute95FDF9EB\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPublicSubnet1RouteTableC46AB2F4\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"MyVpcIGW5C4A4F63\"}}, \"DependsOn\": [\"MyVpcVPCGW488ACE0D\"]}, \"MyVpcPublicSubnet1EIP096967CB\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpn/MyVpc/PublicSubnet1\"}]}}, \"MyVpcPublicSubnet1NATGatewayAD3400C1\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"MyVpcPublicSubnet1SubnetF6608456\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"MyVpcPublicSubnet1EIP096967CB\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpn/MyVpc/PublicSubnet1\"}]}, \"DependsOn\": [\"MyVpcPublicSubnet1DefaultRoute95FDF9EB\", \"MyVpcPublicSubnet1RouteTableAssociation2ECEE1CB\"]}, \"MyVpcPublicSubnet2Subnet492B6BFB\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.10.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpn/MyVpc/PublicSubnet2\"}]}}, \"MyVpcPublicSubnet2RouteTable1DF17386\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpn/MyVpc/PublicSubnet2\"}]}}, \"MyVpcPublicSubnet2RouteTableAssociation227DE78D\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPublicSubnet2RouteTable1DF17386\"}, \"SubnetId\": {\"Ref\": \"MyVpcPublicSubnet2Subnet492B6BFB\"}}}, \"MyVpcPublicSubnet2DefaultRoute052936F6\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPublicSubnet2RouteTable1DF17386\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"MyVpcIGW5C4A4F63\"}}, \"DependsOn\": [\"MyVpcVPCGW488ACE0D\"]}, \"MyVpcPublicSubnet2EIP8CCBA239\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpn/MyVpc/PublicSubnet2\"}]}}, \"MyVpcPublicSubnet2NATGateway91BFBEC9\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"MyVpcPublicSubnet2Subnet492B6BFB\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"MyVpcPublicSubnet2EIP8CCBA239\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpn/MyVpc/PublicSubnet2\"}]}, \"DependsOn\": [\"MyVpcPublicSubnet2DefaultRoute052936F6\", \"MyVpcPublicSubnet2RouteTableAssociation227DE78D\"]}, \"MyVpcPrivateSubnet1Subnet5057CF7E\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.10.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpn/MyVpc/PrivateSubnet1\"}]}}, \"MyVpcPrivateSubnet1RouteTable8819E6E2\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpn/MyVpc/PrivateSubnet1\"}]}}, \"MyVpcPrivateSubnet1RouteTableAssociation56D38C7E\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPrivateSubnet1RouteTable8819E6E2\"}, \"SubnetId\": {\"Ref\": \"MyVpcPrivateSubnet1Subnet5057CF7E\"}}}, \"MyVpcPrivateSubnet1DefaultRouteA8CDE2FA\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPrivateSubnet1RouteTable8819E6E2\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"MyVpcPublicSubnet1NATGatewayAD3400C1\"}}}, \"MyVpcPrivateSubnet2Subnet0040C983\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.10.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpn/MyVpc/PrivateSubnet2\"}]}}, \"MyVpcPrivateSubnet2RouteTableCEDCEECE\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpn/MyVpc/PrivateSubnet2\"}]}}, \"MyVpcPrivateSubnet2RouteTableAssociation86A610DA\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPrivateSubnet2RouteTableCEDCEECE\"}, \"SubnetId\": {\"Ref\": \"MyVpcPrivateSubnet2Subnet0040C983\"}}}, \"MyVpcPrivateSubnet2DefaultRoute9CE96294\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPrivateSubnet2RouteTableCEDCEECE\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"MyVpcPublicSubnet2NATGateway91BFBEC9\"}}}, \"MyVpcIGW5C4A4F63\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpn/MyVpc\"}]}}, \"MyVpcVPCGW488ACE0D\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"InternetGatewayId\": {\"Ref\": \"MyVpcIGW5C4A4F63\"}}}, \"MyVpcVpnGateway11FB05E5\": {\"Type\": \"AWS::EC2::VPNGateway\", \"Properties\": {\"Type\": \"ipsec.1\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpn/MyVpc\"}]}}, \"MyVpcVPCVPNGW0CB969B3\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"VpnGatewayId\": {\"Ref\": \"MyVpcVpnGateway11FB05E5\"}}}, \"MyVpcRoutePropagation122FC3BE\": {\"Type\": \"AWS::EC2::VPNGatewayRoutePropagation\", \"Properties\": {\"RouteTableIds\": [{\"Ref\": \"MyVpcPrivateSubnet1RouteTable8819E6E2\"}, {\"Ref\": \"MyVpcPrivateSubnet2RouteTableCEDCEECE\"}], \"VpnGatewayId\": {\"Ref\": \"MyVpcVpnGateway11FB05E5\"}}, \"DependsOn\": [\"MyVpcVPCVPNGW0CB969B3\"]}, \"MyVpcDynamicCustomerGatewayFB63DFBF\": {\"Type\": \"AWS::EC2::CustomerGateway\", \"Properties\": {\"BgpAsn\": 65000, \"IpAddress\": \"52.85.255.164\", \"Type\": \"ipsec.1\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpn/MyVpc\"}]}}, \"MyVpcDynamic739F3519\": {\"Type\": \"AWS::EC2::VPNConnection\", \"Properties\": {\"CustomerGatewayId\": {\"Ref\": \"MyVpcDynamicCustomerGatewayFB63DFBF\"}, \"Type\": \"ipsec.1\", \"StaticRoutesOnly\": false, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpn/MyVpc\"}], \"VpnGatewayId\": {\"Ref\": \"MyVpcVpnGateway11FB05E5\"}, \"VpnTunnelOptionsSpecifications\": [{\"PreSharedKey\": \"secretkey1234\"}]}}, \"MyVpcStaticCustomerGateway43D01906\": {\"Type\": \"AWS::EC2::CustomerGateway\", \"Properties\": {\"BgpAsn\": 65000, \"IpAddress\": \"52.85.255.197\", \"Type\": \"ipsec.1\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpn/MyVpc\"}]}}, \"MyVpcStaticABA7F625\": {\"Type\": \"AWS::EC2::VPNConnection\", \"Properties\": {\"CustomerGatewayId\": {\"Ref\": \"MyVpcStaticCustomerGateway43D01906\"}, \"Type\": \"ipsec.1\", \"StaticRoutesOnly\": true, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpn/MyVpc\"}], \"VpnGatewayId\": {\"Ref\": \"MyVpcVpnGateway11FB05E5\"}}}, \"MyVpcStaticRoute192168100240A24A5CC\": {\"Type\": \"AWS::EC2::VPNConnectionRoute\", \"Properties\": {\"DestinationCidrBlock\": \"192.168.10.0/24\", \"VpnConnectionId\": {\"Ref\": \"MyVpcStaticABA7F625\"}}}, \"MyVpcStaticRoute19216820024CD4B642F\": {\"Type\": \"AWS::EC2::VPNConnectionRoute\", \"Properties\": {\"DestinationCidrBlock\": \"192.168.20.0/24\", \"VpnConnectionId\": {\"Ref\": \"MyVpcStaticABA7F625\"}}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as cdk from 'aws-cdk-lib';\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport { EC2_RESTRICT_DEFAULT_SECURITY_GROUP } from 'aws-cdk-lib/cx-api';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'aws-cdk-ec2-vpn');\nstack.node.setContext(EC2_RESTRICT_DEFAULT_SECURITY_GROUP, false);\n\nconst vpc = new ec2.Vpc(stack, 'MyVpc', {\n  cidr: '10.10.0.0/16',\n  vpnConnections: {\n    Dynamic: { // Dynamic routing\n      ip: '52.85.255.164',\n      tunnelOptions: [\n        {\n          preSharedKey: 'secretkey1234',\n        },\n      ],\n    },\n  },\n});\n\nvpc.addVpnConnection('Static', { // Static routing\n  ip: '52.85.255.197',\n  staticRoutes: [\n    '192.168.10.0/24',\n    '192.168.20.0/24',\n  ],\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyVpcF9F0CA6F\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc-azs/MyVpc\"}]}}, \"MyVpcPublicSubnet1SubnetF6608456\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/17\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc-azs/MyVpc/PublicSubnet1\"}]}}, \"MyVpcPublicSubnet1RouteTableC46AB2F4\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc-azs/MyVpc/PublicSubnet1\"}]}}, \"MyVpcPublicSubnet1RouteTableAssociation2ECEE1CB\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPublicSubnet1RouteTableC46AB2F4\"}, \"SubnetId\": {\"Ref\": \"MyVpcPublicSubnet1SubnetF6608456\"}}}, \"MyVpcPublicSubnet1DefaultRoute95FDF9EB\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPublicSubnet1RouteTableC46AB2F4\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"MyVpcIGW5C4A4F63\"}}, \"DependsOn\": [\"MyVpcVPCGW488ACE0D\"]}, \"MyVpcPublicSubnet1EIP096967CB\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc-azs/MyVpc/PublicSubnet1\"}]}}, \"MyVpcPublicSubnet1NATGatewayAD3400C1\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"MyVpcPublicSubnet1SubnetF6608456\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"MyVpcPublicSubnet1EIP096967CB\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc-azs/MyVpc/PublicSubnet1\"}]}, \"DependsOn\": [\"MyVpcPublicSubnet1DefaultRoute95FDF9EB\", \"MyVpcPublicSubnet1RouteTableAssociation2ECEE1CB\"]}, \"MyVpcPrivateSubnet1Subnet5057CF7E\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/17\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc-azs/MyVpc/PrivateSubnet1\"}]}}, \"MyVpcPrivateSubnet1RouteTable8819E6E2\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc-azs/MyVpc/PrivateSubnet1\"}]}}, \"MyVpcPrivateSubnet1RouteTableAssociation56D38C7E\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPrivateSubnet1RouteTable8819E6E2\"}, \"SubnetId\": {\"Ref\": \"MyVpcPrivateSubnet1Subnet5057CF7E\"}}}, \"MyVpcPrivateSubnet1DefaultRouteA8CDE2FA\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPrivateSubnet1RouteTable8819E6E2\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"MyVpcPublicSubnet1NATGatewayAD3400C1\"}}}, \"MyVpcIGW5C4A4F63\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc-azs/MyVpc\"}]}}, \"MyVpcVPCGW488ACE0D\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"InternetGatewayId\": {\"Ref\": \"MyVpcIGW5C4A4F63\"}}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as cdk from 'aws-cdk-lib';\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport { EC2_RESTRICT_DEFAULT_SECURITY_GROUP } from 'aws-cdk-lib/cx-api';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'aws-cdk-ec2-vpc-azs');\nstack.node.setContext(EC2_RESTRICT_DEFAULT_SECURITY_GROUP, false);\n\nnew ec2.Vpc(stack, 'MyVpc', {\n  availabilityZones: [stack.availabilityZones[1]],\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"IntegUserdataVpcDE2938ED\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-userdata/IntegUserdataVpc\"}]}}, \"IntegUserdataVpcPublicSubnet1Subnet9AE7FE85\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"IntegUserdataVpcDE2938ED\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"integ-userdata/IntegUserdataVpc/PublicSubnet1\"}]}}, \"IntegUserdataVpcPublicSubnet1RouteTable7B342D96\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"IntegUserdataVpcDE2938ED\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-userdata/IntegUserdataVpc/PublicSubnet1\"}]}}, \"IntegUserdataVpcPublicSubnet1RouteTableAssociation724A6375\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"IntegUserdataVpcPublicSubnet1RouteTable7B342D96\"}, \"SubnetId\": {\"Ref\": \"IntegUserdataVpcPublicSubnet1Subnet9AE7FE85\"}}}, \"IntegUserdataVpcPublicSubnet1DefaultRoute8F93CC39\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"IntegUserdataVpcPublicSubnet1RouteTable7B342D96\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"IntegUserdataVpcIGWB657C40E\"}}, \"DependsOn\": [\"IntegUserdataVpcVPCGWFA86AC6A\"]}, \"IntegUserdataVpcPublicSubnet1EIP41DE8CA6\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-userdata/IntegUserdataVpc/PublicSubnet1\"}]}}, \"IntegUserdataVpcPublicSubnet1NATGatewayC9F60940\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"IntegUserdataVpcPublicSubnet1Subnet9AE7FE85\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"IntegUserdataVpcPublicSubnet1EIP41DE8CA6\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-userdata/IntegUserdataVpc/PublicSubnet1\"}]}, \"DependsOn\": [\"IntegUserdataVpcPublicSubnet1DefaultRoute8F93CC39\", \"IntegUserdataVpcPublicSubnet1RouteTableAssociation724A6375\"]}, \"IntegUserdataVpcPublicSubnet2Subnet7EC040B5\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"IntegUserdataVpcDE2938ED\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"integ-userdata/IntegUserdataVpc/PublicSubnet2\"}]}}, \"IntegUserdataVpcPublicSubnet2RouteTable98BA8E97\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"IntegUserdataVpcDE2938ED\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-userdata/IntegUserdataVpc/PublicSubnet2\"}]}}, \"IntegUserdataVpcPublicSubnet2RouteTableAssociationBA5DC07F\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"IntegUserdataVpcPublicSubnet2RouteTable98BA8E97\"}, \"SubnetId\": {\"Ref\": \"IntegUserdataVpcPublicSubnet2Subnet7EC040B5\"}}}, \"IntegUserdataVpcPublicSubnet2DefaultRoute90FCB645\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"IntegUserdataVpcPublicSubnet2RouteTable98BA8E97\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"IntegUserdataVpcIGWB657C40E\"}}, \"DependsOn\": [\"IntegUserdataVpcVPCGWFA86AC6A\"]}, \"IntegUserdataVpcPublicSubnet2EIP662D51E3\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-userdata/IntegUserdataVpc/PublicSubnet2\"}]}}, \"IntegUserdataVpcPublicSubnet2NATGatewayB25F84D3\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"IntegUserdataVpcPublicSubnet2Subnet7EC040B5\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"IntegUserdataVpcPublicSubnet2EIP662D51E3\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-userdata/IntegUserdataVpc/PublicSubnet2\"}]}, \"DependsOn\": [\"IntegUserdataVpcPublicSubnet2DefaultRoute90FCB645\", \"IntegUserdataVpcPublicSubnet2RouteTableAssociationBA5DC07F\"]}, \"IntegUserdataVpcPrivateSubnet1Subnet4EFBF430\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"IntegUserdataVpcDE2938ED\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"integ-userdata/IntegUserdataVpc/PrivateSubnet1\"}]}}, \"IntegUserdataVpcPrivateSubnet1RouteTable63E39754\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"IntegUserdataVpcDE2938ED\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-userdata/IntegUserdataVpc/PrivateSubnet1\"}]}}, \"IntegUserdataVpcPrivateSubnet1RouteTableAssociation176A5EB9\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"IntegUserdataVpcPrivateSubnet1RouteTable63E39754\"}, \"SubnetId\": {\"Ref\": \"IntegUserdataVpcPrivateSubnet1Subnet4EFBF430\"}}}, \"IntegUserdataVpcPrivateSubnet1DefaultRoute03370EF2\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"IntegUserdataVpcPrivateSubnet1RouteTable63E39754\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"IntegUserdataVpcPublicSubnet1NATGatewayC9F60940\"}}}, \"IntegUserdataVpcPrivateSubnet2SubnetAFD1E5B4\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"IntegUserdataVpcDE2938ED\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"integ-userdata/IntegUserdataVpc/PrivateSubnet2\"}]}}, \"IntegUserdataVpcPrivateSubnet2RouteTable7944CD08\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"IntegUserdataVpcDE2938ED\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-userdata/IntegUserdataVpc/PrivateSubnet2\"}]}}, \"IntegUserdataVpcPrivateSubnet2RouteTableAssociation3B0C1389\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"IntegUserdataVpcPrivateSubnet2RouteTable7944CD08\"}, \"SubnetId\": {\"Ref\": \"IntegUserdataVpcPrivateSubnet2SubnetAFD1E5B4\"}}}, \"IntegUserdataVpcPrivateSubnet2DefaultRouteA120F4F4\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"IntegUserdataVpcPrivateSubnet2RouteTable7944CD08\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"IntegUserdataVpcPublicSubnet2NATGatewayB25F84D3\"}}}, \"IntegUserdataVpcIGWB657C40E\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-userdata/IntegUserdataVpc\"}]}}, \"IntegUserdataVpcVPCGWFA86AC6A\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"IntegUserdataVpcDE2938ED\"}, \"InternetGatewayId\": {\"Ref\": \"IntegUserdataVpcIGWB657C40E\"}}}, \"WindowsInstanceInstanceSecurityGroup3B6692A8\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"integ-userdata/WindowsInstance/InstanceSecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-userdata/WindowsInstance\"}], \"VpcId\": {\"Ref\": \"IntegUserdataVpcDE2938ED\"}}}, \"WindowsInstanceInstanceRoleB7D73766\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"ec2.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-userdata/WindowsInstance\"}]}}, \"WindowsInstanceInstanceProfile20441977\": {\"Type\": \"AWS::IAM::InstanceProfile\", \"Properties\": {\"Roles\": [{\"Ref\": \"WindowsInstanceInstanceRoleB7D73766\"}]}}, \"WindowsInstance4ABA347A\": {\"Type\": \"AWS::EC2::Instance\", \"Properties\": {\"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"IamInstanceProfile\": {\"Ref\": \"WindowsInstanceInstanceProfile20441977\"}, \"ImageId\": {\"Ref\": \"SsmParameterValueawsserviceamiwindowslatestWindowsServer2022EnglishFullBaseC96584B6F00A464EAD1953AFF4B05118Parameter\"}, \"InstanceType\": \"t2.micro\", \"SecurityGroupIds\": [{\"Fn::GetAtt\": [\"WindowsInstanceInstanceSecurityGroup3B6692A8\", \"GroupId\"]}], \"SubnetId\": {\"Ref\": \"IntegUserdataVpcPublicSubnet1Subnet9AE7FE85\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-userdata/WindowsInstance\"}], \"UserData\": {\"Fn::Base64\": \"<powershell></powershell><persist>true</persist>\"}}, \"DependsOn\": [\"WindowsInstanceInstanceRoleB7D73766\"]}}, \"Parameters\": {\"SsmParameterValueawsserviceamiwindowslatestWindowsServer2022EnglishFullBaseC96584B6F00A464EAD1953AFF4B05118Parameter\": {\"Type\": \"AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>\", \"Default\": \"/aws/service/ami-windows-latest/Windows_Server-2022-English-Full-Base\"}, \"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "#!/usr/bin/env node\nimport * as cdk from 'aws-cdk-lib';\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport { EC2_RESTRICT_DEFAULT_SECURITY_GROUP } from 'aws-cdk-lib/cx-api';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'integ-userdata');\nstack.node.setContext(EC2_RESTRICT_DEFAULT_SECURITY_GROUP, false);\n\nconst vpc = new ec2.Vpc(stack, 'IntegUserdataVpc');\n\nnew ec2.Instance(stack, 'WindowsInstance', {\n  vpc,\n  vpcSubnets: { subnetType: ec2.SubnetType.PUBLIC },\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.BURSTABLE2, ec2.InstanceSize.MICRO),\n  machineImage: new ec2.WindowsImage(ec2.WindowsVersion.WINDOWS_SERVER_2022_ENGLISH_FULL_BASE),\n  userData: ec2.UserData.forWindows({ persist: true }),\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"SecurityGroupDD263621\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"aws-cdk-ec2-import/SecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"VpcId\": \"vpc-60900905\"}}}, \"Outputs\": {\"PublicSubnets\": {\"Value\": \"ids:subnet-e19455ca,subnet-e0c24797,subnet-ccd77395\"}, \"PrivateSubnets\": {\"Value\": \"ids:\"}, \"PublicRouteTables\": {\"Value\": \"ids: rtb-e19455ca, rtb-e0c24797, rtb-ccd77395\"}}}", "completion": "/// !cdk-integ * pragma:enable-lookups\nimport * as cdk from 'aws-cdk-lib';\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\n\nconst app = new cdk.App();\n\n// we associate this stack with an explicit environment since this is required by the\n// environmental context provider used in `fromLookup`. CDK_INTEG_XXX are set\n// when producing the .expected file and CDK_DEFAULT_XXX is passed in through from\n// the CLI in actual deployment.\nconst env = {\n  account: process.env.CDK_INTEG_ACCOUNT || process.env.CDK_DEFAULT_ACCOUNT,\n  region: process.env.CDK_INTEG_REGION || process.env.CDK_DEFAULT_REGION,\n};\n\nconst stack = new cdk.Stack(app, 'aws-cdk-ec2-import', { env });\n\n/// !show\nconst vpc = ec2.Vpc.fromLookup(stack, 'VPC', {\n  // This imports the default VPC but you can also\n  // specify a 'vpcName' or 'tags'.\n  isDefault: true,\n});\n/// !hide\n\n// The only thing in this library that takes a VPC as an argument :)\nnew ec2.SecurityGroup(stack, 'SecurityGroup', {\n  vpc,\n});\n\n// Try subnet selection\nnew cdk.CfnOutput(stack, 'PublicSubnets', { value: 'ids:' + vpc.publicSubnets.map(s => s.subnetId).join(',') });\nnew cdk.CfnOutput(stack, 'PrivateSubnets', { value: 'ids:' + vpc.privateSubnets.map(s => s.subnetId).join(',') });\n\n// Route table IDs\nnew cdk.CfnOutput(stack, 'PublicRouteTables', { value: 'ids: ' + vpc.publicSubnets.map(s => s.routeTable.routeTableId).join(', ') });\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyVpcF9F0CA6F\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.10.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpn/MyVpc\"}]}}, \"MyVpcPublicSubnet1SubnetF6608456\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.10.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpn/MyVpc/PublicSubnet1\"}]}}, \"MyVpcPublicSubnet1RouteTableC46AB2F4\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpn/MyVpc/PublicSubnet1\"}]}}, \"MyVpcPublicSubnet1RouteTableAssociation2ECEE1CB\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPublicSubnet1RouteTableC46AB2F4\"}, \"SubnetId\": {\"Ref\": \"MyVpcPublicSubnet1SubnetF6608456\"}}}, \"MyVpcPublicSubnet1DefaultRoute95FDF9EB\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPublicSubnet1RouteTableC46AB2F4\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"MyVpcIGW5C4A4F63\"}}, \"DependsOn\": [\"MyVpcVPCGW488ACE0D\"]}, \"MyVpcPublicSubnet1EIP096967CB\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpn/MyVpc/PublicSubnet1\"}]}}, \"MyVpcPublicSubnet1NATGatewayAD3400C1\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"MyVpcPublicSubnet1SubnetF6608456\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"MyVpcPublicSubnet1EIP096967CB\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpn/MyVpc/PublicSubnet1\"}]}, \"DependsOn\": [\"MyVpcPublicSubnet1DefaultRoute95FDF9EB\", \"MyVpcPublicSubnet1RouteTableAssociation2ECEE1CB\"]}, \"MyVpcPublicSubnet2Subnet492B6BFB\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.10.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpn/MyVpc/PublicSubnet2\"}]}}, \"MyVpcPublicSubnet2RouteTable1DF17386\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpn/MyVpc/PublicSubnet2\"}]}}, \"MyVpcPublicSubnet2RouteTableAssociation227DE78D\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPublicSubnet2RouteTable1DF17386\"}, \"SubnetId\": {\"Ref\": \"MyVpcPublicSubnet2Subnet492B6BFB\"}}}, \"MyVpcPublicSubnet2DefaultRoute052936F6\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPublicSubnet2RouteTable1DF17386\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"MyVpcIGW5C4A4F63\"}}, \"DependsOn\": [\"MyVpcVPCGW488ACE0D\"]}, \"MyVpcPublicSubnet2EIP8CCBA239\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpn/MyVpc/PublicSubnet2\"}]}}, \"MyVpcPublicSubnet2NATGateway91BFBEC9\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"MyVpcPublicSubnet2Subnet492B6BFB\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"MyVpcPublicSubnet2EIP8CCBA239\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpn/MyVpc/PublicSubnet2\"}]}, \"DependsOn\": [\"MyVpcPublicSubnet2DefaultRoute052936F6\", \"MyVpcPublicSubnet2RouteTableAssociation227DE78D\"]}, \"MyVpcPrivateSubnet1Subnet5057CF7E\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.10.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpn/MyVpc/PrivateSubnet1\"}]}}, \"MyVpcPrivateSubnet1RouteTable8819E6E2\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpn/MyVpc/PrivateSubnet1\"}]}}, \"MyVpcPrivateSubnet1RouteTableAssociation56D38C7E\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPrivateSubnet1RouteTable8819E6E2\"}, \"SubnetId\": {\"Ref\": \"MyVpcPrivateSubnet1Subnet5057CF7E\"}}}, \"MyVpcPrivateSubnet1DefaultRouteA8CDE2FA\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPrivateSubnet1RouteTable8819E6E2\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"MyVpcPublicSubnet1NATGatewayAD3400C1\"}}}, \"MyVpcPrivateSubnet2Subnet0040C983\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.10.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpn/MyVpc/PrivateSubnet2\"}]}}, \"MyVpcPrivateSubnet2RouteTableCEDCEECE\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpn/MyVpc/PrivateSubnet2\"}]}}, \"MyVpcPrivateSubnet2RouteTableAssociation86A610DA\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPrivateSubnet2RouteTableCEDCEECE\"}, \"SubnetId\": {\"Ref\": \"MyVpcPrivateSubnet2Subnet0040C983\"}}}, \"MyVpcPrivateSubnet2DefaultRoute9CE96294\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPrivateSubnet2RouteTableCEDCEECE\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"MyVpcPublicSubnet2NATGateway91BFBEC9\"}}}, \"MyVpcIGW5C4A4F63\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpn/MyVpc\"}]}}, \"MyVpcVPCGW488ACE0D\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"InternetGatewayId\": {\"Ref\": \"MyVpcIGW5C4A4F63\"}}}, \"MyVpcVpnGateway11FB05E5\": {\"Type\": \"AWS::EC2::VPNGateway\", \"Properties\": {\"Type\": \"ipsec.1\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpn/MyVpc\"}]}}, \"MyVpcVPCVPNGW0CB969B3\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"VpnGatewayId\": {\"Ref\": \"MyVpcVpnGateway11FB05E5\"}}}, \"MyVpcRoutePropagation122FC3BE\": {\"Type\": \"AWS::EC2::VPNGatewayRoutePropagation\", \"Properties\": {\"RouteTableIds\": [{\"Ref\": \"MyVpcPrivateSubnet1RouteTable8819E6E2\"}, {\"Ref\": \"MyVpcPrivateSubnet2RouteTableCEDCEECE\"}], \"VpnGatewayId\": {\"Ref\": \"MyVpcVpnGateway11FB05E5\"}}, \"DependsOn\": [\"MyVpcVPCVPNGW0CB969B3\"]}, \"MyVpcDynamicCustomerGatewayFB63DFBF\": {\"Type\": \"AWS::EC2::CustomerGateway\", \"Properties\": {\"BgpAsn\": 65000, \"IpAddress\": \"52.85.255.164\", \"Type\": \"ipsec.1\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpn/MyVpc\"}]}}, \"MyVpcDynamic739F3519\": {\"Type\": \"AWS::EC2::VPNConnection\", \"Properties\": {\"CustomerGatewayId\": {\"Ref\": \"MyVpcDynamicCustomerGatewayFB63DFBF\"}, \"Type\": \"ipsec.1\", \"StaticRoutesOnly\": false, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpn/MyVpc\"}], \"VpnGatewayId\": {\"Ref\": \"MyVpcVpnGateway11FB05E5\"}, \"VpnTunnelOptionsSpecifications\": [{\"PreSharedKey\": \"ssmpwaaa\"}]}}, \"MyVpcStaticCustomerGateway43D01906\": {\"Type\": \"AWS::EC2::CustomerGateway\", \"Properties\": {\"BgpAsn\": 65000, \"IpAddress\": \"52.85.255.197\", \"Type\": \"ipsec.1\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpn/MyVpc\"}]}}, \"MyVpcStaticABA7F625\": {\"Type\": \"AWS::EC2::VPNConnection\", \"Properties\": {\"CustomerGatewayId\": {\"Ref\": \"MyVpcStaticCustomerGateway43D01906\"}, \"Type\": \"ipsec.1\", \"StaticRoutesOnly\": true, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpn/MyVpc\"}], \"VpnGatewayId\": {\"Ref\": \"MyVpcVpnGateway11FB05E5\"}}}, \"MyVpcStaticRoute192168100240A24A5CC\": {\"Type\": \"AWS::EC2::VPNConnectionRoute\", \"Properties\": {\"DestinationCidrBlock\": \"192.168.10.0/24\", \"VpnConnectionId\": {\"Ref\": \"MyVpcStaticABA7F625\"}}}, \"MyVpcStaticRoute19216820024CD4B642F\": {\"Type\": \"AWS::EC2::VPNConnectionRoute\", \"Properties\": {\"DestinationCidrBlock\": \"192.168.20.0/24\", \"VpnConnectionId\": {\"Ref\": \"MyVpcStaticABA7F625\"}}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as cdk from 'aws-cdk-lib';\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport { EC2_RESTRICT_DEFAULT_SECURITY_GROUP } from 'aws-cdk-lib/cx-api';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'aws-cdk-ec2-vpn');\nstack.node.setContext(EC2_RESTRICT_DEFAULT_SECURITY_GROUP, false);\n\nconst vpc = new ec2.Vpc(stack, 'MyVpc', {\n  ipAddresses: ec2.IpAddresses.cidr('10.10.0.0/16'),\n  vpnConnections: {\n    Dynamic: { // Dynamic routing\n      ip: '52.85.255.164',\n      tunnelOptions: [\n        {\n          preSharedKeySecret: cdk.SecretValue.unsafePlainText('ssmpwaaa'),\n        },\n      ],\n    },\n  },\n});\n\nvpc.addVpnConnection('Static', { // Static routing\n  ip: '52.85.255.197',\n  staticRoutes: [\n    '192.168.10.0/24',\n    '192.168.20.0/24',\n  ],\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyVpcF9F0CA6F\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc-gateway/MyVpc\"}]}}, \"MyVpcPublicSubnet1SubnetF6608456\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/17\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc-gateway/MyVpc/PublicSubnet1\"}]}}, \"MyVpcPublicSubnet1RouteTableC46AB2F4\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc-gateway/MyVpc/PublicSubnet1\"}]}}, \"MyVpcPublicSubnet1RouteTableAssociation2ECEE1CB\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPublicSubnet1RouteTableC46AB2F4\"}, \"SubnetId\": {\"Ref\": \"MyVpcPublicSubnet1SubnetF6608456\"}}}, \"MyVpcPublicSubnet1DefaultRoute95FDF9EB\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPublicSubnet1RouteTableC46AB2F4\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"MyVpcIGW5C4A4F63\"}}, \"DependsOn\": [\"MyVpcVPCGW488ACE0D\"]}, \"MyVpcIsolatedSubnet1Subnet2259FE9F\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/17\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Isolated\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Isolated\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc-gateway/MyVpc/IsolatedSubnet1\"}]}}, \"MyVpcIsolatedSubnet1RouteTable67AEA7B8\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc-gateway/MyVpc/IsolatedSubnet1\"}]}}, \"MyVpcIsolatedSubnet1RouteTableAssociationCDAE5449\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcIsolatedSubnet1RouteTable67AEA7B8\"}, \"SubnetId\": {\"Ref\": \"MyVpcIsolatedSubnet1Subnet2259FE9F\"}}}, \"MyVpcIsolatedSubnet1MyRouteCDD7D172\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcIsolatedSubnet1RouteTable67AEA7B8\"}, \"DestinationCidrBlock\": \"8.8.8.8/32\", \"GatewayId\": {\"Ref\": \"MyVpcIGW5C4A4F63\"}}}, \"MyVpcIGW5C4A4F63\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc-gateway/MyVpc\"}]}}, \"MyVpcVPCGW488ACE0D\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"InternetGatewayId\": {\"Ref\": \"MyVpcIGW5C4A4F63\"}}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as cdk from 'aws-cdk-lib';\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport { EC2_RESTRICT_DEFAULT_SECURITY_GROUP } from 'aws-cdk-lib/cx-api';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'aws-cdk-ec2-vpc-gateway');\nstack.node.setContext(EC2_RESTRICT_DEFAULT_SECURITY_GROUP, false);\n\nconst vpc = new ec2.Vpc(stack, 'MyVpc', {\n  maxAzs: 1,\n  subnetConfiguration: [\n    {\n      subnetType: ec2.SubnetType.PUBLIC,\n      name: 'Public',\n    },\n    {\n      subnetType: ec2.SubnetType.PRIVATE_ISOLATED,\n      name: 'Isolated',\n    },\n  ],\n});\n\n(vpc.isolatedSubnets[0] as ec2.Subnet).addRoute('MyRoute', {\n  routerId: vpc.internetGatewayId!,\n  routerType: ec2.RouterType.GATEWAY,\n  destinationCidrBlock: '8.8.8.8/32',\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"VPCB9E5F0B4\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStack/VPC\"}]}}, \"VPCPublicSubnet1SubnetB4246D30\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"TestStack/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableFEE4B781\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStack/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableAssociation0B0896DC\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}}}, \"VPCPublicSubnet1DefaultRoute91CEF279\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet1EIP6AD938E8\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStack/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1NATGatewayE0556630\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet1EIP6AD938E8\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStack/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet2Subnet74179F39\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"TestStack/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTable6F1A15F1\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStack/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTableAssociation5A808732\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}}}, \"VPCPublicSubnet2DefaultRouteB7481BBA\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet2EIP4947BC00\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStack/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2NATGateway3C070193\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet2EIP4947BC00\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStack/VPC/PublicSubnet2\"}]}}, \"VPCPrivateSubnet1Subnet8BCA10E0\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"TestStack/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableBE8A6027\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStack/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableAssociation347902D1\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}}}, \"VPCPrivateSubnet1DefaultRouteAE1D6490\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet1NATGatewayE0556630\"}}}, \"VPCPrivateSubnet2SubnetCFCDAA7A\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"TestStack/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTable0A19E10E\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStack/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTableAssociation0C73D413\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}}}, \"VPCPrivateSubnet2DefaultRouteF4F5CFD2\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet2NATGateway3C070193\"}}}, \"VPCIGWB7E252D3\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStack/VPC\"}]}}, \"VPCVPCGW99B986DC\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"InternetGatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}}, \"InstanceInstanceSecurityGroupF0E2D5BE\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"TestStack/Instance/InstanceSecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"SecurityGroupIngress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"from 0.0.0.0/0:ICMP Type 8\", \"FromPort\": 8, \"IpProtocol\": \"icmp\", \"ToPort\": -1}], \"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStack/Instance\"}], \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}}, \"InstanceInstanceRoleE9785DE5\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": {\"Fn::Join\": [\"\", [\"ec2.\", {\"Ref\": \"AWS::URLSuffix\"}]]}}}], \"Version\": \"2012-10-17\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStack/Instance\"}]}}, \"InstanceInstanceRoleDefaultPolicy4ACE9290\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"ssm:*\", \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"InstanceInstanceRoleDefaultPolicy4ACE9290\", \"Roles\": [{\"Ref\": \"InstanceInstanceRoleE9785DE5\"}]}}, \"InstanceInstanceProfileAB5AEF02\": {\"Type\": \"AWS::IAM::InstanceProfile\", \"Properties\": {\"Roles\": [{\"Ref\": \"InstanceInstanceRoleE9785DE5\"}]}}, \"InstanceC1063A87\": {\"Type\": \"AWS::EC2::Instance\", \"Properties\": {\"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"IamInstanceProfile\": {\"Ref\": \"InstanceInstanceProfileAB5AEF02\"}, \"ImageId\": {\"Ref\": \"SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmarm64gp2C96584B6F00A464EAD1953AFF4B05118Parameter\"}, \"InstanceType\": \"c7g.large\", \"Monitoring\": true, \"SecurityGroupIds\": [{\"Fn::GetAtt\": [\"InstanceInstanceSecurityGroupF0E2D5BE\", \"GroupId\"]}], \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStack/Instance\"}], \"UserData\": {\"Fn::Base64\": \"#!/bin/bash\nyum install -y\"}}, \"DependsOn\": [\"InstanceInstanceRoleDefaultPolicy4ACE9290\", \"InstanceInstanceRoleE9785DE5\"]}}, \"Parameters\": {\"SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmarm64gp2C96584B6F00A464EAD1953AFF4B05118Parameter\": {\"Type\": \"AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>\", \"Default\": \"/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-arm64-gp2\"}}}", "completion": "/// !cdk-integ *\nimport { PolicyStatement } from 'aws-cdk-lib/aws-iam';\nimport * as cdk from 'aws-cdk-lib';\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport { EC2_RESTRICT_DEFAULT_SECURITY_GROUP } from 'aws-cdk-lib/cx-api';\n\nconst app = new cdk.App();\n\nclass TestStack extends cdk.Stack {\n  constructor(scope: cdk.App, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n    this.node.setContext(EC2_RESTRICT_DEFAULT_SECURITY_GROUP, false);\n\n    const vpc = new ec2.Vpc(this, 'VPC');\n\n    const instance = new ec2.Instance(this, 'Instance', {\n      vpc,\n      instanceType: ec2.InstanceType.of(ec2.InstanceClass.C7G, ec2.InstanceSize.LARGE),\n      machineImage: new ec2.AmazonLinuxImage({\n        generation: ec2.AmazonLinuxGeneration.AMAZON_LINUX_2,\n        cpuType: ec2.AmazonLinuxCpuType.ARM_64,\n      }),\n      detailedMonitoring: true,\n    });\n\n    instance.addToRolePolicy(new PolicyStatement({\n      actions: ['ssm:*'],\n      resources: ['*'],\n    }));\n\n    instance.connections.allowFromAnyIpv4(ec2.Port.icmpPing());\n\n    instance.addUserData('yum install -y');\n  }\n}\n\nnew TestStack(app, 'TestStack');\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"IntegInitVpc0D4FCCB3\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-init/IntegInitVpc\"}]}}, \"IntegInitVpcPublicSubnet1Subnet41A6F6D4\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"IntegInitVpc0D4FCCB3\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"integ-init/IntegInitVpc/PublicSubnet1\"}]}}, \"IntegInitVpcPublicSubnet1RouteTable837CD5FB\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"IntegInitVpc0D4FCCB3\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-init/IntegInitVpc/PublicSubnet1\"}]}}, \"IntegInitVpcPublicSubnet1RouteTableAssociation00D33741\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"IntegInitVpcPublicSubnet1RouteTable837CD5FB\"}, \"SubnetId\": {\"Ref\": \"IntegInitVpcPublicSubnet1Subnet41A6F6D4\"}}}, \"IntegInitVpcPublicSubnet1DefaultRoute5BB90E8C\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"IntegInitVpcPublicSubnet1RouteTable837CD5FB\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"IntegInitVpcIGWF019AC85\"}}, \"DependsOn\": [\"IntegInitVpcVPCGW85EDC292\"]}, \"IntegInitVpcPublicSubnet1EIP46FCC3D6\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-init/IntegInitVpc/PublicSubnet1\"}]}}, \"IntegInitVpcPublicSubnet1NATGateway46F32F7F\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"IntegInitVpcPublicSubnet1Subnet41A6F6D4\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"IntegInitVpcPublicSubnet1EIP46FCC3D6\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-init/IntegInitVpc/PublicSubnet1\"}]}, \"DependsOn\": [\"IntegInitVpcPublicSubnet1DefaultRoute5BB90E8C\", \"IntegInitVpcPublicSubnet1RouteTableAssociation00D33741\"]}, \"IntegInitVpcPublicSubnet2Subnet9A384F16\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"IntegInitVpc0D4FCCB3\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"integ-init/IntegInitVpc/PublicSubnet2\"}]}}, \"IntegInitVpcPublicSubnet2RouteTableF7E8F920\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"IntegInitVpc0D4FCCB3\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-init/IntegInitVpc/PublicSubnet2\"}]}}, \"IntegInitVpcPublicSubnet2RouteTableAssociationB816F9F3\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"IntegInitVpcPublicSubnet2RouteTableF7E8F920\"}, \"SubnetId\": {\"Ref\": \"IntegInitVpcPublicSubnet2Subnet9A384F16\"}}}, \"IntegInitVpcPublicSubnet2DefaultRoute2393995F\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"IntegInitVpcPublicSubnet2RouteTableF7E8F920\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"IntegInitVpcIGWF019AC85\"}}, \"DependsOn\": [\"IntegInitVpcVPCGW85EDC292\"]}, \"IntegInitVpcPublicSubnet2EIP553B40DC\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-init/IntegInitVpc/PublicSubnet2\"}]}}, \"IntegInitVpcPublicSubnet2NATGateway9CCB4A9C\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"IntegInitVpcPublicSubnet2Subnet9A384F16\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"IntegInitVpcPublicSubnet2EIP553B40DC\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-init/IntegInitVpc/PublicSubnet2\"}]}, \"DependsOn\": [\"IntegInitVpcPublicSubnet2DefaultRoute2393995F\", \"IntegInitVpcPublicSubnet2RouteTableAssociationB816F9F3\"]}, \"IntegInitVpcPrivateSubnet1Subnet259B51C1\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"IntegInitVpc0D4FCCB3\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"integ-init/IntegInitVpc/PrivateSubnet1\"}]}}, \"IntegInitVpcPrivateSubnet1RouteTableCB37994B\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"IntegInitVpc0D4FCCB3\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-init/IntegInitVpc/PrivateSubnet1\"}]}}, \"IntegInitVpcPrivateSubnet1RouteTableAssociation067DEF9D\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"IntegInitVpcPrivateSubnet1RouteTableCB37994B\"}, \"SubnetId\": {\"Ref\": \"IntegInitVpcPrivateSubnet1Subnet259B51C1\"}}}, \"IntegInitVpcPrivateSubnet1DefaultRoute654ACECF\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"IntegInitVpcPrivateSubnet1RouteTableCB37994B\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"IntegInitVpcPublicSubnet1NATGateway46F32F7F\"}}}, \"IntegInitVpcPrivateSubnet2Subnet1643B059\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"IntegInitVpc0D4FCCB3\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"integ-init/IntegInitVpc/PrivateSubnet2\"}]}}, \"IntegInitVpcPrivateSubnet2RouteTable030EC93B\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"IntegInitVpc0D4FCCB3\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-init/IntegInitVpc/PrivateSubnet2\"}]}}, \"IntegInitVpcPrivateSubnet2RouteTableAssociation6B52BD72\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"IntegInitVpcPrivateSubnet2RouteTable030EC93B\"}, \"SubnetId\": {\"Ref\": \"IntegInitVpcPrivateSubnet2Subnet1643B059\"}}}, \"IntegInitVpcPrivateSubnet2DefaultRoute6A10B6EA\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"IntegInitVpcPrivateSubnet2RouteTable030EC93B\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"IntegInitVpcPublicSubnet2NATGateway9CCB4A9C\"}}}, \"IntegInitVpcIGWF019AC85\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-init/IntegInitVpc\"}]}}, \"IntegInitVpcVPCGW85EDC292\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"IntegInitVpc0D4FCCB3\"}, \"InternetGatewayId\": {\"Ref\": \"IntegInitVpcIGWF019AC85\"}}}, \"Instance2InstanceSecurityGroupC6129B1D\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"integ-init/Instance2/InstanceSecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-init/Instance2\"}], \"VpcId\": {\"Ref\": \"IntegInitVpc0D4FCCB3\"}}}, \"Instance2InstanceRole03DD7CB2\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"ec2.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-init/Instance2\"}]}}, \"Instance2InstanceRoleDefaultPolicy610B37CD\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":s3:::\", {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"/*\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":s3:::\", {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}]]}]}, {\"Action\": [\"cloudformation:DescribeStackResource\", \"cloudformation:SignalResource\"], \"Effect\": \"Allow\", \"Resource\": {\"Ref\": \"AWS::StackId\"}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"Instance2InstanceRoleDefaultPolicy610B37CD\", \"Roles\": [{\"Ref\": \"Instance2InstanceRole03DD7CB2\"}]}}, \"Instance2InstanceProfile582F915C\": {\"Type\": \"AWS::IAM::InstanceProfile\", \"Properties\": {\"Roles\": [{\"Ref\": \"Instance2InstanceRole03DD7CB2\"}]}}, \"Instance255F35265a0c5f577d761edb0\": {\"Type\": \"AWS::EC2::Instance\", \"Properties\": {\"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"IamInstanceProfile\": {\"Ref\": \"Instance2InstanceProfile582F915C\"}, \"ImageId\": {\"Ref\": \"SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter\"}, \"InstanceType\": \"t2.micro\", \"SecurityGroupIds\": [{\"Fn::GetAtt\": [\"Instance2InstanceSecurityGroupC6129B1D\", \"GroupId\"]}], \"SubnetId\": {\"Ref\": \"IntegInitVpcPublicSubnet1Subnet41A6F6D4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-init/Instance2\"}], \"UserData\": {\"Fn::Base64\": {\"Fn::Join\": [\"\", [\"#!/bin/bash\n# fingerprint: 89cb2e09a1c3d4c8\n(\n  set +e\n  /opt/aws/bin/cfn-init -v --region \", {\"Ref\": \"AWS::Region\"}, \" --stack \", {\"Ref\": \"AWS::StackName\"}, \" --resource Instance255F35265a0c5f577d761edb0 -c default\n  /opt/aws/bin/cfn-signal -e $? --region \", {\"Ref\": \"AWS::Region\"}, \" --stack \", {\"Ref\": \"AWS::StackName\"}, \" --resource Instance255F35265a0c5f577d761edb0\n  cat /var/log/cfn-init.log >&2\n)\"]]}}}, \"DependsOn\": [\"Instance2InstanceRoleDefaultPolicy610B37CD\", \"Instance2InstanceRole03DD7CB2\"], \"CreationPolicy\": {\"ResourceSignal\": {\"Count\": 1, \"Timeout\": \"PT30M\"}}, \"Metadata\": {\"AWS::CloudFormation::Init\": {\"configSets\": {\"default\": [\"yumPreinstall\", \"config\"]}, \"yumPreinstall\": {\"packages\": {\"yum\": {\"git\": []}}}, \"config\": {\"groups\": {\"group1\": {}, \"group2\": {\"gid\": 42}}, \"users\": {\"sysuser1\": {\"groups\": [\"group1\", \"group2\"], \"homeDir\": \"/home/sysuser1-custom\"}, \"sysuser2\": {}}, \"sources\": {\"/tmp/sourceDir\": {\"Fn::Sub\": \"https://s3.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}/f8a1af398dac2fad92eeea4fb7620be1c4f504e23e3bfcd859fbb5744187930b.zip\"}}, \"files\": {\"/tmp/file2.json\": {\"content\": {\"stackId\": {\"Ref\": \"AWS::StackId\"}, \"stackName\": \"integ-init\", \"region\": {\"Ref\": \"AWS::Region\"}, \"intProperty\": 18, \"boolProperty\": true, \"numProperty\": 58.23}, \"mode\": \"000644\", \"owner\": \"root\", \"group\": \"root\"}}}}, \"AWS::CloudFormation::Authentication\": {\"S3AccessCreds\": {\"type\": \"S3\", \"roleName\": {\"Ref\": \"Instance2InstanceRole03DD7CB2\"}, \"buckets\": [{\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}]}}}}}, \"Parameters\": {\"SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter\": {\"Type\": \"AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>\", \"Default\": \"/aws/service/ami-amazon-linux-latest/amzn-ami-hvm-x86_64-gp2\"}, \"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "#!/usr/bin/env node\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport * as cdk from 'aws-cdk-lib';\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport { EC2_RESTRICT_DEFAULT_SECURITY_GROUP } from 'aws-cdk-lib/cx-api';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'integ-init');\nstack.node.setContext(EC2_RESTRICT_DEFAULT_SECURITY_GROUP, false);\n\nconst vpc = new ec2.Vpc(stack, 'IntegInitVpc');\n\nconst tmpDir = fs.mkdtempSync('/tmp/cfn-init-test');\nfs.writeFileSync(path.resolve(tmpDir, 'testFile'), 'Hello World!\\n');\n\nnew ec2.Instance(stack, 'Instance2', {\n  vpc,\n  vpcSubnets: { subnetType: ec2.SubnetType.PUBLIC },\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.BURSTABLE2, ec2.InstanceSize.MICRO),\n  machineImage: new ec2.AmazonLinuxImage(),\n  userDataCausesReplacement: true,\n  initOptions: {\n    timeout: cdk.Duration.minutes(30),\n  },\n  init: ec2.CloudFormationInit.fromConfigSets({\n    configSets: {\n      default: ['yumPreinstall', 'config'],\n    },\n    configs: {\n      yumPreinstall: new ec2.InitConfig([\n        ec2.InitPackage.yum('git'),\n      ]),\n      config: new ec2.InitConfig([\n        ec2.InitFile.fromObject('/tmp/file2.json', {\n          stackId: stack.stackId,\n          stackName: stack.stackName,\n          region: stack.region,\n          intProperty: 18,\n          boolProperty: true,\n          numProperty: 58.23,\n        }),\n        ec2.InitGroup.fromName('group1'),\n        ec2.InitGroup.fromName('group2', 42),\n        ec2.InitUser.fromName('sysuser1', {\n          groups: ['group1', 'group2'],\n          homeDir: '/home/sysuser1-custom',\n        }),\n        ec2.InitUser.fromName('sysuser2'),\n        ec2.InitSource.fromAsset('/tmp/sourceDir', tmpDir),\n      ]),\n    },\n  }),\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyVpcF9F0CA6F\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc-endpoint/MyVpc\"}]}}, \"MyVpcPublicSubnet1SubnetF6608456\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc-endpoint/MyVpc/PublicSubnet1\"}]}}, \"MyVpcPublicSubnet1RouteTableC46AB2F4\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc-endpoint/MyVpc/PublicSubnet1\"}]}}, \"MyVpcPublicSubnet1RouteTableAssociation2ECEE1CB\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPublicSubnet1RouteTableC46AB2F4\"}, \"SubnetId\": {\"Ref\": \"MyVpcPublicSubnet1SubnetF6608456\"}}}, \"MyVpcPublicSubnet1DefaultRoute95FDF9EB\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPublicSubnet1RouteTableC46AB2F4\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"MyVpcIGW5C4A4F63\"}}, \"DependsOn\": [\"MyVpcVPCGW488ACE0D\"]}, \"MyVpcPublicSubnet1EIP096967CB\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc-endpoint/MyVpc/PublicSubnet1\"}]}}, \"MyVpcPublicSubnet1NATGatewayAD3400C1\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"MyVpcPublicSubnet1SubnetF6608456\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"MyVpcPublicSubnet1EIP096967CB\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc-endpoint/MyVpc/PublicSubnet1\"}]}, \"DependsOn\": [\"MyVpcPublicSubnet1DefaultRoute95FDF9EB\", \"MyVpcPublicSubnet1RouteTableAssociation2ECEE1CB\"]}, \"MyVpcPublicSubnet2Subnet492B6BFB\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc-endpoint/MyVpc/PublicSubnet2\"}]}}, \"MyVpcPublicSubnet2RouteTable1DF17386\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc-endpoint/MyVpc/PublicSubnet2\"}]}}, \"MyVpcPublicSubnet2RouteTableAssociation227DE78D\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPublicSubnet2RouteTable1DF17386\"}, \"SubnetId\": {\"Ref\": \"MyVpcPublicSubnet2Subnet492B6BFB\"}}}, \"MyVpcPublicSubnet2DefaultRoute052936F6\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPublicSubnet2RouteTable1DF17386\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"MyVpcIGW5C4A4F63\"}}, \"DependsOn\": [\"MyVpcVPCGW488ACE0D\"]}, \"MyVpcPublicSubnet2EIP8CCBA239\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc-endpoint/MyVpc/PublicSubnet2\"}]}}, \"MyVpcPublicSubnet2NATGateway91BFBEC9\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"MyVpcPublicSubnet2Subnet492B6BFB\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"MyVpcPublicSubnet2EIP8CCBA239\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc-endpoint/MyVpc/PublicSubnet2\"}]}, \"DependsOn\": [\"MyVpcPublicSubnet2DefaultRoute052936F6\", \"MyVpcPublicSubnet2RouteTableAssociation227DE78D\"]}, \"MyVpcPrivateSubnet1Subnet5057CF7E\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc-endpoint/MyVpc/PrivateSubnet1\"}]}}, \"MyVpcPrivateSubnet1RouteTable8819E6E2\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc-endpoint/MyVpc/PrivateSubnet1\"}]}}, \"MyVpcPrivateSubnet1RouteTableAssociation56D38C7E\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPrivateSubnet1RouteTable8819E6E2\"}, \"SubnetId\": {\"Ref\": \"MyVpcPrivateSubnet1Subnet5057CF7E\"}}}, \"MyVpcPrivateSubnet1DefaultRouteA8CDE2FA\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPrivateSubnet1RouteTable8819E6E2\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"MyVpcPublicSubnet1NATGatewayAD3400C1\"}}}, \"MyVpcPrivateSubnet2Subnet0040C983\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc-endpoint/MyVpc/PrivateSubnet2\"}]}}, \"MyVpcPrivateSubnet2RouteTableCEDCEECE\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc-endpoint/MyVpc/PrivateSubnet2\"}]}}, \"MyVpcPrivateSubnet2RouteTableAssociation86A610DA\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPrivateSubnet2RouteTableCEDCEECE\"}, \"SubnetId\": {\"Ref\": \"MyVpcPrivateSubnet2Subnet0040C983\"}}}, \"MyVpcPrivateSubnet2DefaultRoute9CE96294\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPrivateSubnet2RouteTableCEDCEECE\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"MyVpcPublicSubnet2NATGateway91BFBEC9\"}}}, \"MyVpcIGW5C4A4F63\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc-endpoint/MyVpc\"}]}}, \"MyVpcVPCGW488ACE0D\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"InternetGatewayId\": {\"Ref\": \"MyVpcIGW5C4A4F63\"}}}, \"MyVpcS3FADC1889\": {\"Type\": \"AWS::EC2::VPCEndpoint\", \"Properties\": {\"ServiceName\": {\"Fn::Join\": [\"\", [\"com.amazonaws.\", {\"Ref\": \"AWS::Region\"}, \".s3\"]]}, \"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"RouteTableIds\": [{\"Ref\": \"MyVpcPrivateSubnet1RouteTable8819E6E2\"}, {\"Ref\": \"MyVpcPrivateSubnet2RouteTableCEDCEECE\"}, {\"Ref\": \"MyVpcPublicSubnet1RouteTableC46AB2F4\"}, {\"Ref\": \"MyVpcPublicSubnet2RouteTable1DF17386\"}], \"VpcEndpointType\": \"Gateway\"}}, \"MyVpcDynamoDbEndpointE6A39B0D\": {\"Type\": \"AWS::EC2::VPCEndpoint\", \"Properties\": {\"ServiceName\": {\"Fn::Join\": [\"\", [\"com.amazonaws.\", {\"Ref\": \"AWS::Region\"}, \".dynamodb\"]]}, \"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"PolicyDocument\": {\"Statement\": [{\"Action\": [\"dynamodb:DescribeTable\", \"dynamodb:ListTables\"], \"Effect\": \"Allow\", \"Principal\": {\"AWS\": \"*\"}, \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"RouteTableIds\": [{\"Ref\": \"MyVpcPrivateSubnet1RouteTable8819E6E2\"}, {\"Ref\": \"MyVpcPrivateSubnet2RouteTableCEDCEECE\"}, {\"Ref\": \"MyVpcPublicSubnet1RouteTableC46AB2F4\"}, {\"Ref\": \"MyVpcPublicSubnet2RouteTable1DF17386\"}], \"VpcEndpointType\": \"Gateway\"}}, \"MyVpcEcrDockerEndpointSecurityGroup47BB9CC1\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"aws-cdk-ec2-vpc-endpoint/MyVpc/EcrDockerEndpoint/SecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"SecurityGroupIngress\": [{\"CidrIp\": {\"Fn::GetAtt\": [\"MyVpcF9F0CA6F\", \"CidrBlock\"]}, \"Description\": {\"Fn::Join\": [\"\", [\"from \", {\"Fn::GetAtt\": [\"MyVpcF9F0CA6F\", \"CidrBlock\"]}, \":443\"]]}, \"FromPort\": 443, \"IpProtocol\": \"tcp\", \"ToPort\": 443}], \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc-endpoint/MyVpc\"}], \"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}}}, \"MyVpcEcrDockerEndpoint0385050C\": {\"Type\": \"AWS::EC2::VPCEndpoint\", \"Properties\": {\"ServiceName\": {\"Fn::Join\": [\"\", [\"com.amazonaws.\", {\"Ref\": \"AWS::Region\"}, \".ecr.dkr\"]]}, \"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"PrivateDnsEnabled\": true, \"SecurityGroupIds\": [{\"Fn::GetAtt\": [\"MyVpcEcrDockerEndpointSecurityGroup47BB9CC1\", \"GroupId\"]}], \"SubnetIds\": [{\"Ref\": \"MyVpcPrivateSubnet1Subnet5057CF7E\"}, {\"Ref\": \"MyVpcPrivateSubnet2Subnet0040C983\"}], \"VpcEndpointType\": \"Interface\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as iam from 'aws-cdk-lib/aws-iam';\nimport * as cdk from 'aws-cdk-lib';\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport { EC2_RESTRICT_DEFAULT_SECURITY_GROUP } from 'aws-cdk-lib/cx-api';\n\nconst app = new cdk.App();\n\nclass VpcEndpointStack extends cdk.Stack {\n  constructor(scope: cdk.App, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n    this.node.setContext(EC2_RESTRICT_DEFAULT_SECURITY_GROUP, false);\n\n    /// !show\n    // Add gateway endpoints when creating the VPC\n    const vpc = new ec2.Vpc(this, 'MyVpc', {\n      gatewayEndpoints: {\n        S3: {\n          service: ec2.GatewayVpcEndpointAwsService.S3,\n        },\n      },\n    });\n\n    // Alternatively gateway endpoints can be added on the VPC\n    const dynamoDbEndpoint = vpc.addGatewayEndpoint('DynamoDbEndpoint', {\n      service: ec2.GatewayVpcEndpointAwsService.DYNAMODB,\n    });\n\n    // This allows to customize the endpoint policy\n    dynamoDbEndpoint.addToPolicy(\n      new iam.PolicyStatement({ // Restrict to listing and describing tables\n        principals: [new iam.AnyPrincipal()],\n        actions: ['dynamodb:DescribeTable', 'dynamodb:ListTables'],\n        resources: ['*'],\n      }));\n\n    // Add an interface endpoint\n    vpc.addInterfaceEndpoint('EcrDockerEndpoint', {\n      service: ec2.InterfaceVpcEndpointAwsService.ECR_DOCKER,\n\n      // Uncomment the following to allow more fine-grained control over\n      // who can access the endpoint via the '.connections' object.\n      // open: false\n    });\n    /// !hide\n  }\n}\n\nnew VpcEndpointStack(app, 'aws-cdk-ec2-vpc-endpoint');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyVpcF9F0CA6F\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc/MyVpc\"}]}}, \"MyVpcPublicSubnet1SubnetF6608456\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc/MyVpc/PublicSubnet1\"}]}}, \"MyVpcPublicSubnet1RouteTableC46AB2F4\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc/MyVpc/PublicSubnet1\"}]}}, \"MyVpcPublicSubnet1RouteTableAssociation2ECEE1CB\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPublicSubnet1RouteTableC46AB2F4\"}, \"SubnetId\": {\"Ref\": \"MyVpcPublicSubnet1SubnetF6608456\"}}}, \"MyVpcPublicSubnet1DefaultRoute95FDF9EB\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPublicSubnet1RouteTableC46AB2F4\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"MyVpcIGW5C4A4F63\"}}, \"DependsOn\": [\"MyVpcVPCGW488ACE0D\"]}, \"MyVpcPublicSubnet1EIP096967CB\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc/MyVpc/PublicSubnet1\"}]}}, \"MyVpcPublicSubnet1NATGatewayAD3400C1\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"MyVpcPublicSubnet1SubnetF6608456\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"MyVpcPublicSubnet1EIP096967CB\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc/MyVpc/PublicSubnet1\"}]}, \"DependsOn\": [\"MyVpcPublicSubnet1DefaultRoute95FDF9EB\", \"MyVpcPublicSubnet1RouteTableAssociation2ECEE1CB\"]}, \"MyVpcPublicSubnet2Subnet492B6BFB\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc/MyVpc/PublicSubnet2\"}]}}, \"MyVpcPublicSubnet2RouteTable1DF17386\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc/MyVpc/PublicSubnet2\"}]}}, \"MyVpcPublicSubnet2RouteTableAssociation227DE78D\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPublicSubnet2RouteTable1DF17386\"}, \"SubnetId\": {\"Ref\": \"MyVpcPublicSubnet2Subnet492B6BFB\"}}}, \"MyVpcPublicSubnet2DefaultRoute052936F6\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPublicSubnet2RouteTable1DF17386\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"MyVpcIGW5C4A4F63\"}}, \"DependsOn\": [\"MyVpcVPCGW488ACE0D\"]}, \"MyVpcPublicSubnet2EIP8CCBA239\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc/MyVpc/PublicSubnet2\"}]}}, \"MyVpcPublicSubnet2NATGateway91BFBEC9\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"MyVpcPublicSubnet2Subnet492B6BFB\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"MyVpcPublicSubnet2EIP8CCBA239\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc/MyVpc/PublicSubnet2\"}]}, \"DependsOn\": [\"MyVpcPublicSubnet2DefaultRoute052936F6\", \"MyVpcPublicSubnet2RouteTableAssociation227DE78D\"]}, \"MyVpcPrivateSubnet1Subnet5057CF7E\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc/MyVpc/PrivateSubnet1\"}]}}, \"MyVpcPrivateSubnet1RouteTable8819E6E2\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc/MyVpc/PrivateSubnet1\"}]}}, \"MyVpcPrivateSubnet1RouteTableAssociation56D38C7E\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPrivateSubnet1RouteTable8819E6E2\"}, \"SubnetId\": {\"Ref\": \"MyVpcPrivateSubnet1Subnet5057CF7E\"}}}, \"MyVpcPrivateSubnet1DefaultRouteA8CDE2FA\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPrivateSubnet1RouteTable8819E6E2\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"MyVpcPublicSubnet1NATGatewayAD3400C1\"}}}, \"MyVpcPrivateSubnet2Subnet0040C983\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc/MyVpc/PrivateSubnet2\"}]}}, \"MyVpcPrivateSubnet2RouteTableCEDCEECE\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc/MyVpc/PrivateSubnet2\"}]}}, \"MyVpcPrivateSubnet2RouteTableAssociation86A610DA\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPrivateSubnet2RouteTableCEDCEECE\"}, \"SubnetId\": {\"Ref\": \"MyVpcPrivateSubnet2Subnet0040C983\"}}}, \"MyVpcPrivateSubnet2DefaultRoute9CE96294\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPrivateSubnet2RouteTableCEDCEECE\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"MyVpcPublicSubnet2NATGateway91BFBEC9\"}}}, \"MyVpcIGW5C4A4F63\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc/MyVpc\"}]}}, \"MyVpcVPCGW488ACE0D\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"InternetGatewayId\": {\"Ref\": \"MyVpcIGW5C4A4F63\"}}}, \"myNACL198AF6597\": {\"Type\": \"AWS::EC2::NetworkAcl\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}}}, \"myNACL1DefaultAssociationawscdkec2vpcMyVpcPrivateSubnet1FED4593C4AF222C6\": {\"Type\": \"AWS::EC2::SubnetNetworkAclAssociation\", \"Properties\": {\"NetworkAclId\": {\"Ref\": \"myNACL198AF6597\"}, \"SubnetId\": {\"Ref\": \"MyVpcPrivateSubnet1Subnet5057CF7E\"}}}, \"myNACL1DefaultAssociationawscdkec2vpcMyVpcPrivateSubnet2A2D31E07B1508A9A\": {\"Type\": \"AWS::EC2::SubnetNetworkAclAssociation\", \"Properties\": {\"NetworkAclId\": {\"Ref\": \"myNACL198AF6597\"}, \"SubnetId\": {\"Ref\": \"MyVpcPrivateSubnet2Subnet0040C983\"}}}, \"myNACL1AllowDNSEgressD49F54D3\": {\"Type\": \"AWS::EC2::NetworkAclEntry\", \"Properties\": {\"NetworkAclId\": {\"Ref\": \"myNACL198AF6597\"}, \"Protocol\": 17, \"RuleAction\": \"allow\", \"RuleNumber\": 100, \"CidrBlock\": \"172.16.0.0/24\", \"Egress\": true, \"PortRange\": {\"From\": 53, \"To\": 53}}}, \"myNACL1AllowDNSIngress3030B2C3\": {\"Type\": \"AWS::EC2::NetworkAclEntry\", \"Properties\": {\"NetworkAclId\": {\"Ref\": \"myNACL198AF6597\"}, \"Protocol\": 17, \"RuleAction\": \"allow\", \"RuleNumber\": 100, \"CidrBlock\": \"0.0.0.0/0\", \"Egress\": false, \"PortRange\": {\"From\": 53, \"To\": 53}}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as cdk from 'aws-cdk-lib';\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport { EC2_RESTRICT_DEFAULT_SECURITY_GROUP } from 'aws-cdk-lib/cx-api';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'aws-cdk-ec2-vpc');\nstack.node.setContext(EC2_RESTRICT_DEFAULT_SECURITY_GROUP, false);\n\nconst vpc = new ec2.Vpc(stack, 'MyVpc');\n\n// Test NetworkAcl and rules\n\nconst nacl1 = new ec2.NetworkAcl(stack, 'myNACL1', {\n  vpc,\n  subnetSelection: { subnetType: ec2.SubnetType.PRIVATE_WITH_EGRESS },\n});\n\nnacl1.addEntry('AllowDNSEgress', {\n  ruleNumber: 100,\n  traffic: ec2.AclTraffic.udpPort(53),\n  cidr: ec2.AclCidr.ipv4('172.16.0.0/24'),\n  direction: ec2.TrafficDirection.EGRESS,\n});\n\nnacl1.addEntry('AllowDNSIngress', {\n  ruleNumber: 100,\n  traffic: ec2.AclTraffic.udpPort(53),\n  direction: ec2.TrafficDirection.INGRESS,\n  cidr: ec2.AclCidr.anyIpv4(),\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"VPCB9E5F0B4\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStackMultipartUserData/VPC\"}]}}, \"VPCPublicSubnet1SubnetB4246D30\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"TestStackMultipartUserData/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableFEE4B781\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStackMultipartUserData/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableAssociation0B0896DC\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}}}, \"VPCPublicSubnet1DefaultRoute91CEF279\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet1EIP6AD938E8\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStackMultipartUserData/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1NATGatewayE0556630\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet1EIP6AD938E8\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStackMultipartUserData/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet2Subnet74179F39\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"TestStackMultipartUserData/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTable6F1A15F1\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStackMultipartUserData/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTableAssociation5A808732\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}}}, \"VPCPublicSubnet2DefaultRouteB7481BBA\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet2EIP4947BC00\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStackMultipartUserData/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2NATGateway3C070193\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet2EIP4947BC00\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStackMultipartUserData/VPC/PublicSubnet2\"}]}}, \"VPCPrivateSubnet1Subnet8BCA10E0\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"TestStackMultipartUserData/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableBE8A6027\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStackMultipartUserData/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableAssociation347902D1\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}}}, \"VPCPrivateSubnet1DefaultRouteAE1D6490\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet1NATGatewayE0556630\"}}}, \"VPCPrivateSubnet2SubnetCFCDAA7A\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"TestStackMultipartUserData/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTable0A19E10E\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStackMultipartUserData/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTableAssociation0C73D413\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}}}, \"VPCPrivateSubnet2DefaultRouteF4F5CFD2\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet2NATGateway3C070193\"}}}, \"VPCIGWB7E252D3\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStackMultipartUserData/VPC\"}]}}, \"VPCVPCGW99B986DC\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"InternetGatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}}, \"InstanceInstanceSecurityGroupF0E2D5BE\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"TestStackMultipartUserData/Instance/InstanceSecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"SecurityGroupIngress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"from 0.0.0.0/0:ICMP Type 8\", \"FromPort\": 8, \"IpProtocol\": \"icmp\", \"ToPort\": -1}], \"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStackMultipartUserData/Instance\"}], \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}}, \"InstanceInstanceRoleE9785DE5\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": {\"Fn::Join\": [\"\", [\"ec2.\", {\"Ref\": \"AWS::URLSuffix\"}]]}}}], \"Version\": \"2012-10-17\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStackMultipartUserData/Instance\"}]}}, \"InstanceInstanceRoleDefaultPolicy4ACE9290\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"ec2messages:GetMessages\", \"ssm:*\", \"ssmmessages:*\"], \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"InstanceInstanceRoleDefaultPolicy4ACE9290\", \"Roles\": [{\"Ref\": \"InstanceInstanceRoleE9785DE5\"}]}}, \"InstanceInstanceProfileAB5AEF02\": {\"Type\": \"AWS::IAM::InstanceProfile\", \"Properties\": {\"Roles\": [{\"Ref\": \"InstanceInstanceRoleE9785DE5\"}]}}, \"InstanceC1063A87\": {\"Type\": \"AWS::EC2::Instance\", \"Properties\": {\"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"IamInstanceProfile\": {\"Ref\": \"InstanceInstanceProfileAB5AEF02\"}, \"ImageId\": {\"Ref\": \"SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter\"}, \"InstanceType\": \"t3.nano\", \"SecurityGroupIds\": [{\"Fn::GetAtt\": [\"InstanceInstanceSecurityGroupF0E2D5BE\", \"GroupId\"]}], \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStackMultipartUserData/Instance\"}], \"UserData\": {\"Fn::Base64\": {\"Fn::Join\": [\"\", [\"Content-Type: multipart/mixed; boundary=\\\"+AWS+CDK+User+Data+Separator==\\\"\nMIME-Version: 1.0\n\n--+AWS+CDK+User+Data+Separator==\nContent-Type: text/x-shellscript; charset=\\\"utf-8\\\"\nContent-Transfer-Encoding: base64\n\n\", {\"Fn::Base64\": \"#!/bin/bash\necho \u5927\u3089\u3068 > /var/tmp/echo1\ncp /var/tmp/echo1 /var/tmp/echo1-copy\"}, \"\n--+AWS+CDK+User+Data+Separator==\nContent-Type: text/x-shellscript; charset=\\\"utf-8\\\"\nContent-Transfer-Encoding: base64\n\n\", {\"Fn::Base64\": {\"Fn::Join\": [\"\", [\"#!/bin/bash\necho \u5927\u3089\u3068 \", {\"Ref\": \"VPCB9E5F0B4\"}, \"  > /var/tmp/echo2\"]]}}, \"\n--+AWS+CDK+User+Data+Separator==\nContent-Type: text/cloud-boothook\nContent-Transfer-Encoding: base64\n\n\", {\"Fn::Base64\": \"#!/bin/bash\necho \\\"Boothook2\\\" > /var/tmp/boothook\ncloud-init-per once docker_options echo 'OPTIONS=\\\"${OPTIONS} --storage-opt dm.basesize=20G\\\"' >> /etc/sysconfig/docker\"}, \"\n--+AWS+CDK+User+Data+Separator==\nContent-Type: text/x-shellscript\n\necho \\\"RawPart\\\" > /var/tmp/rawPart1\n--+AWS+CDK+User+Data+Separator==\nContent-Type: text/x-shellscript\n\necho \\\"RawPart \", {\"Ref\": \"VPCB9E5F0B4\"}, \"\\\" > /var/tmp/rawPart2\n--+AWS+CDK+User+Data+Separator==\nContent-Type: text/x-shellscript\n\ncp $0 /var/tmp/upstart # Should be one line file no new line at the end and beginning\n--+AWS+CDK+User+Data+Separator==--\n\"]]}}}, \"DependsOn\": [\"InstanceInstanceRoleDefaultPolicy4ACE9290\", \"InstanceInstanceRoleE9785DE5\"]}}, \"Parameters\": {\"SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter\": {\"Type\": \"AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>\", \"Default\": \"/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2\"}}}", "completion": "/// !cdk-integ *\nimport { PolicyStatement } from 'aws-cdk-lib/aws-iam';\nimport * as cdk from 'aws-cdk-lib';\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\n\nconst app = new cdk.App();\n\nclass TestStack extends cdk.Stack {\n  constructor(scope: cdk.App, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n\n    const vpc = new ec2.Vpc(this, 'VPC');\n\n    // Here we test default separator as probably most useful\n    const multipartUserData = new ec2.MultipartUserData();\n\n    const userData1 = ec2.UserData.forLinux();\n    userData1.addCommands('echo 大らと > /var/tmp/echo1');\n    userData1.addCommands('cp /var/tmp/echo1 /var/tmp/echo1-copy');\n\n    const userData2 = ec2.UserData.forLinux();\n    userData2.addCommands(`echo 大らと ${vpc.vpcId}  > /var/tmp/echo2`);\n\n    const rawPart1 = ec2.MultipartBody.fromRawBody({\n      contentType: 'text/x-shellscript',\n      body: 'echo \"RawPart\" > /var/tmp/rawPart1',\n    });\n\n    const rawPart2 = ec2.MultipartBody.fromRawBody({\n      contentType: 'text/x-shellscript',\n      body: `echo \"RawPart ${vpc.vpcId}\" > /var/tmp/rawPart2`,\n    });\n\n    const bootHook = ec2.UserData.forLinux();\n    bootHook.addCommands(\n      'echo \"Boothook2\" > /var/tmp/boothook',\n      'cloud-init-per once docker_options echo \\'OPTIONS=\"${OPTIONS} --storage-opt dm.basesize=20G\"\\' >> /etc/sysconfig/docker',\n    );\n\n    multipartUserData.addPart(ec2.MultipartBody.fromUserData(userData1));\n    multipartUserData.addPart(ec2.MultipartBody.fromUserData(userData2));\n    multipartUserData.addPart(ec2.MultipartBody.fromUserData(bootHook, 'text/cloud-boothook'));\n\n    const rawPart3 = ec2.MultipartBody.fromRawBody({\n      contentType: 'text/x-shellscript',\n      body: 'cp $0 /var/tmp/upstart # Should be one line file no new line at the end and beginning',\n    });\n    multipartUserData.addPart(rawPart1);\n    multipartUserData.addPart(rawPart2);\n    multipartUserData.addPart(rawPart3);\n\n    const instance = new ec2.Instance(this, 'Instance', {\n      vpc,\n      instanceType: ec2.InstanceType.of(ec2.InstanceClass.T3, ec2.InstanceSize.NANO),\n      machineImage: new ec2.AmazonLinuxImage({ generation: ec2.AmazonLinuxGeneration.AMAZON_LINUX_2 }),\n      userData: multipartUserData,\n    });\n\n    instance.addToRolePolicy(new PolicyStatement({\n      actions: ['ssm:*', 'ssmmessages:*', 'ec2messages:GetMessages'],\n      resources: ['*'],\n    }));\n\n    instance.connections.allowFromAnyIpv4(ec2.Port.icmpPing());\n  }\n}\n\nnew TestStack(app, 'TestStackMultipartUserData');\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyVpcF9F0CA6F\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc/MyVpc\"}]}}, \"MyVpcPublicSubnet1SubnetF6608456\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc/MyVpc/PublicSubnet1\"}]}}, \"MyVpcPublicSubnet1RouteTableC46AB2F4\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc/MyVpc/PublicSubnet1\"}]}}, \"MyVpcPublicSubnet1RouteTableAssociation2ECEE1CB\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPublicSubnet1RouteTableC46AB2F4\"}, \"SubnetId\": {\"Ref\": \"MyVpcPublicSubnet1SubnetF6608456\"}}}, \"MyVpcPublicSubnet1DefaultRoute95FDF9EB\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPublicSubnet1RouteTableC46AB2F4\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"MyVpcIGW5C4A4F63\"}}, \"DependsOn\": [\"MyVpcVPCGW488ACE0D\"]}, \"MyVpcPublicSubnet1EIP096967CB\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc/MyVpc/PublicSubnet1\"}]}}, \"MyVpcPublicSubnet1NATGatewayAD3400C1\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"MyVpcPublicSubnet1SubnetF6608456\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"MyVpcPublicSubnet1EIP096967CB\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc/MyVpc/PublicSubnet1\"}]}, \"DependsOn\": [\"MyVpcPublicSubnet1DefaultRoute95FDF9EB\", \"MyVpcPublicSubnet1RouteTableAssociation2ECEE1CB\"]}, \"MyVpcPublicSubnet2Subnet492B6BFB\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc/MyVpc/PublicSubnet2\"}]}}, \"MyVpcPublicSubnet2RouteTable1DF17386\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc/MyVpc/PublicSubnet2\"}]}}, \"MyVpcPublicSubnet2RouteTableAssociation227DE78D\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPublicSubnet2RouteTable1DF17386\"}, \"SubnetId\": {\"Ref\": \"MyVpcPublicSubnet2Subnet492B6BFB\"}}}, \"MyVpcPublicSubnet2DefaultRoute052936F6\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPublicSubnet2RouteTable1DF17386\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"MyVpcIGW5C4A4F63\"}}, \"DependsOn\": [\"MyVpcVPCGW488ACE0D\"]}, \"MyVpcPublicSubnet2EIP8CCBA239\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc/MyVpc/PublicSubnet2\"}]}}, \"MyVpcPublicSubnet2NATGateway91BFBEC9\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"MyVpcPublicSubnet2Subnet492B6BFB\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"MyVpcPublicSubnet2EIP8CCBA239\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc/MyVpc/PublicSubnet2\"}]}, \"DependsOn\": [\"MyVpcPublicSubnet2DefaultRoute052936F6\", \"MyVpcPublicSubnet2RouteTableAssociation227DE78D\"]}, \"MyVpcPrivateSubnet1Subnet5057CF7E\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc/MyVpc/PrivateSubnet1\"}]}}, \"MyVpcPrivateSubnet1RouteTable8819E6E2\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc/MyVpc/PrivateSubnet1\"}]}}, \"MyVpcPrivateSubnet1RouteTableAssociation56D38C7E\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPrivateSubnet1RouteTable8819E6E2\"}, \"SubnetId\": {\"Ref\": \"MyVpcPrivateSubnet1Subnet5057CF7E\"}}}, \"MyVpcPrivateSubnet1DefaultRouteA8CDE2FA\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPrivateSubnet1RouteTable8819E6E2\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"MyVpcPublicSubnet1NATGatewayAD3400C1\"}}}, \"MyVpcPrivateSubnet2Subnet0040C983\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc/MyVpc/PrivateSubnet2\"}]}}, \"MyVpcPrivateSubnet2RouteTableCEDCEECE\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc/MyVpc/PrivateSubnet2\"}]}}, \"MyVpcPrivateSubnet2RouteTableAssociation86A610DA\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPrivateSubnet2RouteTableCEDCEECE\"}, \"SubnetId\": {\"Ref\": \"MyVpcPrivateSubnet2Subnet0040C983\"}}}, \"MyVpcPrivateSubnet2DefaultRoute9CE96294\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPrivateSubnet2RouteTableCEDCEECE\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"MyVpcPublicSubnet2NATGateway91BFBEC9\"}}}, \"MyVpcIGW5C4A4F63\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-ec2-vpc/MyVpc\"}]}}, \"MyVpcVPCGW488ACE0D\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"InternetGatewayId\": {\"Ref\": \"MyVpcIGW5C4A4F63\"}}}, \"SGADB53937\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"aws-cdk-ec2-vpc/SG\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"SecurityGroupIngress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"from 0.0.0.0/0:ICMP Type 8\", \"FromPort\": 8, \"IpProtocol\": \"icmp\", \"ToPort\": -1}, {\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"from 0.0.0.0/0:ICMP Type 128\", \"FromPort\": 128, \"IpProtocol\": \"icmp\", \"ToPort\": -1}, {\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"from 0.0.0.0/0:ALL ICMP\", \"FromPort\": -1, \"IpProtocol\": \"icmp\", \"ToPort\": -1}, {\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"from 0.0.0.0/0:UDP ALL PORTS\", \"FromPort\": 0, \"IpProtocol\": \"udp\", \"ToPort\": 65535}, {\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"from 0.0.0.0/0:UDP 123\", \"FromPort\": 123, \"IpProtocol\": \"udp\", \"ToPort\": 123}, {\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"from 0.0.0.0/0:UDP 800-801\", \"FromPort\": 800, \"IpProtocol\": \"udp\", \"ToPort\": 801}], \"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as cdk from 'aws-cdk-lib';\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport { EC2_RESTRICT_DEFAULT_SECURITY_GROUP } from 'aws-cdk-lib/cx-api';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'aws-cdk-ec2-vpc');\nstack.node.setContext(EC2_RESTRICT_DEFAULT_SECURITY_GROUP, false);\n\nconst vpc = new ec2.Vpc(stack, 'MyVpc');\n\n// Test Security Group Rules\nconst sg = new ec2.SecurityGroup(stack, 'SG', { vpc });\n\nconst rules = [\n  ec2.Port.icmpPing(),\n  ec2.Port.icmpType(128),\n  ec2.Port.allIcmp(),\n  ec2.Port.allUdp(),\n  ec2.Port.udp(123),\n  ec2.Port.udpRange(800, 801),\n];\n\nfor (const rule of rules) {\n  sg.addIngressRule(ec2.Peer.anyIpv4(), rule);\n}\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"VPCB9E5F0B4\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStack/VPC\"}]}}, \"VPCPublicSubnet1SubnetB4246D30\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"TestStack/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableFEE4B781\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStack/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableAssociation0B0896DC\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}}}, \"VPCPublicSubnet1DefaultRoute91CEF279\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet1EIP6AD938E8\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStack/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1NATGatewayE0556630\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet1EIP6AD938E8\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStack/VPC/PublicSubnet1\"}]}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\"]}, \"VPCPublicSubnet2Subnet74179F39\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"TestStack/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTable6F1A15F1\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStack/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTableAssociation5A808732\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}}}, \"VPCPublicSubnet2DefaultRouteB7481BBA\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet2EIP4947BC00\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStack/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2NATGateway3C070193\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet2EIP4947BC00\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStack/VPC/PublicSubnet2\"}]}, \"DependsOn\": [\"VPCPublicSubnet2DefaultRouteB7481BBA\", \"VPCPublicSubnet2RouteTableAssociation5A808732\"]}, \"VPCPrivateSubnet1Subnet8BCA10E0\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"TestStack/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableBE8A6027\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStack/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableAssociation347902D1\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}}}, \"VPCPrivateSubnet1DefaultRouteAE1D6490\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet1NATGatewayE0556630\"}}}, \"VPCPrivateSubnet2SubnetCFCDAA7A\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"TestStack/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTable0A19E10E\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStack/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTableAssociation0C73D413\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}}}, \"VPCPrivateSubnet2DefaultRouteF4F5CFD2\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet2NATGateway3C070193\"}}}, \"VPCIGWB7E252D3\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStack/VPC\"}]}}, \"VPCVPCGW99B986DC\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"InternetGatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}}, \"BastionHostInstanceSecurityGroupE75D4274\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"TestStack/BastionHost/Resource/InstanceSecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"Tags\": [{\"Key\": \"Name\", \"Value\": \"BastionHost\"}], \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}}, \"BastionHostInstanceRoleDD3FA5F1\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"ec2.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"BastionHost\"}]}}, \"BastionHostInstanceRoleDefaultPolicy17347525\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"ec2messages:*\", \"ssm:UpdateInstanceInformation\", \"ssmmessages:*\"], \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"BastionHostInstanceRoleDefaultPolicy17347525\", \"Roles\": [{\"Ref\": \"BastionHostInstanceRoleDD3FA5F1\"}]}}, \"BastionHostInstanceProfile770FCA07\": {\"Type\": \"AWS::IAM::InstanceProfile\", \"Properties\": {\"Roles\": [{\"Ref\": \"BastionHostInstanceRoleDD3FA5F1\"}]}}, \"BastionHost30F9ED05\": {\"Type\": \"AWS::EC2::Instance\", \"Properties\": {\"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"IamInstanceProfile\": {\"Ref\": \"BastionHostInstanceProfile770FCA07\"}, \"ImageId\": {\"Ref\": \"SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmarm64gp2C96584B6F00A464EAD1953AFF4B05118Parameter\"}, \"InstanceType\": \"t4g.nano\", \"SecurityGroupIds\": [{\"Fn::GetAtt\": [\"BastionHostInstanceSecurityGroupE75D4274\", \"GroupId\"]}], \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"BastionHost\"}], \"UserData\": {\"Fn::Base64\": \"#!/bin/bash\"}}, \"DependsOn\": [\"BastionHostInstanceRoleDefaultPolicy17347525\", \"BastionHostInstanceRoleDD3FA5F1\"]}}, \"Outputs\": {\"BastionHostBastionHostIdC743CBD6\": {\"Description\": \"Instance ID of the bastion host. Use this to connect via SSM Session Manager\", \"Value\": {\"Ref\": \"BastionHost30F9ED05\"}}}, \"Parameters\": {\"SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmarm64gp2C96584B6F00A464EAD1953AFF4B05118Parameter\": {\"Type\": \"AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>\", \"Default\": \"/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-arm64-gp2\"}, \"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "/*\n * Stack verification steps:\n * * aws ssm start-session --target <bastion host instance id>\n * * lscpu  # Architecture should be aarch64\n */\nimport * as cdk from 'aws-cdk-lib';\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport { EC2_RESTRICT_DEFAULT_SECURITY_GROUP } from 'aws-cdk-lib/cx-api';\n\nconst app = new cdk.App();\n\nclass TestStack extends cdk.Stack {\n  constructor(scope: cdk.App, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n    this.node.setContext(EC2_RESTRICT_DEFAULT_SECURITY_GROUP, false);\n\n    const vpc = new ec2.Vpc(this, 'VPC');\n\n    new ec2.BastionHostLinux(this, 'BastionHost', {\n      vpc,\n      instanceType: ec2.InstanceType.of(ec2.InstanceClass.T4G, ec2.InstanceSize.NANO),\n    });\n  }\n}\n\nnew TestStack(app, 'TestStack');\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"TestRole6C9272DF\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}}, \"TestGroupAF88660E\": {\"Type\": \"AWS::IAM::Group\"}, \"TestPortfolio4AC794EB\": {\"Type\": \"AWS::ServiceCatalog::Portfolio\", \"Properties\": {\"DisplayName\": \"TestPortfolio\", \"ProviderName\": \"TestProvider\", \"AcceptLanguage\": \"en\", \"Description\": \"This is our Service Catalog Portfolio\"}}, \"TestPortfolioPortolioPrincipalAssociation20e1afa20ac27E1A060D\": {\"Type\": \"AWS::ServiceCatalog::PortfolioPrincipalAssociation\", \"Properties\": {\"PortfolioId\": {\"Ref\": \"TestPortfolio4AC794EB\"}, \"PrincipalARN\": {\"Fn::GetAtt\": [\"TestRole6C9272DF\", \"Arn\"]}, \"PrincipalType\": \"IAM\"}}, \"TestPortfolioPortolioPrincipalAssociation44a1ca1c23384D6E460B\": {\"Type\": \"AWS::ServiceCatalog::PortfolioPrincipalAssociation\", \"Properties\": {\"PortfolioId\": {\"Ref\": \"TestPortfolio4AC794EB\"}, \"PrincipalARN\": {\"Fn::GetAtt\": [\"TestGroupAF88660E\", \"Arn\"]}, \"PrincipalType\": \"IAM\"}}, \"TestPortfolioTagOptionAssociation517ba9dbaf19EA8252F0\": {\"Type\": \"AWS::ServiceCatalog::TagOptionAssociation\", \"Properties\": {\"ResourceId\": {\"Ref\": \"TestPortfolio4AC794EB\"}, \"TagOptionId\": {\"Ref\": \"TagOptions5f31c54ba705F110F743\"}}}, \"TestPortfolioTagOptionAssociationb38e9aae7f1bD3708991\": {\"Type\": \"AWS::ServiceCatalog::TagOptionAssociation\", \"Properties\": {\"ResourceId\": {\"Ref\": \"TestPortfolio4AC794EB\"}, \"TagOptionId\": {\"Ref\": \"TagOptions8d263919cebb6764AC10\"}}}, \"TestPortfolioTagOptionAssociationeeabbf0db0e3ADBF0A6D\": {\"Type\": \"AWS::ServiceCatalog::TagOptionAssociation\", \"Properties\": {\"ResourceId\": {\"Ref\": \"TestPortfolio4AC794EB\"}, \"TagOptionId\": {\"Ref\": \"TagOptionsa260cbbd99c416C40F73\"}}}, \"TestPortfolioPortfolioSharebf5b82f042508F035880\": {\"Type\": \"AWS::ServiceCatalog::PortfolioShare\", \"Properties\": {\"AccountId\": \"123456789012\", \"PortfolioId\": {\"Ref\": \"TestPortfolio4AC794EB\"}}}, \"TestPortfolioPortfolioProductAssociationa0185761d231B0D998A7\": {\"Type\": \"AWS::ServiceCatalog::PortfolioProductAssociation\", \"Properties\": {\"PortfolioId\": {\"Ref\": \"TestPortfolio4AC794EB\"}, \"ProductId\": {\"Ref\": \"TestProduct7606930B\"}}}, \"TestPortfolioResourceUpdateConstrainta0185761d231AB0EAAE0\": {\"Type\": \"AWS::ServiceCatalog::ResourceUpdateConstraint\", \"Properties\": {\"PortfolioId\": {\"Ref\": \"TestPortfolio4AC794EB\"}, \"ProductId\": {\"Ref\": \"TestProduct7606930B\"}, \"TagUpdateOnProvisionedProduct\": \"ALLOWED\"}, \"DependsOn\": [\"TestPortfolioPortfolioProductAssociationa0185761d231B0D998A7\"]}, \"TestPortfolioLaunchNotificationConstraintf2572fdcecadB6DD8541\": {\"Type\": \"AWS::ServiceCatalog::LaunchNotificationConstraint\", \"Properties\": {\"NotificationArns\": [{\"Ref\": \"Topic198E71B3E\"}], \"PortfolioId\": {\"Ref\": \"TestPortfolio4AC794EB\"}, \"ProductId\": {\"Ref\": \"TestProduct7606930B\"}}, \"DependsOn\": [\"TestPortfolioPortfolioProductAssociationa0185761d231B0D998A7\"]}, \"TestPortfolioLaunchNotificationConstrainta9675fc4d6aa995BF1B9\": {\"Type\": \"AWS::ServiceCatalog::LaunchNotificationConstraint\", \"Properties\": {\"NotificationArns\": [{\"Ref\": \"specialTopic7664DE4C\"}], \"PortfolioId\": {\"Ref\": \"TestPortfolio4AC794EB\"}, \"ProductId\": {\"Ref\": \"TestProduct7606930B\"}, \"AcceptLanguage\": \"en\", \"Description\": \"special topic description\"}, \"DependsOn\": [\"TestPortfolioPortfolioProductAssociationa0185761d231B0D998A7\"]}, \"TestPortfolioLaunchRoleConstrainta0185761d2312183162C\": {\"Type\": \"AWS::ServiceCatalog::LaunchRoleConstraint\", \"Properties\": {\"PortfolioId\": {\"Ref\": \"TestPortfolio4AC794EB\"}, \"ProductId\": {\"Ref\": \"TestProduct7606930B\"}, \"RoleArn\": {\"Fn::GetAtt\": [\"LaunchRole2CFB2E44\", \"Arn\"]}}, \"DependsOn\": [\"TestPortfolioPortfolioProductAssociationa0185761d231B0D998A7\"]}, \"TestPortfolioLaunchTemplateConstraintfac7b49c426e599F9FFF\": {\"Type\": \"AWS::ServiceCatalog::LaunchTemplateConstraint\", \"Properties\": {\"PortfolioId\": {\"Ref\": \"TestPortfolio4AC794EB\"}, \"ProductId\": {\"Ref\": \"TestProduct7606930B\"}, \"Rules\": \"{\\\"SubnetsinVPC\\\":{\\\"Assertions\\\":[{\\\"Assert\\\":{\\\"Fn::EachMemberIn\\\":[{\\\"Fn::ValueOfAll\\\":[\\\"AWs::EC2::Subnet::Id\\\",\\\"VpcId\\\"]},{\\\"Fn::RefAll\\\":\\\"AWS::EC2::VPC::Id\\\"}]},\\\"AssertDescription\\\":\\\"test description\\\"}]}}\"}, \"DependsOn\": [\"TestPortfolioPortfolioProductAssociationa0185761d231B0D998A7\"]}, \"TagOptions5f31c54ba705F110F743\": {\"Type\": \"AWS::ServiceCatalog::TagOption\", \"Properties\": {\"Key\": \"key1\", \"Value\": \"value1\", \"Active\": true}}, \"TagOptions8d263919cebb6764AC10\": {\"Type\": \"AWS::ServiceCatalog::TagOption\", \"Properties\": {\"Key\": \"key1\", \"Value\": \"value2\", \"Active\": true}}, \"TagOptionsa260cbbd99c416C40F73\": {\"Type\": \"AWS::ServiceCatalog::TagOption\", \"Properties\": {\"Key\": \"key2\", \"Value\": \"value1\", \"Active\": true}}, \"TestProduct7606930B\": {\"Type\": \"AWS::ServiceCatalog::CloudFormationProduct\", \"Properties\": {\"Name\": \"testProduct\", \"Owner\": \"testOwner\", \"ProvisioningArtifactParameters\": [{\"DisableTemplateValidation\": true, \"Info\": {\"LoadTemplateFromURL\": \"https://awsdocs.s3.amazonaws.com/servicecatalog/development-environment.template\"}}]}}, \"TestProductTagOptionAssociation667d45e6d8a1F30303D6\": {\"Type\": \"AWS::ServiceCatalog::TagOptionAssociation\", \"Properties\": {\"ResourceId\": {\"Ref\": \"TestProduct7606930B\"}, \"TagOptionId\": {\"Ref\": \"TagOptions5f31c54ba705F110F743\"}}}, \"TestProductTagOptionAssociationec68fcd0154fF6DAD979\": {\"Type\": \"AWS::ServiceCatalog::TagOptionAssociation\", \"Properties\": {\"ResourceId\": {\"Ref\": \"TestProduct7606930B\"}, \"TagOptionId\": {\"Ref\": \"TagOptions8d263919cebb6764AC10\"}}}, \"TestProductTagOptionAssociation259ba31b62cc63D068F9\": {\"Type\": \"AWS::ServiceCatalog::TagOptionAssociation\", \"Properties\": {\"ResourceId\": {\"Ref\": \"TestProduct7606930B\"}, \"TagOptionId\": {\"Ref\": \"TagOptionsa260cbbd99c416C40F73\"}}}, \"Topic198E71B3E\": {\"Type\": \"AWS::SNS::Topic\"}, \"specialTopic7664DE4C\": {\"Type\": \"AWS::SNS::Topic\"}, \"LaunchRole2CFB2E44\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"servicecatalog.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"SecondTestPortfolio96C8F4BA\": {\"Type\": \"AWS::ServiceCatalog::Portfolio\", \"Properties\": {\"DisplayName\": \"SecondTestPortfolio\", \"ProviderName\": \"TestProvider\"}}, \"SecondTestPortfolioPortfolioProductAssociationcda67a671c209FE862F2\": {\"Type\": \"AWS::ServiceCatalog::PortfolioProductAssociation\", \"Properties\": {\"PortfolioId\": {\"Ref\": \"SecondTestPortfolio96C8F4BA\"}, \"ProductId\": {\"Ref\": \"TestProduct7606930B\"}}}, \"SecondTestPortfolioStackSetConstraintcda67a671c20A02367A6\": {\"Type\": \"AWS::ServiceCatalog::StackSetConstraint\", \"Properties\": {\"AccountList\": [\"000000000000\", \"111111111111\", \"222222222222\"], \"AdminRole\": {\"Fn::GetAtt\": [\"AdminRole38563C57\", \"Arn\"]}, \"Description\": \"\", \"ExecutionRole\": \"StackSetExecutionRole\", \"PortfolioId\": {\"Ref\": \"SecondTestPortfolio96C8F4BA\"}, \"ProductId\": {\"Ref\": \"TestProduct7606930B\"}, \"RegionList\": [\"us-east-1\", \"us-west-2\", \"eu-west-1\"], \"StackInstanceControl\": \"ALLOWED\"}, \"DependsOn\": [\"SecondTestPortfolioPortfolioProductAssociationcda67a671c209FE862F2\"]}, \"AdminRole38563C57\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as iam from 'aws-cdk-lib/aws-iam';\nimport * as sns from 'aws-cdk-lib/aws-sns';\nimport * as cdk from 'aws-cdk-lib';\nimport * as servicecatalog from 'aws-cdk-lib/aws-servicecatalog';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'integ-servicecatalog-portfolio');\n\nconst role = new iam.Role(stack, 'TestRole', {\n  assumedBy: new iam.AccountRootPrincipal(),\n});\n\nconst group = new iam.Group(stack, 'TestGroup');\n\nconst portfolio = new servicecatalog.Portfolio(stack, 'TestPortfolio', {\n  displayName: 'TestPortfolio',\n  providerName: 'TestProvider',\n  description: 'This is our Service Catalog Portfolio',\n  messageLanguage: servicecatalog.MessageLanguage.EN,\n});\n\nportfolio.giveAccessToRole(role);\nportfolio.giveAccessToGroup(group);\n\nconst tagOptions = new servicecatalog.TagOptions(stack, 'TagOptions', {\n  allowedValuesForTags: {\n    key1: ['value1', 'value2'],\n    key2: ['value1'],\n  },\n});\nportfolio.associateTagOptions(tagOptions);\n\nportfolio.shareWithAccount('123456789012');\n\nconst product = new servicecatalog.CloudFormationProduct(stack, 'TestProduct', {\n  productName: 'testProduct',\n  owner: 'testOwner',\n  productVersions: [\n    {\n      validateTemplate: false,\n      cloudFormationTemplate: servicecatalog.CloudFormationTemplate.fromUrl(\n        'https://awsdocs.s3.amazonaws.com/servicecatalog/development-environment.template'),\n    },\n  ],\n  tagOptions: tagOptions,\n});\n\nportfolio.addProduct(product);\n\nportfolio.constrainTagUpdates(product);\n\nconst topic = new sns.Topic(stack, 'Topic1');\n\nconst specialTopic = new sns.Topic(stack, 'specialTopic');\n\nportfolio.notifyOnStackEvents(product, topic);\nportfolio.notifyOnStackEvents(product, specialTopic, {\n  description: 'special topic description',\n  messageLanguage: servicecatalog.MessageLanguage.EN,\n});\n\nconst launchRole = new iam.Role(stack, 'LaunchRole', {\n  assumedBy: new iam.ServicePrincipal('servicecatalog.amazonaws.com'),\n});\n\nportfolio.setLaunchRole(product, launchRole);\n\nconst secondPortfolio = new servicecatalog.Portfolio(stack, 'SecondTestPortfolio', {\n  displayName: 'SecondTestPortfolio',\n  providerName: 'TestProvider',\n});\n\nconst adminRole = new iam.Role(stack, 'AdminRole', {\n  assumedBy: new iam.AccountRootPrincipal(),\n});\n\nsecondPortfolio.deployWithStackSets(product, {\n  accounts: ['000000000000', '111111111111', '222222222222'],\n  regions: ['us-east-1', 'us-west-2', 'eu-west-1'],\n  adminRole: adminRole,\n  executionRoleName: 'StackSetExecutionRole',\n  allowStackSetInstanceOperations: true,\n});\n\nportfolio.constrainCloudFormationParameters(product, {\n  rule: {\n    ruleName: 'SubnetsinVPC',\n    assertions: [{\n      assert: cdk.Fn.conditionEachMemberIn(\n        cdk.Fn.valueOfAll('AWs::EC2::Subnet::Id', 'VpcId'),\n        cdk.Fn.refAll('AWS::EC2::VPC::Id')),\n      description: 'test description',\n    }],\n  },\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"Vpc8378EB38\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStack/Vpc\"}]}}, \"VpcPublicSubnet1Subnet5C2D37C4\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"TestStack/Vpc/PublicSubnet1\"}]}}, \"VpcPublicSubnet1RouteTable6C95E38E\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStack/Vpc/PublicSubnet1\"}]}}, \"VpcPublicSubnet1RouteTableAssociation97140677\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet1RouteTable6C95E38E\"}, \"SubnetId\": {\"Ref\": \"VpcPublicSubnet1Subnet5C2D37C4\"}}}, \"VpcPublicSubnet1DefaultRoute3DA9E72A\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet1RouteTable6C95E38E\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VpcIGWD7BA715C\"}}, \"DependsOn\": [\"VpcVPCGWBF912B6E\"]}, \"VpcPublicSubnet1EIPD7E02669\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStack/Vpc/PublicSubnet1\"}]}}, \"VpcPublicSubnet1NATGateway4D7517AA\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VpcPublicSubnet1Subnet5C2D37C4\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VpcPublicSubnet1EIPD7E02669\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStack/Vpc/PublicSubnet1\"}]}, \"DependsOn\": [\"VpcPublicSubnet1DefaultRoute3DA9E72A\", \"VpcPublicSubnet1RouteTableAssociation97140677\"]}, \"VpcPublicSubnet2Subnet691E08A3\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"TestStack/Vpc/PublicSubnet2\"}]}}, \"VpcPublicSubnet2RouteTable94F7E489\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStack/Vpc/PublicSubnet2\"}]}}, \"VpcPublicSubnet2RouteTableAssociationDD5762D8\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet2RouteTable94F7E489\"}, \"SubnetId\": {\"Ref\": \"VpcPublicSubnet2Subnet691E08A3\"}}}, \"VpcPublicSubnet2DefaultRoute97F91067\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet2RouteTable94F7E489\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VpcIGWD7BA715C\"}}, \"DependsOn\": [\"VpcVPCGWBF912B6E\"]}, \"VpcPrivateSubnet1Subnet536B997A\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"TestStack/Vpc/PrivateSubnet1\"}]}}, \"VpcPrivateSubnet1RouteTableB2C5B500\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStack/Vpc/PrivateSubnet1\"}]}}, \"VpcPrivateSubnet1RouteTableAssociation70C59FA6\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet1RouteTableB2C5B500\"}, \"SubnetId\": {\"Ref\": \"VpcPrivateSubnet1Subnet536B997A\"}}}, \"VpcPrivateSubnet1DefaultRouteBE02A9ED\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet1RouteTableB2C5B500\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VpcPublicSubnet1NATGateway4D7517AA\"}}}, \"VpcPrivateSubnet2Subnet3788AAA1\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"TestStack/Vpc/PrivateSubnet2\"}]}}, \"VpcPrivateSubnet2RouteTableA678073B\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStack/Vpc/PrivateSubnet2\"}]}}, \"VpcPrivateSubnet2RouteTableAssociationA89CAD56\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet2RouteTableA678073B\"}, \"SubnetId\": {\"Ref\": \"VpcPrivateSubnet2Subnet3788AAA1\"}}}, \"VpcPrivateSubnet2DefaultRoute060D2087\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet2RouteTableA678073B\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VpcPublicSubnet1NATGateway4D7517AA\"}}}, \"VpcIGWD7BA715C\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"TestStack/Vpc\"}]}}, \"VpcVPCGWBF912B6E\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"InternetGatewayId\": {\"Ref\": \"VpcIGWD7BA715C\"}}}, \"TaskTaskRoleE98524A1\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"ecs-tasks.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"Task79114B6B\": {\"Type\": \"AWS::ECS::TaskDefinition\", \"Properties\": {\"ContainerDefinitions\": [{\"Essential\": true, \"Image\": \"public.ecr.aws/nginx/nginx:latest\", \"Name\": \"nginx\", \"PortMappings\": [{\"ContainerPort\": 80, \"Protocol\": \"tcp\"}]}], \"Cpu\": \"256\", \"Family\": \"TestStackTask24CEEDF4\", \"Memory\": \"512\", \"NetworkMode\": \"awsvpc\", \"RequiresCompatibilities\": [\"FARGATE\"], \"TaskRoleArn\": {\"Fn::GetAtt\": [\"TaskTaskRoleE98524A1\", \"Arn\"]}}}, \"ServiceLBE9A1ADBC\": {\"Type\": \"AWS::ElasticLoadBalancingV2::LoadBalancer\", \"Properties\": {\"LoadBalancerAttributes\": [{\"Key\": \"deletion_protection.enabled\", \"Value\": \"false\"}], \"Scheme\": \"internal\", \"SecurityGroups\": [{\"Fn::GetAtt\": [\"ServiceLBSecurityGroupF7435A5C\", \"GroupId\"]}], \"Subnets\": [{\"Ref\": \"VpcPrivateSubnet1Subnet536B997A\"}, {\"Ref\": \"VpcPrivateSubnet2Subnet3788AAA1\"}], \"Type\": \"application\"}}, \"ServiceLBSecurityGroupF7435A5C\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"Automatically created Security Group for ELB TestStackServiceLBD3BB32E9\", \"SecurityGroupIngress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow from anyone on port 80\", \"FromPort\": 80, \"IpProtocol\": \"tcp\", \"ToPort\": 80}], \"VpcId\": {\"Ref\": \"Vpc8378EB38\"}}}, \"ServiceLBSecurityGrouptoTestStackServiceSecurityGroup59159BDD804A6BA8AC\": {\"Type\": \"AWS::EC2::SecurityGroupEgress\", \"Properties\": {\"GroupId\": {\"Fn::GetAtt\": [\"ServiceLBSecurityGroupF7435A5C\", \"GroupId\"]}, \"IpProtocol\": \"tcp\", \"Description\": \"Load balancer to target\", \"DestinationSecurityGroupId\": {\"Fn::GetAtt\": [\"ServiceSecurityGroupEEA09B68\", \"GroupId\"]}, \"FromPort\": 80, \"ToPort\": 80}}, \"ServiceLBPublicListener46709EAA\": {\"Type\": \"AWS::ElasticLoadBalancingV2::Listener\", \"Properties\": {\"DefaultActions\": [{\"TargetGroupArn\": {\"Ref\": \"ServiceLBPublicListenerECSGroup0CC8688C\"}, \"Type\": \"forward\"}], \"LoadBalancerArn\": {\"Ref\": \"ServiceLBE9A1ADBC\"}, \"Port\": 80, \"Protocol\": \"HTTP\"}}, \"ServiceLBPublicListenerECSGroup0CC8688C\": {\"Type\": \"AWS::ElasticLoadBalancingV2::TargetGroup\", \"Properties\": {\"Port\": 80, \"Protocol\": \"HTTP\", \"TargetGroupAttributes\": [{\"Key\": \"stickiness.enabled\", \"Value\": \"false\"}], \"TargetType\": \"ip\", \"VpcId\": {\"Ref\": \"Vpc8378EB38\"}}}, \"Service9571FDD8\": {\"Type\": \"AWS::ECS::Service\", \"Properties\": {\"Cluster\": {\"Ref\": \"EcsDefaultClusterMnL3mNNYNVpc18E0451A\"}, \"DeploymentConfiguration\": {\"MaximumPercent\": 200, \"MinimumHealthyPercent\": 50}, \"EnableECSManagedTags\": false, \"HealthCheckGracePeriodSeconds\": 60, \"LaunchType\": \"FARGATE\", \"LoadBalancers\": [{\"ContainerName\": \"nginx\", \"ContainerPort\": 80, \"TargetGroupArn\": {\"Ref\": \"ServiceLBPublicListenerECSGroup0CC8688C\"}}], \"NetworkConfiguration\": {\"AwsvpcConfiguration\": {\"AssignPublicIp\": \"DISABLED\", \"SecurityGroups\": [{\"Fn::GetAtt\": [\"ServiceSecurityGroupEEA09B68\", \"GroupId\"]}], \"Subnets\": [{\"Ref\": \"VpcPrivateSubnet1Subnet536B997A\"}, {\"Ref\": \"VpcPrivateSubnet2Subnet3788AAA1\"}]}}, \"TaskDefinition\": {\"Ref\": \"Task79114B6B\"}}, \"DependsOn\": [\"ServiceLBPublicListenerECSGroup0CC8688C\", \"ServiceLBPublicListener46709EAA\", \"TaskTaskRoleE98524A1\"]}, \"ServiceSecurityGroupEEA09B68\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"TestStack/Service/Service/SecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"VpcId\": {\"Ref\": \"Vpc8378EB38\"}}, \"DependsOn\": [\"TaskTaskRoleE98524A1\"]}, \"ServiceSecurityGroupfromTestStackServiceLBSecurityGroup76260E3B8004FB511A\": {\"Type\": \"AWS::EC2::SecurityGroupIngress\", \"Properties\": {\"IpProtocol\": \"tcp\", \"Description\": \"Load balancer to target\", \"FromPort\": 80, \"GroupId\": {\"Fn::GetAtt\": [\"ServiceSecurityGroupEEA09B68\", \"GroupId\"]}, \"SourceSecurityGroupId\": {\"Fn::GetAtt\": [\"ServiceLBSecurityGroupF7435A5C\", \"GroupId\"]}, \"ToPort\": 80}, \"DependsOn\": [\"TaskTaskRoleE98524A1\"]}, \"EcsDefaultClusterMnL3mNNYNVpc18E0451A\": {\"Type\": \"AWS::ECS::Cluster\"}, \"NlbBCDB97FE\": {\"Type\": \"AWS::ElasticLoadBalancingV2::LoadBalancer\", \"Properties\": {\"LoadBalancerAttributes\": [{\"Key\": \"deletion_protection.enabled\", \"Value\": \"false\"}, {\"Key\": \"load_balancing.cross_zone.enabled\", \"Value\": \"true\"}], \"Scheme\": \"internet-facing\", \"Subnets\": [{\"Ref\": \"VpcPublicSubnet1Subnet5C2D37C4\"}, {\"Ref\": \"VpcPublicSubnet2Subnet691E08A3\"}], \"Type\": \"network\"}, \"DependsOn\": [\"VpcPublicSubnet1DefaultRoute3DA9E72A\", \"VpcPublicSubnet1RouteTableAssociation97140677\", \"VpcPublicSubnet2DefaultRoute97F91067\", \"VpcPublicSubnet2RouteTableAssociationDD5762D8\"]}, \"NlblistenerBE297616\": {\"Type\": \"AWS::ElasticLoadBalancingV2::Listener\", \"Properties\": {\"DefaultActions\": [{\"TargetGroupArn\": {\"Ref\": \"NlblistenerTargetsGroupDD2A3CB0\"}, \"Type\": \"forward\"}], \"LoadBalancerArn\": {\"Ref\": \"NlbBCDB97FE\"}, \"Port\": 80, \"Protocol\": \"TCP\"}}, \"NlblistenerTargetsGroupDD2A3CB0\": {\"Type\": \"AWS::ElasticLoadBalancingV2::TargetGroup\", \"Properties\": {\"HealthCheckProtocol\": \"HTTP\", \"Port\": 80, \"Protocol\": \"TCP\", \"Targets\": [{\"Id\": {\"Ref\": \"ServiceLBE9A1ADBC\"}, \"Port\": 80}], \"TargetType\": \"alb\", \"VpcId\": {\"Ref\": \"Vpc8378EB38\"}}, \"DependsOn\": [\"ServiceLBPublicListenerECSGroup0CC8688C\", \"ServiceLBPublicListener46709EAA\"]}}, \"Outputs\": {\"ServiceLoadBalancerDNSEC5B149E\": {\"Value\": {\"Fn::GetAtt\": [\"ServiceLBE9A1ADBC\", \"DNSName\"]}}, \"ServiceServiceURL250C0FB6\": {\"Value\": {\"Fn::Join\": [\"\", [\"http://\", {\"Fn::GetAtt\": [\"ServiceLBE9A1ADBC\", \"DNSName\"]}]]}}, \"NlbEndpoint\": {\"Value\": {\"Fn::Join\": [\"\", [\"http://\", {\"Fn::GetAtt\": [\"NlbBCDB97FE\", \"DNSName\"]}]]}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as ecs from 'aws-cdk-lib/aws-ecs';\nimport * as patterns from 'aws-cdk-lib/aws-ecs-patterns';\nimport * as elbv2 from 'aws-cdk-lib/aws-elasticloadbalancingv2';\nimport { App, CfnOutput, Stack, StackProps } from 'aws-cdk-lib';\nimport { Construct } from 'constructs';\nimport * as targets from 'aws-cdk-lib/aws-elasticloadbalancingv2-targets';\n\nclass TestStack extends Stack {\n  constructor(scope: Construct, id: string, props?: StackProps) {\n    super(scope, id, props);\n\n    const vpc = new ec2.Vpc(this, 'Vpc', { maxAzs: 2, natGateways: 1, restrictDefaultSecurityGroup: false });\n\n    const task = new ecs.FargateTaskDefinition(this, 'Task', { cpu: 256, memoryLimitMiB: 512 });\n    task.addContainer('nginx', {\n      image: ecs.ContainerImage.fromRegistry('public.ecr.aws/nginx/nginx:latest'),\n      portMappings: [{ containerPort: 80 }],\n    });\n    const svc = new patterns.ApplicationLoadBalancedFargateService(this, 'Service', {\n      vpc,\n      taskDefinition: task,\n      publicLoadBalancer: false,\n    });\n\n    const nlb = new elbv2.NetworkLoadBalancer(this, 'Nlb', {\n      vpc,\n      crossZoneEnabled: true,\n      internetFacing: true,\n    });\n    const listener = nlb.addListener('listener', {\n      port: 80,\n    });\n\n    const target = listener.addTargets('Targets', {\n      targets: [new targets.AlbTarget(svc.loadBalancer, 80)],\n      port: 80,\n      healthCheck: {\n        protocol: elbv2.Protocol.HTTP,\n      },\n    });\n    target.node.addDependency(svc.listener);\n\n    new CfnOutput(this, 'NlbEndpoint', { value: `http://${nlb.loadBalancerDnsName}` });\n  }\n}\n\nconst app = new App();\nnew TestStack(app, 'TestStack');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyVPCAFB07A31\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-codebuild-file-system-locations/MyVPC\"}]}}, \"MyVPCPublicSubnet1Subnet0C75866A\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVPCAFB07A31\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/17\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-codebuild-file-system-locations/MyVPC/PublicSubnet1\"}]}}, \"MyVPCPublicSubnet1RouteTable538A9511\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVPCAFB07A31\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-codebuild-file-system-locations/MyVPC/PublicSubnet1\"}]}}, \"MyVPCPublicSubnet1RouteTableAssociation8A950D8E\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVPCPublicSubnet1RouteTable538A9511\"}, \"SubnetId\": {\"Ref\": \"MyVPCPublicSubnet1Subnet0C75866A\"}}}, \"MyVPCPublicSubnet1DefaultRouteAF81AA9B\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVPCPublicSubnet1RouteTable538A9511\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"MyVPCIGW30AB6DD6\"}}, \"DependsOn\": [\"MyVPCVPCGWE6F260E1\"]}, \"MyVPCPublicSubnet1EIP5EB6147D\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-codebuild-file-system-locations/MyVPC/PublicSubnet1\"}]}}, \"MyVPCPublicSubnet1NATGateway838228A5\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"MyVPCPublicSubnet1Subnet0C75866A\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"MyVPCPublicSubnet1EIP5EB6147D\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-codebuild-file-system-locations/MyVPC/PublicSubnet1\"}]}, \"DependsOn\": [\"MyVPCPublicSubnet1DefaultRouteAF81AA9B\", \"MyVPCPublicSubnet1RouteTableAssociation8A950D8E\"]}, \"MyVPCPrivateSubnet1Subnet641543F4\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVPCAFB07A31\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/17\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-codebuild-file-system-locations/MyVPC/PrivateSubnet1\"}]}}, \"MyVPCPrivateSubnet1RouteTable133BD901\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVPCAFB07A31\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-codebuild-file-system-locations/MyVPC/PrivateSubnet1\"}]}}, \"MyVPCPrivateSubnet1RouteTableAssociation85DFBFBB\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVPCPrivateSubnet1RouteTable133BD901\"}, \"SubnetId\": {\"Ref\": \"MyVPCPrivateSubnet1Subnet641543F4\"}}}, \"MyVPCPrivateSubnet1DefaultRouteA8EE6636\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVPCPrivateSubnet1RouteTable133BD901\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"MyVPCPublicSubnet1NATGateway838228A5\"}}}, \"MyVPCIGW30AB6DD6\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-codebuild-file-system-locations/MyVPC\"}]}}, \"MyVPCVPCGWE6F260E1\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVPCAFB07A31\"}, \"InternetGatewayId\": {\"Ref\": \"MyVPCIGW30AB6DD6\"}}}, \"SecurityGroup1F554B36F\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"Example\", \"GroupName\": \"Jane\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"VpcId\": {\"Ref\": \"MyVPCAFB07A31\"}}}, \"MyProjectRole9BBE5233\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codebuild.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"MyProjectRoleDefaultPolicyB19B7C29\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"ec2:CreateNetworkInterfacePermission\", \"Condition\": {\"StringEquals\": {\"ec2:Subnet\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":ec2:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":subnet/\", {\"Ref\": \"MyVPCPrivateSubnet1Subnet641543F4\"}]]}], \"ec2:AuthorizedService\": \"codebuild.amazonaws.com\"}}, \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":ec2:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":network-interface/*\"]]}}, {\"Action\": [\"logs:CreateLogGroup\", \"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"MyProject39F7B0AE\"}, \":*\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"MyProject39F7B0AE\"}]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyProjectRoleDefaultPolicyB19B7C29\", \"Roles\": [{\"Ref\": \"MyProjectRole9BBE5233\"}]}}, \"MyProject39F7B0AE\": {\"Type\": \"AWS::CodeBuild::Project\", \"Properties\": {\"Artifacts\": {\"Type\": \"NO_ARTIFACTS\"}, \"Environment\": {\"ComputeType\": \"BUILD_GENERAL1_SMALL\", \"Image\": \"aws/codebuild/standard:1.0\", \"ImagePullCredentialsType\": \"CODEBUILD\", \"PrivilegedMode\": true, \"Type\": \"LINUX_CONTAINER\"}, \"ServiceRole\": {\"Fn::GetAtt\": [\"MyProjectRole9BBE5233\", \"Arn\"]}, \"Source\": {\"BuildSpec\": \"{\n  \\\"version\\\": \\\"0.2\\\"\n}\", \"Type\": \"NO_SOURCE\"}, \"Cache\": {\"Type\": \"NO_CACHE\"}, \"EncryptionKey\": \"alias/aws/s3\", \"FileSystemLocations\": [{\"Identifier\": \"myidentifier\", \"Location\": {\"Fn::Join\": [\"\", [\"fs-c8d04839.efs.\", {\"Ref\": \"AWS::Region\"}, \".amazonaws.com:/mnt\"]]}, \"MountOptions\": \"nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2\", \"MountPoint\": \"/media\", \"Type\": \"EFS\"}], \"VpcConfig\": {\"SecurityGroupIds\": [{\"Fn::GetAtt\": [\"SecurityGroup1F554B36F\", \"GroupId\"]}], \"Subnets\": [{\"Ref\": \"MyVPCPrivateSubnet1Subnet641543F4\"}], \"VpcId\": {\"Ref\": \"MyVPCAFB07A31\"}}}, \"DependsOn\": [\"MyProjectPolicyDocument646EE0F2\"]}, \"MyProjectPolicyDocument646EE0F2\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"ec2:CreateNetworkInterface\", \"ec2:DeleteNetworkInterface\", \"ec2:DescribeDhcpOptions\", \"ec2:DescribeNetworkInterfaces\", \"ec2:DescribeSecurityGroups\", \"ec2:DescribeSubnets\", \"ec2:DescribeVpcs\"], \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyProjectPolicyDocument646EE0F2\", \"Roles\": [{\"Ref\": \"MyProjectRole9BBE5233\"}]}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as cdk from 'aws-cdk-lib';\nimport * as codebuild from 'aws-cdk-lib/aws-codebuild';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'aws-cdk-codebuild-file-system-locations');\nconst vpc = new ec2.Vpc(stack, 'MyVPC', {\n  maxAzs: 1,\n  natGateways: 1,\n  restrictDefaultSecurityGroup: false,\n});\nconst securityGroup = new ec2.SecurityGroup(stack, 'SecurityGroup1', {\n  allowAllOutbound: true,\n  description: 'Example',\n  securityGroupName: 'Jane',\n  vpc,\n});\n\nnew codebuild.Project(stack, 'MyProject', {\n  buildSpec: codebuild.BuildSpec.fromObject({\n    version: '0.2',\n  }),\n  environment: {\n    privileged: true,\n  },\n  vpc,\n  securityGroups: [securityGroup],\n  fileSystemLocations: [codebuild.FileSystemLocation.efs({\n    identifier: 'myidentifier',\n    location: `fs-c8d04839.efs.${cdk.Aws.REGION}.amazonaws.com:/mnt`,\n    mountOptions: 'nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2',\n    mountPoint: '/media',\n  })],\n  grantReportGroupPermissions: false,\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyProjectRole9BBE5233\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codebuild.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"MyProjectRoleDefaultPolicyB19B7C29\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"logs:CreateLogGroup\", \"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"MyProject39F7B0AE\"}, \":*\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"MyProject39F7B0AE\"}]]}]}, {\"Action\": [\"codebuild:BatchPutCodeCoverages\", \"codebuild:BatchPutTestCases\", \"codebuild:CreateReport\", \"codebuild:CreateReportGroup\", \"codebuild:UpdateReport\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":codebuild:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":report-group/\", {\"Ref\": \"MyProject39F7B0AE\"}, \"-*\"]]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyProjectRoleDefaultPolicyB19B7C29\", \"Roles\": [{\"Ref\": \"MyProjectRole9BBE5233\"}]}}, \"MyProject39F7B0AE\": {\"Type\": \"AWS::CodeBuild::Project\", \"Properties\": {\"Artifacts\": {\"Type\": \"NO_ARTIFACTS\"}, \"Environment\": {\"ComputeType\": \"BUILD_GENERAL1_SMALL\", \"Image\": \"aws/codebuild/standard:1.0\", \"ImagePullCredentialsType\": \"CODEBUILD\", \"PrivilegedMode\": false, \"Type\": \"LINUX_CONTAINER\"}, \"ServiceRole\": {\"Fn::GetAtt\": [\"MyProjectRole9BBE5233\", \"Arn\"]}, \"Source\": {\"BuildSpec\": \"{\n  \\\"version\\\": \\\"0.2\\\",\n  \\\"phases\\\": {\n    \\\"build\\\": {\n      \\\"commands\\\": [\n        \\\"echo \\\\\"Hello, CodeBuild!\\\\\"\\\"\n      ]\n    }\n  }\n}\", \"Type\": \"NO_SOURCE\"}, \"Cache\": {\"Type\": \"NO_CACHE\"}, \"EncryptionKey\": \"alias/aws/s3\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as cdk from 'aws-cdk-lib';\nimport * as codebuild from 'aws-cdk-lib/aws-codebuild';\n\nclass TestStack extends cdk.Stack {\n  constructor(scope: cdk.App, id: string) {\n    super(scope, id);\n\n    /// !show\n    new codebuild.Project(this, 'MyProject', {\n      buildSpec: codebuild.BuildSpec.fromObject({\n        version: '0.2',\n        phases: {\n          build: {\n            commands: [\n              'echo \"Hello, CodeBuild!\"',\n            ],\n          },\n        },\n      }),\n    });\n    /// !hide\n  }\n}\n\nconst app = new cdk.App();\n\nnew TestStack(app, 'codebuild-default-project');\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyProjectRole9BBE5233\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codebuild.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"MyProjectRoleDefaultPolicyB19B7C29\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"secretsmanager:DescribeSecret\", \"secretsmanager:GetSecretValue\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:aws:secretsmanager:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":secret:my-secrets-123456\"]]}}, {\"Action\": [\"logs:CreateLogGroup\", \"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"MyProject39F7B0AE\"}, \":*\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"MyProject39F7B0AE\"}]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyProjectRoleDefaultPolicyB19B7C29\", \"Roles\": [{\"Ref\": \"MyProjectRole9BBE5233\"}]}}, \"MyProject39F7B0AE\": {\"Type\": \"AWS::CodeBuild::Project\", \"Properties\": {\"Artifacts\": {\"Type\": \"NO_ARTIFACTS\"}, \"Environment\": {\"ComputeType\": \"BUILD_GENERAL1_SMALL\", \"Image\": \"my-registry/my-repo\", \"ImagePullCredentialsType\": \"SERVICE_ROLE\", \"PrivilegedMode\": false, \"RegistryCredential\": {\"Credential\": {\"Fn::Join\": [\"\", [\"arn:aws:secretsmanager:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":secret:my-secrets-123456\"]]}, \"CredentialProvider\": \"SECRETS_MANAGER\"}, \"Type\": \"LINUX_CONTAINER\"}, \"ServiceRole\": {\"Fn::GetAtt\": [\"MyProjectRole9BBE5233\", \"Arn\"]}, \"Source\": {\"BuildSpec\": \"{\n  \\\"version\\\": \\\"0.2\\\",\n  \\\"phases\\\": {\n    \\\"build\\\": {\n      \\\"commands\\\": [\n        \\\"ls\\\"\n      ]\n    }\n  }\n}\", \"Type\": \"NO_SOURCE\"}, \"Cache\": {\"Type\": \"NO_CACHE\"}, \"EncryptionKey\": \"alias/aws/s3\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as secretsmanager from 'aws-cdk-lib/aws-secretsmanager';\nimport * as cdk from 'aws-cdk-lib';\nimport * as codebuild from 'aws-cdk-lib/aws-codebuild';\n\nclass TestStack extends cdk.Stack {\n  constructor(scope: cdk.App, id: string) {\n    super(scope, id);\n\n    const secrets = secretsmanager.Secret.fromSecretCompleteArn(this, 'MySecrets',\n      `arn:aws:secretsmanager:${this.region}:${this.account}:secret:my-secrets-123456`);\n\n    new codebuild.Project(this, 'MyProject', {\n      buildSpec: codebuild.BuildSpec.fromObject({\n        version: '0.2',\n        phases: {\n          build: {\n            commands: ['ls'],\n          },\n        },\n      }),\n      grantReportGroupPermissions: false,\n      /// !show\n      environment: {\n        buildImage: codebuild.LinuxBuildImage.fromDockerRegistry('my-registry/my-repo', {\n          secretsManagerCredentials: secrets,\n        }),\n      },\n      /// !hide\n    });\n  }\n}\n\nconst app = new cdk.App();\n\nnew TestStack(app, 'test-codebuild-docker-asset');\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"ProjectRole4CCB274E\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codebuild.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"ProjectRoleDefaultPolicy7F29461B\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"logs:CreateLogGroup\", \"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"ProjectC78D97AD\"}, \":*\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"ProjectC78D97AD\"}]]}]}, {\"Action\": [\"codebuild:BatchPutCodeCoverages\", \"codebuild:BatchPutTestCases\", \"codebuild:CreateReport\", \"codebuild:CreateReportGroup\", \"codebuild:UpdateReport\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":codebuild:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":report-group/\", {\"Ref\": \"ProjectC78D97AD\"}, \"-*\"]]}}, {\"Action\": [\"ecr:BatchCheckLayerAvailability\", \"ecr:BatchGetImage\", \"ecr:GetDownloadUrlForLayer\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":ecr:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Fn::FindInMap\": [\"DlcRepositoryAccountMap\", {\"Ref\": \"AWS::Region\"}, \"value\"]}, \":repository/mxnet-training\"]]}}, {\"Action\": \"ecr:GetAuthorizationToken\", \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"ProjectRoleDefaultPolicy7F29461B\", \"Roles\": [{\"Ref\": \"ProjectRole4CCB274E\"}]}}, \"ProjectC78D97AD\": {\"Type\": \"AWS::CodeBuild::Project\", \"Properties\": {\"Artifacts\": {\"Type\": \"NO_ARTIFACTS\"}, \"Environment\": {\"ComputeType\": \"BUILD_GENERAL1_LARGE\", \"Image\": {\"Fn::Join\": [\"\", [{\"Fn::FindInMap\": [\"DlcRepositoryAccountMap\", {\"Ref\": \"AWS::Region\"}, \"value\"]}, \".dkr.ecr.\", {\"Ref\": \"AWS::Region\"}, \".\", {\"Ref\": \"AWS::URLSuffix\"}, \"/mxnet-training:1.4.1-gpu-py36-cu100-ubuntu16.04\"]]}, \"ImagePullCredentialsType\": \"SERVICE_ROLE\", \"PrivilegedMode\": false, \"Type\": \"LINUX_GPU_CONTAINER\"}, \"ServiceRole\": {\"Fn::GetAtt\": [\"ProjectRole4CCB274E\", \"Arn\"]}, \"Source\": {\"BuildSpec\": \"{\n  \\\"version\\\": \\\"0.2\\\",\n  \\\"phases\\\": {\n    \\\"build\\\": {\n      \\\"commands\\\": [\n        \\\"ls\\\"\n      ]\n    }\n  }\n}\", \"Type\": \"NO_SOURCE\"}, \"Cache\": {\"Type\": \"NO_CACHE\"}, \"EncryptionKey\": \"alias/aws/s3\"}}}, \"Mappings\": {\"DlcRepositoryAccountMap\": {\"ap-east-1\": {\"value\": \"871362719292\"}, \"ap-northeast-1\": {\"value\": \"763104351884\"}, \"ap-northeast-2\": {\"value\": \"763104351884\"}, \"ap-south-1\": {\"value\": \"763104351884\"}, \"ap-southeast-1\": {\"value\": \"763104351884\"}, \"ap-southeast-2\": {\"value\": \"763104351884\"}, \"ca-central-1\": {\"value\": \"763104351884\"}, \"cn-north-1\": {\"value\": \"727897471807\"}, \"cn-northwest-1\": {\"value\": \"727897471807\"}, \"eu-central-1\": {\"value\": \"763104351884\"}, \"eu-north-1\": {\"value\": \"763104351884\"}, \"eu-west-1\": {\"value\": \"763104351884\"}, \"eu-west-2\": {\"value\": \"763104351884\"}, \"eu-west-3\": {\"value\": \"763104351884\"}, \"me-south-1\": {\"value\": \"217643126080\"}, \"sa-east-1\": {\"value\": \"763104351884\"}, \"us-east-1\": {\"value\": \"763104351884\"}, \"us-east-2\": {\"value\": \"763104351884\"}, \"us-west-1\": {\"value\": \"763104351884\"}, \"us-west-2\": {\"value\": \"763104351884\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as core from 'aws-cdk-lib';\nimport * as codebuild from 'aws-cdk-lib/aws-codebuild';\n\nconst app = new core.App();\nconst stack = new core.Stack(app, 'aws-deep-learning-container-build-image');\n\nnew codebuild.Project(stack, 'Project', {\n  buildSpec: codebuild.BuildSpec.fromObject({\n    version: '0.2',\n    phases: {\n      build: {\n        commands: ['ls'],\n      },\n    },\n  }),\n  environment: {\n    buildImage: codebuild.LinuxGpuBuildImage.DLC_MXNET_1_4_1,\n  },\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyProjectRole9BBE5233\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codebuild.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"MyProjectRoleDefaultPolicyB19B7C29\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"logs:CreateLogGroup\", \"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"MyProject39F7B0AE\"}, \":*\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"MyProject39F7B0AE\"}]]}]}, {\"Action\": [\"codebuild:BatchPutCodeCoverages\", \"codebuild:BatchPutTestCases\", \"codebuild:CreateReport\", \"codebuild:CreateReportGroup\", \"codebuild:UpdateReport\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":codebuild:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":report-group/\", {\"Ref\": \"MyProject39F7B0AE\"}, \"-*\"]]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyProjectRoleDefaultPolicyB19B7C29\", \"Roles\": [{\"Ref\": \"MyProjectRole9BBE5233\"}]}}, \"MyProject39F7B0AE\": {\"Type\": \"AWS::CodeBuild::Project\", \"Properties\": {\"Artifacts\": {\"Type\": \"NO_ARTIFACTS\"}, \"Environment\": {\"ComputeType\": \"BUILD_GENERAL1_SMALL\", \"Image\": \"aws/codebuild/standard:1.0\", \"ImagePullCredentialsType\": \"CODEBUILD\", \"PrivilegedMode\": false, \"Type\": \"LINUX_CONTAINER\"}, \"ServiceRole\": {\"Fn::GetAtt\": [\"MyProjectRole9BBE5233\", \"Arn\"]}, \"Source\": {\"BuildSpec\": \"{\n  \\\"version\\\": \\\"0.2\\\",\n  \\\"phases\\\": {\n    \\\"build\\\": {\n      \\\"commands\\\": [\n        \\\"echo \\\\\"Nothing to do!\\\\\"\\\"\n      ]\n    }\n  }\n}\", \"Type\": \"NO_SOURCE\"}, \"Cache\": {\"Type\": \"NO_CACHE\"}, \"EncryptionKey\": \"alias/aws/s3\"}}, \"MyProjectNotifyOnBuildSucceeded225C467F\": {\"Type\": \"AWS::CodeStarNotifications::NotificationRule\", \"Properties\": {\"DetailType\": \"FULL\", \"EventTypeIds\": [\"codebuild-project-build-state-succeeded\"], \"Name\": \"awscdkcodebuildprojectvpcMyProjectNotifyOnBuildSucceeded3BC28121\", \"Resource\": {\"Fn::GetAtt\": [\"MyProject39F7B0AE\", \"Arn\"]}, \"Targets\": [{\"TargetAddress\": {\"Ref\": \"MyTopic86869434\"}, \"TargetType\": \"SNS\"}]}}, \"MyTopic86869434\": {\"Type\": \"AWS::SNS::Topic\"}, \"MyTopicPolicy12A5EC17\": {\"Type\": \"AWS::SNS::TopicPolicy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"sns:Publish\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codestar-notifications.amazonaws.com\"}, \"Resource\": {\"Ref\": \"MyTopic86869434\"}, \"Sid\": \"0\"}], \"Version\": \"2012-10-17\"}, \"Topics\": [{\"Ref\": \"MyTopic86869434\"}]}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "#!/usr/bin/env node\nimport * as sns from 'aws-cdk-lib/aws-sns';\nimport * as cdk from 'aws-cdk-lib';\nimport * as codebuild from 'aws-cdk-lib/aws-codebuild';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'aws-cdk-codebuild-project-vpc');\n\nconst project = new codebuild.Project(stack, 'MyProject', {\n  buildSpec: codebuild.BuildSpec.fromObject({\n    version: '0.2',\n    phases: {\n      build: {\n        commands: ['echo \"Nothing to do!\"'],\n      },\n    },\n  }),\n});\n\nconst target = new sns.Topic(stack, 'MyTopic');\n\nproject.notifyOnBuildSucceeded('NotifyOnBuildSucceeded', target);\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyProjectRole9BBE5233\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codebuild.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"MyProjectRoleDefaultPolicyB19B7C29\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"ecr:BatchCheckLayerAvailability\", \"ecr:BatchGetImage\", \"ecr:GetDownloadUrlForLayer\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":ecr:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":repository/\", {\"Fn::Sub\": \"cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}\"}]]}}, {\"Action\": \"ecr:GetAuthorizationToken\", \"Effect\": \"Allow\", \"Resource\": \"*\"}, {\"Action\": [\"logs:CreateLogGroup\", \"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"MyProject39F7B0AE\"}, \":*\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"MyProject39F7B0AE\"}]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyProjectRoleDefaultPolicyB19B7C29\", \"Roles\": [{\"Ref\": \"MyProjectRole9BBE5233\"}]}}, \"MyProject39F7B0AE\": {\"Type\": \"AWS::CodeBuild::Project\", \"Properties\": {\"Artifacts\": {\"Type\": \"NO_ARTIFACTS\"}, \"Environment\": {\"ComputeType\": \"BUILD_GENERAL1_SMALL\", \"Image\": {\"Fn::Sub\": \"${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:73ee9c3cafd103104e2a42ee76961a90a2410d0dcad42110343c5fd85ad6db78\"}, \"ImagePullCredentialsType\": \"SERVICE_ROLE\", \"PrivilegedMode\": false, \"Type\": \"LINUX_CONTAINER\"}, \"ServiceRole\": {\"Fn::GetAtt\": [\"MyProjectRole9BBE5233\", \"Arn\"]}, \"Source\": {\"BuildSpec\": \"{\n  \\\"version\\\": \\\"0.2\\\",\n  \\\"phases\\\": {\n    \\\"build\\\": {\n      \\\"commands\\\": [\n        \\\"ls\\\"\n      ]\n    }\n  }\n}\", \"Type\": \"NO_SOURCE\"}, \"Cache\": {\"Type\": \"NO_CACHE\"}, \"EncryptionKey\": \"alias/aws/s3\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as path from 'path';\nimport * as cdk from 'aws-cdk-lib';\nimport * as codebuild from 'aws-cdk-lib/aws-codebuild';\n\nclass TestStack extends cdk.Stack {\n  constructor(scope: cdk.App, id: string) {\n    super(scope, id);\n\n    new codebuild.Project(this, 'MyProject', {\n      buildSpec: codebuild.BuildSpec.fromObject({\n        version: '0.2',\n        phases: {\n          build: {\n            commands: ['ls'],\n          },\n        },\n      }),\n      grantReportGroupPermissions: false,\n      /// !show\n      environment: {\n        buildImage: codebuild.LinuxBuildImage.fromAsset(this, 'MyImage', {\n          directory: path.join(__dirname, 'demo-image'),\n        }),\n      },\n      /// !hide\n    });\n  }\n}\n\nconst app = new cdk.App();\n\nnew TestStack(app, 'test-codebuild-docker-asset');\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyBucketF68F3FF0\": {\"Type\": \"AWS::S3::Bucket\", \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"MyProjectRole9BBE5233\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codebuild.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"MyProjectRoleDefaultPolicyB19B7C29\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"logs:CreateLogGroup\", \"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"MyProject39F7B0AE\"}, \":*\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"MyProject39F7B0AE\"}]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyProjectRoleDefaultPolicyB19B7C29\", \"Roles\": [{\"Ref\": \"MyProjectRole9BBE5233\"}]}}, \"MyProject39F7B0AE\": {\"Type\": \"AWS::CodeBuild::Project\", \"Properties\": {\"Artifacts\": {\"ArtifactIdentifier\": \"AddArtifact1\", \"Location\": {\"Ref\": \"MyBucketF68F3FF0\"}, \"NamespaceType\": \"NONE\", \"OverrideArtifactName\": true, \"Packaging\": \"ZIP\", \"Path\": \"another/path\", \"Type\": \"S3\"}, \"Environment\": {\"ComputeType\": \"BUILD_GENERAL1_SMALL\", \"Image\": \"aws/codebuild/standard:1.0\", \"ImagePullCredentialsType\": \"CODEBUILD\", \"PrivilegedMode\": false, \"Type\": \"LINUX_CONTAINER\"}, \"ServiceRole\": {\"Fn::GetAtt\": [\"MyProjectRole9BBE5233\", \"Arn\"]}, \"Source\": {\"BuildSpec\": \"{\n  \\\"version\\\": \\\"0.2\\\"\n}\", \"Type\": \"NO_SOURCE\"}, \"Cache\": {\"Type\": \"NO_CACHE\"}, \"EncryptionKey\": \"alias/aws/s3\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as s3 from 'aws-cdk-lib/aws-s3';\nimport * as cdk from 'aws-cdk-lib';\nimport * as codebuild from 'aws-cdk-lib/aws-codebuild';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'aws-cdk-codebuild-buildspec-artifact-name');\n\nconst bucket = new s3.Bucket(stack, 'MyBucket', {\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\n\nnew codebuild.Project(stack, 'MyProject', {\n  buildSpec: codebuild.BuildSpec.fromObject({\n    version: '0.2',\n  }),\n  grantReportGroupPermissions: false,\n  artifacts:\n    codebuild.Artifacts.s3({\n      bucket,\n      includeBuildId: false,\n      packageZip: true,\n      path: 'another/path',\n      identifier: 'AddArtifact1',\n    }),\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyVPCAFB07A31\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-codebuild-project-vpc/MyVPC\"}]}}, \"MyVPCPublicSubnet1Subnet0C75866A\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVPCAFB07A31\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/17\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-codebuild-project-vpc/MyVPC/PublicSubnet1\"}]}}, \"MyVPCPublicSubnet1RouteTable538A9511\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVPCAFB07A31\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-codebuild-project-vpc/MyVPC/PublicSubnet1\"}]}}, \"MyVPCPublicSubnet1RouteTableAssociation8A950D8E\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVPCPublicSubnet1RouteTable538A9511\"}, \"SubnetId\": {\"Ref\": \"MyVPCPublicSubnet1Subnet0C75866A\"}}}, \"MyVPCPublicSubnet1DefaultRouteAF81AA9B\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVPCPublicSubnet1RouteTable538A9511\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"MyVPCIGW30AB6DD6\"}}, \"DependsOn\": [\"MyVPCVPCGWE6F260E1\"]}, \"MyVPCPublicSubnet1EIP5EB6147D\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-codebuild-project-vpc/MyVPC/PublicSubnet1\"}]}}, \"MyVPCPublicSubnet1NATGateway838228A5\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"MyVPCPublicSubnet1Subnet0C75866A\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"MyVPCPublicSubnet1EIP5EB6147D\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-codebuild-project-vpc/MyVPC/PublicSubnet1\"}]}, \"DependsOn\": [\"MyVPCPublicSubnet1DefaultRouteAF81AA9B\", \"MyVPCPublicSubnet1RouteTableAssociation8A950D8E\"]}, \"MyVPCPrivateSubnet1Subnet641543F4\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVPCAFB07A31\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/17\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-codebuild-project-vpc/MyVPC/PrivateSubnet1\"}]}}, \"MyVPCPrivateSubnet1RouteTable133BD901\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVPCAFB07A31\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-codebuild-project-vpc/MyVPC/PrivateSubnet1\"}]}}, \"MyVPCPrivateSubnet1RouteTableAssociation85DFBFBB\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVPCPrivateSubnet1RouteTable133BD901\"}, \"SubnetId\": {\"Ref\": \"MyVPCPrivateSubnet1Subnet641543F4\"}}}, \"MyVPCPrivateSubnet1DefaultRouteA8EE6636\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVPCPrivateSubnet1RouteTable133BD901\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"MyVPCPublicSubnet1NATGateway838228A5\"}}}, \"MyVPCIGW30AB6DD6\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-codebuild-project-vpc/MyVPC\"}]}}, \"MyVPCVPCGWE6F260E1\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVPCAFB07A31\"}, \"InternetGatewayId\": {\"Ref\": \"MyVPCIGW30AB6DD6\"}}}, \"SecurityGroup1F554B36F\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"Example\", \"GroupName\": \"Bob\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"VpcId\": {\"Ref\": \"MyVPCAFB07A31\"}}}, \"MyProjectRole9BBE5233\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codebuild.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"MyProjectRoleDefaultPolicyB19B7C29\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"ec2:CreateNetworkInterfacePermission\", \"Condition\": {\"StringEquals\": {\"ec2:Subnet\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":ec2:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":subnet/\", {\"Ref\": \"MyVPCPrivateSubnet1Subnet641543F4\"}]]}], \"ec2:AuthorizedService\": \"codebuild.amazonaws.com\"}}, \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":ec2:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":network-interface/*\"]]}}, {\"Action\": [\"logs:CreateLogGroup\", \"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"MyProject39F7B0AE\"}, \":*\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"MyProject39F7B0AE\"}]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyProjectRoleDefaultPolicyB19B7C29\", \"Roles\": [{\"Ref\": \"MyProjectRole9BBE5233\"}]}}, \"MyProject39F7B0AE\": {\"Type\": \"AWS::CodeBuild::Project\", \"Properties\": {\"Artifacts\": {\"Type\": \"NO_ARTIFACTS\"}, \"Environment\": {\"ComputeType\": \"BUILD_GENERAL1_SMALL\", \"Image\": \"aws/codebuild/standard:1.0\", \"ImagePullCredentialsType\": \"CODEBUILD\", \"PrivilegedMode\": false, \"Type\": \"LINUX_CONTAINER\"}, \"ServiceRole\": {\"Fn::GetAtt\": [\"MyProjectRole9BBE5233\", \"Arn\"]}, \"Source\": {\"BuildSpec\": \"{\n  \\\"version\\\": \\\"0.2\\\",\n  \\\"phases\\\": {\n    \\\"build\\\": {\n      \\\"commands\\\": [\n        \\\"echo \\\\\"Nothing to do!\\\\\"\\\"\n      ]\n    }\n  }\n}\", \"Type\": \"NO_SOURCE\"}, \"Cache\": {\"Type\": \"NO_CACHE\"}, \"EncryptionKey\": \"alias/aws/s3\", \"VpcConfig\": {\"SecurityGroupIds\": [{\"Fn::GetAtt\": [\"SecurityGroup1F554B36F\", \"GroupId\"]}], \"Subnets\": [{\"Ref\": \"MyVPCPrivateSubnet1Subnet641543F4\"}], \"VpcId\": {\"Ref\": \"MyVPCAFB07A31\"}}}, \"DependsOn\": [\"MyProjectPolicyDocument646EE0F2\"]}, \"MyProjectPolicyDocument646EE0F2\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"ec2:CreateNetworkInterface\", \"ec2:DeleteNetworkInterface\", \"ec2:DescribeDhcpOptions\", \"ec2:DescribeNetworkInterfaces\", \"ec2:DescribeSecurityGroups\", \"ec2:DescribeSubnets\", \"ec2:DescribeVpcs\"], \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyProjectPolicyDocument646EE0F2\", \"Roles\": [{\"Ref\": \"MyProjectRole9BBE5233\"}]}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "#!/usr/bin/env node\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as cdk from 'aws-cdk-lib';\nimport * as codebuild from 'aws-cdk-lib/aws-codebuild';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'aws-cdk-codebuild-project-vpc');\nconst vpc = new ec2.Vpc(stack, 'MyVPC', {\n  maxAzs: 1,\n  natGateways: 1,\n  restrictDefaultSecurityGroup: false,\n});\nconst securityGroup = new ec2.SecurityGroup(stack, 'SecurityGroup1', {\n  allowAllOutbound: true,\n  description: 'Example',\n  securityGroupName: 'Bob',\n  vpc,\n});\nnew codebuild.Project(stack, 'MyProject', {\n  buildSpec: codebuild.BuildSpec.fromObject({\n    version: '0.2',\n    phases: {\n      build: {\n        commands: ['echo \"Nothing to do!\"'],\n      },\n    },\n  }),\n  grantReportGroupPermissions: false,\n  securityGroups: [securityGroup],\n  vpc,\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyBucketF68F3FF0\": {\"Type\": \"AWS::S3::Bucket\", \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"MyProjectRole9BBE5233\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codebuild.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"MyProjectRoleDefaultPolicyB19B7C29\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, \"/some/path\"]]}]}, {\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"logs:CreateLogGroup\", \"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"MyProject39F7B0AE\"}, \":*\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"MyProject39F7B0AE\"}]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyProjectRoleDefaultPolicyB19B7C29\", \"Roles\": [{\"Ref\": \"MyProjectRole9BBE5233\"}]}}, \"MyProject39F7B0AE\": {\"Type\": \"AWS::CodeBuild::Project\", \"Properties\": {\"Artifacts\": {\"Type\": \"NO_ARTIFACTS\"}, \"Environment\": {\"ComputeType\": \"BUILD_GENERAL1_SMALL\", \"Image\": \"aws/codebuild/standard:1.0\", \"ImagePullCredentialsType\": \"CODEBUILD\", \"PrivilegedMode\": false, \"Type\": \"LINUX_CONTAINER\"}, \"ServiceRole\": {\"Fn::GetAtt\": [\"MyProjectRole9BBE5233\", \"Arn\"]}, \"Source\": {\"BuildSpec\": \"{\n  \\\"version\\\": \\\"0.2\\\"\n}\", \"Type\": \"NO_SOURCE\"}, \"Cache\": {\"Type\": \"NO_CACHE\"}, \"EncryptionKey\": \"alias/aws/s3\", \"SecondaryArtifacts\": [{\"ArtifactIdentifier\": \"AddArtifact1\", \"Location\": {\"Ref\": \"MyBucketF68F3FF0\"}, \"Name\": \"name\", \"NamespaceType\": \"BUILD_ID\", \"Packaging\": \"ZIP\", \"Path\": \"another/path\", \"Type\": \"S3\"}], \"SecondarySources\": [{\"Location\": {\"Fn::Join\": [\"\", [{\"Ref\": \"MyBucketF68F3FF0\"}, \"/some/path\"]]}, \"SourceIdentifier\": \"AddSource1\", \"Type\": \"S3\"}]}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as s3 from 'aws-cdk-lib/aws-s3';\nimport * as cdk from 'aws-cdk-lib';\nimport * as codebuild from 'aws-cdk-lib/aws-codebuild';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'aws-cdk-codebuild-secondary-sources-artifacts');\n\nconst bucket = new s3.Bucket(stack, 'MyBucket', {\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\n\nnew codebuild.Project(stack, 'MyProject', {\n  buildSpec: codebuild.BuildSpec.fromObject({\n    version: '0.2',\n  }),\n  secondarySources: [\n    codebuild.Source.s3({\n      bucket,\n      path: 'some/path',\n      identifier: 'AddSource1',\n    }),\n  ],\n  secondaryArtifacts: [\n    codebuild.Artifacts.s3({\n      bucket,\n      path: 'another/path',\n      name: 'name',\n      identifier: 'AddArtifact1',\n    }),\n  ],\n  grantReportGroupPermissions: false,\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"LogingGroupE599B53B\": {\"Type\": \"AWS::Logs::LogGroup\", \"Properties\": {\"RetentionInDays\": 731}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"LoggingBucket1E5A6F3B\": {\"Type\": \"AWS::S3::Bucket\", \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"ProjectRole4CCB274E\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codebuild.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"ProjectRoleDefaultPolicy7F29461B\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"LoggingBucket1E5A6F3B\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"LoggingBucket1E5A6F3B\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"LogingGroupE599B53B\", \"Arn\"]}}, {\"Action\": [\"logs:CreateLogGroup\", \"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"ProjectC78D97AD\"}, \":*\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"ProjectC78D97AD\"}]]}]}, {\"Action\": [\"codebuild:BatchPutCodeCoverages\", \"codebuild:BatchPutTestCases\", \"codebuild:CreateReport\", \"codebuild:CreateReportGroup\", \"codebuild:UpdateReport\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":codebuild:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":report-group/\", {\"Ref\": \"ProjectC78D97AD\"}, \"-*\"]]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"ProjectRoleDefaultPolicy7F29461B\", \"Roles\": [{\"Ref\": \"ProjectRole4CCB274E\"}]}}, \"ProjectC78D97AD\": {\"Type\": \"AWS::CodeBuild::Project\", \"Properties\": {\"Artifacts\": {\"Type\": \"CODEPIPELINE\"}, \"Environment\": {\"ComputeType\": \"BUILD_GENERAL1_SMALL\", \"Image\": \"aws/codebuild/standard:1.0\", \"ImagePullCredentialsType\": \"CODEBUILD\", \"PrivilegedMode\": false, \"Type\": \"LINUX_CONTAINER\"}, \"ServiceRole\": {\"Fn::GetAtt\": [\"ProjectRole4CCB274E\", \"Arn\"]}, \"Source\": {\"Type\": \"CODEPIPELINE\"}, \"Cache\": {\"Type\": \"NO_CACHE\"}, \"EncryptionKey\": \"alias/aws/s3\", \"LogsConfig\": {\"CloudWatchLogs\": {\"GroupName\": {\"Ref\": \"LogingGroupE599B53B\"}, \"Status\": \"ENABLED\"}, \"S3Logs\": {\"Location\": {\"Ref\": \"LoggingBucket1E5A6F3B\"}, \"Status\": \"ENABLED\"}}}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as logs from 'aws-cdk-lib/aws-logs';\nimport * as s3 from 'aws-cdk-lib/aws-s3';\nimport * as cdk from 'aws-cdk-lib';\nimport * as codebuild from 'aws-cdk-lib/aws-codebuild';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'aws-cdk-codebuild-logging');\n\nnew codebuild.PipelineProject(stack, 'Project', {\n  logging: {\n    cloudWatch: {\n      logGroup: new logs.LogGroup(stack, 'LogingGroup', {\n        removalPolicy: cdk.RemovalPolicy.DESTROY,\n      }),\n    },\n    s3: {\n      bucket: new s3.Bucket(stack, 'LoggingBucket', {\n        removalPolicy: cdk.RemovalPolicy.DESTROY,\n      }),\n    },\n  },\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"CacheBucket41D9D0B0\": {\"Type\": \"AWS::S3::Bucket\", \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"MyProjectRole9BBE5233\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codebuild.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"MyProjectRoleDefaultPolicyB19B7C29\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"CacheBucket41D9D0B0\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"CacheBucket41D9D0B0\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"logs:CreateLogGroup\", \"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"MyProject39F7B0AE\"}, \":*\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"MyProject39F7B0AE\"}]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyProjectRoleDefaultPolicyB19B7C29\", \"Roles\": [{\"Ref\": \"MyProjectRole9BBE5233\"}]}}, \"MyProject39F7B0AE\": {\"Type\": \"AWS::CodeBuild::Project\", \"Properties\": {\"Artifacts\": {\"Type\": \"NO_ARTIFACTS\"}, \"Environment\": {\"ComputeType\": \"BUILD_GENERAL1_SMALL\", \"Image\": \"aws/codebuild/standard:1.0\", \"ImagePullCredentialsType\": \"CODEBUILD\", \"PrivilegedMode\": false, \"Type\": \"LINUX_CONTAINER\"}, \"ServiceRole\": {\"Fn::GetAtt\": [\"MyProjectRole9BBE5233\", \"Arn\"]}, \"Source\": {\"BuildSpec\": \"{\n  \\\"build\\\": {\n    \\\"commands\\\": [\n      \\\"echo Hello\\\"\n    ]\n  },\n  \\\"cache\\\": {\n    \\\"paths\\\": [\n      \\\"/root/.cache/pip/**/*\\\"\n    ]\n  }\n}\", \"Type\": \"NO_SOURCE\"}, \"Cache\": {\"Location\": {\"Fn::Join\": [\"/\", [{\"Ref\": \"CacheBucket41D9D0B0\"}, {\"Ref\": \"AWS::NoValue\"}]]}, \"Type\": \"S3\"}, \"EncryptionKey\": \"alias/aws/s3\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "#!/usr/bin/env node\nimport * as s3 from 'aws-cdk-lib/aws-s3';\nimport * as cdk from 'aws-cdk-lib';\nimport * as codebuild from 'aws-cdk-lib/aws-codebuild';\nimport { Cache } from 'aws-cdk-lib/aws-codebuild';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'aws-cdk-codebuild');\n\nconst bucket = new s3.Bucket(stack, 'CacheBucket', {\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\n\nnew codebuild.Project(stack, 'MyProject', {\n  cache: Cache.bucket(bucket),\n  buildSpec: codebuild.BuildSpec.fromObject({\n    build: {\n      commands: ['echo Hello'],\n    },\n    cache: {\n      paths: ['/root/.cache/pip/**/*'],\n    },\n  }),\n  grantReportGroupPermissions: false,\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyBucketF68F3FF0\": {\"Type\": \"AWS::S3::Bucket\", \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"MyProjectRole9BBE5233\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codebuild.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"MyProjectRoleDefaultPolicyB19B7C29\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, \"/path/to/my/source.zip\"]]}]}, {\"Action\": [\"logs:CreateLogGroup\", \"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"MyProject39F7B0AE\"}, \":*\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"MyProject39F7B0AE\"}]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyProjectRoleDefaultPolicyB19B7C29\", \"Roles\": [{\"Ref\": \"MyProjectRole9BBE5233\"}]}}, \"MyProject39F7B0AE\": {\"Type\": \"AWS::CodeBuild::Project\", \"Properties\": {\"Artifacts\": {\"Type\": \"NO_ARTIFACTS\"}, \"Environment\": {\"ComputeType\": \"BUILD_GENERAL1_LARGE\", \"Image\": \"aws/codebuild/standard:1.0\", \"ImagePullCredentialsType\": \"CODEBUILD\", \"PrivilegedMode\": false, \"Type\": \"LINUX_CONTAINER\"}, \"ServiceRole\": {\"Fn::GetAtt\": [\"MyProjectRole9BBE5233\", \"Arn\"]}, \"Source\": {\"Location\": {\"Fn::Join\": [\"\", [{\"Ref\": \"MyBucketF68F3FF0\"}, \"/path/to/my/source.zip\"]]}, \"Type\": \"S3\"}, \"Cache\": {\"Type\": \"NO_CACHE\"}, \"EncryptionKey\": \"alias/aws/s3\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "#!/usr/bin/env node\nimport * as s3 from 'aws-cdk-lib/aws-s3';\nimport * as cdk from 'aws-cdk-lib';\nimport * as codebuild from 'aws-cdk-lib/aws-codebuild';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'aws-cdk-codebuild');\n\nconst bucket = new s3.Bucket(stack, 'MyBucket', {\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\n\nnew codebuild.Project(stack, 'MyProject', {\n  source: codebuild.Source.s3({\n    bucket,\n    path: 'path/to/my/source.zip',\n  }),\n  environment: {\n    computeType: codebuild.ComputeType.LARGE,\n  },\n  grantReportGroupPermissions: false,\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyRepoF4F48043\": {\"Type\": \"AWS::ECR::Repository\", \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"MyProjectRole9BBE5233\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codebuild.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"MyProjectRoleDefaultPolicyB19B7C29\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"ecr:BatchCheckLayerAvailability\", \"ecr:BatchGetImage\", \"ecr:GetDownloadUrlForLayer\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"MyRepoF4F48043\", \"Arn\"]}}, {\"Action\": \"ecr:GetAuthorizationToken\", \"Effect\": \"Allow\", \"Resource\": \"*\"}, {\"Action\": [\"logs:CreateLogGroup\", \"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"MyProject39F7B0AE\"}, \":*\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"MyProject39F7B0AE\"}]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyProjectRoleDefaultPolicyB19B7C29\", \"Roles\": [{\"Ref\": \"MyProjectRole9BBE5233\"}]}}, \"MyProject39F7B0AE\": {\"Type\": \"AWS::CodeBuild::Project\", \"Properties\": {\"Artifacts\": {\"Type\": \"NO_ARTIFACTS\"}, \"Environment\": {\"ComputeType\": \"BUILD_GENERAL1_SMALL\", \"Image\": {\"Fn::Join\": [\"\", [{\"Fn::Select\": [4, {\"Fn::Split\": [\":\", {\"Fn::GetAtt\": [\"MyRepoF4F48043\", \"Arn\"]}]}]}, \".dkr.ecr.\", {\"Fn::Select\": [3, {\"Fn::Split\": [\":\", {\"Fn::GetAtt\": [\"MyRepoF4F48043\", \"Arn\"]}]}]}, \".\", {\"Ref\": \"AWS::URLSuffix\"}, \"/\", {\"Ref\": \"MyRepoF4F48043\"}, \":v1.0\"]]}, \"ImagePullCredentialsType\": \"SERVICE_ROLE\", \"PrivilegedMode\": false, \"Type\": \"LINUX_CONTAINER\"}, \"ServiceRole\": {\"Fn::GetAtt\": [\"MyProjectRole9BBE5233\", \"Arn\"]}, \"Source\": {\"BuildSpec\": \"{\n  \\\"version\\\": \\\"0.2\\\",\n  \\\"phases\\\": {\n    \\\"build\\\": {\n      \\\"commands\\\": [\n        \\\"ls\\\"\n      ]\n    }\n  }\n}\", \"Type\": \"NO_SOURCE\"}, \"Cache\": {\"Type\": \"NO_CACHE\"}, \"EncryptionKey\": \"alias/aws/s3\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as ecr from 'aws-cdk-lib/aws-ecr';\nimport * as cdk from 'aws-cdk-lib';\nimport * as codebuild from 'aws-cdk-lib/aws-codebuild';\n\nclass TestStack extends cdk.Stack {\n  constructor(scope: cdk.App, id: string) {\n    super(scope, id);\n\n    const ecrRepository = new ecr.Repository(this, 'MyRepo');\n\n    new codebuild.Project(this, 'MyProject', {\n      buildSpec: codebuild.BuildSpec.fromObject({\n        version: '0.2',\n        phases: {\n          build: {\n            commands: ['ls'],\n          },\n        },\n      }),\n      grantReportGroupPermissions: false,\n      /// !show\n      environment: {\n        buildImage: codebuild.LinuxBuildImage.fromEcrRepository(ecrRepository, 'v1.0'),\n      },\n      /// !hide\n    });\n  }\n}\n\nconst app = new cdk.App();\n\nnew TestStack(app, 'test-codebuild-docker-asset');\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyProjectRole9BBE5233\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codebuild.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"MyProjectRoleDefaultPolicyB19B7C29\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"logs:CreateLogGroup\", \"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"MyProject39F7B0AE\"}, \":*\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"MyProject39F7B0AE\"}]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyProjectRoleDefaultPolicyB19B7C29\", \"Roles\": [{\"Ref\": \"MyProjectRole9BBE5233\"}]}}, \"MyProjectBatchServiceRole6B35CF0E\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codebuild.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"MyProjectBatchServiceRoleDefaultPolicy7A0E5721\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"codebuild:RetryBuild\", \"codebuild:StartBuild\", \"codebuild:StopBuild\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"MyProject39F7B0AE\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyProjectBatchServiceRoleDefaultPolicy7A0E5721\", \"Roles\": [{\"Ref\": \"MyProjectBatchServiceRole6B35CF0E\"}]}}, \"MyProject39F7B0AE\": {\"Type\": \"AWS::CodeBuild::Project\", \"Properties\": {\"Artifacts\": {\"Type\": \"NO_ARTIFACTS\"}, \"Environment\": {\"ComputeType\": \"BUILD_GENERAL1_SMALL\", \"Image\": \"aws/codebuild/standard:1.0\", \"ImagePullCredentialsType\": \"CODEBUILD\", \"PrivilegedMode\": false, \"Type\": \"LINUX_CONTAINER\"}, \"ServiceRole\": {\"Fn::GetAtt\": [\"MyProjectRole9BBE5233\", \"Arn\"]}, \"Source\": {\"Location\": \"https://github.com/aws/aws-cdk.git\", \"ReportBuildStatus\": false, \"Type\": \"GITHUB\"}, \"BuildBatchConfig\": {\"ServiceRole\": {\"Fn::GetAtt\": [\"MyProjectBatchServiceRole6B35CF0E\", \"Arn\"]}}, \"Cache\": {\"Type\": \"NO_CACHE\"}, \"EncryptionKey\": \"alias/aws/s3\", \"Triggers\": {\"BuildType\": \"BUILD_BATCH\", \"FilterGroups\": [[{\"Pattern\": \"PUSH\", \"Type\": \"EVENT\"}]], \"Webhook\": true}}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as cdk from 'aws-cdk-lib';\nimport * as codebuild from 'aws-cdk-lib/aws-codebuild';\n\nclass TestStack extends cdk.Stack {\n  constructor(scope: cdk.App, id: string) {\n    super(scope, id);\n\n    const source = codebuild.Source.gitHub({\n      owner: 'aws',\n      repo: 'aws-cdk',\n      reportBuildStatus: false,\n      webhook: true,\n      webhookTriggersBatchBuild: true,\n      webhookFilters: [\n        codebuild.FilterGroup.inEventOf(codebuild.EventAction.PUSH),\n      ],\n    });\n    new codebuild.Project(this, 'MyProject', {\n      source,\n      grantReportGroupPermissions: false,\n    });\n  }\n}\n\nconst app = new cdk.App();\n\nnew TestStack(app, 'test-codebuild-github-webhook-batch');\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyProjectRole9BBE5233\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codebuild.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"MyProjectRoleDefaultPolicyB19B7C29\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"logs:CreateLogGroup\", \"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"MyProject39F7B0AE\"}, \":*\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"MyProject39F7B0AE\"}]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyProjectRoleDefaultPolicyB19B7C29\", \"Roles\": [{\"Ref\": \"MyProjectRole9BBE5233\"}]}}, \"MyProject39F7B0AE\": {\"Type\": \"AWS::CodeBuild::Project\", \"Properties\": {\"Artifacts\": {\"Type\": \"NO_ARTIFACTS\"}, \"Environment\": {\"ComputeType\": \"BUILD_GENERAL1_SMALL\", \"Image\": \"aws/codebuild/standard:1.0\", \"ImagePullCredentialsType\": \"CODEBUILD\", \"PrivilegedMode\": false, \"Type\": \"LINUX_CONTAINER\"}, \"ServiceRole\": {\"Fn::GetAtt\": [\"MyProjectRole9BBE5233\", \"Arn\"]}, \"Source\": {\"Location\": \"https://github.com/aws/aws-cdk.git\", \"ReportBuildStatus\": false, \"Type\": \"GITHUB\"}, \"Cache\": {\"Type\": \"NO_CACHE\"}, \"EncryptionKey\": \"alias/aws/s3\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as cdk from 'aws-cdk-lib';\nimport * as codebuild from 'aws-cdk-lib/aws-codebuild';\n\nclass TestStack extends cdk.Stack {\n  constructor(scope: cdk.App, id: string) {\n    super(scope, id);\n\n    const source = codebuild.Source.gitHub({\n      owner: 'aws',\n      repo: 'aws-cdk',\n      reportBuildStatus: false,\n    });\n    new codebuild.Project(this, 'MyProject', {\n      source,\n      grantReportGroupPermissions: false,\n    });\n  }\n}\n\nconst app = new cdk.App();\n\nnew TestStack(app, 'test-codebuild-github');\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"Domain1SlowSearchLogs8F3B0506\": {\"Type\": \"AWS::Logs::LogGroup\", \"Properties\": {\"RetentionInDays\": 30}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"Domain1AppLogs6E8D1D67\": {\"Type\": \"AWS::Logs::LogGroup\", \"Properties\": {\"RetentionInDays\": 30}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"Domain1ESLogGroupPolicyc881416c4fcb1ec2b4bf7f47a5cde4097f01ec50fc3D726D58\": {\"Type\": \"Custom::CloudwatchLogResourcePolicy\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"AWS679f53fac002430cb0da5b7982bd22872D164C4C\", \"Arn\"]}, \"Create\": {\"Fn::Join\": [\"\", [\"{\\\"service\\\":\\\"CloudWatchLogs\\\",\\\"action\\\":\\\"putResourcePolicy\\\",\\\"parameters\\\":{\\\"policyName\\\":\\\"ESLogPolicyc881416c4fcb1ec2b4bf7f47a5cde4097f01ec50fc\\\",\\\"policyDocument\\\":\\\"{\\\\\"Statement\\\\\":[{\\\\\"Action\\\\\":[\\\\\"logs:PutLogEvents\\\\\",\\\\\"logs:CreateLogStream\\\\\"],\\\\\"Effect\\\\\":\\\\\"Allow\\\\\",\\\\\"Principal\\\\\":{\\\\\"Service\\\\\":\\\\\"es.amazonaws.com\\\\\"},\\\\\"Resource\\\\\":[\\\\\"\", {\"Fn::GetAtt\": [\"Domain1SlowSearchLogs8F3B0506\", \"Arn\"]}, \"\\\\\",\\\\\"\", {\"Fn::GetAtt\": [\"Domain1AppLogs6E8D1D67\", \"Arn\"]}, \"\\\\\"]}],\\\\\"Version\\\\\":\\\\\"2012-10-17\\\\\"}\\\"},\\\"physicalResourceId\\\":{\\\"id\\\":\\\"ESLogGroupPolicyc881416c4fcb1ec2b4bf7f47a5cde4097f01ec50fc\\\"}}\"]]}, \"Update\": {\"Fn::Join\": [\"\", [\"{\\\"service\\\":\\\"CloudWatchLogs\\\",\\\"action\\\":\\\"putResourcePolicy\\\",\\\"parameters\\\":{\\\"policyName\\\":\\\"ESLogPolicyc881416c4fcb1ec2b4bf7f47a5cde4097f01ec50fc\\\",\\\"policyDocument\\\":\\\"{\\\\\"Statement\\\\\":[{\\\\\"Action\\\\\":[\\\\\"logs:PutLogEvents\\\\\",\\\\\"logs:CreateLogStream\\\\\"],\\\\\"Effect\\\\\":\\\\\"Allow\\\\\",\\\\\"Principal\\\\\":{\\\\\"Service\\\\\":\\\\\"es.amazonaws.com\\\\\"},\\\\\"Resource\\\\\":[\\\\\"\", {\"Fn::GetAtt\": [\"Domain1SlowSearchLogs8F3B0506\", \"Arn\"]}, \"\\\\\",\\\\\"\", {\"Fn::GetAtt\": [\"Domain1AppLogs6E8D1D67\", \"Arn\"]}, \"\\\\\"]}],\\\\\"Version\\\\\":\\\\\"2012-10-17\\\\\"}\\\"},\\\"physicalResourceId\\\":{\\\"id\\\":\\\"ESLogGroupPolicyc881416c4fcb1ec2b4bf7f47a5cde4097f01ec50fc\\\"}}\"]]}, \"Delete\": \"{\\\"service\\\":\\\"CloudWatchLogs\\\",\\\"action\\\":\\\"deleteResourcePolicy\\\",\\\"parameters\\\":{\\\"policyName\\\":\\\"ESLogPolicyc881416c4fcb1ec2b4bf7f47a5cde4097f01ec50fc\\\"},\\\"ignoreErrorCodesMatching\\\":\\\"ResourceNotFoundException\\\"}\", \"InstallLatestAwsSdk\": \"false\"}, \"DependsOn\": [\"Domain1ESLogGroupPolicyc881416c4fcb1ec2b4bf7f47a5cde4097f01ec50fcCustomResourcePolicyBE9BFE5D\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"Domain1ESLogGroupPolicyc881416c4fcb1ec2b4bf7f47a5cde4097f01ec50fcCustomResourcePolicyBE9BFE5D\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"logs:DeleteResourcePolicy\", \"logs:PutResourcePolicy\"], \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"Domain1ESLogGroupPolicyc881416c4fcb1ec2b4bf7f47a5cde4097f01ec50fcCustomResourcePolicyBE9BFE5D\", \"Roles\": [{\"Ref\": \"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\"}]}}, \"Domain19FCBCB91\": {\"Type\": \"AWS::OpenSearchService::Domain\", \"Properties\": {\"AdvancedOptions\": {\"rest.action.multi.allow_explicit_index\": \"false\", \"indices.fielddata.cache.size\": \"25\", \"indices.query.bool.max_clause_count\": \"2048\"}, \"ClusterConfig\": {\"DedicatedMasterEnabled\": false, \"InstanceCount\": 1, \"InstanceType\": \"r5.large.search\", \"ZoneAwarenessEnabled\": false}, \"DomainEndpointOptions\": {\"EnforceHTTPS\": false, \"TLSSecurityPolicy\": \"Policy-Min-TLS-1-0-2019-07\"}, \"EBSOptions\": {\"EBSEnabled\": true, \"VolumeSize\": 10, \"VolumeType\": \"gp2\"}, \"EncryptionAtRestOptions\": {\"Enabled\": true}, \"EngineVersion\": \"Elasticsearch_7.1\", \"LogPublishingOptions\": {\"ES_APPLICATION_LOGS\": {\"CloudWatchLogsLogGroupArn\": {\"Fn::GetAtt\": [\"Domain1AppLogs6E8D1D67\", \"Arn\"]}, \"Enabled\": true}, \"SEARCH_SLOW_LOGS\": {\"CloudWatchLogsLogGroupArn\": {\"Fn::GetAtt\": [\"Domain1SlowSearchLogs8F3B0506\", \"Arn\"]}, \"Enabled\": true}}, \"NodeToNodeEncryptionOptions\": {\"Enabled\": true}}, \"DependsOn\": [\"Domain1ESLogGroupPolicyc881416c4fcb1ec2b4bf7f47a5cde4097f01ec50fcCustomResourcePolicyBE9BFE5D\", \"Domain1ESLogGroupPolicyc881416c4fcb1ec2b4bf7f47a5cde4097f01ec50fc3D726D58\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"Domain1AccessPolicy1FDDB3CF\": {\"Type\": \"Custom::OpenSearchAccessPolicy\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"AWS679f53fac002430cb0da5b7982bd22872D164C4C\", \"Arn\"]}, \"Create\": {\"Fn::Join\": [\"\", [\"{\\\"action\\\":\\\"updateDomainConfig\\\",\\\"service\\\":\\\"OpenSearch\\\",\\\"parameters\\\":{\\\"DomainName\\\":\\\"\", {\"Ref\": \"Domain19FCBCB91\"}, \"\\\",\\\"AccessPolicies\\\":\\\"{\\\\\"Statement\\\\\":[{\\\\\"Action\\\\\":\\\\\"es:ESHttp*\\\\\",\\\\\"Effect\\\\\":\\\\\"Allow\\\\\",\\\\\"Principal\\\\\":{\\\\\"AWS\\\\\":\\\\\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\\\\\"},\\\\\"Resource\\\\\":\\\\\"*\\\\\"}],\\\\\"Version\\\\\":\\\\\"2012-10-17\\\\\"}\\\"},\\\"outputPaths\\\":[\\\"DomainConfig.AccessPolicies\\\"],\\\"physicalResourceId\\\":{\\\"id\\\":\\\"\", {\"Ref\": \"Domain19FCBCB91\"}, \"AccessPolicy\\\"}}\"]]}, \"Update\": {\"Fn::Join\": [\"\", [\"{\\\"action\\\":\\\"updateDomainConfig\\\",\\\"service\\\":\\\"OpenSearch\\\",\\\"parameters\\\":{\\\"DomainName\\\":\\\"\", {\"Ref\": \"Domain19FCBCB91\"}, \"\\\",\\\"AccessPolicies\\\":\\\"{\\\\\"Statement\\\\\":[{\\\\\"Action\\\\\":\\\\\"es:ESHttp*\\\\\",\\\\\"Effect\\\\\":\\\\\"Allow\\\\\",\\\\\"Principal\\\\\":{\\\\\"AWS\\\\\":\\\\\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\\\\\"},\\\\\"Resource\\\\\":\\\\\"*\\\\\"}],\\\\\"Version\\\\\":\\\\\"2012-10-17\\\\\"}\\\"},\\\"outputPaths\\\":[\\\"DomainConfig.AccessPolicies\\\"],\\\"physicalResourceId\\\":{\\\"id\\\":\\\"\", {\"Ref\": \"Domain19FCBCB91\"}, \"AccessPolicy\\\"}}\"]]}, \"InstallLatestAwsSdk\": \"false\"}, \"DependsOn\": [\"Domain1AccessPolicyCustomResourcePolicy3BA04487\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"Domain1AccessPolicyCustomResourcePolicy3BA04487\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"es:UpdateDomainConfig\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"Domain19FCBCB91\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"Domain1AccessPolicyCustomResourcePolicy3BA04487\", \"Roles\": [{\"Ref\": \"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\"}]}}, \"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"AWS679f53fac002430cb0da5b7982bd22872D164C4C\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"5009f77d2e9161f4799d4facb1cb8859134a40234014484b4911e924c169c9cb.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\", \"Arn\"]}, \"Handler\": \"index.handler\", \"Runtime\": {\"Fn::FindInMap\": [\"DefaultCrNodeVersionMap\", {\"Ref\": \"AWS::Region\"}, \"value\"]}, \"Timeout\": 120}, \"DependsOn\": [\"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\"]}, \"Domain2SlowSearchLogs0C75F64B\": {\"Type\": \"AWS::Logs::LogGroup\", \"Properties\": {\"RetentionInDays\": 30}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"Domain2AppLogs810876E2\": {\"Type\": \"AWS::Logs::LogGroup\", \"Properties\": {\"RetentionInDays\": 30}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"Domain2ESLogGroupPolicyc80140a7754e9c0dd4e81167ef19e15da5b55dca0286FF1B15\": {\"Type\": \"Custom::CloudwatchLogResourcePolicy\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"AWS679f53fac002430cb0da5b7982bd22872D164C4C\", \"Arn\"]}, \"Create\": {\"Fn::Join\": [\"\", [\"{\\\"service\\\":\\\"CloudWatchLogs\\\",\\\"action\\\":\\\"putResourcePolicy\\\",\\\"parameters\\\":{\\\"policyName\\\":\\\"ESLogPolicyc80140a7754e9c0dd4e81167ef19e15da5b55dca02\\\",\\\"policyDocument\\\":\\\"{\\\\\"Statement\\\\\":[{\\\\\"Action\\\\\":[\\\\\"logs:PutLogEvents\\\\\",\\\\\"logs:CreateLogStream\\\\\"],\\\\\"Effect\\\\\":\\\\\"Allow\\\\\",\\\\\"Principal\\\\\":{\\\\\"Service\\\\\":\\\\\"es.amazonaws.com\\\\\"},\\\\\"Resource\\\\\":[\\\\\"\", {\"Fn::GetAtt\": [\"Domain2SlowSearchLogs0C75F64B\", \"Arn\"]}, \"\\\\\",\\\\\"\", {\"Fn::GetAtt\": [\"Domain2AppLogs810876E2\", \"Arn\"]}, \"\\\\\"]}],\\\\\"Version\\\\\":\\\\\"2012-10-17\\\\\"}\\\"},\\\"physicalResourceId\\\":{\\\"id\\\":\\\"ESLogGroupPolicyc80140a7754e9c0dd4e81167ef19e15da5b55dca02\\\"}}\"]]}, \"Update\": {\"Fn::Join\": [\"\", [\"{\\\"service\\\":\\\"CloudWatchLogs\\\",\\\"action\\\":\\\"putResourcePolicy\\\",\\\"parameters\\\":{\\\"policyName\\\":\\\"ESLogPolicyc80140a7754e9c0dd4e81167ef19e15da5b55dca02\\\",\\\"policyDocument\\\":\\\"{\\\\\"Statement\\\\\":[{\\\\\"Action\\\\\":[\\\\\"logs:PutLogEvents\\\\\",\\\\\"logs:CreateLogStream\\\\\"],\\\\\"Effect\\\\\":\\\\\"Allow\\\\\",\\\\\"Principal\\\\\":{\\\\\"Service\\\\\":\\\\\"es.amazonaws.com\\\\\"},\\\\\"Resource\\\\\":[\\\\\"\", {\"Fn::GetAtt\": [\"Domain2SlowSearchLogs0C75F64B\", \"Arn\"]}, \"\\\\\",\\\\\"\", {\"Fn::GetAtt\": [\"Domain2AppLogs810876E2\", \"Arn\"]}, \"\\\\\"]}],\\\\\"Version\\\\\":\\\\\"2012-10-17\\\\\"}\\\"},\\\"physicalResourceId\\\":{\\\"id\\\":\\\"ESLogGroupPolicyc80140a7754e9c0dd4e81167ef19e15da5b55dca02\\\"}}\"]]}, \"Delete\": \"{\\\"service\\\":\\\"CloudWatchLogs\\\",\\\"action\\\":\\\"deleteResourcePolicy\\\",\\\"parameters\\\":{\\\"policyName\\\":\\\"ESLogPolicyc80140a7754e9c0dd4e81167ef19e15da5b55dca02\\\"},\\\"ignoreErrorCodesMatching\\\":\\\"ResourceNotFoundException\\\"}\", \"InstallLatestAwsSdk\": \"false\"}, \"DependsOn\": [\"Domain2ESLogGroupPolicyc80140a7754e9c0dd4e81167ef19e15da5b55dca02CustomResourcePolicy2DB46870\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"Domain2ESLogGroupPolicyc80140a7754e9c0dd4e81167ef19e15da5b55dca02CustomResourcePolicy2DB46870\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"logs:DeleteResourcePolicy\", \"logs:PutResourcePolicy\"], \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"Domain2ESLogGroupPolicyc80140a7754e9c0dd4e81167ef19e15da5b55dca02CustomResourcePolicy2DB46870\", \"Roles\": [{\"Ref\": \"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\"}]}}, \"Domain2644FE48C\": {\"Type\": \"AWS::OpenSearchService::Domain\", \"Properties\": {\"AdvancedOptions\": {\"rest.action.multi.allow_explicit_index\": \"false\", \"indices.fielddata.cache.size\": \"25\", \"indices.query.bool.max_clause_count\": \"2048\"}, \"ClusterConfig\": {\"DedicatedMasterEnabled\": false, \"InstanceCount\": 1, \"InstanceType\": \"r5.large.search\", \"ZoneAwarenessEnabled\": false}, \"DomainEndpointOptions\": {\"EnforceHTTPS\": false, \"TLSSecurityPolicy\": \"Policy-Min-TLS-1-0-2019-07\"}, \"EBSOptions\": {\"EBSEnabled\": true, \"VolumeSize\": 10, \"VolumeType\": \"gp2\"}, \"EncryptionAtRestOptions\": {\"Enabled\": true}, \"EngineVersion\": \"Elasticsearch_7.1\", \"LogPublishingOptions\": {\"ES_APPLICATION_LOGS\": {\"CloudWatchLogsLogGroupArn\": {\"Fn::GetAtt\": [\"Domain2AppLogs810876E2\", \"Arn\"]}, \"Enabled\": true}, \"SEARCH_SLOW_LOGS\": {\"CloudWatchLogsLogGroupArn\": {\"Fn::GetAtt\": [\"Domain2SlowSearchLogs0C75F64B\", \"Arn\"]}, \"Enabled\": true}}, \"NodeToNodeEncryptionOptions\": {\"Enabled\": true}}, \"DependsOn\": [\"Domain2ESLogGroupPolicyc80140a7754e9c0dd4e81167ef19e15da5b55dca02CustomResourcePolicy2DB46870\", \"Domain2ESLogGroupPolicyc80140a7754e9c0dd4e81167ef19e15da5b55dca0286FF1B15\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"Domain2AccessPolicyB81CB6CE\": {\"Type\": \"Custom::OpenSearchAccessPolicy\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"AWS679f53fac002430cb0da5b7982bd22872D164C4C\", \"Arn\"]}, \"Create\": {\"Fn::Join\": [\"\", [\"{\\\"action\\\":\\\"updateDomainConfig\\\",\\\"service\\\":\\\"OpenSearch\\\",\\\"parameters\\\":{\\\"DomainName\\\":\\\"\", {\"Ref\": \"Domain2644FE48C\"}, \"\\\",\\\"AccessPolicies\\\":\\\"{\\\\\"Statement\\\\\":[{\\\\\"Action\\\\\":\\\\\"es:ESHttp*\\\\\",\\\\\"Effect\\\\\":\\\\\"Allow\\\\\",\\\\\"Principal\\\\\":{\\\\\"AWS\\\\\":\\\\\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\\\\\"},\\\\\"Resource\\\\\":\\\\\"*\\\\\"}],\\\\\"Version\\\\\":\\\\\"2012-10-17\\\\\"}\\\"},\\\"outputPaths\\\":[\\\"DomainConfig.AccessPolicies\\\"],\\\"physicalResourceId\\\":{\\\"id\\\":\\\"\", {\"Ref\": \"Domain2644FE48C\"}, \"AccessPolicy\\\"}}\"]]}, \"Update\": {\"Fn::Join\": [\"\", [\"{\\\"action\\\":\\\"updateDomainConfig\\\",\\\"service\\\":\\\"OpenSearch\\\",\\\"parameters\\\":{\\\"DomainName\\\":\\\"\", {\"Ref\": \"Domain2644FE48C\"}, \"\\\",\\\"AccessPolicies\\\":\\\"{\\\\\"Statement\\\\\":[{\\\\\"Action\\\\\":\\\\\"es:ESHttp*\\\\\",\\\\\"Effect\\\\\":\\\\\"Allow\\\\\",\\\\\"Principal\\\\\":{\\\\\"AWS\\\\\":\\\\\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\\\\\"},\\\\\"Resource\\\\\":\\\\\"*\\\\\"}],\\\\\"Version\\\\\":\\\\\"2012-10-17\\\\\"}\\\"},\\\"outputPaths\\\":[\\\"DomainConfig.AccessPolicies\\\"],\\\"physicalResourceId\\\":{\\\"id\\\":\\\"\", {\"Ref\": \"Domain2644FE48C\"}, \"AccessPolicy\\\"}}\"]]}, \"InstallLatestAwsSdk\": \"false\"}, \"DependsOn\": [\"Domain2AccessPolicyCustomResourcePolicy7C8260FD\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"Domain2AccessPolicyCustomResourcePolicy7C8260FD\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"es:UpdateDomainConfig\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"Domain2644FE48C\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"Domain2AccessPolicyCustomResourcePolicy7C8260FD\", \"Roles\": [{\"Ref\": \"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\"}]}}}, \"Mappings\": {\"DefaultCrNodeVersionMap\": {\"af-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-east-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-3\": {\"value\": \"nodejs16.x\"}, \"ap-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-south-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-3\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-4\": {\"value\": \"nodejs16.x\"}, \"ca-central-1\": {\"value\": \"nodejs16.x\"}, \"cn-north-1\": {\"value\": \"nodejs16.x\"}, \"cn-northwest-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-2\": {\"value\": \"nodejs16.x\"}, \"eu-north-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-1\": {\"value\": \"nodejs16.x\"}, \"eu-west-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-3\": {\"value\": \"nodejs16.x\"}, \"me-central-1\": {\"value\": \"nodejs16.x\"}, \"me-south-1\": {\"value\": \"nodejs16.x\"}, \"sa-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-2\": {\"value\": \"nodejs16.x\"}, \"us-gov-east-1\": {\"value\": \"nodejs16.x\"}, \"us-gov-west-1\": {\"value\": \"nodejs16.x\"}, \"us-iso-east-1\": {\"value\": \"nodejs14.x\"}, \"us-iso-west-1\": {\"value\": \"nodejs14.x\"}, \"us-isob-east-1\": {\"value\": \"nodejs14.x\"}, \"us-west-1\": {\"value\": \"nodejs16.x\"}, \"us-west-2\": {\"value\": \"nodejs16.x\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import { EbsDeviceVolumeType } from 'aws-cdk-lib/aws-ec2';\nimport * as iam from 'aws-cdk-lib/aws-iam';\nimport { App, RemovalPolicy, Stack, StackProps } from 'aws-cdk-lib';\nimport { Construct } from 'constructs';\nimport * as opensearch from 'aws-cdk-lib/aws-opensearchservice';\n\nclass TestStack extends Stack {\n  constructor(scope: Construct, id: string, props?: StackProps) {\n    super(scope, id, props);\n\n    const domainProps: opensearch.DomainProps = {\n      removalPolicy: RemovalPolicy.DESTROY,\n      version: opensearch.EngineVersion.ELASTICSEARCH_7_1,\n      ebs: {\n        volumeSize: 10,\n        volumeType: EbsDeviceVolumeType.GENERAL_PURPOSE_SSD,\n      },\n      logging: {\n        slowSearchLogEnabled: true,\n        appLogEnabled: true,\n      },\n      nodeToNodeEncryption: true,\n      encryptionAtRest: {\n        enabled: true,\n      },\n      advancedOptions: {\n        'rest.action.multi.allow_explicit_index': 'false',\n        'indices.fielddata.cache.size': '25',\n        'indices.query.bool.max_clause_count': '2048',\n      },\n      // test the access policies custom resource works\n      accessPolicies: [\n        new iam.PolicyStatement({\n          effect: iam.Effect.ALLOW,\n          actions: ['es:ESHttp*'],\n          principals: [new iam.AccountRootPrincipal()],\n          resources: ['*'],\n        }),\n      ],\n    };\n\n    // create 2 domains to ensure that Cloudwatch Log Group policy names dont conflict\n    new opensearch.Domain(this, 'Domain1', domainProps);\n    new opensearch.Domain(this, 'Domain2', domainProps);\n  }\n}\n\nconst app = new App();\nnew TestStack(app, 'cdk-integ-opensearch');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"Domain66AC69E0\": {\"Type\": \"AWS::OpenSearchService::Domain\", \"Properties\": {\"ClusterConfig\": {\"DedicatedMasterCount\": 2, \"DedicatedMasterEnabled\": true, \"DedicatedMasterType\": \"r5.large.search\", \"InstanceCount\": 1, \"InstanceType\": \"r5.large.search\", \"WarmCount\": 2, \"WarmEnabled\": true, \"WarmType\": \"ultrawarm1.medium.search\", \"ZoneAwarenessEnabled\": false}, \"DomainEndpointOptions\": {\"EnforceHTTPS\": false, \"TLSSecurityPolicy\": \"Policy-Min-TLS-1-0-2019-07\"}, \"EBSOptions\": {\"EBSEnabled\": true, \"VolumeSize\": 10, \"VolumeType\": \"gp2\"}, \"EncryptionAtRestOptions\": {\"Enabled\": false}, \"EngineVersion\": \"Elasticsearch_7.1\", \"LogPublishingOptions\": {}, \"NodeToNodeEncryptionOptions\": {\"Enabled\": false}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import { App, RemovalPolicy, Stack, StackProps } from 'aws-cdk-lib';\nimport { Construct } from 'constructs';\nimport * as opensearch from 'aws-cdk-lib/aws-opensearchservice';\n\nclass TestStack extends Stack {\n  constructor(scope: Construct, id: string, props?: StackProps) {\n    super(scope, id, props);\n\n    new opensearch.Domain(this, 'Domain', {\n      removalPolicy: RemovalPolicy.DESTROY,\n      version: opensearch.EngineVersion.ELASTICSEARCH_7_1,\n      capacity: {\n        masterNodes: 2,\n        warmNodes: 2,\n      },\n    });\n  }\n}\n\nconst app = new App();\nnew TestStack(app, 'cdk-integ-opensearch-ultrawarm');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"DomainMasterUserBFAFA7D9\": {\"Type\": \"AWS::SecretsManager::Secret\", \"Properties\": {\"GenerateSecretString\": {\"ExcludeCharacters\": \"{}'\\*[]()`\", \"GenerateStringKey\": \"password\", \"SecretStringTemplate\": \"{\\\"username\\\":\\\"admin\\\"}\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"Domain66AC69E0\": {\"Type\": \"AWS::OpenSearchService::Domain\", \"Properties\": {\"AdvancedSecurityOptions\": {\"Enabled\": true, \"InternalUserDatabaseEnabled\": true, \"MasterUserOptions\": {\"MasterUserName\": \"admin\", \"MasterUserPassword\": {\"Fn::Join\": [\"\", [\"{{resolve:secretsmanager:\", {\"Ref\": \"DomainMasterUserBFAFA7D9\"}, \":SecretString:password::}}\"]]}}}, \"ClusterConfig\": {\"DedicatedMasterEnabled\": false, \"InstanceCount\": 1, \"InstanceType\": \"r5.large.search\", \"ZoneAwarenessEnabled\": false}, \"DomainEndpointOptions\": {\"EnforceHTTPS\": true, \"TLSSecurityPolicy\": \"Policy-Min-TLS-1-0-2019-07\"}, \"EBSOptions\": {\"EBSEnabled\": true, \"VolumeSize\": 10, \"VolumeType\": \"gp2\"}, \"EncryptionAtRestOptions\": {\"Enabled\": true}, \"EngineVersion\": \"Elasticsearch_7.1\", \"LogPublishingOptions\": {}, \"NodeToNodeEncryptionOptions\": {\"Enabled\": true}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"DomainAccessPolicyEE735B04\": {\"Type\": \"Custom::OpenSearchAccessPolicy\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"AWS679f53fac002430cb0da5b7982bd22872D164C4C\", \"Arn\"]}, \"Create\": {\"Fn::Join\": [\"\", [\"{\\\"action\\\":\\\"updateDomainConfig\\\",\\\"service\\\":\\\"OpenSearch\\\",\\\"parameters\\\":{\\\"DomainName\\\":\\\"\", {\"Ref\": \"Domain66AC69E0\"}, \"\\\",\\\"AccessPolicies\\\":\\\"{\\\\\"Statement\\\\\":[{\\\\\"Action\\\\\":\\\\\"es:ESHttp*\\\\\",\\\\\"Effect\\\\\":\\\\\"Allow\\\\\",\\\\\"Principal\\\\\":{\\\\\"AWS\\\\\":\\\\\"*\\\\\"},\\\\\"Resource\\\\\":\\\\\"\", {\"Fn::GetAtt\": [\"Domain66AC69E0\", \"Arn\"]}, \"/*\\\\\"}],\\\\\"Version\\\\\":\\\\\"2012-10-17\\\\\"}\\\"},\\\"outputPaths\\\":[\\\"DomainConfig.AccessPolicies\\\"],\\\"physicalResourceId\\\":{\\\"id\\\":\\\"\", {\"Ref\": \"Domain66AC69E0\"}, \"AccessPolicy\\\"}}\"]]}, \"Update\": {\"Fn::Join\": [\"\", [\"{\\\"action\\\":\\\"updateDomainConfig\\\",\\\"service\\\":\\\"OpenSearch\\\",\\\"parameters\\\":{\\\"DomainName\\\":\\\"\", {\"Ref\": \"Domain66AC69E0\"}, \"\\\",\\\"AccessPolicies\\\":\\\"{\\\\\"Statement\\\\\":[{\\\\\"Action\\\\\":\\\\\"es:ESHttp*\\\\\",\\\\\"Effect\\\\\":\\\\\"Allow\\\\\",\\\\\"Principal\\\\\":{\\\\\"AWS\\\\\":\\\\\"*\\\\\"},\\\\\"Resource\\\\\":\\\\\"\", {\"Fn::GetAtt\": [\"Domain66AC69E0\", \"Arn\"]}, \"/*\\\\\"}],\\\\\"Version\\\\\":\\\\\"2012-10-17\\\\\"}\\\"},\\\"outputPaths\\\":[\\\"DomainConfig.AccessPolicies\\\"],\\\"physicalResourceId\\\":{\\\"id\\\":\\\"\", {\"Ref\": \"Domain66AC69E0\"}, \"AccessPolicy\\\"}}\"]]}, \"InstallLatestAwsSdk\": \"false\"}, \"DependsOn\": [\"DomainAccessPolicyCustomResourcePolicyE61F1845\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"DomainAccessPolicyCustomResourcePolicyE61F1845\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"es:UpdateDomainConfig\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"Domain66AC69E0\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"DomainAccessPolicyCustomResourcePolicyE61F1845\", \"Roles\": [{\"Ref\": \"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\"}]}}, \"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"AWS679f53fac002430cb0da5b7982bd22872D164C4C\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"5009f77d2e9161f4799d4facb1cb8859134a40234014484b4911e924c169c9cb.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\", \"Arn\"]}, \"Handler\": \"index.handler\", \"Runtime\": {\"Fn::FindInMap\": [\"DefaultCrNodeVersionMap\", {\"Ref\": \"AWS::Region\"}, \"value\"]}, \"Timeout\": 120}, \"DependsOn\": [\"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\"]}}, \"Mappings\": {\"DefaultCrNodeVersionMap\": {\"af-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-east-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-3\": {\"value\": \"nodejs16.x\"}, \"ap-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-south-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-3\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-4\": {\"value\": \"nodejs16.x\"}, \"ca-central-1\": {\"value\": \"nodejs16.x\"}, \"cn-north-1\": {\"value\": \"nodejs16.x\"}, \"cn-northwest-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-2\": {\"value\": \"nodejs16.x\"}, \"eu-north-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-1\": {\"value\": \"nodejs16.x\"}, \"eu-west-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-3\": {\"value\": \"nodejs16.x\"}, \"me-central-1\": {\"value\": \"nodejs16.x\"}, \"me-south-1\": {\"value\": \"nodejs16.x\"}, \"sa-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-2\": {\"value\": \"nodejs16.x\"}, \"us-gov-east-1\": {\"value\": \"nodejs16.x\"}, \"us-gov-west-1\": {\"value\": \"nodejs16.x\"}, \"us-iso-east-1\": {\"value\": \"nodejs14.x\"}, \"us-iso-west-1\": {\"value\": \"nodejs14.x\"}, \"us-isob-east-1\": {\"value\": \"nodejs14.x\"}, \"us-west-1\": {\"value\": \"nodejs16.x\"}, \"us-west-2\": {\"value\": \"nodejs16.x\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import { App, RemovalPolicy, Stack, StackProps } from 'aws-cdk-lib';\nimport { Construct } from 'constructs';\nimport * as opensearch from 'aws-cdk-lib/aws-opensearchservice';\n\nclass TestStack extends Stack {\n  constructor(scope: Construct, id: string, props?: StackProps) {\n    super(scope, id, props);\n\n    new opensearch.Domain(this, 'Domain', {\n      removalPolicy: RemovalPolicy.DESTROY,\n      version: opensearch.EngineVersion.ELASTICSEARCH_7_1,\n      useUnsignedBasicAuth: true,\n    });\n  }\n}\n\nconst app = new App();\nnew TestStack(app, 'cdk-integ-opensearch-unsignedbasicauth');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"Key961B73FD\": {\"Type\": \"AWS::KMS::Key\", \"Properties\": {\"KeyPolicy\": {\"Statement\": [{\"Action\": \"kms:*\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}, \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"Domain66AC69E0\": {\"Type\": \"AWS::OpenSearchService::Domain\", \"Properties\": {\"ClusterConfig\": {\"DedicatedMasterEnabled\": false, \"InstanceCount\": 1, \"InstanceType\": \"r5.large.search\", \"ZoneAwarenessEnabled\": false}, \"DomainEndpointOptions\": {\"EnforceHTTPS\": false, \"TLSSecurityPolicy\": \"Policy-Min-TLS-1-0-2019-07\"}, \"EBSOptions\": {\"EBSEnabled\": true, \"VolumeSize\": 10, \"VolumeType\": \"gp2\"}, \"EncryptionAtRestOptions\": {\"Enabled\": true, \"KmsKeyId\": {\"Ref\": \"Key961B73FD\"}}, \"EngineVersion\": \"Elasticsearch_7.1\", \"LogPublishingOptions\": {}, \"NodeToNodeEncryptionOptions\": {\"Enabled\": false}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"DomainAccessPolicyEE735B04\": {\"Type\": \"Custom::OpenSearchAccessPolicy\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"AWS679f53fac002430cb0da5b7982bd22872D164C4C\", \"Arn\"]}, \"Create\": {\"Fn::Join\": [\"\", [\"{\\\"action\\\":\\\"updateDomainConfig\\\",\\\"service\\\":\\\"OpenSearch\\\",\\\"parameters\\\":{\\\"DomainName\\\":\\\"\", {\"Ref\": \"Domain66AC69E0\"}, \"\\\",\\\"AccessPolicies\\\":\\\"{\\\\\"Statement\\\\\":[{\\\\\"Action\\\\\":\\\\\"es:ESHttp*\\\\\",\\\\\"Effect\\\\\":\\\\\"Allow\\\\\",\\\\\"Principal\\\\\":{\\\\\"AWS\\\\\":\\\\\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\\\\\"},\\\\\"Resource\\\\\":\\\\\"*\\\\\"}],\\\\\"Version\\\\\":\\\\\"2012-10-17\\\\\"}\\\"},\\\"outputPaths\\\":[\\\"DomainConfig.AccessPolicies\\\"],\\\"physicalResourceId\\\":{\\\"id\\\":\\\"\", {\"Ref\": \"Domain66AC69E0\"}, \"AccessPolicy\\\"}}\"]]}, \"Update\": {\"Fn::Join\": [\"\", [\"{\\\"action\\\":\\\"updateDomainConfig\\\",\\\"service\\\":\\\"OpenSearch\\\",\\\"parameters\\\":{\\\"DomainName\\\":\\\"\", {\"Ref\": \"Domain66AC69E0\"}, \"\\\",\\\"AccessPolicies\\\":\\\"{\\\\\"Statement\\\\\":[{\\\\\"Action\\\\\":\\\\\"es:ESHttp*\\\\\",\\\\\"Effect\\\\\":\\\\\"Allow\\\\\",\\\\\"Principal\\\\\":{\\\\\"AWS\\\\\":\\\\\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\\\\\"},\\\\\"Resource\\\\\":\\\\\"*\\\\\"}],\\\\\"Version\\\\\":\\\\\"2012-10-17\\\\\"}\\\"},\\\"outputPaths\\\":[\\\"DomainConfig.AccessPolicies\\\"],\\\"physicalResourceId\\\":{\\\"id\\\":\\\"\", {\"Ref\": \"Domain66AC69E0\"}, \"AccessPolicy\\\"}}\"]]}, \"InstallLatestAwsSdk\": \"false\"}, \"DependsOn\": [\"DomainAccessPolicyCustomResourcePolicyE61F1845\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"DomainAccessPolicyCustomResourcePolicyE61F1845\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"es:UpdateDomainConfig\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"Domain66AC69E0\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"DomainAccessPolicyCustomResourcePolicyE61F1845\", \"Roles\": [{\"Ref\": \"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\"}]}}, \"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleDefaultPolicyD28E1A5E\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"kms:CreateGrant\", \"kms:Describe*\", \"kms:List*\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"Key961B73FD\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleDefaultPolicyD28E1A5E\", \"Roles\": [{\"Ref\": \"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\"}]}}, \"AWS679f53fac002430cb0da5b7982bd22872D164C4C\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"5009f77d2e9161f4799d4facb1cb8859134a40234014484b4911e924c169c9cb.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\", \"Arn\"]}, \"Handler\": \"index.handler\", \"Runtime\": {\"Fn::FindInMap\": [\"DefaultCrNodeVersionMap\", {\"Ref\": \"AWS::Region\"}, \"value\"]}, \"Timeout\": 120}, \"DependsOn\": [\"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleDefaultPolicyD28E1A5E\", \"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\"]}}, \"Mappings\": {\"DefaultCrNodeVersionMap\": {\"af-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-east-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-3\": {\"value\": \"nodejs16.x\"}, \"ap-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-south-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-3\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-4\": {\"value\": \"nodejs16.x\"}, \"ca-central-1\": {\"value\": \"nodejs16.x\"}, \"cn-north-1\": {\"value\": \"nodejs16.x\"}, \"cn-northwest-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-2\": {\"value\": \"nodejs16.x\"}, \"eu-north-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-1\": {\"value\": \"nodejs16.x\"}, \"eu-west-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-3\": {\"value\": \"nodejs16.x\"}, \"me-central-1\": {\"value\": \"nodejs16.x\"}, \"me-south-1\": {\"value\": \"nodejs16.x\"}, \"sa-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-2\": {\"value\": \"nodejs16.x\"}, \"us-gov-east-1\": {\"value\": \"nodejs16.x\"}, \"us-gov-west-1\": {\"value\": \"nodejs16.x\"}, \"us-iso-east-1\": {\"value\": \"nodejs14.x\"}, \"us-iso-west-1\": {\"value\": \"nodejs14.x\"}, \"us-isob-east-1\": {\"value\": \"nodejs14.x\"}, \"us-west-1\": {\"value\": \"nodejs16.x\"}, \"us-west-2\": {\"value\": \"nodejs16.x\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as iam from 'aws-cdk-lib/aws-iam';\nimport * as kms from 'aws-cdk-lib/aws-kms';\nimport { App, RemovalPolicy, Stack, StackProps } from 'aws-cdk-lib';\nimport { Construct } from 'constructs';\nimport * as opensearch from 'aws-cdk-lib/aws-opensearchservice';\n\nclass TestStack extends Stack {\n  constructor(scope: Construct, id: string, props?: StackProps) {\n    super(scope, id, props);\n\n    const key = new kms.Key(this, 'Key');\n\n    const domainProps: opensearch.DomainProps = {\n      removalPolicy: RemovalPolicy.DESTROY,\n      version: opensearch.EngineVersion.ELASTICSEARCH_7_1,\n      encryptionAtRest: {\n        enabled: true,\n        kmsKey: key,\n      },\n      accessPolicies: [\n        new iam.PolicyStatement({\n          effect: iam.Effect.ALLOW,\n          actions: ['es:ESHttp*'],\n          principals: [new iam.AccountRootPrincipal()],\n          resources: ['*'],\n        }),\n      ],\n    };\n\n    new opensearch.Domain(this, 'Domain', domainProps);\n  }\n}\n\nconst app = new App();\nnew TestStack(app, 'cdk-integ-opensearch-custom-kms-key');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"User00B015A1\": {\"Type\": \"AWS::IAM::User\"}, \"Domain66AC69E0\": {\"Type\": \"AWS::OpenSearchService::Domain\", \"Properties\": {\"AdvancedSecurityOptions\": {\"Enabled\": true, \"InternalUserDatabaseEnabled\": false, \"MasterUserOptions\": {\"MasterUserARN\": {\"Fn::GetAtt\": [\"User00B015A1\", \"Arn\"]}}}, \"ClusterConfig\": {\"DedicatedMasterEnabled\": false, \"InstanceCount\": 1, \"InstanceType\": \"r5.large.search\", \"ZoneAwarenessEnabled\": false}, \"DomainEndpointOptions\": {\"EnforceHTTPS\": true, \"TLSSecurityPolicy\": \"Policy-Min-TLS-1-0-2019-07\"}, \"EBSOptions\": {\"EBSEnabled\": true, \"VolumeSize\": 10, \"VolumeType\": \"gp2\"}, \"EncryptionAtRestOptions\": {\"Enabled\": true}, \"EngineVersion\": \"Elasticsearch_7.1\", \"LogPublishingOptions\": {}, \"NodeToNodeEncryptionOptions\": {\"Enabled\": true}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import { User } from 'aws-cdk-lib/aws-iam';\nimport { App, RemovalPolicy, Stack, StackProps } from 'aws-cdk-lib';\nimport { Construct } from 'constructs';\nimport * as opensearch from 'aws-cdk-lib/aws-opensearchservice';\n\nclass TestStack extends Stack {\n  constructor(scope: Construct, id: string, props?: StackProps) {\n    super(scope, id, props);\n\n    const user = new User(this, 'User');\n\n    new opensearch.Domain(this, 'Domain', {\n      removalPolicy: RemovalPolicy.DESTROY,\n      version: opensearch.EngineVersion.ELASTICSEARCH_7_1,\n      fineGrainedAccessControl: {\n        masterUserArn: user.userArn,\n      },\n      encryptionAtRest: {\n        enabled: true,\n      },\n      nodeToNodeEncryption: true,\n      enforceHttps: true,\n    });\n  }\n}\n\nconst app = new App();\nnew TestStack(app, 'cdk-integ-opensearch-advancedsecurity');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"Destination3E3DC043D\": {\"Type\": \"AWS::S3::Bucket\", \"Properties\": {\"Tags\": [{\"Key\": \"aws-cdk:auto-delete-objects\", \"Value\": \"true\"}, {\"Key\": \"aws-cdk:cr-owned:4685d093\", \"Value\": \"true\"}]}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"Destination3Policy685DA6C5\": {\"Type\": \"AWS::S3::BucketPolicy\", \"Properties\": {\"Bucket\": {\"Ref\": \"Destination3E3DC043D\"}, \"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::GetAtt\": [\"CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092\", \"Arn\"]}}, \"Resource\": [{\"Fn::GetAtt\": [\"Destination3E3DC043D\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"Destination3E3DC043D\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}}}, \"Destination3AutoDeleteObjectsCustomResourceC26EC7B7\": {\"Type\": \"Custom::S3AutoDeleteObjects\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F\", \"Arn\"]}, \"BucketName\": {\"Ref\": \"Destination3E3DC043D\"}}, \"DependsOn\": [\"Destination3Policy685DA6C5\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Version\": \"2012-10-17\", \"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}]}, \"ManagedPolicyArns\": [{\"Fn::Sub\": \"arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"}]}}, \"CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"2575608c9455922c199396dd056f7479bb172f5c6068cd093f6d061160f48cee.zip\"}, \"Timeout\": 900, \"MemorySize\": 128, \"Handler\": \"index.handler\", \"Role\": {\"Fn::GetAtt\": [\"CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092\", \"Arn\"]}, \"Runtime\": \"nodejs16.x\", \"Description\": {\"Fn::Join\": [\"\", [\"Lambda function for auto-deleting objects in \", {\"Ref\": \"Destination3E3DC043D\"}, \" S3 bucket.\"]]}}, \"DependsOn\": [\"CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092\"]}, \"DistributionCFDistribution882A7313\": {\"Type\": \"AWS::CloudFront::Distribution\", \"Properties\": {\"DistributionConfig\": {\"DefaultCacheBehavior\": {\"AllowedMethods\": [\"GET\", \"HEAD\"], \"CachedMethods\": [\"GET\", \"HEAD\"], \"Compress\": true, \"ForwardedValues\": {\"Cookies\": {\"Forward\": \"none\"}, \"QueryString\": false}, \"TargetOriginId\": \"origin1\", \"ViewerProtocolPolicy\": \"redirect-to-https\"}, \"DefaultRootObject\": \"index.html\", \"Enabled\": true, \"HttpVersion\": \"http2\", \"IPV6Enabled\": true, \"Origins\": [{\"ConnectionAttempts\": 3, \"ConnectionTimeout\": 10, \"DomainName\": {\"Fn::GetAtt\": [\"Destination3E3DC043D\", \"RegionalDomainName\"]}, \"Id\": \"origin1\", \"S3OriginConfig\": {}}], \"PriceClass\": \"PriceClass_100\", \"ViewerCertificate\": {\"CloudFrontDefaultCertificate\": true}}}}, \"DeployWithInvalidationAwsCliLayerDEDD5787\": {\"Type\": \"AWS::Lambda::LayerVersion\", \"Properties\": {\"Content\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"cff916937906abb9c99e0ecbb4accbc091c734ce975c7ff64b3f4bfae4372b9c.zip\"}, \"Description\": \"/opt/awscli/aws\"}}, \"DeployWithInvalidationCustomResourceE3FF7455\": {\"Type\": \"Custom::CDKBucketDeployment\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536\", \"Arn\"]}, \"SourceBucketNames\": [{\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}], \"SourceObjectKeys\": [\"fc4481abf279255619ff7418faa5d24456fef3432ea0da59c95542578ff0222e.zip\"], \"DestinationBucketName\": {\"Ref\": \"Destination3E3DC043D\"}, \"RetainOnDelete\": false, \"Prune\": true, \"DistributionId\": {\"Ref\": \"DistributionCFDistribution882A7313\"}, \"DistributionPaths\": [\"/images/*.png\"]}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":s3:::\", {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"/*\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":s3:::\", {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}]]}]}, {\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"Destination3E3DC043D\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"Destination3E3DC043D\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"cloudfront:CreateInvalidation\", \"cloudfront:GetInvalidation\"], \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF\", \"Roles\": [{\"Ref\": \"CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265\"}]}}, \"CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"9eb41a5505d37607ac419321497a4f8c21cf0ee1f9b4a6b29aa04301aea5c7fd.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265\", \"Arn\"]}, \"Environment\": {\"Variables\": {\"AWS_CA_BUNDLE\": \"/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem\"}}, \"Handler\": \"index.handler\", \"Layers\": [{\"Ref\": \"DeployWithInvalidationAwsCliLayerDEDD5787\"}], \"Runtime\": \"python3.9\", \"Timeout\": 900}, \"DependsOn\": [\"CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF\", \"CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265\"]}}, \"Mappings\": {\"DefaultCrNodeVersionMap\": {\"af-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-east-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-3\": {\"value\": \"nodejs16.x\"}, \"ap-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-south-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-3\": {\"value\": \"nodejs16.x\"}, \"ca-central-1\": {\"value\": \"nodejs16.x\"}, \"cn-north-1\": {\"value\": \"nodejs16.x\"}, \"cn-northwest-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-2\": {\"value\": \"nodejs16.x\"}, \"eu-north-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-1\": {\"value\": \"nodejs16.x\"}, \"eu-west-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-3\": {\"value\": \"nodejs16.x\"}, \"me-central-1\": {\"value\": \"nodejs16.x\"}, \"me-south-1\": {\"value\": \"nodejs16.x\"}, \"sa-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-2\": {\"value\": \"nodejs16.x\"}, \"us-gov-east-1\": {\"value\": \"nodejs16.x\"}, \"us-gov-west-1\": {\"value\": \"nodejs16.x\"}, \"us-iso-east-1\": {\"value\": \"nodejs14.x\"}, \"us-iso-west-1\": {\"value\": \"nodejs14.x\"}, \"us-isob-east-1\": {\"value\": \"nodejs14.x\"}, \"us-west-1\": {\"value\": \"nodejs16.x\"}, \"us-west-2\": {\"value\": \"nodejs16.x\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as path from 'path';\nimport * as cloudfront from 'aws-cdk-lib/aws-cloudfront';\nimport * as s3 from 'aws-cdk-lib/aws-s3';\nimport * as cdk from 'aws-cdk-lib';\nimport * as s3deploy from 'aws-cdk-lib/aws-s3-deployment';\n\nclass TestBucketDeployment extends cdk.Stack {\n  constructor(scope: cdk.App, id: string) {\n    super(scope, id);\n\n    const bucket = new s3.Bucket(this, 'Destination3', {\n      removalPolicy: cdk.RemovalPolicy.DESTROY,\n      autoDeleteObjects: true, // needed for integration test cleanup\n    });\n    const distribution = new cloudfront.CloudFrontWebDistribution(this, 'Distribution', {\n      originConfigs: [\n        {\n          s3OriginSource: {\n            s3BucketSource: bucket,\n          },\n          behaviors: [{ isDefaultBehavior: true }],\n        },\n      ],\n    });\n\n    new s3deploy.BucketDeployment(this, 'DeployWithInvalidation', {\n      sources: [s3deploy.Source.asset(path.join(__dirname, 'my-website'))],\n      destinationBucket: bucket,\n      distribution,\n      distributionPaths: ['/images/*.png'],\n      retainOnDelete: false, // default is true, which will block the integration test cleanup\n    });\n\n  }\n}\n\nconst app = new cdk.App();\n\nnew TestBucketDeployment(app, 'test-bucket-deployments-1');\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MySlackChannelConfigurationRole1D3F23AE\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"chatbot.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"MySlackChannelConfigurationRoleDefaultPolicyE4C1FA62\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"s3:GetObject\", \"Effect\": \"Allow\", \"Resource\": \"arn:aws:s3:::abc/xyz/123.txt\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MySlackChannelConfigurationRoleDefaultPolicyE4C1FA62\", \"Roles\": [{\"Ref\": \"MySlackChannelConfigurationRole1D3F23AE\"}]}}, \"MySlackChannelA8E0B56C\": {\"Type\": \"AWS::Chatbot::SlackChannelConfiguration\", \"Properties\": {\"ConfigurationName\": \"test-channel\", \"IamRoleArn\": {\"Fn::GetAtt\": [\"MySlackChannelConfigurationRole1D3F23AE\", \"Arn\"]}, \"SlackChannelId\": \"C0187JABUE9\", \"SlackWorkspaceId\": \"T49239U4W\", \"LoggingLevel\": \"NONE\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as iam from 'aws-cdk-lib/aws-iam';\nimport * as cdk from 'aws-cdk-lib';\nimport * as chatbot from 'aws-cdk-lib/aws-chatbot';\n\nclass ChatbotInteg extends cdk.Stack {\n  constructor(scope: cdk.App, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n\n    const slackChannel = new chatbot.SlackChannelConfiguration(this, 'MySlackChannel', {\n      slackChannelConfigurationName: 'test-channel',\n      slackWorkspaceId: 'T49239U4W', // modify to your slack workspace id\n      slackChannelId: 'C0187JABUE9', // modify to your slack channel id\n      loggingLevel: chatbot.LoggingLevel.NONE,\n    });\n\n    slackChannel.addToRolePolicy(new iam.PolicyStatement({\n      effect: iam.Effect.ALLOW,\n      actions: [\n        's3:GetObject',\n      ],\n      resources: ['arn:aws:s3:::abc/xyz/123.txt'],\n    }));\n  }\n}\n\nconst app = new cdk.App();\n\nnew ChatbotInteg(app, 'ChatbotInteg');\n\napp.synth();\n\n"}
{ "prompt": "{\"Resources\": {\"MySlackChannelConfigurationRole1D3F23AE\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"chatbot.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"MySlackChannelConfigurationRoleDefaultPolicyE4C1FA62\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"s3:GetObject\", \"Effect\": \"Allow\", \"Resource\": \"arn:aws:s3:::abc/xyz/123.txt\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MySlackChannelConfigurationRoleDefaultPolicyE4C1FA62\", \"Roles\": [{\"Ref\": \"MySlackChannelConfigurationRole1D3F23AE\"}]}}, \"MySlackChannelA8E0B56C\": {\"Type\": \"AWS::Chatbot::SlackChannelConfiguration\", \"Properties\": {\"ConfigurationName\": \"test-channel\", \"IamRoleArn\": {\"Fn::GetAtt\": [\"MySlackChannelConfigurationRole1D3F23AE\", \"Arn\"]}, \"SlackChannelId\": \"C0187JABUE9\", \"SlackWorkspaceId\": \"T49239U4W\", \"LoggingLevel\": \"NONE\"}}, \"MySlackChannelLogRetention84AA443F\": {\"Type\": \"Custom::LogRetention\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A\", \"Arn\"]}, \"LogGroupName\": \"/aws/chatbot/test-channel\", \"LogGroupRegion\": \"us-east-1\", \"RetentionInDays\": 30}}, \"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"logs:DeleteRetentionPolicy\", \"logs:PutRetentionPolicy\"], \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB\", \"Roles\": [{\"Ref\": \"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB\"}]}}, \"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Handler\": \"index.handler\", \"Runtime\": {\"Fn::FindInMap\": [\"DefaultCrNodeVersionMap\", {\"Ref\": \"AWS::Region\"}, \"value\"]}, \"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"0f8a80f5f2310ea7e3295258fdbb79c43a1e8c0a11e863e63dc82832599412ed.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB\", \"Arn\"]}}, \"DependsOn\": [\"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB\", \"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB\"]}}, \"Mappings\": {\"DefaultCrNodeVersionMap\": {\"af-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-east-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-3\": {\"value\": \"nodejs16.x\"}, \"ap-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-south-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-3\": {\"value\": \"nodejs16.x\"}, \"ca-central-1\": {\"value\": \"nodejs16.x\"}, \"cn-north-1\": {\"value\": \"nodejs16.x\"}, \"cn-northwest-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-2\": {\"value\": \"nodejs16.x\"}, \"eu-north-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-1\": {\"value\": \"nodejs16.x\"}, \"eu-west-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-3\": {\"value\": \"nodejs16.x\"}, \"me-central-1\": {\"value\": \"nodejs16.x\"}, \"me-south-1\": {\"value\": \"nodejs16.x\"}, \"sa-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-2\": {\"value\": \"nodejs16.x\"}, \"us-gov-east-1\": {\"value\": \"nodejs16.x\"}, \"us-gov-west-1\": {\"value\": \"nodejs16.x\"}, \"us-iso-east-1\": {\"value\": \"nodejs14.x\"}, \"us-iso-west-1\": {\"value\": \"nodejs14.x\"}, \"us-isob-east-1\": {\"value\": \"nodejs14.x\"}, \"us-west-1\": {\"value\": \"nodejs16.x\"}, \"us-west-2\": {\"value\": \"nodejs16.x\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as iam from 'aws-cdk-lib/aws-iam';\nimport * as logs from 'aws-cdk-lib/aws-logs';\nimport * as cdk from 'aws-cdk-lib';\nimport * as chatbot from 'aws-cdk-lib/aws-chatbot';\n\nclass ChatbotLogRetentionInteg extends cdk.Stack {\n  constructor(scope: cdk.App, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n\n    const slackChannel = new chatbot.SlackChannelConfiguration(this, 'MySlackChannel', {\n      slackChannelConfigurationName: 'test-channel',\n      slackWorkspaceId: 'T49239U4W', // modify to your slack workspace id\n      slackChannelId: 'C0187JABUE9', // modify to your slack channel id\n      loggingLevel: chatbot.LoggingLevel.NONE,\n      logRetention: logs.RetentionDays.ONE_MONTH,\n    });\n\n    slackChannel.addToRolePolicy(new iam.PolicyStatement({\n      effect: iam.Effect.ALLOW,\n      actions: [\n        's3:GetObject',\n      ],\n      resources: ['arn:aws:s3:::abc/xyz/123.txt'],\n    }));\n  }\n}\n\nconst app = new cdk.App();\n\nnew ChatbotLogRetentionInteg(app, 'ChatbotLogRetentionInteg');\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MySlackChannelConfigurationRole1D3F23AE\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"chatbot.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"MySlackChannelA8E0B56C\": {\"Type\": \"AWS::Chatbot::SlackChannelConfiguration\", \"Properties\": {\"ConfigurationName\": \"test-channel\", \"IamRoleArn\": {\"Fn::GetAtt\": [\"MySlackChannelConfigurationRole1D3F23AE\", \"Arn\"]}, \"SlackChannelId\": \"C0187JABUE9\", \"SlackWorkspaceId\": \"T49239U4W\", \"GuardrailPolicies\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/CloudWatchReadOnlyAccess\"]]}]}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as iam from 'aws-cdk-lib/aws-iam';\nimport * as cdk from 'aws-cdk-lib';\nimport * as chatbot from 'aws-cdk-lib/aws-chatbot';\n\nclass ChatbotGuardrailsInteg extends cdk.Stack {\n  constructor(scope: cdk.App, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n\n    const guardrailPolicy = iam.ManagedPolicy.fromAwsManagedPolicyName('CloudWatchReadOnlyAccess');\n\n    new chatbot.SlackChannelConfiguration(this, 'MySlackChannel', {\n      slackChannelConfigurationName: 'test-channel',\n      slackWorkspaceId: 'T49239U4W', // modify to your slack workspace id\n      slackChannelId: 'C0187JABUE9', // modify to your slack channel id\n      guardrailPolicies: [guardrailPolicy],\n    });\n  }\n}\n\nconst app = new cdk.App();\n\nnew ChatbotGuardrailsInteg(app, 'ChatbotGuardrailsInteg');\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyPipelineArtifactsBucketEncryptionKey8BF0A7F3\": {\"Type\": \"AWS::KMS::Key\", \"Properties\": {\"KeyPolicy\": {\"Statement\": [{\"Action\": \"kms:*\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}, \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"MyPipelineArtifactsBucketEncryptionKeyAlias9D4F8C59\": {\"Type\": \"AWS::KMS::Alias\", \"Properties\": {\"AliasName\": \"alias/codepipeline-aws-cdk-pipeline-event-target-mypipeline-4ae5d407\", \"TargetKeyId\": {\"Fn::GetAtt\": [\"MyPipelineArtifactsBucketEncryptionKey8BF0A7F3\", \"Arn\"]}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"MyPipelineArtifactsBucket727923DD\": {\"Type\": \"AWS::S3::Bucket\", \"Properties\": {\"BucketEncryption\": {\"ServerSideEncryptionConfiguration\": [{\"ServerSideEncryptionByDefault\": {\"KMSMasterKeyID\": {\"Fn::GetAtt\": [\"MyPipelineArtifactsBucketEncryptionKey8BF0A7F3\", \"Arn\"]}, \"SSEAlgorithm\": \"aws:kms\"}}]}, \"PublicAccessBlockConfiguration\": {\"BlockPublicAcls\": true, \"BlockPublicPolicy\": true, \"IgnorePublicAcls\": true, \"RestrictPublicBuckets\": true}}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"MyPipelineArtifactsBucketPolicyDFDA675B\": {\"Type\": \"AWS::S3::BucketPolicy\", \"Properties\": {\"Bucket\": {\"Ref\": \"MyPipelineArtifactsBucket727923DD\"}, \"PolicyDocument\": {\"Statement\": [{\"Action\": \"s3:*\", \"Condition\": {\"Bool\": {\"aws:SecureTransport\": \"false\"}}, \"Effect\": \"Deny\", \"Principal\": {\"AWS\": \"*\"}, \"Resource\": [{\"Fn::GetAtt\": [\"MyPipelineArtifactsBucket727923DD\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"MyPipelineArtifactsBucket727923DD\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}}}, \"MyPipelineRoleC0D47CA4\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codepipeline.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"MyPipelineRoleDefaultPolicy34F09EFA\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"MyPipelineArtifactsBucket727923DD\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"MyPipelineArtifactsBucket727923DD\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"kms:Decrypt\", \"kms:DescribeKey\", \"kms:Encrypt\", \"kms:GenerateDataKey*\", \"kms:ReEncrypt*\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"MyPipelineArtifactsBucketEncryptionKey8BF0A7F3\", \"Arn\"]}}, {\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"MyPipelineBuildCodeBuildActionCodePipelineActionRole3185ADC7\", \"Arn\"]}, {\"Fn::GetAtt\": [\"MyPipelineSourceCodeCommitSourceCodePipelineActionRole0B6D0F4F\", \"Arn\"]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyPipelineRoleDefaultPolicy34F09EFA\", \"Roles\": [{\"Ref\": \"MyPipelineRoleC0D47CA4\"}]}}, \"MyPipelineAED38ECF\": {\"Type\": \"AWS::CodePipeline::Pipeline\", \"Properties\": {\"RoleArn\": {\"Fn::GetAtt\": [\"MyPipelineRoleC0D47CA4\", \"Arn\"]}, \"Stages\": [{\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Source\", \"Owner\": \"AWS\", \"Provider\": \"CodeCommit\", \"Version\": \"1\"}, \"Configuration\": {\"RepositoryName\": {\"Fn::GetAtt\": [\"CodeCommitRepoDC6A41F9\", \"Name\"]}, \"BranchName\": \"master\", \"PollForSourceChanges\": true}, \"Name\": \"CodeCommitSource\", \"OutputArtifacts\": [{\"Name\": \"Source\"}], \"RoleArn\": {\"Fn::GetAtt\": [\"MyPipelineSourceCodeCommitSourceCodePipelineActionRole0B6D0F4F\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"Source\"}, {\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Build\", \"Owner\": \"AWS\", \"Provider\": \"CodeBuild\", \"Version\": \"1\"}, \"Configuration\": {\"ProjectName\": {\"Ref\": \"BuildProject097C5DB7\"}}, \"InputArtifacts\": [{\"Name\": \"Source\"}], \"Name\": \"CodeBuildAction\", \"OutputArtifacts\": [{\"Name\": \"Artifact_Build_CodeBuildAction\"}], \"RoleArn\": {\"Fn::GetAtt\": [\"MyPipelineBuildCodeBuildActionCodePipelineActionRole3185ADC7\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"Build\"}], \"ArtifactStore\": {\"EncryptionKey\": {\"Id\": {\"Fn::GetAtt\": [\"MyPipelineArtifactsBucketEncryptionKey8BF0A7F3\", \"Arn\"]}, \"Type\": \"KMS\"}, \"Location\": {\"Ref\": \"MyPipelineArtifactsBucket727923DD\"}, \"Type\": \"S3\"}}, \"DependsOn\": [\"MyPipelineRoleDefaultPolicy34F09EFA\", \"MyPipelineRoleC0D47CA4\"]}, \"MyPipelineSourceCodeCommitSourceCodePipelineActionRole0B6D0F4F\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}}, \"MyPipelineSourceCodeCommitSourceCodePipelineActionRoleDefaultPolicyE6664925\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"MyPipelineArtifactsBucket727923DD\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"MyPipelineArtifactsBucket727923DD\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"kms:Decrypt\", \"kms:DescribeKey\", \"kms:Encrypt\", \"kms:GenerateDataKey*\", \"kms:ReEncrypt*\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"MyPipelineArtifactsBucketEncryptionKey8BF0A7F3\", \"Arn\"]}}, {\"Action\": [\"codecommit:CancelUploadArchive\", \"codecommit:GetBranch\", \"codecommit:GetCommit\", \"codecommit:GetUploadArchiveStatus\", \"codecommit:UploadArchive\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"CodeCommitRepoDC6A41F9\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyPipelineSourceCodeCommitSourceCodePipelineActionRoleDefaultPolicyE6664925\", \"Roles\": [{\"Ref\": \"MyPipelineSourceCodeCommitSourceCodePipelineActionRole0B6D0F4F\"}]}}, \"MyPipelineSourceCodeCommitSourceOnActionStateChangeDCAF781A\": {\"Type\": \"AWS::Events::Rule\", \"Properties\": {\"EventPattern\": {\"detail-type\": [\"CodePipeline Action Execution State Change\"], \"source\": [\"aws.codepipeline\"], \"resources\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":codepipeline:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":\", {\"Ref\": \"MyPipelineAED38ECF\"}]]}], \"detail\": {\"stage\": [\"Source\"], \"action\": [\"CodeCommitSource\"], \"state\": [\"STARTED\"]}}, \"State\": \"ENABLED\", \"Targets\": [{\"Arn\": {\"Ref\": \"MyTopic86869434\"}, \"Id\": \"Target0\"}]}}, \"MyPipelineSourceOnSourceStateChange6DEE3A75\": {\"Type\": \"AWS::Events::Rule\", \"Properties\": {\"EventPattern\": {\"detail-type\": [\"CodePipeline Stage Execution State Change\"], \"source\": [\"aws.codepipeline\"], \"resources\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":codepipeline:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":\", {\"Ref\": \"MyPipelineAED38ECF\"}]]}], \"detail\": {\"stage\": [\"Source\"]}}, \"State\": \"ENABLED\", \"Targets\": [{\"Arn\": {\"Ref\": \"MyTopic86869434\"}, \"Id\": \"Target0\"}]}}, \"MyPipelineBuildCodeBuildActionCodePipelineActionRole3185ADC7\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}}, \"MyPipelineBuildCodeBuildActionCodePipelineActionRoleDefaultPolicy96378DF6\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"codebuild:BatchGetBuilds\", \"codebuild:StartBuild\", \"codebuild:StopBuild\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"BuildProject097C5DB7\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyPipelineBuildCodeBuildActionCodePipelineActionRoleDefaultPolicy96378DF6\", \"Roles\": [{\"Ref\": \"MyPipelineBuildCodeBuildActionCodePipelineActionRole3185ADC7\"}]}}, \"MyPipelineOnPipelineStateChangeA017E4B1\": {\"Type\": \"AWS::Events::Rule\", \"Properties\": {\"EventPattern\": {\"source\": [\"aws.codepipeline\"], \"resources\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":codepipeline:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":\", {\"Ref\": \"MyPipelineAED38ECF\"}]]}], \"detail-type\": [\"CodePipeline Pipeline Execution State Change\"]}, \"State\": \"ENABLED\", \"Targets\": [{\"Arn\": {\"Ref\": \"MyTopic86869434\"}, \"Id\": \"Target0\", \"InputTransformer\": {\"InputPathsMap\": {\"detail-pipeline\": \"$.detail.pipeline\", \"detail-state\": \"$.detail.state\"}, \"InputTemplate\": \"\\\"Pipeline <detail-pipeline> changed state to <detail-state>\\\"\"}}]}}, \"CodeCommitRepoDC6A41F9\": {\"Type\": \"AWS::CodeCommit::Repository\", \"Properties\": {\"RepositoryName\": \"foo\"}}, \"BuildProjectRoleAA92C755\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codebuild.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"BuildProjectRoleDefaultPolicy3E9F248C\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"logs:CreateLogGroup\", \"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"BuildProject097C5DB7\"}, \":*\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"BuildProject097C5DB7\"}]]}]}, {\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"MyPipelineArtifactsBucket727923DD\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"MyPipelineArtifactsBucket727923DD\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"kms:Decrypt\", \"kms:DescribeKey\", \"kms:Encrypt\", \"kms:GenerateDataKey*\", \"kms:ReEncrypt*\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"MyPipelineArtifactsBucketEncryptionKey8BF0A7F3\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"BuildProjectRoleDefaultPolicy3E9F248C\", \"Roles\": [{\"Ref\": \"BuildProjectRoleAA92C755\"}]}}, \"BuildProject097C5DB7\": {\"Type\": \"AWS::CodeBuild::Project\", \"Properties\": {\"Artifacts\": {\"Type\": \"CODEPIPELINE\"}, \"Environment\": {\"ComputeType\": \"BUILD_GENERAL1_SMALL\", \"Image\": \"aws/codebuild/standard:1.0\", \"ImagePullCredentialsType\": \"CODEBUILD\", \"PrivilegedMode\": false, \"Type\": \"LINUX_CONTAINER\"}, \"ServiceRole\": {\"Fn::GetAtt\": [\"BuildProjectRoleAA92C755\", \"Arn\"]}, \"Source\": {\"Type\": \"CODEPIPELINE\"}, \"Cache\": {\"Type\": \"NO_CACHE\"}, \"EncryptionKey\": {\"Fn::GetAtt\": [\"MyPipelineArtifactsBucketEncryptionKey8BF0A7F3\", \"Arn\"]}}}, \"MyTopic86869434\": {\"Type\": \"AWS::SNS::Topic\"}, \"MyTopicPolicy12A5EC17\": {\"Type\": \"AWS::SNS::TopicPolicy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"sns:Publish\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"events.amazonaws.com\"}, \"Resource\": {\"Ref\": \"MyTopic86869434\"}, \"Sid\": \"0\"}], \"Version\": \"2012-10-17\"}, \"Topics\": [{\"Ref\": \"MyTopic86869434\"}]}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "// Use pipeline as CloudWAtch event target\n\nimport * as codebuild from 'aws-cdk-lib/aws-codebuild';\nimport * as codecommit from 'aws-cdk-lib/aws-codecommit';\nimport * as codepipeline from 'aws-cdk-lib/aws-codepipeline';\nimport * as events from 'aws-cdk-lib/aws-events';\nimport * as targets from 'aws-cdk-lib/aws-events-targets';\nimport * as sns from 'aws-cdk-lib/aws-sns';\nimport * as cdk from 'aws-cdk-lib';\nimport * as cpactions from 'aws-cdk-lib/aws-codepipeline-actions';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'aws-cdk-pipeline-event-target');\n\nconst pipeline = new codepipeline.Pipeline(stack, 'MyPipeline');\n\nconst repository = new codecommit.Repository(stack, 'CodeCommitRepo', {\n  repositoryName: 'foo',\n});\nconst project = new codebuild.PipelineProject(stack, 'BuildProject', {\n  grantReportGroupPermissions: false,\n});\n\nconst sourceOutput = new codepipeline.Artifact('Source');\nconst sourceAction = new cpactions.CodeCommitSourceAction({\n  actionName: 'CodeCommitSource',\n  output: sourceOutput,\n  repository,\n  trigger: cpactions.CodeCommitTrigger.POLL,\n});\nconst sourceStage = pipeline.addStage({\n  stageName: 'Source',\n  actions: [sourceAction],\n});\n\npipeline.addStage({\n  stageName: 'Build',\n  actions: [\n    new cpactions.CodeBuildAction({\n      actionName: 'CodeBuildAction',\n      input: sourceOutput,\n      project,\n      outputs: [new codepipeline.Artifact()],\n    }),\n  ],\n});\n\nconst topic = new sns.Topic(stack, 'MyTopic');\n\nconst eventPipeline = events.EventField.fromPath('$.detail.pipeline');\nconst eventState = events.EventField.fromPath('$.detail.state');\npipeline.onStateChange('OnPipelineStateChange', {\n  target: new targets.SnsTopic(topic, {\n    message: events.RuleTargetInput.fromText(`Pipeline ${eventPipeline} changed state to ${eventState}`),\n  }),\n});\n\nsourceStage.onStateChange('OnSourceStateChange', new targets.SnsTopic(topic));\n\nsourceAction.onStateChange('OnActionStateChange', new targets.SnsTopic(topic)).addEventPattern({\n  detail: { state: ['STARTED'] },\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"PipelineBucketB967BD35\": {\"Type\": \"AWS::S3::Bucket\", \"Properties\": {\"VersioningConfiguration\": {\"Status\": \"Enabled\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"PipelineArtifactsBucketEncryptionKey01D58D69\": {\"Type\": \"AWS::KMS::Key\", \"Properties\": {\"KeyPolicy\": {\"Statement\": [{\"Action\": \"kms:*\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}, \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"PipelineArtifactsBucketEncryptionKeyAlias5C510EEE\": {\"Type\": \"AWS::KMS::Alias\", \"Properties\": {\"AliasName\": \"alias/codepipeline-aws-cdk-codepipeline-alexa-deploy-pipeline-961107f5\", \"TargetKeyId\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKey01D58D69\", \"Arn\"]}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"PipelineArtifactsBucket22248F97\": {\"Type\": \"AWS::S3::Bucket\", \"Properties\": {\"BucketEncryption\": {\"ServerSideEncryptionConfiguration\": [{\"ServerSideEncryptionByDefault\": {\"KMSMasterKeyID\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKey01D58D69\", \"Arn\"]}, \"SSEAlgorithm\": \"aws:kms\"}}]}, \"PublicAccessBlockConfiguration\": {\"BlockPublicAcls\": true, \"BlockPublicPolicy\": true, \"IgnorePublicAcls\": true, \"RestrictPublicBuckets\": true}}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"PipelineArtifactsBucketPolicyD4F9712A\": {\"Type\": \"AWS::S3::BucketPolicy\", \"Properties\": {\"Bucket\": {\"Ref\": \"PipelineArtifactsBucket22248F97\"}, \"PolicyDocument\": {\"Statement\": [{\"Action\": \"s3:*\", \"Condition\": {\"Bool\": {\"aws:SecureTransport\": \"false\"}}, \"Effect\": \"Deny\", \"Principal\": {\"AWS\": \"*\"}, \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucket22248F97\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucket22248F97\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}}}, \"PipelineRoleD68726F7\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codepipeline.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"PipelineRoleDefaultPolicyC7A05455\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucket22248F97\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucket22248F97\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"kms:Decrypt\", \"kms:DescribeKey\", \"kms:Encrypt\", \"kms:GenerateDataKey*\", \"kms:ReEncrypt*\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKey01D58D69\", \"Arn\"]}}, {\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"PipelineSourceCodePipelineActionRoleC6F9E7F5\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineRoleDefaultPolicyC7A05455\", \"Roles\": [{\"Ref\": \"PipelineRoleD68726F7\"}]}}, \"PipelineC660917D\": {\"Type\": \"AWS::CodePipeline::Pipeline\", \"Properties\": {\"RoleArn\": {\"Fn::GetAtt\": [\"PipelineRoleD68726F7\", \"Arn\"]}, \"Stages\": [{\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Source\", \"Owner\": \"AWS\", \"Provider\": \"S3\", \"Version\": \"1\"}, \"Configuration\": {\"S3Bucket\": {\"Ref\": \"PipelineBucketB967BD35\"}, \"S3ObjectKey\": \"key\"}, \"Name\": \"Source\", \"OutputArtifacts\": [{\"Name\": \"SourceArtifact\"}], \"RoleArn\": {\"Fn::GetAtt\": [\"PipelineSourceCodePipelineActionRoleC6F9E7F5\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"Source\"}, {\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Deploy\", \"Owner\": \"ThirdParty\", \"Provider\": \"AlexaSkillsKit\", \"Version\": \"1\"}, \"Configuration\": {\"ClientId\": \"clientId\", \"ClientSecret\": \"clientSecret\", \"RefreshToken\": \"refreshToken\", \"SkillId\": \"amzn1.ask.skill.12345678-1234-1234-1234-123456789012\"}, \"InputArtifacts\": [{\"Name\": \"SourceArtifact\"}], \"Name\": \"DeploySkill\", \"RunOrder\": 1}], \"Name\": \"Deploy\"}], \"ArtifactStore\": {\"EncryptionKey\": {\"Id\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKey01D58D69\", \"Arn\"]}, \"Type\": \"KMS\"}, \"Location\": {\"Ref\": \"PipelineArtifactsBucket22248F97\"}, \"Type\": \"S3\"}}, \"DependsOn\": [\"PipelineRoleDefaultPolicyC7A05455\", \"PipelineRoleD68726F7\"]}, \"PipelineSourceCodePipelineActionRoleC6F9E7F5\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}}, \"PipelineSourceCodePipelineActionRoleDefaultPolicy2D565925\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineBucketB967BD35\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineBucketB967BD35\", \"Arn\"]}, \"/key\"]]}]}, {\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucket22248F97\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucket22248F97\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"kms:Decrypt\", \"kms:Encrypt\", \"kms:GenerateDataKey*\", \"kms:ReEncrypt*\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKey01D58D69\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineSourceCodePipelineActionRoleDefaultPolicy2D565925\", \"Roles\": [{\"Ref\": \"PipelineSourceCodePipelineActionRoleC6F9E7F5\"}]}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as codepipeline from 'aws-cdk-lib/aws-codepipeline';\nimport * as s3 from 'aws-cdk-lib/aws-s3';\nimport { App, RemovalPolicy, SecretValue, Stack } from 'aws-cdk-lib';\nimport * as cpactions from 'aws-cdk-lib/aws-codepipeline-actions';\n\nconst app = new App();\n\nconst stack = new Stack(app, 'aws-cdk-codepipeline-alexa-deploy');\n\nconst bucket = new s3.Bucket(stack, 'PipelineBucket', {\n  versioned: true,\n  removalPolicy: RemovalPolicy.DESTROY,\n});\nconst sourceOutput = new codepipeline.Artifact('SourceArtifact');\nconst sourceAction = new cpactions.S3SourceAction({\n  actionName: 'Source',\n  output: sourceOutput,\n  bucket,\n  bucketKey: 'key',\n});\nconst sourceStage = {\n  stageName: 'Source',\n  actions: [sourceAction],\n};\n\nconst deployStage = {\n  stageName: 'Deploy',\n  actions: [\n    new cpactions.AlexaSkillDeployAction({\n      actionName: 'DeploySkill',\n      runOrder: 1,\n      input: sourceOutput,\n      clientId: 'clientId',\n      clientSecret: SecretValue.unsafePlainText('clientSecret'),\n      refreshToken: SecretValue.unsafePlainText('refreshToken'),\n      skillId: 'amzn1.ask.skill.12345678-1234-1234-1234-123456789012',\n    }),\n  ],\n};\n\nnew codepipeline.Pipeline(stack, 'Pipeline', {\n  stages: [\n    sourceStage,\n    deployStage,\n  ],\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"VPCB9E5F0B4\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-codepipeline-ecs-deploy/VPC\"}]}}, \"VPCPublicSubnet1SubnetB4246D30\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/17\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-codepipeline-ecs-deploy/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableFEE4B781\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-codepipeline-ecs-deploy/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableAssociation0B0896DC\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}}}, \"VPCPublicSubnet1DefaultRoute91CEF279\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet1EIP6AD938E8\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-codepipeline-ecs-deploy/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1NATGatewayE0556630\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet1EIP6AD938E8\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-codepipeline-ecs-deploy/VPC/PublicSubnet1\"}]}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\"]}, \"VPCPrivateSubnet1Subnet8BCA10E0\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/17\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-codepipeline-ecs-deploy/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableBE8A6027\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-codepipeline-ecs-deploy/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableAssociation347902D1\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}}}, \"VPCPrivateSubnet1DefaultRouteAE1D6490\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet1NATGatewayE0556630\"}}}, \"VPCIGWB7E252D3\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-codepipeline-ecs-deploy/VPC\"}]}}, \"VPCVPCGW99B986DC\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"InternetGatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}}, \"EcsCluster97242B84\": {\"Type\": \"AWS::ECS::Cluster\"}, \"EcrRepoBB83A592\": {\"Type\": \"AWS::ECR::Repository\", \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"TaskDefTaskRole1EDB4A67\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"ecs-tasks.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"TaskDef54694570\": {\"Type\": \"AWS::ECS::TaskDefinition\", \"Properties\": {\"ContainerDefinitions\": [{\"Essential\": true, \"Image\": \"amazon/amazon-ecs-sample\", \"Name\": \"Container\"}], \"Cpu\": \"256\", \"Family\": \"awscdkcodepipelineecsdeployTaskDefCF95BCAC\", \"Memory\": \"512\", \"NetworkMode\": \"awsvpc\", \"RequiresCompatibilities\": [\"FARGATE\"], \"TaskRoleArn\": {\"Fn::GetAtt\": [\"TaskDefTaskRole1EDB4A67\", \"Arn\"]}}}, \"FargateServiceAC2B3B85\": {\"Type\": \"AWS::ECS::Service\", \"Properties\": {\"Cluster\": {\"Ref\": \"EcsCluster97242B84\"}, \"DeploymentConfiguration\": {\"MaximumPercent\": 200, \"MinimumHealthyPercent\": 50}, \"EnableECSManagedTags\": false, \"LaunchType\": \"FARGATE\", \"NetworkConfiguration\": {\"AwsvpcConfiguration\": {\"AssignPublicIp\": \"DISABLED\", \"SecurityGroups\": [{\"Fn::GetAtt\": [\"FargateServiceSecurityGroup0A0E79CB\", \"GroupId\"]}], \"Subnets\": [{\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}]}}, \"TaskDefinition\": {\"Ref\": \"TaskDef54694570\"}}, \"DependsOn\": [\"TaskDefTaskRole1EDB4A67\"]}, \"FargateServiceSecurityGroup0A0E79CB\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"aws-cdk-codepipeline-ecs-deploy/FargateService/SecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}, \"DependsOn\": [\"TaskDefTaskRole1EDB4A67\"]}, \"MyBucketF68F3FF0\": {\"Type\": \"AWS::S3::Bucket\", \"Properties\": {\"VersioningConfiguration\": {\"Status\": \"Enabled\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"EcsProjectRoleE2F0E9D2\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codebuild.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"EcsProjectRoleDefaultPolicy1A8C91E0\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"logs:CreateLogGroup\", \"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"EcsProject54EFDCA6\"}, \":*\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"EcsProject54EFDCA6\"}]]}]}, {\"Action\": [\"ecr:BatchCheckLayerAvailability\", \"ecr:BatchGetImage\", \"ecr:CompleteLayerUpload\", \"ecr:GetDownloadUrlForLayer\", \"ecr:InitiateLayerUpload\", \"ecr:PutImage\", \"ecr:UploadLayerPart\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"EcrRepoBB83A592\", \"Arn\"]}}, {\"Action\": \"ecr:GetAuthorizationToken\", \"Effect\": \"Allow\", \"Resource\": \"*\"}, {\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"EcsProjectRoleDefaultPolicy1A8C91E0\", \"Roles\": [{\"Ref\": \"EcsProjectRoleE2F0E9D2\"}]}}, \"EcsProject54EFDCA6\": {\"Type\": \"AWS::CodeBuild::Project\", \"Properties\": {\"Artifacts\": {\"Type\": \"CODEPIPELINE\"}, \"Environment\": {\"ComputeType\": \"BUILD_GENERAL1_SMALL\", \"EnvironmentVariables\": [{\"Name\": \"REPOSITORY_URI\", \"Type\": \"PLAINTEXT\", \"Value\": {\"Fn::Join\": [\"\", [{\"Fn::Select\": [4, {\"Fn::Split\": [\":\", {\"Fn::GetAtt\": [\"EcrRepoBB83A592\", \"Arn\"]}]}]}, \".dkr.ecr.\", {\"Fn::Select\": [3, {\"Fn::Split\": [\":\", {\"Fn::GetAtt\": [\"EcrRepoBB83A592\", \"Arn\"]}]}]}, \".\", {\"Ref\": \"AWS::URLSuffix\"}, \"/\", {\"Ref\": \"EcrRepoBB83A592\"}]]}}], \"Image\": \"aws/codebuild/docker:17.09.0\", \"ImagePullCredentialsType\": \"CODEBUILD\", \"PrivilegedMode\": true, \"Type\": \"LINUX_CONTAINER\"}, \"ServiceRole\": {\"Fn::GetAtt\": [\"EcsProjectRoleE2F0E9D2\", \"Arn\"]}, \"Source\": {\"BuildSpec\": \"{\n  \\\"version\\\": \\\"0.2\\\",\n  \\\"phases\\\": {\n    \\\"pre_build\\\": {\n      \\\"commands\\\": \\\"$(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)\\\"\n    },\n    \\\"build\\\": {\n      \\\"commands\\\": \\\"docker build -t $REPOSITORY_URI:latest .\\\"\n    },\n    \\\"post_build\\\": {\n      \\\"commands\\\": [\n        \\\"docker push $REPOSITORY_URI:latest\\\",\n        \\\"printf '[{ \\\\\"name\\\\\": \\\\\"Container\\\\\", \\\\\"imageUri\\\\\": \\\\\"%s\\\\\" }]' $REPOSITORY_URI:latest > imagedefinitions.json\\\"\n      ]\n    }\n  },\n  \\\"artifacts\\\": {\n    \\\"files\\\": \\\"imagedefinitions.json\\\"\n  }\n}\", \"Type\": \"CODEPIPELINE\"}, \"Cache\": {\"Type\": \"NO_CACHE\"}, \"EncryptionKey\": \"alias/aws/s3\"}}, \"MyPipelineRoleC0D47CA4\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codepipeline.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"MyPipelineRoleDefaultPolicy34F09EFA\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"MyPipelineBuildCodeBuildCodePipelineActionRoleCAE538CA\", \"Arn\"]}, {\"Fn::GetAtt\": [\"MyPipelineDeployDeployActionCodePipelineActionRole854184EF\", \"Arn\"]}, {\"Fn::GetAtt\": [\"MyPipelineSourceCodePipelineActionRoleAA05D76F\", \"Arn\"]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyPipelineRoleDefaultPolicy34F09EFA\", \"Roles\": [{\"Ref\": \"MyPipelineRoleC0D47CA4\"}]}}, \"MyPipelineAED38ECF\": {\"Type\": \"AWS::CodePipeline::Pipeline\", \"Properties\": {\"RoleArn\": {\"Fn::GetAtt\": [\"MyPipelineRoleC0D47CA4\", \"Arn\"]}, \"Stages\": [{\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Source\", \"Owner\": \"AWS\", \"Provider\": \"S3\", \"Version\": \"1\"}, \"Configuration\": {\"S3Bucket\": {\"Ref\": \"MyBucketF68F3FF0\"}, \"S3ObjectKey\": \"path/to/Dockerfile\"}, \"Name\": \"Source\", \"OutputArtifacts\": [{\"Name\": \"SourceArtifact\"}], \"RoleArn\": {\"Fn::GetAtt\": [\"MyPipelineSourceCodePipelineActionRoleAA05D76F\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"Source\"}, {\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Build\", \"Owner\": \"AWS\", \"Provider\": \"CodeBuild\", \"Version\": \"1\"}, \"Configuration\": {\"ProjectName\": {\"Ref\": \"EcsProject54EFDCA6\"}}, \"InputArtifacts\": [{\"Name\": \"SourceArtifact\"}], \"Name\": \"CodeBuild\", \"OutputArtifacts\": [{\"Name\": \"Artifact_Build_CodeBuild\"}], \"RoleArn\": {\"Fn::GetAtt\": [\"MyPipelineBuildCodeBuildCodePipelineActionRoleCAE538CA\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"Build\"}, {\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Deploy\", \"Owner\": \"AWS\", \"Provider\": \"ECS\", \"Version\": \"1\"}, \"Configuration\": {\"ClusterName\": {\"Ref\": \"EcsCluster97242B84\"}, \"ServiceName\": {\"Fn::GetAtt\": [\"FargateServiceAC2B3B85\", \"Name\"]}, \"DeploymentTimeout\": 60}, \"InputArtifacts\": [{\"Name\": \"Artifact_Build_CodeBuild\"}], \"Name\": \"DeployAction\", \"RoleArn\": {\"Fn::GetAtt\": [\"MyPipelineDeployDeployActionCodePipelineActionRole854184EF\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"Deploy\"}], \"ArtifactStore\": {\"Location\": {\"Ref\": \"MyBucketF68F3FF0\"}, \"Type\": \"S3\"}}, \"DependsOn\": [\"MyPipelineRoleDefaultPolicy34F09EFA\", \"MyPipelineRoleC0D47CA4\"]}, \"MyPipelineSourceCodePipelineActionRoleAA05D76F\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}}, \"MyPipelineSourceCodePipelineActionRoleDefaultPolicy10C831A9\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, \"/path/to/Dockerfile\"]]}]}, {\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyPipelineSourceCodePipelineActionRoleDefaultPolicy10C831A9\", \"Roles\": [{\"Ref\": \"MyPipelineSourceCodePipelineActionRoleAA05D76F\"}]}}, \"MyPipelineBuildCodeBuildCodePipelineActionRoleCAE538CA\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}}, \"MyPipelineBuildCodeBuildCodePipelineActionRoleDefaultPolicyD9654D9B\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"codebuild:BatchGetBuilds\", \"codebuild:StartBuild\", \"codebuild:StopBuild\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"EcsProject54EFDCA6\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyPipelineBuildCodeBuildCodePipelineActionRoleDefaultPolicyD9654D9B\", \"Roles\": [{\"Ref\": \"MyPipelineBuildCodeBuildCodePipelineActionRoleCAE538CA\"}]}}, \"MyPipelineDeployDeployActionCodePipelineActionRole854184EF\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}}, \"MyPipelineDeployDeployActionCodePipelineActionRoleDefaultPolicy8B712933\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"ecs:DescribeServices\", \"ecs:DescribeTaskDefinition\", \"ecs:DescribeTasks\", \"ecs:ListTasks\", \"ecs:RegisterTaskDefinition\", \"ecs:UpdateService\"], \"Effect\": \"Allow\", \"Resource\": \"*\"}, {\"Action\": \"iam:PassRole\", \"Condition\": {\"StringEqualsIfExists\": {\"iam:PassedToService\": [\"ec2.amazonaws.com\", \"ecs-tasks.amazonaws.com\"]}}, \"Effect\": \"Allow\", \"Resource\": \"*\"}, {\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyPipelineDeployDeployActionCodePipelineActionRoleDefaultPolicy8B712933\", \"Roles\": [{\"Ref\": \"MyPipelineDeployDeployActionCodePipelineActionRole854184EF\"}]}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as codebuild from 'aws-cdk-lib/aws-codebuild';\nimport * as codepipeline from 'aws-cdk-lib/aws-codepipeline';\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as ecr from 'aws-cdk-lib/aws-ecr';\nimport * as ecs from 'aws-cdk-lib/aws-ecs';\nimport * as s3 from 'aws-cdk-lib/aws-s3';\nimport * as cdk from 'aws-cdk-lib';\nimport * as cpactions from 'aws-cdk-lib/aws-codepipeline-actions';\n\n/* eslint-disable quote-props */\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'aws-cdk-codepipeline-ecs-deploy');\n\nconst vpc = new ec2.Vpc(stack, 'VPC', {\n  restrictDefaultSecurityGroup: false,\n  maxAzs: 1,\n});\nconst cluster = new ecs.Cluster(stack, 'EcsCluster', {\n  vpc,\n});\nconst repository = new ecr.Repository(stack, 'EcrRepo');\nconst taskDefinition = new ecs.FargateTaskDefinition(stack, 'TaskDef');\nconst containerName = 'Container';\ntaskDefinition.addContainer(containerName, {\n  image: ecs.ContainerImage.fromRegistry('amazon/amazon-ecs-sample'),\n});\nconst service = new ecs.FargateService(stack, 'FargateService', {\n  cluster,\n  taskDefinition,\n});\n\nconst bucket = new s3.Bucket(stack, 'MyBucket', {\n  versioned: true,\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\nconst sourceOutput = new codepipeline.Artifact('SourceArtifact');\nconst sourceAction = new cpactions.S3SourceAction({\n  actionName: 'Source',\n  output: sourceOutput,\n  bucket,\n  bucketKey: 'path/to/Dockerfile',\n});\n\nconst project = new codebuild.PipelineProject(stack, 'EcsProject', {\n  environment: {\n    buildImage: codebuild.LinuxBuildImage.UBUNTU_14_04_DOCKER_17_09_0,\n    privileged: true,\n  },\n  buildSpec: codebuild.BuildSpec.fromObject({\n    version: '0.2',\n    phases: {\n      pre_build: {\n        commands: '$(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)',\n      },\n      build: {\n        commands: 'docker build -t $REPOSITORY_URI:latest .',\n      },\n      post_build: {\n        commands: [\n          'docker push $REPOSITORY_URI:latest',\n          `printf '[{ \"name\": \"${containerName}\", \"imageUri\": \"%s\" }]' $REPOSITORY_URI:latest > imagedefinitions.json`,\n        ],\n      },\n    },\n    artifacts: {\n      files: 'imagedefinitions.json',\n    },\n  }),\n  environmentVariables: {\n    'REPOSITORY_URI': {\n      value: repository.repositoryUri,\n    },\n  },\n  grantReportGroupPermissions: false,\n});\n// needed for `docker push`\nrepository.grantPullPush(project);\nconst buildOutput = new codepipeline.Artifact();\nconst buildAction = new cpactions.CodeBuildAction({\n  actionName: 'CodeBuild',\n  project,\n  input: sourceOutput,\n  outputs: [buildOutput],\n});\n\nnew codepipeline.Pipeline(stack, 'MyPipeline', {\n  artifactBucket: bucket,\n  stages: [\n    {\n      stageName: 'Source',\n      actions: [sourceAction],\n    },\n    {\n      stageName: 'Build',\n      actions: [buildAction],\n    },\n    {\n      stageName: 'Deploy',\n      actions: [\n        new cpactions.EcsDeployAction({\n          actionName: 'DeployAction',\n          input: buildOutput,\n          service,\n          deploymentTimeout: cdk.Duration.minutes(60),\n        }),\n      ],\n    },\n  ],\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyBucketF68F3FF0\": {\"Type\": \"AWS::S3::Bucket\", \"Properties\": {\"VersioningConfiguration\": {\"Status\": \"Enabled\"}}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"PipelineRoleD68726F7\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codepipeline.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"PipelineRoleDefaultPolicyC7A05455\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"PipelineSourceS3CodePipelineActionRole3CAFD08F\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineRoleDefaultPolicyC7A05455\", \"Roles\": [{\"Ref\": \"PipelineRoleD68726F7\"}]}}, \"PipelineC660917D\": {\"Type\": \"AWS::CodePipeline::Pipeline\", \"Properties\": {\"RoleArn\": {\"Fn::GetAtt\": [\"PipelineRoleD68726F7\", \"Arn\"]}, \"Stages\": [{\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Source\", \"Owner\": \"AWS\", \"Provider\": \"S3\", \"Version\": \"1\"}, \"Configuration\": {\"S3Bucket\": {\"Ref\": \"MyBucketF68F3FF0\"}, \"S3ObjectKey\": \"some/path\"}, \"Name\": \"S3\", \"OutputArtifacts\": [{\"Name\": \"Artifact_Source_S3\"}], \"RoleArn\": {\"Fn::GetAtt\": [\"PipelineSourceS3CodePipelineActionRole3CAFD08F\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"Source\"}, {\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Build\", \"Owner\": \"Custom\", \"Provider\": \"JenkinsProvider\", \"Version\": \"2\"}, \"Configuration\": {\"ProjectName\": \"JenkinsProject1\"}, \"InputArtifacts\": [{\"Name\": \"Artifact_Source_S3\"}], \"Name\": \"JenkinsBuild\", \"OutputArtifacts\": [{\"Name\": \"Artifact_Build_JenkinsBuild\"}], \"RunOrder\": 1}, {\"ActionTypeId\": {\"Category\": \"Test\", \"Owner\": \"Custom\", \"Provider\": \"JenkinsProvider\", \"Version\": \"2\"}, \"Configuration\": {\"ProjectName\": \"JenkinsProject2\"}, \"InputArtifacts\": [{\"Name\": \"Artifact_Source_S3\"}], \"Name\": \"JenkinsTest\", \"RunOrder\": 1}, {\"ActionTypeId\": {\"Category\": \"Test\", \"Owner\": \"Custom\", \"Provider\": \"JenkinsProvider\", \"Version\": \"2\"}, \"Configuration\": {\"ProjectName\": \"JenkinsProject3\"}, \"InputArtifacts\": [{\"Name\": \"Artifact_Source_S3\"}], \"Name\": \"JenkinsTest2\", \"RunOrder\": 1}], \"Name\": \"Build\"}], \"ArtifactStore\": {\"Location\": {\"Ref\": \"MyBucketF68F3FF0\"}, \"Type\": \"S3\"}}, \"DependsOn\": [\"PipelineRoleDefaultPolicyC7A05455\", \"PipelineRoleD68726F7\"]}, \"PipelineSourceS3CodePipelineActionRole3CAFD08F\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}}, \"PipelineSourceS3CodePipelineActionRoleDefaultPolicy8B9DCBCF\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, \"/some/path\"]]}]}, {\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineSourceS3CodePipelineActionRoleDefaultPolicy8B9DCBCF\", \"Roles\": [{\"Ref\": \"PipelineSourceS3CodePipelineActionRole3CAFD08F\"}]}}, \"JenkinsProviderJenkinsBuildProviderResourceD9231CAC\": {\"Type\": \"AWS::CodePipeline::CustomActionType\", \"Properties\": {\"Category\": \"Build\", \"InputArtifactDetails\": {\"MaximumCount\": 5, \"MinimumCount\": 0}, \"OutputArtifactDetails\": {\"MaximumCount\": 5, \"MinimumCount\": 0}, \"Provider\": \"JenkinsProvider\", \"Version\": \"2\", \"ConfigurationProperties\": [{\"Key\": true, \"Name\": \"ProjectName\", \"Queryable\": true, \"Required\": true, \"Secret\": false}], \"Settings\": {\"EntityUrlTemplate\": \"http://myjenkins.com:8080/job/{Config:ProjectName}\", \"ExecutionUrlTemplate\": \"http://myjenkins.com:8080/job/{Config:ProjectName}/{ExternalExecutionId}\"}}}, \"JenkinsProviderJenkinsTestProviderResourceF0CF8F0E\": {\"Type\": \"AWS::CodePipeline::CustomActionType\", \"Properties\": {\"Category\": \"Test\", \"InputArtifactDetails\": {\"MaximumCount\": 5, \"MinimumCount\": 0}, \"OutputArtifactDetails\": {\"MaximumCount\": 5, \"MinimumCount\": 0}, \"Provider\": \"JenkinsProvider\", \"Version\": \"2\", \"ConfigurationProperties\": [{\"Key\": true, \"Name\": \"ProjectName\", \"Queryable\": true, \"Required\": true, \"Secret\": false}], \"Settings\": {\"EntityUrlTemplate\": \"http://myjenkins.com:8080/job/{Config:ProjectName}\", \"ExecutionUrlTemplate\": \"http://myjenkins.com:8080/job/{Config:ProjectName}/{ExternalExecutionId}\"}}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as codepipeline from 'aws-cdk-lib/aws-codepipeline';\nimport * as s3 from 'aws-cdk-lib/aws-s3';\nimport * as cdk from 'aws-cdk-lib';\nimport * as cpactions from 'aws-cdk-lib/aws-codepipeline-actions';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'aws-cdk-codepipeline-jenkins');\n\nconst bucket = new s3.Bucket(stack, 'MyBucket', {\n  versioned: true,\n});\n\nconst pipeline = new codepipeline.Pipeline(stack, 'Pipeline', {\n  artifactBucket: bucket,\n});\n\nconst sourceOutput = new codepipeline.Artifact();\nconst sourceAction = new cpactions.S3SourceAction({\n  actionName: 'S3',\n  bucketKey: 'some/path',\n  bucket,\n  output: sourceOutput,\n});\npipeline.addStage({\n  stageName: 'Source',\n  actions: [sourceAction],\n});\n\nconst jenkinsProvider = new cpactions.JenkinsProvider(stack, 'JenkinsProvider', {\n  providerName: 'JenkinsProvider',\n  serverUrl: 'http://myjenkins.com:8080',\n  version: '2',\n});\n\npipeline.addStage({\n  stageName: 'Build',\n  actions: [\n    new cpactions.JenkinsAction({\n      actionName: 'JenkinsBuild',\n      jenkinsProvider,\n      type: cpactions.JenkinsActionType.BUILD,\n      projectName: 'JenkinsProject1',\n      inputs: [sourceOutput],\n      outputs: [new codepipeline.Artifact()],\n    }),\n    new cpactions.JenkinsAction({\n      actionName: 'JenkinsTest',\n      jenkinsProvider,\n      type: cpactions.JenkinsActionType.TEST,\n      projectName: 'JenkinsProject2',\n      inputs: [sourceOutput],\n    }),\n    new cpactions.JenkinsAction({\n      actionName: 'JenkinsTest2',\n      jenkinsProvider,\n      type: cpactions.JenkinsActionType.TEST,\n      projectName: 'JenkinsProject3',\n      inputs: [sourceOutput],\n    }),\n  ],\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"CodeDeployPipelineIntegTest9F618D61\": {\"Type\": \"AWS::S3::Bucket\", \"Properties\": {\"VersioningConfiguration\": {\"Status\": \"Enabled\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"PipelineRoleD68726F7\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codepipeline.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"PipelineRoleDefaultPolicyC7A05455\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"CodeDeployPipelineIntegTest9F618D61\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"CodeDeployPipelineIntegTest9F618D61\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineDeployCodeDeployCodePipelineActionRoleFA7F8EEF\", \"Arn\"]}, {\"Fn::GetAtt\": [\"PipelineSourceS3SourceCodePipelineActionRole8DE11A40\", \"Arn\"]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineRoleDefaultPolicyC7A05455\", \"Roles\": [{\"Ref\": \"PipelineRoleD68726F7\"}]}}, \"PipelineC660917D\": {\"Type\": \"AWS::CodePipeline::Pipeline\", \"Properties\": {\"RoleArn\": {\"Fn::GetAtt\": [\"PipelineRoleD68726F7\", \"Arn\"]}, \"Stages\": [{\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Source\", \"Owner\": \"AWS\", \"Provider\": \"S3\", \"Version\": \"1\"}, \"Configuration\": {\"S3Bucket\": {\"Ref\": \"CodeDeployPipelineIntegTest9F618D61\"}, \"S3ObjectKey\": \"application.zip\"}, \"Name\": \"S3Source\", \"OutputArtifacts\": [{\"Name\": \"SourceOutput\"}], \"RoleArn\": {\"Fn::GetAtt\": [\"PipelineSourceS3SourceCodePipelineActionRole8DE11A40\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"Source\"}, {\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Deploy\", \"Owner\": \"AWS\", \"Provider\": \"CodeDeployToECS\", \"Version\": \"1\"}, \"Configuration\": {\"ApplicationName\": \"IntegTestDeployApp\", \"DeploymentGroupName\": \"IntegTestDeploymentGroup\", \"TaskDefinitionTemplateArtifact\": \"SourceOutput\", \"TaskDefinitionTemplatePath\": \"task-definition-test.json\", \"AppSpecTemplateArtifact\": \"SourceOutput\", \"AppSpecTemplatePath\": \"appspec-test.json\", \"Image1ArtifactName\": \"SourceOutput\", \"Image1ContainerName\": \"PLACEHOLDER\"}, \"InputArtifacts\": [{\"Name\": \"SourceOutput\"}], \"Name\": \"CodeDeploy\", \"RoleArn\": {\"Fn::GetAtt\": [\"PipelineDeployCodeDeployCodePipelineActionRoleFA7F8EEF\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"Deploy\"}], \"ArtifactStore\": {\"Location\": {\"Ref\": \"CodeDeployPipelineIntegTest9F618D61\"}, \"Type\": \"S3\"}}, \"DependsOn\": [\"PipelineRoleDefaultPolicyC7A05455\", \"PipelineRoleD68726F7\"]}, \"PipelineSourceS3SourceCodePipelineActionRole8DE11A40\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}}, \"PipelineSourceS3SourceCodePipelineActionRoleDefaultPolicy352A3912\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"CodeDeployPipelineIntegTest9F618D61\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"CodeDeployPipelineIntegTest9F618D61\", \"Arn\"]}, \"/application.zip\"]]}]}, {\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"CodeDeployPipelineIntegTest9F618D61\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"CodeDeployPipelineIntegTest9F618D61\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineSourceS3SourceCodePipelineActionRoleDefaultPolicy352A3912\", \"Roles\": [{\"Ref\": \"PipelineSourceS3SourceCodePipelineActionRole8DE11A40\"}]}}, \"PipelineDeployCodeDeployCodePipelineActionRoleFA7F8EEF\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}}, \"PipelineDeployCodeDeployCodePipelineActionRoleDefaultPolicy7B34E673\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"codedeploy:GetApplication\", \"codedeploy:GetApplicationRevision\", \"codedeploy:RegisterApplicationRevision\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":codedeploy:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":application:IntegTestDeployApp\"]]}}, {\"Action\": [\"codedeploy:CreateDeployment\", \"codedeploy:GetDeployment\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":codedeploy:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":deploymentgroup:IntegTestDeployApp/IntegTestDeploymentGroup\"]]}}, {\"Action\": \"codedeploy:GetDeploymentConfig\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":codedeploy:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":deploymentconfig:CodeDeployDefault.ECSAllAtOnce\"]]}}, {\"Action\": \"ecs:RegisterTaskDefinition\", \"Effect\": \"Allow\", \"Resource\": \"*\"}, {\"Action\": \"iam:PassRole\", \"Condition\": {\"StringEqualsIfExists\": {\"iam:PassedToService\": [\"ecs-tasks.amazonaws.com\"]}}, \"Effect\": \"Allow\", \"Resource\": \"*\"}, {\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"CodeDeployPipelineIntegTest9F618D61\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"CodeDeployPipelineIntegTest9F618D61\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineDeployCodeDeployCodePipelineActionRoleDefaultPolicy7B34E673\", \"Roles\": [{\"Ref\": \"PipelineDeployCodeDeployCodePipelineActionRoleFA7F8EEF\"}]}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as codedeploy from 'aws-cdk-lib/aws-codedeploy';\nimport * as codepipeline from 'aws-cdk-lib/aws-codepipeline';\nimport * as s3 from 'aws-cdk-lib/aws-s3';\nimport * as cdk from 'aws-cdk-lib';\nimport * as cpactions from 'aws-cdk-lib/aws-codepipeline-actions';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'aws-cdk-codepipeline-codedeploy-ecs');\n\nconst application = codedeploy.EcsApplication.fromEcsApplicationName(stack, 'CodeDeployApplication', 'IntegTestDeployApp');\n\nconst deploymentGroup = codedeploy.EcsDeploymentGroup.fromEcsDeploymentGroupAttributes(stack, 'CodeDeployGroup', {\n  application,\n  deploymentGroupName: 'IntegTestDeploymentGroup',\n});\n\nconst bucket = new s3.Bucket(stack, 'CodeDeployPipelineIntegTest', {\n  versioned: true,\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\n\nconst pipeline = new codepipeline.Pipeline(stack, 'Pipeline', {\n  artifactBucket: bucket,\n});\n\nconst sourceStage = pipeline.addStage({ stageName: 'Source' });\nconst sourceOutput = new codepipeline.Artifact('SourceOutput');\nconst sourceAction = new cpactions.S3SourceAction({\n  actionName: 'S3Source',\n  bucketKey: 'application.zip',\n  output: sourceOutput,\n  bucket,\n});\nsourceStage.addAction(sourceAction);\n\nconst deployStage = pipeline.addStage({ stageName: 'Deploy' });\ndeployStage.addAction(new cpactions.CodeDeployEcsDeployAction({\n  actionName: 'CodeDeploy',\n  deploymentGroup,\n  taskDefinitionTemplateFile: new codepipeline.ArtifactPath(sourceOutput, 'task-definition-test.json'),\n  appSpecTemplateFile: new codepipeline.ArtifactPath(sourceOutput, 'appspec-test.json'),\n  containerImageInputs: [\n    {\n      input: sourceOutput,\n      taskDefinitionPlaceholder: 'PLACEHOLDER',\n    },\n  ],\n}));\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"SimpleStateMachineRole0CBC135A\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"states.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"SimpleStateMachineE8E2CF40\": {\"Type\": \"AWS::StepFunctions::StateMachine\", \"Properties\": {\"RoleArn\": {\"Fn::GetAtt\": [\"SimpleStateMachineRole0CBC135A\", \"Arn\"]}, \"DefinitionString\": \"{\\\"StartAt\\\":\\\"StartState\\\",\\\"States\\\":{\\\"StartState\\\":{\\\"Type\\\":\\\"Pass\\\",\\\"End\\\":true}}}\"}, \"DependsOn\": [\"SimpleStateMachineRole0CBC135A\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"MyPipelineArtifactsBucketEncryptionKey8BF0A7F3\": {\"Type\": \"AWS::KMS::Key\", \"Properties\": {\"KeyPolicy\": {\"Statement\": [{\"Action\": \"kms:*\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}, \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"MyPipelineArtifactsBucketEncryptionKeyAlias9D4F8C59\": {\"Type\": \"AWS::KMS::Alias\", \"Properties\": {\"AliasName\": \"alias/codepipeline-aws-cdk-codepipeline-stepfunctions-mypipeline-ce88aa28\", \"TargetKeyId\": {\"Fn::GetAtt\": [\"MyPipelineArtifactsBucketEncryptionKey8BF0A7F3\", \"Arn\"]}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"MyPipelineArtifactsBucket727923DD\": {\"Type\": \"AWS::S3::Bucket\", \"Properties\": {\"BucketEncryption\": {\"ServerSideEncryptionConfiguration\": [{\"ServerSideEncryptionByDefault\": {\"KMSMasterKeyID\": {\"Fn::GetAtt\": [\"MyPipelineArtifactsBucketEncryptionKey8BF0A7F3\", \"Arn\"]}, \"SSEAlgorithm\": \"aws:kms\"}}]}, \"PublicAccessBlockConfiguration\": {\"BlockPublicAcls\": true, \"BlockPublicPolicy\": true, \"IgnorePublicAcls\": true, \"RestrictPublicBuckets\": true}}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"MyPipelineArtifactsBucketPolicyDFDA675B\": {\"Type\": \"AWS::S3::BucketPolicy\", \"Properties\": {\"Bucket\": {\"Ref\": \"MyPipelineArtifactsBucket727923DD\"}, \"PolicyDocument\": {\"Statement\": [{\"Action\": \"s3:*\", \"Condition\": {\"Bool\": {\"aws:SecureTransport\": \"false\"}}, \"Effect\": \"Deny\", \"Principal\": {\"AWS\": \"*\"}, \"Resource\": [{\"Fn::GetAtt\": [\"MyPipelineArtifactsBucket727923DD\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"MyPipelineArtifactsBucket727923DD\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}}}, \"MyPipelineRoleC0D47CA4\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codepipeline.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"MyPipelineRoleDefaultPolicy34F09EFA\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"MyPipelineArtifactsBucket727923DD\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"MyPipelineArtifactsBucket727923DD\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"kms:Decrypt\", \"kms:DescribeKey\", \"kms:Encrypt\", \"kms:GenerateDataKey*\", \"kms:ReEncrypt*\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"MyPipelineArtifactsBucketEncryptionKey8BF0A7F3\", \"Arn\"]}}, {\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"MyPipelineInvokeCodePipelineActionRole006B5BAD\", \"Arn\"]}, {\"Fn::GetAtt\": [\"MyPipelineSourceCodePipelineActionRoleAA05D76F\", \"Arn\"]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyPipelineRoleDefaultPolicy34F09EFA\", \"Roles\": [{\"Ref\": \"MyPipelineRoleC0D47CA4\"}]}}, \"MyPipelineAED38ECF\": {\"Type\": \"AWS::CodePipeline::Pipeline\", \"Properties\": {\"RoleArn\": {\"Fn::GetAtt\": [\"MyPipelineRoleC0D47CA4\", \"Arn\"]}, \"Stages\": [{\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Source\", \"Owner\": \"AWS\", \"Provider\": \"S3\", \"Version\": \"1\"}, \"Configuration\": {\"S3Bucket\": {\"Ref\": \"MyBucketF68F3FF0\"}, \"S3ObjectKey\": \"some/path/to\", \"PollForSourceChanges\": true}, \"Name\": \"Source\", \"OutputArtifacts\": [{\"Name\": \"Artifact_Source_Source\"}], \"RoleArn\": {\"Fn::GetAtt\": [\"MyPipelineSourceCodePipelineActionRoleAA05D76F\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"Source\"}, {\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Invoke\", \"Owner\": \"AWS\", \"Provider\": \"StepFunctions\", \"Version\": \"1\"}, \"Configuration\": {\"StateMachineArn\": {\"Ref\": \"SimpleStateMachineE8E2CF40\"}, \"Input\": \"{\\\"IsHelloWorldExample\\\":true}\", \"InputType\": \"Literal\"}, \"Name\": \"Invoke\", \"RoleArn\": {\"Fn::GetAtt\": [\"MyPipelineInvokeCodePipelineActionRole006B5BAD\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"Invoke\"}], \"ArtifactStore\": {\"EncryptionKey\": {\"Id\": {\"Fn::GetAtt\": [\"MyPipelineArtifactsBucketEncryptionKey8BF0A7F3\", \"Arn\"]}, \"Type\": \"KMS\"}, \"Location\": {\"Ref\": \"MyPipelineArtifactsBucket727923DD\"}, \"Type\": \"S3\"}}, \"DependsOn\": [\"MyPipelineRoleDefaultPolicy34F09EFA\", \"MyPipelineRoleC0D47CA4\"]}, \"MyPipelineSourceCodePipelineActionRoleAA05D76F\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}}, \"MyPipelineSourceCodePipelineActionRoleDefaultPolicy10C831A9\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, \"/some/path/to\"]]}]}, {\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"MyPipelineArtifactsBucket727923DD\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"MyPipelineArtifactsBucket727923DD\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"kms:Decrypt\", \"kms:Encrypt\", \"kms:GenerateDataKey*\", \"kms:ReEncrypt*\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"MyPipelineArtifactsBucketEncryptionKey8BF0A7F3\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyPipelineSourceCodePipelineActionRoleDefaultPolicy10C831A9\", \"Roles\": [{\"Ref\": \"MyPipelineSourceCodePipelineActionRoleAA05D76F\"}]}}, \"MyPipelineInvokeCodePipelineActionRole006B5BAD\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}}, \"MyPipelineInvokeCodePipelineActionRoleDefaultPolicy07A602B1\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"states:DescribeStateMachine\", \"states:StartExecution\"], \"Effect\": \"Allow\", \"Resource\": {\"Ref\": \"SimpleStateMachineE8E2CF40\"}}, {\"Action\": \"states:DescribeExecution\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Fn::Select\": [1, {\"Fn::Split\": [\":\", {\"Ref\": \"SimpleStateMachineE8E2CF40\"}]}]}, \":states:\", {\"Fn::Select\": [3, {\"Fn::Split\": [\":\", {\"Ref\": \"SimpleStateMachineE8E2CF40\"}]}]}, \":\", {\"Fn::Select\": [4, {\"Fn::Split\": [\":\", {\"Ref\": \"SimpleStateMachineE8E2CF40\"}]}]}, \":execution:\", {\"Fn::Select\": [6, {\"Fn::Split\": [\":\", {\"Ref\": \"SimpleStateMachineE8E2CF40\"}]}]}, \":*\"]]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyPipelineInvokeCodePipelineActionRoleDefaultPolicy07A602B1\", \"Roles\": [{\"Ref\": \"MyPipelineInvokeCodePipelineActionRole006B5BAD\"}]}}, \"MyBucketF68F3FF0\": {\"Type\": \"AWS::S3::Bucket\", \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as codepipeline from 'aws-cdk-lib/aws-codepipeline';\nimport * as s3 from 'aws-cdk-lib/aws-s3';\nimport * as stepfunctions from 'aws-cdk-lib/aws-stepfunctions';\nimport * as cdk from 'aws-cdk-lib';\nimport * as cpactions from 'aws-cdk-lib/aws-codepipeline-actions';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'aws-cdk-codepipeline-stepfunctions');\n\nconst sourceOutput = new codepipeline.Artifact();\n\nconst startState = new stepfunctions.Pass(stack, 'StartState');\nconst simpleStateMachine = new stepfunctions.StateMachine(stack, 'SimpleStateMachine', {\n  definition: startState,\n});\n\nconst pipeline = new codepipeline.Pipeline(stack, 'MyPipeline');\npipeline.addStage({\n  stageName: 'Source',\n  actions: [\n    new cpactions.S3SourceAction({\n      actionName: 'Source',\n      bucket: new s3.Bucket(stack, 'MyBucket'),\n      bucketKey: 'some/path/to',\n      output: sourceOutput,\n      trigger: cpactions.S3Trigger.POLL,\n    }),\n  ],\n});\npipeline.addStage({\n  stageName: 'Invoke',\n  actions: [\n    new cpactions.StepFunctionInvokeAction({\n      actionName: 'Invoke',\n      stateMachine: simpleStateMachine,\n      stateMachineInput: cpactions.StateMachineInput.literal({ IsHelloWorldExample: true }),\n    }),\n  ],\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyRepoF4F48043\": {\"Type\": \"AWS::CodeCommit::Repository\", \"Properties\": {\"RepositoryName\": \"MyIntegTestTempRepo\"}}, \"MyRepoawscdkcodepipelinecodebuildmultipleinputsoutputsPipeline314D3A85EventRule9F75D675\": {\"Type\": \"AWS::Events::Rule\", \"Properties\": {\"EventPattern\": {\"source\": [\"aws.codecommit\"], \"resources\": [{\"Fn::GetAtt\": [\"MyRepoF4F48043\", \"Arn\"]}], \"detail-type\": [\"CodeCommit Repository State Change\"], \"detail\": {\"event\": [\"referenceCreated\", \"referenceUpdated\"], \"referenceName\": [\"master\"]}}, \"State\": \"ENABLED\", \"Targets\": [{\"Arn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":codepipeline:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":\", {\"Ref\": \"PipelineC660917D\"}]]}, \"Id\": \"Target0\", \"RoleArn\": {\"Fn::GetAtt\": [\"PipelineEventsRole46BEEA7C\", \"Arn\"]}}]}}, \"MyBucketF68F3FF0\": {\"Type\": \"AWS::S3::Bucket\", \"Properties\": {\"VersioningConfiguration\": {\"Status\": \"Enabled\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"PipelineRoleD68726F7\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codepipeline.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"PipelineRoleDefaultPolicyC7A05455\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"PipelineRoleD68726F7\", \"Arn\"]}}, {\"Action\": [\"codecommit:CancelUploadArchive\", \"codecommit:GetBranch\", \"codecommit:GetCommit\", \"codecommit:GetUploadArchiveStatus\", \"codecommit:UploadArchive\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"MyRepoF4F48043\", \"Arn\"]}}, {\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, \"/some/path\"]]}]}, {\"Action\": [\"codebuild:BatchGetBuilds\", \"codebuild:StartBuild\", \"codebuild:StopBuild\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"MyBuildProject30DB9D6E\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineRoleDefaultPolicyC7A05455\", \"Roles\": [{\"Ref\": \"PipelineRoleD68726F7\"}]}}, \"PipelineC660917D\": {\"Type\": \"AWS::CodePipeline::Pipeline\", \"Properties\": {\"RoleArn\": {\"Fn::GetAtt\": [\"PipelineRoleD68726F7\", \"Arn\"]}, \"Stages\": [{\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Source\", \"Owner\": \"AWS\", \"Provider\": \"CodeCommit\", \"Version\": \"1\"}, \"Configuration\": {\"RepositoryName\": {\"Fn::GetAtt\": [\"MyRepoF4F48043\", \"Name\"]}, \"BranchName\": \"master\", \"PollForSourceChanges\": false}, \"Name\": \"Source1\", \"OutputArtifacts\": [{\"Name\": \"Artifact_Source_Source1\"}], \"RoleArn\": {\"Fn::GetAtt\": [\"PipelineRoleD68726F7\", \"Arn\"]}, \"RunOrder\": 1}, {\"ActionTypeId\": {\"Category\": \"Source\", \"Owner\": \"AWS\", \"Provider\": \"S3\", \"Version\": \"1\"}, \"Configuration\": {\"S3Bucket\": {\"Ref\": \"MyBucketF68F3FF0\"}, \"S3ObjectKey\": \"some/path\"}, \"Name\": \"Source2\", \"OutputArtifacts\": [{\"Name\": \"Artifact_Source_Source2\"}], \"RoleArn\": {\"Fn::GetAtt\": [\"PipelineRoleD68726F7\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"Source\"}, {\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Build\", \"Owner\": \"AWS\", \"Provider\": \"CodeBuild\", \"Version\": \"1\"}, \"Configuration\": {\"ProjectName\": {\"Ref\": \"MyBuildProject30DB9D6E\"}, \"PrimarySource\": \"Artifact_Source_Source1\"}, \"InputArtifacts\": [{\"Name\": \"Artifact_Source_Source1\"}, {\"Name\": \"Artifact_Source_Source2\"}], \"Name\": \"Build1\", \"OutputArtifacts\": [{\"Name\": \"Artifact_Build_Build1_1\"}, {\"Name\": \"Artifact_Build_Build1_2\"}], \"RoleArn\": {\"Fn::GetAtt\": [\"PipelineRoleD68726F7\", \"Arn\"]}, \"RunOrder\": 1}, {\"ActionTypeId\": {\"Category\": \"Test\", \"Owner\": \"AWS\", \"Provider\": \"CodeBuild\", \"Version\": \"1\"}, \"Configuration\": {\"ProjectName\": {\"Ref\": \"MyBuildProject30DB9D6E\"}, \"PrimarySource\": \"Artifact_Source_Source2\"}, \"InputArtifacts\": [{\"Name\": \"Artifact_Source_Source2\"}, {\"Name\": \"Artifact_Source_Source1\"}], \"Name\": \"Build2\", \"OutputArtifacts\": [{\"Name\": \"CustomOutput2\"}], \"RoleArn\": {\"Fn::GetAtt\": [\"PipelineRoleD68726F7\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"Build\"}], \"ArtifactStore\": {\"Location\": {\"Ref\": \"MyBucketF68F3FF0\"}, \"Type\": \"S3\"}}, \"DependsOn\": [\"PipelineRoleDefaultPolicyC7A05455\", \"PipelineRoleD68726F7\"]}, \"PipelineEventsRole46BEEA7C\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"events.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"PipelineEventsRoleDefaultPolicyFF4FCCE0\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"codepipeline:StartPipelineExecution\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":codepipeline:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":\", {\"Ref\": \"PipelineC660917D\"}]]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineEventsRoleDefaultPolicyFF4FCCE0\", \"Roles\": [{\"Ref\": \"PipelineEventsRole46BEEA7C\"}]}}, \"MyBuildProjectRole6B7E2258\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codebuild.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"MyBuildProjectRoleDefaultPolicy5604AA87\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"logs:CreateLogGroup\", \"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"MyBuildProject30DB9D6E\"}, \":*\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"MyBuildProject30DB9D6E\"}]]}]}, {\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyBuildProjectRoleDefaultPolicy5604AA87\", \"Roles\": [{\"Ref\": \"MyBuildProjectRole6B7E2258\"}]}}, \"MyBuildProject30DB9D6E\": {\"Type\": \"AWS::CodeBuild::Project\", \"Properties\": {\"Artifacts\": {\"Type\": \"CODEPIPELINE\"}, \"Environment\": {\"ComputeType\": \"BUILD_GENERAL1_SMALL\", \"Image\": \"aws/codebuild/standard:1.0\", \"ImagePullCredentialsType\": \"CODEBUILD\", \"PrivilegedMode\": false, \"Type\": \"LINUX_CONTAINER\"}, \"ServiceRole\": {\"Fn::GetAtt\": [\"MyBuildProjectRole6B7E2258\", \"Arn\"]}, \"Source\": {\"Type\": \"CODEPIPELINE\"}, \"Cache\": {\"Type\": \"NO_CACHE\"}, \"EncryptionKey\": \"alias/aws/s3\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as codebuild from 'aws-cdk-lib/aws-codebuild';\nimport * as codecommit from 'aws-cdk-lib/aws-codecommit';\nimport * as codepipeline from 'aws-cdk-lib/aws-codepipeline';\nimport * as s3 from 'aws-cdk-lib/aws-s3';\nimport * as cdk from 'aws-cdk-lib';\nimport * as cpactions from 'aws-cdk-lib/aws-codepipeline-actions';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'aws-cdk-codepipeline-codebuild-multiple-inputs-outputs');\n\nconst repository = new codecommit.Repository(stack, 'MyRepo', {\n  repositoryName: 'MyIntegTestTempRepo',\n});\nconst bucket = new s3.Bucket(stack, 'MyBucket', {\n  versioned: true,\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\n\nconst pipeline = new codepipeline.Pipeline(stack, 'Pipeline', {\n  artifactBucket: bucket,\n});\nconst pipelineRole = pipeline.role;\n\nconst source1Output = new codepipeline.Artifact();\nconst sourceAction1 = new cpactions.CodeCommitSourceAction({\n  actionName: 'Source1',\n  repository,\n  output: source1Output,\n  role: pipelineRole,\n});\nconst source2Output = new codepipeline.Artifact();\nconst sourceAction2 = new cpactions.S3SourceAction({\n  actionName: 'Source2',\n  bucketKey: 'some/path',\n  bucket,\n  output: source2Output,\n  role: pipelineRole,\n});\npipeline.addStage({\n  stageName: 'Source',\n  actions: [\n    sourceAction1,\n    sourceAction2,\n  ],\n});\n\nconst project = new codebuild.PipelineProject(stack, 'MyBuildProject', {\n  grantReportGroupPermissions: false,\n});\nconst buildAction = new cpactions.CodeBuildAction({\n  actionName: 'Build1',\n  project,\n  input: source1Output,\n  extraInputs: [\n    source2Output,\n  ],\n  outputs: [\n    new codepipeline.Artifact(),\n    new codepipeline.Artifact(),\n  ],\n  role: pipelineRole,\n});\nconst testAction = new cpactions.CodeBuildAction({\n  type: cpactions.CodeBuildActionType.TEST,\n  actionName: 'Build2',\n  project,\n  input: source2Output,\n  extraInputs: [\n    source1Output,\n  ],\n  outputs: [\n    new codepipeline.Artifact('CustomOutput2'),\n  ],\n  role: pipelineRole,\n});\npipeline.addStage({\n  stageName: 'Build',\n  actions: [\n    buildAction,\n    testAction,\n  ],\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyRepoF4F48043\": {\"Type\": \"AWS::CodeCommit::Repository\", \"Properties\": {\"RepositoryName\": \"my-repo\"}}, \"MyBuildProjectRole6B7E2258\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codebuild.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"MyBuildProjectRoleDefaultPolicy5604AA87\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"logs:CreateLogGroup\", \"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"MyBuildProject30DB9D6E\"}, \":*\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"MyBuildProject30DB9D6E\"}]]}]}, {\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucket22248F97\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucket22248F97\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"kms:Decrypt\", \"kms:DescribeKey\", \"kms:Encrypt\", \"kms:GenerateDataKey*\", \"kms:ReEncrypt*\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKey01D58D69\", \"Arn\"]}}, {\"Action\": \"ssm:GetParameters\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":ssm:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":parameter/param_store\"]]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyBuildProjectRoleDefaultPolicy5604AA87\", \"Roles\": [{\"Ref\": \"MyBuildProjectRole6B7E2258\"}]}}, \"MyBuildProject30DB9D6E\": {\"Type\": \"AWS::CodeBuild::Project\", \"Properties\": {\"Artifacts\": {\"Type\": \"CODEPIPELINE\"}, \"Environment\": {\"ComputeType\": \"BUILD_GENERAL1_SMALL\", \"Image\": \"aws/codebuild/standard:1.0\", \"ImagePullCredentialsType\": \"CODEBUILD\", \"PrivilegedMode\": false, \"Type\": \"LINUX_CONTAINER\"}, \"ServiceRole\": {\"Fn::GetAtt\": [\"MyBuildProjectRole6B7E2258\", \"Arn\"]}, \"Source\": {\"Type\": \"CODEPIPELINE\"}, \"Cache\": {\"Type\": \"NO_CACHE\"}, \"EncryptionKey\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKey01D58D69\", \"Arn\"]}}}, \"PipelineArtifactsBucketEncryptionKey01D58D69\": {\"Type\": \"AWS::KMS::Key\", \"Properties\": {\"KeyPolicy\": {\"Statement\": [{\"Action\": \"kms:*\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}, \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"PipelineArtifactsBucketEncryptionKeyAlias5C510EEE\": {\"Type\": \"AWS::KMS::Alias\", \"Properties\": {\"AliasName\": \"alias/codepipeline-aws-cdk-codepipeline-codecommit-codebuild-pipeline-9540e1f5\", \"TargetKeyId\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKey01D58D69\", \"Arn\"]}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"PipelineArtifactsBucket22248F97\": {\"Type\": \"AWS::S3::Bucket\", \"Properties\": {\"BucketEncryption\": {\"ServerSideEncryptionConfiguration\": [{\"ServerSideEncryptionByDefault\": {\"KMSMasterKeyID\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKey01D58D69\", \"Arn\"]}, \"SSEAlgorithm\": \"aws:kms\"}}]}, \"PublicAccessBlockConfiguration\": {\"BlockPublicAcls\": true, \"BlockPublicPolicy\": true, \"IgnorePublicAcls\": true, \"RestrictPublicBuckets\": true}}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"PipelineArtifactsBucketPolicyD4F9712A\": {\"Type\": \"AWS::S3::BucketPolicy\", \"Properties\": {\"Bucket\": {\"Ref\": \"PipelineArtifactsBucket22248F97\"}, \"PolicyDocument\": {\"Statement\": [{\"Action\": \"s3:*\", \"Condition\": {\"Bool\": {\"aws:SecureTransport\": \"false\"}}, \"Effect\": \"Deny\", \"Principal\": {\"AWS\": \"*\"}, \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucket22248F97\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucket22248F97\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}}}, \"PipelineRoleD68726F7\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codepipeline.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"PipelineRoleDefaultPolicyC7A05455\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucket22248F97\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucket22248F97\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"kms:Decrypt\", \"kms:DescribeKey\", \"kms:Encrypt\", \"kms:GenerateDataKey*\", \"kms:ReEncrypt*\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKey01D58D69\", \"Arn\"]}}, {\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelinebuildCodePipelineActionRole11BCD4FF\", \"Arn\"]}, {\"Fn::GetAtt\": [\"PipelinebuildtestCodePipelineActionRole467D0DFA\", \"Arn\"]}, {\"Fn::GetAtt\": [\"PipelinesourceCodePipelineActionRoleB7E0306A\", \"Arn\"]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineRoleDefaultPolicyC7A05455\", \"Roles\": [{\"Ref\": \"PipelineRoleD68726F7\"}]}}, \"PipelineC660917D\": {\"Type\": \"AWS::CodePipeline::Pipeline\", \"Properties\": {\"RoleArn\": {\"Fn::GetAtt\": [\"PipelineRoleD68726F7\", \"Arn\"]}, \"Stages\": [{\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Source\", \"Owner\": \"AWS\", \"Provider\": \"CodeCommit\", \"Version\": \"1\"}, \"Configuration\": {\"RepositoryName\": {\"Fn::GetAtt\": [\"MyRepoF4F48043\", \"Name\"]}, \"BranchName\": \"master\", \"PollForSourceChanges\": true}, \"Name\": \"source\", \"OutputArtifacts\": [{\"Name\": \"SourceArtifact\"}], \"RoleArn\": {\"Fn::GetAtt\": [\"PipelinesourceCodePipelineActionRoleB7E0306A\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"source\"}, {\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Build\", \"Owner\": \"AWS\", \"Provider\": \"CodeBuild\", \"Version\": \"1\"}, \"Configuration\": {\"ProjectName\": {\"Ref\": \"MyBuildProject30DB9D6E\"}, \"EnvironmentVariables\": \"[{\\\"name\\\":\\\"TEST_ENV_VARIABLE\\\",\\\"type\\\":\\\"PLAINTEXT\\\",\\\"value\\\":\\\"test env variable value\\\"},{\\\"name\\\":\\\"PARAM_STORE_VARIABLE\\\",\\\"type\\\":\\\"PARAMETER_STORE\\\",\\\"value\\\":\\\"param_store\\\"}]\"}, \"InputArtifacts\": [{\"Name\": \"SourceArtifact\"}], \"Name\": \"build\", \"OutputArtifacts\": [{\"Name\": \"Artifact_build_build\"}], \"RoleArn\": {\"Fn::GetAtt\": [\"PipelinebuildCodePipelineActionRole11BCD4FF\", \"Arn\"]}, \"RunOrder\": 1}, {\"ActionTypeId\": {\"Category\": \"Test\", \"Owner\": \"AWS\", \"Provider\": \"CodeBuild\", \"Version\": \"1\"}, \"Configuration\": {\"ProjectName\": {\"Ref\": \"MyBuildProject30DB9D6E\"}}, \"InputArtifacts\": [{\"Name\": \"SourceArtifact\"}], \"Name\": \"test\", \"RoleArn\": {\"Fn::GetAtt\": [\"PipelinebuildtestCodePipelineActionRole467D0DFA\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"build\"}], \"ArtifactStore\": {\"EncryptionKey\": {\"Id\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKey01D58D69\", \"Arn\"]}, \"Type\": \"KMS\"}, \"Location\": {\"Ref\": \"PipelineArtifactsBucket22248F97\"}, \"Type\": \"S3\"}}, \"DependsOn\": [\"PipelineRoleDefaultPolicyC7A05455\", \"PipelineRoleD68726F7\"]}, \"PipelinesourceCodePipelineActionRoleB7E0306A\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}}, \"PipelinesourceCodePipelineActionRoleDefaultPolicy9E69DE83\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucket22248F97\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucket22248F97\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"kms:Decrypt\", \"kms:DescribeKey\", \"kms:Encrypt\", \"kms:GenerateDataKey*\", \"kms:ReEncrypt*\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKey01D58D69\", \"Arn\"]}}, {\"Action\": [\"codecommit:CancelUploadArchive\", \"codecommit:GetBranch\", \"codecommit:GetCommit\", \"codecommit:GetUploadArchiveStatus\", \"codecommit:UploadArchive\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"MyRepoF4F48043\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelinesourceCodePipelineActionRoleDefaultPolicy9E69DE83\", \"Roles\": [{\"Ref\": \"PipelinesourceCodePipelineActionRoleB7E0306A\"}]}}, \"PipelinebuildCodePipelineActionRole11BCD4FF\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}}, \"PipelinebuildCodePipelineActionRoleDefaultPolicyDC80DBC3\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"codebuild:BatchGetBuilds\", \"codebuild:StartBuild\", \"codebuild:StopBuild\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"MyBuildProject30DB9D6E\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelinebuildCodePipelineActionRoleDefaultPolicyDC80DBC3\", \"Roles\": [{\"Ref\": \"PipelinebuildCodePipelineActionRole11BCD4FF\"}]}}, \"PipelinebuildtestCodePipelineActionRole467D0DFA\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}}, \"PipelinebuildtestCodePipelineActionRoleDefaultPolicy319EA326\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"codebuild:BatchGetBuilds\", \"codebuild:StartBuild\", \"codebuild:StopBuild\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"MyBuildProject30DB9D6E\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelinebuildtestCodePipelineActionRoleDefaultPolicy319EA326\", \"Roles\": [{\"Ref\": \"PipelinebuildtestCodePipelineActionRole467D0DFA\"}]}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as codebuild from 'aws-cdk-lib/aws-codebuild';\nimport * as codecommit from 'aws-cdk-lib/aws-codecommit';\nimport * as codepipeline from 'aws-cdk-lib/aws-codepipeline';\nimport * as cdk from 'aws-cdk-lib';\nimport * as cpactions from 'aws-cdk-lib/aws-codepipeline-actions';\n\n/* eslint-disable quote-props */\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'aws-cdk-codepipeline-codecommit-codebuild');\n\nconst repository = new codecommit.Repository(stack, 'MyRepo', {\n  repositoryName: 'my-repo',\n});\nconst sourceOutput = new codepipeline.Artifact('SourceArtifact');\nconst sourceAction = new cpactions.CodeCommitSourceAction({\n  actionName: 'source',\n  output: sourceOutput,\n  repository,\n  trigger: cpactions.CodeCommitTrigger.POLL,\n});\n\nconst project = new codebuild.PipelineProject(stack, 'MyBuildProject', {\n  grantReportGroupPermissions: false,\n});\nconst buildAction = new cpactions.CodeBuildAction({\n  actionName: 'build',\n  project,\n  input: sourceOutput,\n  outputs: [new codepipeline.Artifact()],\n  environmentVariables: {\n    'TEST_ENV_VARIABLE': {\n      value: 'test env variable value',\n    },\n    'PARAM_STORE_VARIABLE': {\n      value: 'param_store',\n      type: codebuild.BuildEnvironmentVariableType.PARAMETER_STORE,\n    },\n  },\n});\nconst testAction = new cpactions.CodeBuildAction({\n  type: cpactions.CodeBuildActionType.TEST,\n  actionName: 'test',\n  project,\n  input: sourceOutput,\n});\n\nnew codepipeline.Pipeline(stack, 'Pipeline', {\n  stages: [\n    {\n      stageName: 'source',\n      actions: [sourceAction],\n    },\n  ],\n}).addStage({\n  stageName: 'build',\n  actions: [\n    buildAction,\n    testAction,\n  ],\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyBucketF68F3FF0\": {\"Type\": \"AWS::S3::Bucket\", \"Properties\": {\"VersioningConfiguration\": {\"Status\": \"Enabled\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"MyPipelineRoleC0D47CA4\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codepipeline.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"MyPipelineRoleDefaultPolicy34F09EFA\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"MyPipelineCFNCFNDeployCodePipelineActionRole31B1904C\", \"Arn\"]}, {\"Fn::GetAtt\": [\"MyPipelineSourceS3CodePipelineActionRole9F003087\", \"Arn\"]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyPipelineRoleDefaultPolicy34F09EFA\", \"Roles\": [{\"Ref\": \"MyPipelineRoleC0D47CA4\"}]}}, \"MyPipelineAED38ECF\": {\"Type\": \"AWS::CodePipeline::Pipeline\", \"Properties\": {\"RoleArn\": {\"Fn::GetAtt\": [\"MyPipelineRoleC0D47CA4\", \"Arn\"]}, \"Stages\": [{\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Source\", \"Owner\": \"AWS\", \"Provider\": \"S3\", \"Version\": \"1\"}, \"Configuration\": {\"S3Bucket\": {\"Ref\": \"MyBucketF68F3FF0\"}, \"S3ObjectKey\": \"some/path\"}, \"Name\": \"S3\", \"OutputArtifacts\": [{\"Name\": \"Artifact_Source_S3\"}], \"RoleArn\": {\"Fn::GetAtt\": [\"MyPipelineSourceS3CodePipelineActionRole9F003087\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"Source\"}, {\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Deploy\", \"Owner\": \"AWS\", \"Provider\": \"CloudFormation\", \"Version\": \"1\"}, \"Configuration\": {\"StackName\": \"aws-cdk-codepipeline-cross-region-deploy-stack\", \"RoleArn\": {\"Fn::GetAtt\": [\"MyPipelineCFNCFNDeployRole9CC99B3F\", \"Arn\"]}, \"ActionMode\": \"CREATE_UPDATE\", \"TemplatePath\": \"Artifact_Source_S3::template.yml\"}, \"InputArtifacts\": [{\"Name\": \"Artifact_Source_S3\"}], \"Name\": \"CFN_Deploy\", \"Region\": \"us-west-2\", \"RoleArn\": {\"Fn::GetAtt\": [\"MyPipelineCFNCFNDeployCodePipelineActionRole31B1904C\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"CFN\"}], \"ArtifactStores\": [{\"ArtifactStore\": {\"Location\": {\"Ref\": \"MyBucketF68F3FF0\"}, \"Type\": \"S3\"}, \"Region\": \"us-west-2\"}]}, \"DependsOn\": [\"MyPipelineRoleDefaultPolicy34F09EFA\", \"MyPipelineRoleC0D47CA4\"]}, \"MyPipelineSourceS3CodePipelineActionRole9F003087\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:aws:iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}}, \"MyPipelineSourceS3CodePipelineActionRoleDefaultPolicyF838EE0B\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, \"/some/path\"]]}]}, {\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyPipelineSourceS3CodePipelineActionRoleDefaultPolicyF838EE0B\", \"Roles\": [{\"Ref\": \"MyPipelineSourceS3CodePipelineActionRole9F003087\"}]}}, \"MyPipelineCFNCFNDeployCodePipelineActionRole31B1904C\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:aws:iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}}, \"MyPipelineCFNCFNDeployCodePipelineActionRoleDefaultPolicyD67537CB\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"iam:PassRole\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"MyPipelineCFNCFNDeployRole9CC99B3F\", \"Arn\"]}}, {\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"cloudformation:CreateStack\", \"cloudformation:DescribeStack*\", \"cloudformation:GetStackPolicy\", \"cloudformation:GetTemplate*\", \"cloudformation:SetStackPolicy\", \"cloudformation:UpdateStack\", \"cloudformation:ValidateTemplate\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:aws:cloudformation:us-west-2:\", {\"Ref\": \"AWS::AccountId\"}, \":stack/aws-cdk-codepipeline-cross-region-deploy-stack/*\"]]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyPipelineCFNCFNDeployCodePipelineActionRoleDefaultPolicyD67537CB\", \"Roles\": [{\"Ref\": \"MyPipelineCFNCFNDeployCodePipelineActionRole31B1904C\"}]}}, \"MyPipelineCFNCFNDeployRole9CC99B3F\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"cloudformation.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"MyPipelineCFNCFNDeployRoleDefaultPolicy65876BA0\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyPipelineCFNCFNDeployRoleDefaultPolicy65876BA0\", \"Roles\": [{\"Ref\": \"MyPipelineCFNCFNDeployRole9CC99B3F\"}]}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as codepipeline from 'aws-cdk-lib/aws-codepipeline';\nimport * as s3 from 'aws-cdk-lib/aws-s3';\nimport * as cdk from 'aws-cdk-lib';\nimport * as cpactions from 'aws-cdk-lib/aws-codepipeline-actions';\n\nconst app = new cdk.App();\n\nconst region = 'us-west-2'; // hardcode the region\nconst stack = new cdk.Stack(app, 'aws-cdk-codepipeline-cloudformation-cross-region', {\n  env: {\n    region,\n  },\n});\n\nconst bucket = new s3.Bucket(stack, 'MyBucket', {\n  versioned: true,\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\n\nconst sourceOutput = new codepipeline.Artifact();\nconst sourceAction = new cpactions.S3SourceAction({\n  actionName: 'S3',\n  bucketKey: 'some/path',\n  bucket,\n  output: sourceOutput,\n});\n\nnew codepipeline.Pipeline(stack, 'MyPipeline', {\n  artifactBucket: bucket,\n  stages: [\n    {\n      stageName: 'Source',\n      actions: [sourceAction],\n    },\n    {\n      stageName: 'CFN',\n      actions: [\n        new cpactions.CloudFormationCreateUpdateStackAction({\n          actionName: 'CFN_Deploy',\n          stackName: 'aws-cdk-codepipeline-cross-region-deploy-stack',\n          templatePath: sourceOutput.atPath('template.yml'),\n          adminPermissions: false,\n          region,\n        }),\n      ],\n    },\n  ],\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"PipelineArtifactsBucketEncryptionKey01D58D69\": {\"Type\": \"AWS::KMS::Key\", \"Properties\": {\"KeyPolicy\": {\"Statement\": [{\"Action\": \"kms:*\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}, \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"PipelineArtifactsBucketEncryptionKeyAlias5C510EEE\": {\"Type\": \"AWS::KMS::Alias\", \"Properties\": {\"AliasName\": \"alias/codepipeline-aws-cdk-codepipeline-lambda-pipeline-87a4b3d3\", \"TargetKeyId\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKey01D58D69\", \"Arn\"]}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"PipelineArtifactsBucket22248F97\": {\"Type\": \"AWS::S3::Bucket\", \"Properties\": {\"BucketEncryption\": {\"ServerSideEncryptionConfiguration\": [{\"ServerSideEncryptionByDefault\": {\"KMSMasterKeyID\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKey01D58D69\", \"Arn\"]}, \"SSEAlgorithm\": \"aws:kms\"}}]}, \"PublicAccessBlockConfiguration\": {\"BlockPublicAcls\": true, \"BlockPublicPolicy\": true, \"IgnorePublicAcls\": true, \"RestrictPublicBuckets\": true}}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"PipelineArtifactsBucketPolicyD4F9712A\": {\"Type\": \"AWS::S3::BucketPolicy\", \"Properties\": {\"Bucket\": {\"Ref\": \"PipelineArtifactsBucket22248F97\"}, \"PolicyDocument\": {\"Statement\": [{\"Action\": \"s3:*\", \"Condition\": {\"Bool\": {\"aws:SecureTransport\": \"false\"}}, \"Effect\": \"Deny\", \"Principal\": {\"AWS\": \"*\"}, \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucket22248F97\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucket22248F97\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}}}, \"PipelineRoleD68726F7\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codepipeline.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"PipelineRoleDefaultPolicyC7A05455\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucket22248F97\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucket22248F97\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"kms:Decrypt\", \"kms:DescribeKey\", \"kms:Encrypt\", \"kms:GenerateDataKey*\", \"kms:ReEncrypt*\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKey01D58D69\", \"Arn\"]}}, {\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineLambdaCodePipelineActionRoleC6032822\", \"Arn\"]}, {\"Fn::GetAtt\": [\"PipelineSourceCodePipelineActionRoleC6F9E7F5\", \"Arn\"]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineRoleDefaultPolicyC7A05455\", \"Roles\": [{\"Ref\": \"PipelineRoleD68726F7\"}]}}, \"PipelineC660917D\": {\"Type\": \"AWS::CodePipeline::Pipeline\", \"Properties\": {\"RoleArn\": {\"Fn::GetAtt\": [\"PipelineRoleD68726F7\", \"Arn\"]}, \"Stages\": [{\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Source\", \"Owner\": \"AWS\", \"Provider\": \"S3\", \"Version\": \"1\"}, \"Configuration\": {\"S3Bucket\": {\"Ref\": \"PipelineBucketB967BD35\"}, \"S3ObjectKey\": \"key\", \"PollForSourceChanges\": false}, \"Name\": \"Source\", \"OutputArtifacts\": [{\"Name\": \"SourceArtifact\"}], \"RoleArn\": {\"Fn::GetAtt\": [\"PipelineSourceCodePipelineActionRoleC6F9E7F5\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"Source\"}, {\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Invoke\", \"Owner\": \"AWS\", \"Provider\": \"Lambda\", \"Version\": \"1\"}, \"Configuration\": {\"FunctionName\": {\"Ref\": \"LambdaFun98622869\"}}, \"Name\": \"Lambda\", \"RoleArn\": {\"Fn::GetAtt\": [\"PipelineLambdaCodePipelineActionRoleC6032822\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"Lambda\"}], \"ArtifactStore\": {\"EncryptionKey\": {\"Id\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKey01D58D69\", \"Arn\"]}, \"Type\": \"KMS\"}, \"Location\": {\"Ref\": \"PipelineArtifactsBucket22248F97\"}, \"Type\": \"S3\"}}, \"DependsOn\": [\"PipelineRoleDefaultPolicyC7A05455\", \"PipelineRoleD68726F7\"]}, \"PipelineSourceCodePipelineActionRoleC6F9E7F5\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}}, \"PipelineSourceCodePipelineActionRoleDefaultPolicy2D565925\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineBucketB967BD35\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineBucketB967BD35\", \"Arn\"]}, \"/key\"]]}]}, {\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucket22248F97\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucket22248F97\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"kms:Decrypt\", \"kms:Encrypt\", \"kms:GenerateDataKey*\", \"kms:ReEncrypt*\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKey01D58D69\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineSourceCodePipelineActionRoleDefaultPolicy2D565925\", \"Roles\": [{\"Ref\": \"PipelineSourceCodePipelineActionRoleC6F9E7F5\"}]}}, \"PipelineEventsRole46BEEA7C\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"events.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"PipelineEventsRoleDefaultPolicyFF4FCCE0\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"codepipeline:StartPipelineExecution\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":codepipeline:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":\", {\"Ref\": \"PipelineC660917D\"}]]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineEventsRoleDefaultPolicyFF4FCCE0\", \"Roles\": [{\"Ref\": \"PipelineEventsRole46BEEA7C\"}]}}, \"PipelineLambdaCodePipelineActionRoleC6032822\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}}, \"PipelineLambdaCodePipelineActionRoleDefaultPolicyFEE90F93\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"lambda:ListFunctions\", \"Effect\": \"Allow\", \"Resource\": \"*\"}, {\"Action\": \"lambda:InvokeFunction\", \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"LambdaFun98622869\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"LambdaFun98622869\", \"Arn\"]}, \":*\"]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineLambdaCodePipelineActionRoleDefaultPolicyFEE90F93\", \"Roles\": [{\"Ref\": \"PipelineLambdaCodePipelineActionRoleC6032822\"}]}}, \"PipelineBucketB967BD35\": {\"Type\": \"AWS::S3::Bucket\", \"Properties\": {\"VersioningConfiguration\": {\"Status\": \"Enabled\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"PipelineBucketawscdkcodepipelinelambdaPipeline87A4B3D3SourceEventRulekey23D3C004\": {\"Type\": \"AWS::Events::Rule\", \"Properties\": {\"EventPattern\": {\"source\": [\"aws.s3\"], \"detail-type\": [\"AWS API Call via CloudTrail\"], \"detail\": {\"resources\": {\"ARN\": [{\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineBucketB967BD35\", \"Arn\"]}, \"/key\"]]}]}, \"eventName\": [\"CompleteMultipartUpload\", \"CopyObject\", \"PutObject\"], \"requestParameters\": {\"bucketName\": [{\"Ref\": \"PipelineBucketB967BD35\"}], \"key\": [\"key\"]}}}, \"State\": \"ENABLED\", \"Targets\": [{\"Arn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":codepipeline:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":\", {\"Ref\": \"PipelineC660917D\"}]]}, \"Id\": \"Target0\", \"RoleArn\": {\"Fn::GetAtt\": [\"PipelineEventsRole46BEEA7C\", \"Arn\"]}}]}}, \"CloudTrailS310CD22F2\": {\"Type\": \"AWS::S3::Bucket\", \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"CloudTrailS3PolicyEA49A03E\": {\"Type\": \"AWS::S3::BucketPolicy\", \"Properties\": {\"Bucket\": {\"Ref\": \"CloudTrailS310CD22F2\"}, \"PolicyDocument\": {\"Statement\": [{\"Action\": \"s3:*\", \"Condition\": {\"Bool\": {\"aws:SecureTransport\": \"false\"}}, \"Effect\": \"Deny\", \"Principal\": {\"AWS\": \"*\"}, \"Resource\": [{\"Fn::GetAtt\": [\"CloudTrailS310CD22F2\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"CloudTrailS310CD22F2\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": \"s3:GetBucketAcl\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"cloudtrail.amazonaws.com\"}, \"Resource\": {\"Fn::GetAtt\": [\"CloudTrailS310CD22F2\", \"Arn\"]}}, {\"Action\": \"s3:PutObject\", \"Condition\": {\"StringEquals\": {\"s3:x-amz-acl\": \"bucket-owner-full-control\"}}, \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"cloudtrail.amazonaws.com\"}, \"Resource\": {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"CloudTrailS310CD22F2\", \"Arn\"]}, \"/AWSLogs/\", {\"Ref\": \"AWS::AccountId\"}, \"/*\"]]}}], \"Version\": \"2012-10-17\"}}}, \"CloudTrailA62D711D\": {\"Type\": \"AWS::CloudTrail::Trail\", \"Properties\": {\"IsLogging\": true, \"S3BucketName\": {\"Ref\": \"CloudTrailS310CD22F2\"}, \"EnableLogFileValidation\": true, \"EventSelectors\": [{\"DataResources\": [{\"Type\": \"AWS::S3::Object\", \"Values\": [{\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineBucketB967BD35\", \"Arn\"]}, \"/key\"]]}]}], \"IncludeManagementEvents\": false, \"ReadWriteType\": \"WriteOnly\"}], \"IncludeGlobalServiceEvents\": true, \"IsMultiRegionTrail\": true}, \"DependsOn\": [\"CloudTrailS3PolicyEA49A03E\"]}, \"LambdaFunServiceRoleF0979767\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"LambdaFunServiceRoleDefaultPolicy217FED83\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"codepipeline:PutJobFailureResult\", \"codepipeline:PutJobSuccessResult\"], \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"LambdaFunServiceRoleDefaultPolicy217FED83\", \"Roles\": [{\"Ref\": \"LambdaFunServiceRoleF0979767\"}]}}, \"LambdaFun98622869\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"\n    exports.handler = function () {\n      console.log(\\\"Hello, world!\\\");\n    };\n  \"}, \"Role\": {\"Fn::GetAtt\": [\"LambdaFunServiceRoleF0979767\", \"Arn\"]}, \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"LambdaFunServiceRoleDefaultPolicy217FED83\", \"LambdaFunServiceRoleF0979767\"]}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as cloudtrail from 'aws-cdk-lib/aws-cloudtrail';\nimport * as codepipeline from 'aws-cdk-lib/aws-codepipeline';\nimport * as lambda from 'aws-cdk-lib/aws-lambda';\nimport * as s3 from 'aws-cdk-lib/aws-s3';\nimport * as cdk from 'aws-cdk-lib';\nimport * as cpactions from 'aws-cdk-lib/aws-codepipeline-actions';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'aws-cdk-codepipeline-lambda');\n\nconst pipeline = new codepipeline.Pipeline(stack, 'Pipeline');\n\nconst sourceStage = pipeline.addStage({ stageName: 'Source' });\nconst bucket = new s3.Bucket(stack, 'PipelineBucket', {\n  versioned: true,\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\nconst key = 'key';\nconst trail = new cloudtrail.Trail(stack, 'CloudTrail');\ntrail.addS3EventSelector([{ bucket, objectPrefix: key }], { readWriteType: cloudtrail.ReadWriteType.WRITE_ONLY, includeManagementEvents: false });\nsourceStage.addAction(new cpactions.S3SourceAction({\n  actionName: 'Source',\n  output: new codepipeline.Artifact('SourceArtifact'),\n  bucket,\n  bucketKey: key,\n  trigger: cpactions.S3Trigger.EVENTS,\n}));\n\nconst lambdaFun = new lambda.Function(stack, 'LambdaFun', {\n  code: new lambda.InlineCode(`\n    exports.handler = function () {\n      console.log(\"Hello, world!\");\n    };\n  `),\n  handler: 'index.handler',\n  runtime: lambda.Runtime.NODEJS_14_X,\n});\nconst lambdaStage = pipeline.addStage({ stageName: 'Lambda' });\nlambdaStage.addAction(new cpactions.LambdaInvokeAction({\n  actionName: 'Lambda',\n  lambda: lambdaFun,\n}));\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"PipelineArtifactsBucketEncryptionKey01D58D69\": {\"Type\": \"AWS::KMS::Key\", \"Properties\": {\"KeyPolicy\": {\"Statement\": [{\"Action\": \"kms:*\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}, \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"PipelineArtifactsBucketEncryptionKeyAlias5C510EEE\": {\"Type\": \"AWS::KMS::Alias\", \"Properties\": {\"AliasName\": \"alias/codepipeline-aws-cdk-codepipeline-cloudformation-pipeline-7dbde619\", \"TargetKeyId\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKey01D58D69\", \"Arn\"]}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"PipelineArtifactsBucket22248F97\": {\"Type\": \"AWS::S3::Bucket\", \"Properties\": {\"BucketEncryption\": {\"ServerSideEncryptionConfiguration\": [{\"ServerSideEncryptionByDefault\": {\"KMSMasterKeyID\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKey01D58D69\", \"Arn\"]}, \"SSEAlgorithm\": \"aws:kms\"}}]}, \"PublicAccessBlockConfiguration\": {\"BlockPublicAcls\": true, \"BlockPublicPolicy\": true, \"IgnorePublicAcls\": true, \"RestrictPublicBuckets\": true}}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"PipelineArtifactsBucketPolicyD4F9712A\": {\"Type\": \"AWS::S3::BucketPolicy\", \"Properties\": {\"Bucket\": {\"Ref\": \"PipelineArtifactsBucket22248F97\"}, \"PolicyDocument\": {\"Statement\": [{\"Action\": \"s3:*\", \"Condition\": {\"Bool\": {\"aws:SecureTransport\": \"false\"}}, \"Effect\": \"Deny\", \"Principal\": {\"AWS\": \"*\"}, \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucket22248F97\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucket22248F97\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}}}, \"PipelineRoleD68726F7\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codepipeline.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"PipelineRoleDefaultPolicyC7A05455\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucket22248F97\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucket22248F97\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"kms:Decrypt\", \"kms:DescribeKey\", \"kms:Encrypt\", \"kms:GenerateDataKey*\", \"kms:ReEncrypt*\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKey01D58D69\", \"Arn\"]}}, {\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineCFNDeployCFNCodePipelineActionRole444CF5DD\", \"Arn\"]}, {\"Fn::GetAtt\": [\"PipelineSourceAdditionalSourceCodePipelineActionRole0897461A\", \"Arn\"]}, {\"Fn::GetAtt\": [\"PipelineSourceCodePipelineActionRoleC6F9E7F5\", \"Arn\"]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineRoleDefaultPolicyC7A05455\", \"Roles\": [{\"Ref\": \"PipelineRoleD68726F7\"}]}}, \"PipelineC660917D\": {\"Type\": \"AWS::CodePipeline::Pipeline\", \"Properties\": {\"RoleArn\": {\"Fn::GetAtt\": [\"PipelineRoleD68726F7\", \"Arn\"]}, \"Stages\": [{\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Source\", \"Owner\": \"AWS\", \"Provider\": \"S3\", \"Version\": \"1\"}, \"Configuration\": {\"S3Bucket\": {\"Ref\": \"PipelineBucketB967BD35\"}, \"S3ObjectKey\": \"key\"}, \"Name\": \"Source\", \"OutputArtifacts\": [{\"Name\": \"SourceArtifact\"}], \"RoleArn\": {\"Fn::GetAtt\": [\"PipelineSourceCodePipelineActionRoleC6F9E7F5\", \"Arn\"]}, \"RunOrder\": 1}, {\"ActionTypeId\": {\"Category\": \"Source\", \"Owner\": \"AWS\", \"Provider\": \"S3\", \"Version\": \"1\"}, \"Configuration\": {\"S3Bucket\": {\"Ref\": \"PipelineBucketB967BD35\"}, \"S3ObjectKey\": \"additional/key\"}, \"Name\": \"AdditionalSource\", \"OutputArtifacts\": [{\"Name\": \"AdditionalArtifact\"}], \"RoleArn\": {\"Fn::GetAtt\": [\"PipelineSourceAdditionalSourceCodePipelineActionRole0897461A\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"Source\"}, {\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Deploy\", \"Owner\": \"AWS\", \"Provider\": \"CloudFormation\", \"Version\": \"1\"}, \"Configuration\": {\"StackName\": \"IntegTest-TestActionStack\", \"RoleArn\": {\"Fn::GetAtt\": [\"CfnChangeSetRole6F05F6FC\", \"Arn\"]}, \"ParameterOverrides\": \"{\\\"BucketName\\\":{\\\"Fn::GetArtifactAtt\\\":[\\\"SourceArtifact\\\",\\\"BucketName\\\"]},\\\"ObjectKey\\\":{\\\"Fn::GetArtifactAtt\\\":[\\\"SourceArtifact\\\",\\\"ObjectKey\\\"]},\\\"Url\\\":{\\\"Fn::GetArtifactAtt\\\":[\\\"AdditionalArtifact\\\",\\\"URL\\\"]},\\\"OtherParam\\\":{\\\"Fn::GetParam\\\":[\\\"SourceArtifact\\\",\\\"params.json\\\",\\\"OtherParam\\\"]}}\", \"ActionMode\": \"CHANGE_SET_REPLACE\", \"ChangeSetName\": \"ChangeSetIntegTest\", \"TemplatePath\": \"SourceArtifact::test.yaml\"}, \"InputArtifacts\": [{\"Name\": \"AdditionalArtifact\"}, {\"Name\": \"SourceArtifact\"}], \"Name\": \"DeployCFN\", \"RoleArn\": {\"Fn::GetAtt\": [\"PipelineCFNDeployCFNCodePipelineActionRole444CF5DD\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"CFN\"}], \"ArtifactStore\": {\"EncryptionKey\": {\"Id\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKey01D58D69\", \"Arn\"]}, \"Type\": \"KMS\"}, \"Location\": {\"Ref\": \"PipelineArtifactsBucket22248F97\"}, \"Type\": \"S3\"}}, \"DependsOn\": [\"PipelineRoleDefaultPolicyC7A05455\", \"PipelineRoleD68726F7\"]}, \"PipelineSourceCodePipelineActionRoleC6F9E7F5\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}}, \"PipelineSourceCodePipelineActionRoleDefaultPolicy2D565925\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineBucketB967BD35\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineBucketB967BD35\", \"Arn\"]}, \"/key\"]]}]}, {\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucket22248F97\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucket22248F97\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"kms:Decrypt\", \"kms:Encrypt\", \"kms:GenerateDataKey*\", \"kms:ReEncrypt*\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKey01D58D69\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineSourceCodePipelineActionRoleDefaultPolicy2D565925\", \"Roles\": [{\"Ref\": \"PipelineSourceCodePipelineActionRoleC6F9E7F5\"}]}}, \"PipelineSourceAdditionalSourceCodePipelineActionRole0897461A\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}}, \"PipelineSourceAdditionalSourceCodePipelineActionRoleDefaultPolicy9B326CCB\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineBucketB967BD35\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineBucketB967BD35\", \"Arn\"]}, \"/additional/key\"]]}]}, {\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucket22248F97\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucket22248F97\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"kms:Decrypt\", \"kms:Encrypt\", \"kms:GenerateDataKey*\", \"kms:ReEncrypt*\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKey01D58D69\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineSourceAdditionalSourceCodePipelineActionRoleDefaultPolicy9B326CCB\", \"Roles\": [{\"Ref\": \"PipelineSourceAdditionalSourceCodePipelineActionRole0897461A\"}]}}, \"PipelineCFNDeployCFNCodePipelineActionRole444CF5DD\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}}, \"PipelineCFNDeployCFNCodePipelineActionRoleDefaultPolicy9C068517\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"iam:PassRole\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"CfnChangeSetRole6F05F6FC\", \"Arn\"]}}, {\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucket22248F97\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucket22248F97\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"kms:Decrypt\", \"kms:DescribeKey\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKey01D58D69\", \"Arn\"]}}, {\"Action\": [\"cloudformation:CreateChangeSet\", \"cloudformation:DeleteChangeSet\", \"cloudformation:DescribeChangeSet\", \"cloudformation:DescribeStacks\"], \"Condition\": {\"StringEqualsIfExists\": {\"cloudformation:ChangeSetName\": \"ChangeSetIntegTest\"}}, \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":cloudformation:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":stack/IntegTest-TestActionStack/*\"]]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineCFNDeployCFNCodePipelineActionRoleDefaultPolicy9C068517\", \"Roles\": [{\"Ref\": \"PipelineCFNDeployCFNCodePipelineActionRole444CF5DD\"}]}}, \"PipelineBucketB967BD35\": {\"Type\": \"AWS::S3::Bucket\", \"Properties\": {\"VersioningConfiguration\": {\"Status\": \"Enabled\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"CfnChangeSetRole6F05F6FC\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"cloudformation.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as codepipeline from 'aws-cdk-lib/aws-codepipeline';\nimport { Role, ServicePrincipal } from 'aws-cdk-lib/aws-iam';\nimport * as s3 from 'aws-cdk-lib/aws-s3';\nimport * as cdk from 'aws-cdk-lib';\nimport * as cpactions from 'aws-cdk-lib/aws-codepipeline-actions';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'aws-cdk-codepipeline-cloudformation');\n\nconst pipeline = new codepipeline.Pipeline(stack, 'Pipeline');\n\nconst bucket = new s3.Bucket(stack, 'PipelineBucket', {\n  versioned: true,\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\n\nconst sourceOutput = new codepipeline.Artifact('SourceArtifact');\nconst additionalArtifact = new codepipeline.Artifact('AdditionalArtifact');\nconst source = new cpactions.S3SourceAction({\n  actionName: 'Source',\n  output: sourceOutput,\n  bucket,\n  bucketKey: 'key',\n});\nconst sourceStage = {\n  stageName: 'Source',\n  actions: [\n    source,\n    new cpactions.S3SourceAction({\n      actionName: 'AdditionalSource',\n      output: additionalArtifact,\n      bucket,\n      bucketKey: 'additional/key',\n    }),\n  ],\n};\n\nconst changeSetName = 'ChangeSetIntegTest';\nconst stackName = 'IntegTest-TestActionStack';\nconst role = new Role(stack, 'CfnChangeSetRole', {\n  assumedBy: new ServicePrincipal('cloudformation.amazonaws.com'),\n});\n\npipeline.addStage(sourceStage);\npipeline.addStage({\n  stageName: 'CFN',\n  actions: [\n    new cpactions.CloudFormationCreateReplaceChangeSetAction({\n      actionName: 'DeployCFN',\n      changeSetName,\n      stackName,\n      deploymentRole: role,\n      templatePath: sourceOutput.atPath('test.yaml'),\n      adminPermissions: false,\n      parameterOverrides: {\n        BucketName: sourceOutput.bucketName,\n        ObjectKey: sourceOutput.objectKey,\n        Url: additionalArtifact.url,\n        OtherParam: sourceOutput.getParam('params.json', 'OtherParam'),\n      },\n      extraInputs: [additionalArtifact],\n    }),\n  ],\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyRepoF4F48043\": {\"Type\": \"AWS::CodeCommit::Repository\", \"Properties\": {\"RepositoryName\": \"my-repo\"}}, \"MyRepoawscdkcodepipelinecodecommitPipelineF780CA18EventRuleC207C969\": {\"Type\": \"AWS::Events::Rule\", \"Properties\": {\"EventPattern\": {\"source\": [\"aws.codecommit\"], \"resources\": [{\"Fn::GetAtt\": [\"MyRepoF4F48043\", \"Arn\"]}], \"detail-type\": [\"CodeCommit Repository State Change\"], \"detail\": {\"event\": [\"referenceCreated\", \"referenceUpdated\"], \"referenceName\": [\"master\"]}}, \"State\": \"ENABLED\", \"Targets\": [{\"Arn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":codepipeline:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":\", {\"Ref\": \"PipelineC660917D\"}]]}, \"Id\": \"Target0\", \"RoleArn\": {\"Fn::GetAtt\": [\"PipelineEventsRole46BEEA7C\", \"Arn\"]}}]}}, \"PipelineArtifactsBucketEncryptionKey01D58D69\": {\"Type\": \"AWS::KMS::Key\", \"Properties\": {\"KeyPolicy\": {\"Statement\": [{\"Action\": \"kms:*\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}, \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"PipelineArtifactsBucketEncryptionKeyAlias5C510EEE\": {\"Type\": \"AWS::KMS::Alias\", \"Properties\": {\"AliasName\": \"alias/codepipeline-aws-cdk-codepipeline-codecommit-pipeline-f780ca18\", \"TargetKeyId\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKey01D58D69\", \"Arn\"]}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"PipelineArtifactsBucket22248F97\": {\"Type\": \"AWS::S3::Bucket\", \"Properties\": {\"BucketEncryption\": {\"ServerSideEncryptionConfiguration\": [{\"ServerSideEncryptionByDefault\": {\"KMSMasterKeyID\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKey01D58D69\", \"Arn\"]}, \"SSEAlgorithm\": \"aws:kms\"}}]}, \"PublicAccessBlockConfiguration\": {\"BlockPublicAcls\": true, \"BlockPublicPolicy\": true, \"IgnorePublicAcls\": true, \"RestrictPublicBuckets\": true}}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"PipelineArtifactsBucketPolicyD4F9712A\": {\"Type\": \"AWS::S3::BucketPolicy\", \"Properties\": {\"Bucket\": {\"Ref\": \"PipelineArtifactsBucket22248F97\"}, \"PolicyDocument\": {\"Statement\": [{\"Action\": \"s3:*\", \"Condition\": {\"Bool\": {\"aws:SecureTransport\": \"false\"}}, \"Effect\": \"Deny\", \"Principal\": {\"AWS\": \"*\"}, \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucket22248F97\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucket22248F97\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}}}, \"PipelineRoleD68726F7\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codepipeline.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"PipelineRoleDefaultPolicyC7A05455\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucket22248F97\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucket22248F97\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"kms:Decrypt\", \"kms:DescribeKey\", \"kms:Encrypt\", \"kms:GenerateDataKey*\", \"kms:ReEncrypt*\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKey01D58D69\", \"Arn\"]}}, {\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelinebuildmanualCodePipelineActionRoleE3306AB0\", \"Arn\"]}, {\"Fn::GetAtt\": [\"PipelinesourceCodePipelineActionRoleB7E0306A\", \"Arn\"]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineRoleDefaultPolicyC7A05455\", \"Roles\": [{\"Ref\": \"PipelineRoleD68726F7\"}]}}, \"PipelineC660917D\": {\"Type\": \"AWS::CodePipeline::Pipeline\", \"Properties\": {\"RoleArn\": {\"Fn::GetAtt\": [\"PipelineRoleD68726F7\", \"Arn\"]}, \"Stages\": [{\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Source\", \"Owner\": \"AWS\", \"Provider\": \"CodeCommit\", \"Version\": \"1\"}, \"Configuration\": {\"RepositoryName\": {\"Fn::GetAtt\": [\"MyRepoF4F48043\", \"Name\"]}, \"BranchName\": \"master\", \"PollForSourceChanges\": false}, \"Name\": \"source\", \"OutputArtifacts\": [{\"Name\": \"SourceArtifact\"}], \"RoleArn\": {\"Fn::GetAtt\": [\"PipelinesourceCodePipelineActionRoleB7E0306A\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"source\"}, {\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Approval\", \"Owner\": \"AWS\", \"Provider\": \"Manual\", \"Version\": \"1\"}, \"Name\": \"manual\", \"RoleArn\": {\"Fn::GetAtt\": [\"PipelinebuildmanualCodePipelineActionRoleE3306AB0\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"build\"}], \"ArtifactStore\": {\"EncryptionKey\": {\"Id\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKey01D58D69\", \"Arn\"]}, \"Type\": \"KMS\"}, \"Location\": {\"Ref\": \"PipelineArtifactsBucket22248F97\"}, \"Type\": \"S3\"}}, \"DependsOn\": [\"PipelineRoleDefaultPolicyC7A05455\", \"PipelineRoleD68726F7\"]}, \"PipelinesourceCodePipelineActionRoleB7E0306A\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}}, \"PipelinesourceCodePipelineActionRoleDefaultPolicy9E69DE83\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucket22248F97\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucket22248F97\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"kms:Decrypt\", \"kms:DescribeKey\", \"kms:Encrypt\", \"kms:GenerateDataKey*\", \"kms:ReEncrypt*\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKey01D58D69\", \"Arn\"]}}, {\"Action\": [\"codecommit:CancelUploadArchive\", \"codecommit:GetBranch\", \"codecommit:GetCommit\", \"codecommit:GetUploadArchiveStatus\", \"codecommit:UploadArchive\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"MyRepoF4F48043\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelinesourceCodePipelineActionRoleDefaultPolicy9E69DE83\", \"Roles\": [{\"Ref\": \"PipelinesourceCodePipelineActionRoleB7E0306A\"}]}}, \"PipelineEventsRole46BEEA7C\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"events.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"PipelineEventsRoleDefaultPolicyFF4FCCE0\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"codepipeline:StartPipelineExecution\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":codepipeline:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":\", {\"Ref\": \"PipelineC660917D\"}]]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineEventsRoleDefaultPolicyFF4FCCE0\", \"Roles\": [{\"Ref\": \"PipelineEventsRole46BEEA7C\"}]}}, \"PipelinebuildmanualCodePipelineActionRoleE3306AB0\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as codecommit from 'aws-cdk-lib/aws-codecommit';\nimport * as codepipeline from 'aws-cdk-lib/aws-codepipeline';\nimport * as cdk from 'aws-cdk-lib';\nimport * as cpactions from 'aws-cdk-lib/aws-codepipeline-actions';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'aws-cdk-codepipeline-codecommit');\n\nconst repo = new codecommit.Repository(stack, 'MyRepo', {\n  repositoryName: 'my-repo',\n});\n\nnew codepipeline.Pipeline(stack, 'Pipeline', {\n  stages: [\n    {\n      stageName: 'source',\n      actions: [\n        new cpactions.CodeCommitSourceAction({\n          actionName: 'source',\n          repository: repo,\n          output: new codepipeline.Artifact('SourceArtifact'),\n        }),\n      ],\n    },\n    {\n      stageName: 'build',\n      actions: [\n        new cpactions.ManualApprovalAction({ actionName: 'manual' }),\n      ],\n    },\n  ],\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyBucketF68F3FF0\": {\"Type\": \"AWS::S3::Bucket\", \"Properties\": {\"VersioningConfiguration\": {\"Status\": \"Enabled\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"ActionRole60B0EDF7\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}}, \"ActionRoleDefaultPolicyCA33BE56\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"sqs:*\", \"Effect\": \"Allow\", \"Resource\": \"*\"}, {\"Action\": \"iam:PassRole\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"MyPipelineCFNCFNDeployRole9CC99B3F\", \"Arn\"]}}, {\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"cloudformation:CreateStack\", \"cloudformation:DescribeStack*\", \"cloudformation:GetStackPolicy\", \"cloudformation:GetTemplate*\", \"cloudformation:SetStackPolicy\", \"cloudformation:UpdateStack\", \"cloudformation:ValidateTemplate\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":cloudformation:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":stack/aws-cdk-codepipeline-cross-region-deploy-stack/*\"]]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"ActionRoleDefaultPolicyCA33BE56\", \"Roles\": [{\"Ref\": \"ActionRole60B0EDF7\"}]}}, \"MyPipelineRoleC0D47CA4\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codepipeline.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"MyPipelineRoleDefaultPolicy34F09EFA\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"ActionRole60B0EDF7\", \"Arn\"]}, {\"Fn::GetAtt\": [\"MyPipelineSourceS3CodePipelineActionRole9F003087\", \"Arn\"]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyPipelineRoleDefaultPolicy34F09EFA\", \"Roles\": [{\"Ref\": \"MyPipelineRoleC0D47CA4\"}]}}, \"MyPipelineAED38ECF\": {\"Type\": \"AWS::CodePipeline::Pipeline\", \"Properties\": {\"RoleArn\": {\"Fn::GetAtt\": [\"MyPipelineRoleC0D47CA4\", \"Arn\"]}, \"Stages\": [{\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Source\", \"Owner\": \"AWS\", \"Provider\": \"S3\", \"Version\": \"1\"}, \"Configuration\": {\"S3Bucket\": {\"Ref\": \"MyBucketF68F3FF0\"}, \"S3ObjectKey\": \"some/path\"}, \"Name\": \"S3\", \"OutputArtifacts\": [{\"Name\": \"Artifact_Source_S3\"}], \"RoleArn\": {\"Fn::GetAtt\": [\"MyPipelineSourceS3CodePipelineActionRole9F003087\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"Source\"}, {\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Deploy\", \"Owner\": \"AWS\", \"Provider\": \"CloudFormation\", \"Version\": \"1\"}, \"Configuration\": {\"StackName\": \"aws-cdk-codepipeline-cross-region-deploy-stack\", \"RoleArn\": {\"Fn::GetAtt\": [\"MyPipelineCFNCFNDeployRole9CC99B3F\", \"Arn\"]}, \"ActionMode\": \"CREATE_UPDATE\", \"TemplatePath\": \"Artifact_Source_S3::template.yml\"}, \"InputArtifacts\": [{\"Name\": \"Artifact_Source_S3\"}], \"Name\": \"CFN_Deploy\", \"RoleArn\": {\"Fn::GetAtt\": [\"ActionRole60B0EDF7\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"CFN\"}], \"ArtifactStore\": {\"Location\": {\"Ref\": \"MyBucketF68F3FF0\"}, \"Type\": \"S3\"}}, \"DependsOn\": [\"MyPipelineRoleDefaultPolicy34F09EFA\", \"MyPipelineRoleC0D47CA4\"]}, \"MyPipelineSourceS3CodePipelineActionRole9F003087\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}}, \"MyPipelineSourceS3CodePipelineActionRoleDefaultPolicyF838EE0B\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, \"/some/path\"]]}]}, {\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyPipelineSourceS3CodePipelineActionRoleDefaultPolicyF838EE0B\", \"Roles\": [{\"Ref\": \"MyPipelineSourceS3CodePipelineActionRole9F003087\"}]}}, \"MyPipelineCFNCFNDeployRole9CC99B3F\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"cloudformation.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"MyPipelineCFNCFNDeployRoleDefaultPolicy65876BA0\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyPipelineCFNCFNDeployRoleDefaultPolicy65876BA0\", \"Roles\": [{\"Ref\": \"MyPipelineCFNCFNDeployRole9CC99B3F\"}]}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as codepipeline from 'aws-cdk-lib/aws-codepipeline';\nimport * as iam from 'aws-cdk-lib/aws-iam';\nimport * as s3 from 'aws-cdk-lib/aws-s3';\nimport * as cdk from 'aws-cdk-lib';\nimport * as cpactions from 'aws-cdk-lib/aws-codepipeline-actions';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'aws-cdk-codepipeline-cloudformation-cross-region-with-action-role', {});\n\nconst bucket = new s3.Bucket(stack, 'MyBucket', {\n  versioned: true,\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\n\nconst sourceOutput = new codepipeline.Artifact();\nconst sourceAction = new cpactions.S3SourceAction({\n  actionName: 'S3',\n  bucketKey: 'some/path',\n  bucket,\n  output: sourceOutput,\n});\nconst sourceStage = {\n  stageName: 'Source',\n  actions: [sourceAction],\n};\n\nconst role = new iam.Role(stack, 'ActionRole', {\n  assumedBy: new iam.AccountPrincipal(cdk.Aws.ACCOUNT_ID),\n});\nrole.addToPolicy(new iam.PolicyStatement({\n  actions: ['sqs:*'],\n  resources: ['*'],\n}));\nconst cfnStage = {\n  stageName: 'CFN',\n  actions: [\n    new cpactions.CloudFormationCreateUpdateStackAction({\n      actionName: 'CFN_Deploy',\n      stackName: 'aws-cdk-codepipeline-cross-region-deploy-stack',\n      templatePath: sourceOutput.atPath('template.yml'),\n      adminPermissions: false,\n      role,\n    }),\n  ],\n};\n\nnew codepipeline.Pipeline(stack, 'MyPipeline', {\n  artifactBucket: bucket,\n  stages: [\n    sourceStage,\n    cfnStage,\n  ],\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"TemplateRepo2326F199\": {\"Type\": \"AWS::CodeCommit::Repository\", \"Properties\": {\"RepositoryName\": \"template-repo\"}}, \"PipelineArtifactsBucketEncryptionKey01D58D69\": {\"Type\": \"AWS::KMS::Key\", \"Properties\": {\"KeyPolicy\": {\"Statement\": [{\"Action\": \"kms:*\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}, \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"PipelineArtifactsBucketEncryptionKeyAlias5C510EEE\": {\"Type\": \"AWS::KMS::Alias\", \"Properties\": {\"AliasName\": \"alias/codepipeline-aws-cdk-codepipeline-cloudformation-pipeline-7dbde619\", \"TargetKeyId\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKey01D58D69\", \"Arn\"]}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"PipelineArtifactsBucket22248F97\": {\"Type\": \"AWS::S3::Bucket\", \"Properties\": {\"BucketEncryption\": {\"ServerSideEncryptionConfiguration\": [{\"ServerSideEncryptionByDefault\": {\"KMSMasterKeyID\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKey01D58D69\", \"Arn\"]}, \"SSEAlgorithm\": \"aws:kms\"}}]}, \"PublicAccessBlockConfiguration\": {\"BlockPublicAcls\": true, \"BlockPublicPolicy\": true, \"IgnorePublicAcls\": true, \"RestrictPublicBuckets\": true}}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"PipelineArtifactsBucketPolicyD4F9712A\": {\"Type\": \"AWS::S3::BucketPolicy\", \"Properties\": {\"Bucket\": {\"Ref\": \"PipelineArtifactsBucket22248F97\"}, \"PolicyDocument\": {\"Statement\": [{\"Action\": \"s3:*\", \"Condition\": {\"Bool\": {\"aws:SecureTransport\": \"false\"}}, \"Effect\": \"Deny\", \"Principal\": {\"AWS\": \"*\"}, \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucket22248F97\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucket22248F97\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}}}, \"PipelineRoleD68726F7\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codepipeline.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"PipelineRoleDefaultPolicyC7A05455\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucket22248F97\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucket22248F97\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"kms:Decrypt\", \"kms:DescribeKey\", \"kms:Encrypt\", \"kms:GenerateDataKey*\", \"kms:ReEncrypt*\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKey01D58D69\", \"Arn\"]}}, {\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineDeployApproveChangesCodePipelineActionRole5AA6E21B\", \"Arn\"]}, {\"Fn::GetAtt\": [\"PipelineDeployExecuteChangesCodePipelineActionRole6AA2756F\", \"Arn\"]}, {\"Fn::GetAtt\": [\"PipelineDeployPrepareChangesCodePipelineActionRole41931444\", \"Arn\"]}, {\"Fn::GetAtt\": [\"PipelineSourceCodePipelineActionRoleC6F9E7F5\", \"Arn\"]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineRoleDefaultPolicyC7A05455\", \"Roles\": [{\"Ref\": \"PipelineRoleD68726F7\"}]}}, \"PipelineC660917D\": {\"Type\": \"AWS::CodePipeline::Pipeline\", \"Properties\": {\"RoleArn\": {\"Fn::GetAtt\": [\"PipelineRoleD68726F7\", \"Arn\"]}, \"Stages\": [{\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Source\", \"Owner\": \"AWS\", \"Provider\": \"CodeCommit\", \"Version\": \"1\"}, \"Configuration\": {\"RepositoryName\": {\"Fn::GetAtt\": [\"TemplateRepo2326F199\", \"Name\"]}, \"BranchName\": \"master\", \"PollForSourceChanges\": true}, \"Name\": \"Source\", \"OutputArtifacts\": [{\"Name\": \"SourceArtifact\"}], \"RoleArn\": {\"Fn::GetAtt\": [\"PipelineSourceCodePipelineActionRoleC6F9E7F5\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"Source\"}, {\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Deploy\", \"Owner\": \"AWS\", \"Provider\": \"CloudFormation\", \"Version\": \"1\"}, \"Configuration\": {\"StackName\": \"OurStack\", \"Capabilities\": \"CAPABILITY_NAMED_IAM\", \"RoleArn\": {\"Fn::GetAtt\": [\"PipelineDeployPrepareChangesRoleD28C853C\", \"Arn\"]}, \"ActionMode\": \"CHANGE_SET_REPLACE\", \"ChangeSetName\": \"StagedChangeSet\", \"TemplatePath\": \"SourceArtifact::template.yaml\"}, \"InputArtifacts\": [{\"Name\": \"SourceArtifact\"}], \"Name\": \"PrepareChanges\", \"RoleArn\": {\"Fn::GetAtt\": [\"PipelineDeployPrepareChangesCodePipelineActionRole41931444\", \"Arn\"]}, \"RunOrder\": 1}, {\"ActionTypeId\": {\"Category\": \"Approval\", \"Owner\": \"AWS\", \"Provider\": \"Manual\", \"Version\": \"1\"}, \"Name\": \"ApproveChanges\", \"RoleArn\": {\"Fn::GetAtt\": [\"PipelineDeployApproveChangesCodePipelineActionRole5AA6E21B\", \"Arn\"]}, \"RunOrder\": 2}, {\"ActionTypeId\": {\"Category\": \"Deploy\", \"Owner\": \"AWS\", \"Provider\": \"CloudFormation\", \"Version\": \"1\"}, \"Configuration\": {\"StackName\": \"OurStack\", \"ActionMode\": \"CHANGE_SET_EXECUTE\", \"ChangeSetName\": \"StagedChangeSet\"}, \"Name\": \"ExecuteChanges\", \"RoleArn\": {\"Fn::GetAtt\": [\"PipelineDeployExecuteChangesCodePipelineActionRole6AA2756F\", \"Arn\"]}, \"RunOrder\": 3}], \"Name\": \"Deploy\"}], \"ArtifactStore\": {\"EncryptionKey\": {\"Id\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKey01D58D69\", \"Arn\"]}, \"Type\": \"KMS\"}, \"Location\": {\"Ref\": \"PipelineArtifactsBucket22248F97\"}, \"Type\": \"S3\"}}, \"DependsOn\": [\"PipelineRoleDefaultPolicyC7A05455\", \"PipelineRoleD68726F7\"]}, \"PipelineSourceCodePipelineActionRoleC6F9E7F5\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}}, \"PipelineSourceCodePipelineActionRoleDefaultPolicy2D565925\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucket22248F97\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucket22248F97\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"kms:Decrypt\", \"kms:DescribeKey\", \"kms:Encrypt\", \"kms:GenerateDataKey*\", \"kms:ReEncrypt*\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKey01D58D69\", \"Arn\"]}}, {\"Action\": [\"codecommit:CancelUploadArchive\", \"codecommit:GetBranch\", \"codecommit:GetCommit\", \"codecommit:GetUploadArchiveStatus\", \"codecommit:UploadArchive\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"TemplateRepo2326F199\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineSourceCodePipelineActionRoleDefaultPolicy2D565925\", \"Roles\": [{\"Ref\": \"PipelineSourceCodePipelineActionRoleC6F9E7F5\"}]}}, \"PipelineDeployPrepareChangesCodePipelineActionRole41931444\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}}, \"PipelineDeployPrepareChangesCodePipelineActionRoleDefaultPolicyAD3C24A3\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"iam:PassRole\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"PipelineDeployPrepareChangesRoleD28C853C\", \"Arn\"]}}, {\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucket22248F97\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucket22248F97\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"kms:Decrypt\", \"kms:DescribeKey\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKey01D58D69\", \"Arn\"]}}, {\"Action\": [\"cloudformation:CreateChangeSet\", \"cloudformation:DeleteChangeSet\", \"cloudformation:DescribeChangeSet\", \"cloudformation:DescribeStacks\"], \"Condition\": {\"StringEqualsIfExists\": {\"cloudformation:ChangeSetName\": \"StagedChangeSet\"}}, \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":cloudformation:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":stack/OurStack/*\"]]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineDeployPrepareChangesCodePipelineActionRoleDefaultPolicyAD3C24A3\", \"Roles\": [{\"Ref\": \"PipelineDeployPrepareChangesCodePipelineActionRole41931444\"}]}}, \"PipelineDeployPrepareChangesRoleD28C853C\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"cloudformation.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"PipelineDeployPrepareChangesRoleDefaultPolicy8CDCCD73\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucket22248F97\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucket22248F97\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"kms:Decrypt\", \"kms:DescribeKey\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKey01D58D69\", \"Arn\"]}}, {\"Action\": \"*\", \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineDeployPrepareChangesRoleDefaultPolicy8CDCCD73\", \"Roles\": [{\"Ref\": \"PipelineDeployPrepareChangesRoleD28C853C\"}]}}, \"PipelineDeployApproveChangesCodePipelineActionRole5AA6E21B\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}}, \"PipelineDeployExecuteChangesCodePipelineActionRole6AA2756F\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}}, \"PipelineDeployExecuteChangesCodePipelineActionRoleDefaultPolicy70764525\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"cloudformation:DescribeChangeSet\", \"cloudformation:DescribeStacks\", \"cloudformation:ExecuteChangeSet\"], \"Condition\": {\"StringEqualsIfExists\": {\"cloudformation:ChangeSetName\": \"StagedChangeSet\"}}, \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":cloudformation:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":stack/OurStack/*\"]]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineDeployExecuteChangesCodePipelineActionRoleDefaultPolicy70764525\", \"Roles\": [{\"Ref\": \"PipelineDeployExecuteChangesCodePipelineActionRole6AA2756F\"}]}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as codecommit from 'aws-cdk-lib/aws-codecommit';\nimport * as codepipeline from 'aws-cdk-lib/aws-codepipeline';\nimport * as cdk from 'aws-cdk-lib';\nimport * as cpactions from 'aws-cdk-lib/aws-codepipeline-actions';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'aws-cdk-codepipeline-cloudformation');\n\n/// !show\n// Source stage: read from repository\nconst repo = new codecommit.Repository(stack, 'TemplateRepo', {\n  repositoryName: 'template-repo',\n});\nconst sourceOutput = new codepipeline.Artifact('SourceArtifact');\nconst source = new cpactions.CodeCommitSourceAction({\n  actionName: 'Source',\n  repository: repo,\n  output: sourceOutput,\n  trigger: cpactions.CodeCommitTrigger.POLL,\n});\nconst sourceStage = {\n  stageName: 'Source',\n  actions: [source],\n};\n\n// Deployment stage: create and deploy changeset with manual approval\nconst stackName = 'OurStack';\nconst changeSetName = 'StagedChangeSet';\n\nconst prodStage = {\n  stageName: 'Deploy',\n  actions: [\n    new cpactions.CloudFormationCreateReplaceChangeSetAction({\n      actionName: 'PrepareChanges',\n      stackName,\n      changeSetName,\n      adminPermissions: true,\n      templatePath: sourceOutput.atPath('template.yaml'),\n      runOrder: 1,\n    }),\n    new cpactions.ManualApprovalAction({\n      actionName: 'ApproveChanges',\n      runOrder: 2,\n    }),\n    new cpactions.CloudFormationExecuteChangeSetAction({\n      actionName: 'ExecuteChanges',\n      stackName,\n      changeSetName,\n      runOrder: 3,\n    }),\n  ],\n};\n\nnew codepipeline.Pipeline(stack, 'Pipeline', {\n  stages: [\n    sourceStage,\n    prodStage,\n  ],\n});\n/// !hide\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"Bucket83908E77\": {\"Type\": \"AWS::S3::Bucket\", \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"PipelineRoleD68726F7\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codepipeline.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"PipelineRoleDefaultPolicyC7A05455\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"Bucket83908E77\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"Bucket83908E77\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineApproveManualApprovalCodePipelineActionRole51D669A5\", \"Arn\"]}, {\"Fn::GetAtt\": [\"PipelineSourceS3CodePipelineActionRole3CAFD08F\", \"Arn\"]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineRoleDefaultPolicyC7A05455\", \"Roles\": [{\"Ref\": \"PipelineRoleD68726F7\"}]}}, \"PipelineC660917D\": {\"Type\": \"AWS::CodePipeline::Pipeline\", \"Properties\": {\"RoleArn\": {\"Fn::GetAtt\": [\"PipelineRoleD68726F7\", \"Arn\"]}, \"Stages\": [{\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Source\", \"Owner\": \"AWS\", \"Provider\": \"S3\", \"Version\": \"1\"}, \"Configuration\": {\"S3Bucket\": {\"Ref\": \"Bucket83908E77\"}, \"S3ObjectKey\": \"file.zip\"}, \"Name\": \"S3\", \"OutputArtifacts\": [{\"Name\": \"Artifact_Source_S3\"}], \"RoleArn\": {\"Fn::GetAtt\": [\"PipelineSourceS3CodePipelineActionRole3CAFD08F\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"Source\"}, {\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Approval\", \"Owner\": \"AWS\", \"Provider\": \"Manual\", \"Version\": \"1\"}, \"Configuration\": {\"NotificationArn\": {\"Ref\": \"PipelineApproveManualApprovalTopicResourceF5A35B20\"}}, \"Name\": \"ManualApproval\", \"RoleArn\": {\"Fn::GetAtt\": [\"PipelineApproveManualApprovalCodePipelineActionRole51D669A5\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"Approve\"}], \"ArtifactStore\": {\"Location\": {\"Ref\": \"Bucket83908E77\"}, \"Type\": \"S3\"}}, \"DependsOn\": [\"PipelineRoleDefaultPolicyC7A05455\", \"PipelineRoleD68726F7\"]}, \"PipelineSourceS3CodePipelineActionRole3CAFD08F\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}}, \"PipelineSourceS3CodePipelineActionRoleDefaultPolicy8B9DCBCF\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"Bucket83908E77\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"Bucket83908E77\", \"Arn\"]}, \"/file.zip\"]]}]}, {\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"Bucket83908E77\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"Bucket83908E77\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineSourceS3CodePipelineActionRoleDefaultPolicy8B9DCBCF\", \"Roles\": [{\"Ref\": \"PipelineSourceS3CodePipelineActionRole3CAFD08F\"}]}}, \"PipelineApproveManualApprovalCodePipelineActionRole51D669A5\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}}, \"PipelineApproveManualApprovalCodePipelineActionRoleDefaultPolicyB6418282\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"sns:Publish\", \"Effect\": \"Allow\", \"Resource\": {\"Ref\": \"PipelineApproveManualApprovalTopicResourceF5A35B20\"}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineApproveManualApprovalCodePipelineActionRoleDefaultPolicyB6418282\", \"Roles\": [{\"Ref\": \"PipelineApproveManualApprovalCodePipelineActionRole51D669A5\"}]}}, \"PipelineApproveManualApprovalTopicResourceF5A35B20\": {\"Type\": \"AWS::SNS::Topic\"}, \"PipelineApproveManualApprovalTopicResourceadamruka85gmailcom202874CD\": {\"Type\": \"AWS::SNS::Subscription\", \"Properties\": {\"Protocol\": \"email\", \"TopicArn\": {\"Ref\": \"PipelineApproveManualApprovalTopicResourceF5A35B20\"}, \"Endpoint\": \"adamruka85@gmail.com\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as codepipeline from 'aws-cdk-lib/aws-codepipeline';\nimport * as s3 from 'aws-cdk-lib/aws-s3';\nimport * as cdk from 'aws-cdk-lib';\nimport * as cpactions from 'aws-cdk-lib/aws-codepipeline-actions';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'aws-cdk-codepipeline-manual-approval');\n\nconst bucket = new s3.Bucket(stack, 'Bucket');\n\nnew codepipeline.Pipeline(stack, 'Pipeline', {\n  artifactBucket: bucket,\n  stages: [\n    {\n      stageName: 'Source',\n      actions: [\n        new cpactions.S3SourceAction({\n          actionName: 'S3',\n          bucket,\n          bucketKey: 'file.zip',\n          output: new codepipeline.Artifact(),\n        }),\n      ],\n    },\n    {\n      stageName: 'Approve',\n      actions: [\n        new cpactions.ManualApprovalAction({\n          actionName: 'ManualApproval',\n          notifyEmails: ['adamruka85@gmail.com'],\n        }),\n      ],\n    },\n  ],\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyRepoF4F48043\": {\"Type\": \"AWS::CodeCommit::Repository\", \"Properties\": {\"RepositoryName\": \"MyIntegTestTempRepo\"}}, \"MyRepoawscdkcodepipelinecodebuildbatchPipeline674F06D4EventRuleD3DE52E7\": {\"Type\": \"AWS::Events::Rule\", \"Properties\": {\"EventPattern\": {\"source\": [\"aws.codecommit\"], \"resources\": [{\"Fn::GetAtt\": [\"MyRepoF4F48043\", \"Arn\"]}], \"detail-type\": [\"CodeCommit Repository State Change\"], \"detail\": {\"event\": [\"referenceCreated\", \"referenceUpdated\"], \"referenceName\": [\"master\"]}}, \"State\": \"ENABLED\", \"Targets\": [{\"Arn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":codepipeline:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":\", {\"Ref\": \"PipelineC660917D\"}]]}, \"Id\": \"Target0\", \"RoleArn\": {\"Fn::GetAtt\": [\"PipelineEventsRole46BEEA7C\", \"Arn\"]}}]}}, \"MyBucketF68F3FF0\": {\"Type\": \"AWS::S3::Bucket\", \"Properties\": {\"VersioningConfiguration\": {\"Status\": \"Enabled\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"PipelineRoleD68726F7\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codepipeline.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"PipelineRoleDefaultPolicyC7A05455\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"PipelineRoleD68726F7\", \"Arn\"]}}, {\"Action\": [\"codecommit:CancelUploadArchive\", \"codecommit:GetBranch\", \"codecommit:GetCommit\", \"codecommit:GetUploadArchiveStatus\", \"codecommit:UploadArchive\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"MyRepoF4F48043\", \"Arn\"]}}, {\"Action\": [\"codebuild:BatchGetBuildBatches\", \"codebuild:StartBuildBatch\", \"codebuild:StopBuildBatch\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"MyBuildProject30DB9D6E\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineRoleDefaultPolicyC7A05455\", \"Roles\": [{\"Ref\": \"PipelineRoleD68726F7\"}]}}, \"PipelineC660917D\": {\"Type\": \"AWS::CodePipeline::Pipeline\", \"Properties\": {\"RoleArn\": {\"Fn::GetAtt\": [\"PipelineRoleD68726F7\", \"Arn\"]}, \"Stages\": [{\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Source\", \"Owner\": \"AWS\", \"Provider\": \"CodeCommit\", \"Version\": \"1\"}, \"Configuration\": {\"RepositoryName\": {\"Fn::GetAtt\": [\"MyRepoF4F48043\", \"Name\"]}, \"BranchName\": \"master\", \"PollForSourceChanges\": false}, \"Name\": \"Source\", \"OutputArtifacts\": [{\"Name\": \"Artifact_Source_Source\"}], \"RoleArn\": {\"Fn::GetAtt\": [\"PipelineRoleD68726F7\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"Source\"}, {\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Build\", \"Owner\": \"AWS\", \"Provider\": \"CodeBuild\", \"Version\": \"1\"}, \"Configuration\": {\"ProjectName\": {\"Ref\": \"MyBuildProject30DB9D6E\"}, \"BatchEnabled\": \"true\"}, \"InputArtifacts\": [{\"Name\": \"Artifact_Source_Source\"}], \"Name\": \"Build\", \"RoleArn\": {\"Fn::GetAtt\": [\"PipelineRoleD68726F7\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"Build\"}], \"ArtifactStore\": {\"Location\": {\"Ref\": \"MyBucketF68F3FF0\"}, \"Type\": \"S3\"}}, \"DependsOn\": [\"PipelineRoleDefaultPolicyC7A05455\", \"PipelineRoleD68726F7\"]}, \"PipelineEventsRole46BEEA7C\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"events.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"PipelineEventsRoleDefaultPolicyFF4FCCE0\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"codepipeline:StartPipelineExecution\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":codepipeline:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":\", {\"Ref\": \"PipelineC660917D\"}]]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineEventsRoleDefaultPolicyFF4FCCE0\", \"Roles\": [{\"Ref\": \"PipelineEventsRole46BEEA7C\"}]}}, \"MyBuildProjectRole6B7E2258\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codebuild.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"MyBuildProjectRoleDefaultPolicy5604AA87\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"logs:CreateLogGroup\", \"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"MyBuildProject30DB9D6E\"}, \":*\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"MyBuildProject30DB9D6E\"}]]}]}, {\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"MyBucketF68F3FF0\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyBuildProjectRoleDefaultPolicy5604AA87\", \"Roles\": [{\"Ref\": \"MyBuildProjectRole6B7E2258\"}]}}, \"MyBuildProject30DB9D6E\": {\"Type\": \"AWS::CodeBuild::Project\", \"Properties\": {\"Artifacts\": {\"Type\": \"CODEPIPELINE\"}, \"Environment\": {\"ComputeType\": \"BUILD_GENERAL1_SMALL\", \"Image\": \"aws/codebuild/standard:1.0\", \"ImagePullCredentialsType\": \"CODEBUILD\", \"PrivilegedMode\": false, \"Type\": \"LINUX_CONTAINER\"}, \"ServiceRole\": {\"Fn::GetAtt\": [\"MyBuildProjectRole6B7E2258\", \"Arn\"]}, \"Source\": {\"Type\": \"CODEPIPELINE\"}, \"BuildBatchConfig\": {\"ServiceRole\": {\"Fn::GetAtt\": [\"MyBuildProjectBatchServiceRole531F3056\", \"Arn\"]}}, \"Cache\": {\"Type\": \"NO_CACHE\"}, \"EncryptionKey\": \"alias/aws/s3\"}}, \"MyBuildProjectBatchServiceRole531F3056\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codebuild.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"MyBuildProjectBatchServiceRoleDefaultPolicy816785FC\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"codebuild:RetryBuild\", \"codebuild:StartBuild\", \"codebuild:StopBuild\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"MyBuildProject30DB9D6E\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyBuildProjectBatchServiceRoleDefaultPolicy816785FC\", \"Roles\": [{\"Ref\": \"MyBuildProjectBatchServiceRole531F3056\"}]}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as codebuild from 'aws-cdk-lib/aws-codebuild';\nimport * as codecommit from 'aws-cdk-lib/aws-codecommit';\nimport * as codepipeline from 'aws-cdk-lib/aws-codepipeline';\nimport * as s3 from 'aws-cdk-lib/aws-s3';\nimport * as cdk from 'aws-cdk-lib';\nimport * as cpactions from 'aws-cdk-lib/aws-codepipeline-actions';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'aws-cdk-codepipeline-codebuild-batch');\n\nconst repository = new codecommit.Repository(stack, 'MyRepo', {\n  repositoryName: 'MyIntegTestTempRepo',\n});\nconst bucket = new s3.Bucket(stack, 'MyBucket', {\n  versioned: true,\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\n\nconst pipeline = new codepipeline.Pipeline(stack, 'Pipeline', {\n  artifactBucket: bucket,\n});\nconst pipelineRole = pipeline.role;\n\nconst sourceOutput = new codepipeline.Artifact();\nconst sourceAction = new cpactions.CodeCommitSourceAction({\n  actionName: 'Source',\n  repository,\n  output: sourceOutput,\n  role: pipelineRole,\n});\npipeline.addStage({\n  stageName: 'Source',\n  actions: [\n    sourceAction,\n  ],\n});\n\nconst project = new codebuild.PipelineProject(stack, 'MyBuildProject', {\n  grantReportGroupPermissions: false,\n});\nconst buildAction = new cpactions.CodeBuildAction({\n  actionName: 'Build',\n  project,\n  executeBatchBuild: true,\n  input: sourceOutput,\n  role: pipelineRole,\n});\npipeline.addStage({\n  stageName: 'Build',\n  actions: [\n    buildAction,\n  ],\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"CodeDeployApplicationE587C27C\": {\"Type\": \"AWS::CodeDeploy::Application\", \"Properties\": {\"ApplicationName\": \"IntegTestDeployApp\", \"ComputePlatform\": \"Server\"}}, \"CustomDeployConfig52EEBC13\": {\"Type\": \"AWS::CodeDeploy::DeploymentConfig\", \"Properties\": {\"MinimumHealthyHosts\": {\"Type\": \"HOST_COUNT\", \"Value\": 0}}}, \"CodeDeployGroupRole1D304F7A\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codedeploy.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSCodeDeployRole\"]]}]}}, \"CodeDeployGroup58220FC8\": {\"Type\": \"AWS::CodeDeploy::DeploymentGroup\", \"Properties\": {\"ApplicationName\": {\"Ref\": \"CodeDeployApplicationE587C27C\"}, \"ServiceRoleArn\": {\"Fn::GetAtt\": [\"CodeDeployGroupRole1D304F7A\", \"Arn\"]}, \"AlarmConfiguration\": {\"Enabled\": false}, \"AutoRollbackConfiguration\": {\"Enabled\": true, \"Events\": [\"DEPLOYMENT_FAILURE\"]}, \"DeploymentConfigName\": {\"Ref\": \"CustomDeployConfig52EEBC13\"}, \"DeploymentGroupName\": \"IntegTestDeploymentGroup\"}}, \"CodeDeployPipelineIntegTest9F618D61\": {\"Type\": \"AWS::S3::Bucket\", \"Properties\": {\"VersioningConfiguration\": {\"Status\": \"Enabled\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"PipelineRoleD68726F7\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codepipeline.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"PipelineRoleDefaultPolicyC7A05455\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"CodeDeployPipelineIntegTest9F618D61\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"CodeDeployPipelineIntegTest9F618D61\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineDeployCodeDeployCodePipelineActionRoleFA7F8EEF\", \"Arn\"]}, {\"Fn::GetAtt\": [\"PipelineSourceS3SourceCodePipelineActionRole8DE11A40\", \"Arn\"]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineRoleDefaultPolicyC7A05455\", \"Roles\": [{\"Ref\": \"PipelineRoleD68726F7\"}]}}, \"PipelineC660917D\": {\"Type\": \"AWS::CodePipeline::Pipeline\", \"Properties\": {\"RoleArn\": {\"Fn::GetAtt\": [\"PipelineRoleD68726F7\", \"Arn\"]}, \"Stages\": [{\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Source\", \"Owner\": \"AWS\", \"Provider\": \"S3\", \"Version\": \"1\"}, \"Configuration\": {\"S3Bucket\": {\"Ref\": \"CodeDeployPipelineIntegTest9F618D61\"}, \"S3ObjectKey\": \"application.zip\"}, \"Name\": \"S3Source\", \"OutputArtifacts\": [{\"Name\": \"SourceOutput\"}], \"RoleArn\": {\"Fn::GetAtt\": [\"PipelineSourceS3SourceCodePipelineActionRole8DE11A40\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"Source\"}, {\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Deploy\", \"Owner\": \"AWS\", \"Provider\": \"CodeDeploy\", \"Version\": \"1\"}, \"Configuration\": {\"ApplicationName\": {\"Ref\": \"CodeDeployApplicationE587C27C\"}, \"DeploymentGroupName\": {\"Ref\": \"CodeDeployGroup58220FC8\"}}, \"InputArtifacts\": [{\"Name\": \"SourceOutput\"}], \"Name\": \"CodeDeploy\", \"RoleArn\": {\"Fn::GetAtt\": [\"PipelineDeployCodeDeployCodePipelineActionRoleFA7F8EEF\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"Deploy\"}], \"ArtifactStore\": {\"Location\": {\"Ref\": \"CodeDeployPipelineIntegTest9F618D61\"}, \"Type\": \"S3\"}}, \"DependsOn\": [\"PipelineRoleDefaultPolicyC7A05455\", \"PipelineRoleD68726F7\"]}, \"PipelineSourceS3SourceCodePipelineActionRole8DE11A40\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}}, \"PipelineSourceS3SourceCodePipelineActionRoleDefaultPolicy352A3912\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"CodeDeployPipelineIntegTest9F618D61\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"CodeDeployPipelineIntegTest9F618D61\", \"Arn\"]}, \"/application.zip\"]]}]}, {\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"CodeDeployPipelineIntegTest9F618D61\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"CodeDeployPipelineIntegTest9F618D61\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineSourceS3SourceCodePipelineActionRoleDefaultPolicy352A3912\", \"Roles\": [{\"Ref\": \"PipelineSourceS3SourceCodePipelineActionRole8DE11A40\"}]}}, \"PipelineDeployCodeDeployCodePipelineActionRoleFA7F8EEF\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}}, \"PipelineDeployCodeDeployCodePipelineActionRoleDefaultPolicy7B34E673\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"codedeploy:GetApplicationRevision\", \"codedeploy:RegisterApplicationRevision\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":codedeploy:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":application:\", {\"Ref\": \"CodeDeployApplicationE587C27C\"}]]}}, {\"Action\": [\"codedeploy:CreateDeployment\", \"codedeploy:GetDeployment\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":codedeploy:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":deploymentgroup:\", {\"Ref\": \"CodeDeployApplicationE587C27C\"}, \"/\", {\"Ref\": \"CodeDeployGroup58220FC8\"}]]}}, {\"Action\": \"codedeploy:GetDeploymentConfig\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":codedeploy:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":deploymentconfig:\", {\"Ref\": \"CustomDeployConfig52EEBC13\"}]]}}, {\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"CodeDeployPipelineIntegTest9F618D61\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"CodeDeployPipelineIntegTest9F618D61\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineDeployCodeDeployCodePipelineActionRoleDefaultPolicy7B34E673\", \"Roles\": [{\"Ref\": \"PipelineDeployCodeDeployCodePipelineActionRoleFA7F8EEF\"}]}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as codedeploy from 'aws-cdk-lib/aws-codedeploy';\nimport * as codepipeline from 'aws-cdk-lib/aws-codepipeline';\nimport * as s3 from 'aws-cdk-lib/aws-s3';\nimport * as cdk from 'aws-cdk-lib';\nimport * as cpactions from 'aws-cdk-lib/aws-codepipeline-actions';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'aws-cdk-codepipeline-codedeploy');\n\nconst application = new codedeploy.ServerApplication(stack, 'CodeDeployApplication', {\n  applicationName: 'IntegTestDeployApp',\n});\n\nconst deploymentConfig = new codedeploy.ServerDeploymentConfig(stack, 'CustomDeployConfig', {\n  minimumHealthyHosts: codedeploy.MinimumHealthyHosts.count(0),\n});\n\nconst deploymentGroup = new codedeploy.ServerDeploymentGroup(stack, 'CodeDeployGroup', {\n  application,\n  deploymentGroupName: 'IntegTestDeploymentGroup',\n  deploymentConfig,\n});\n\nconst bucket = new s3.Bucket(stack, 'CodeDeployPipelineIntegTest', {\n  versioned: true,\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\n\nconst pipeline = new codepipeline.Pipeline(stack, 'Pipeline', {\n  artifactBucket: bucket,\n});\n\nconst sourceStage = pipeline.addStage({ stageName: 'Source' });\nconst sourceOutput = new codepipeline.Artifact('SourceOutput');\nconst sourceAction = new cpactions.S3SourceAction({\n  actionName: 'S3Source',\n  bucketKey: 'application.zip',\n  output: sourceOutput,\n  bucket,\n});\nsourceStage.addAction(sourceAction);\n\nconst deployStage = pipeline.addStage({ stageName: 'Deploy' });\ndeployStage.addAction(new cpactions.CodeDeployServerDeployAction({\n  actionName: 'CodeDeploy',\n  deploymentGroup,\n  input: sourceOutput,\n}));\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"tshandlerServiceRole8876B8E7\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"tshandler4E1C6929\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"5017e4b2e278e32bc634202d075b7ed8961b0d784f75450f7918a6a4f6f7df4a.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"tshandlerServiceRole8876B8E7\", \"Arn\"]}, \"Environment\": {\"Variables\": {\"AWS_NODEJS_CONNECTION_REUSE_ENABLED\": \"1\"}}, \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"tshandlerServiceRole8876B8E7\"]}, \"jshandlerServiceRole781AF366\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"jshandlerD8909241\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"6180c9978dfd12a00b82fe039bf88defd289ae4bfbcca5917f7f306a384f9eae.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"jshandlerServiceRole781AF366\", \"Arn\"]}, \"Environment\": {\"Variables\": {\"AWS_NODEJS_CONNECTION_REUSE_ENABLED\": \"1\"}}, \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"jshandlerServiceRole781AF366\"]}, \"Vpc8378EB38\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"cdk-integ-lambda-nodejs/Vpc\"}]}}, \"VpcPublicSubnet1Subnet5C2D37C4\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"cdk-integ-lambda-nodejs/Vpc/PublicSubnet1\"}]}}, \"VpcPublicSubnet1RouteTable6C95E38E\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"cdk-integ-lambda-nodejs/Vpc/PublicSubnet1\"}]}}, \"VpcPublicSubnet1RouteTableAssociation97140677\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet1RouteTable6C95E38E\"}, \"SubnetId\": {\"Ref\": \"VpcPublicSubnet1Subnet5C2D37C4\"}}}, \"VpcPublicSubnet1DefaultRoute3DA9E72A\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet1RouteTable6C95E38E\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VpcIGWD7BA715C\"}}, \"DependsOn\": [\"VpcVPCGWBF912B6E\"]}, \"VpcPublicSubnet1EIPD7E02669\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"cdk-integ-lambda-nodejs/Vpc/PublicSubnet1\"}]}}, \"VpcPublicSubnet1NATGateway4D7517AA\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VpcPublicSubnet1Subnet5C2D37C4\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VpcPublicSubnet1EIPD7E02669\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"cdk-integ-lambda-nodejs/Vpc/PublicSubnet1\"}]}, \"DependsOn\": [\"VpcPublicSubnet1DefaultRoute3DA9E72A\", \"VpcPublicSubnet1RouteTableAssociation97140677\"]}, \"VpcPublicSubnet2Subnet691E08A3\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"cdk-integ-lambda-nodejs/Vpc/PublicSubnet2\"}]}}, \"VpcPublicSubnet2RouteTable94F7E489\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"cdk-integ-lambda-nodejs/Vpc/PublicSubnet2\"}]}}, \"VpcPublicSubnet2RouteTableAssociationDD5762D8\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet2RouteTable94F7E489\"}, \"SubnetId\": {\"Ref\": \"VpcPublicSubnet2Subnet691E08A3\"}}}, \"VpcPublicSubnet2DefaultRoute97F91067\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet2RouteTable94F7E489\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VpcIGWD7BA715C\"}}, \"DependsOn\": [\"VpcVPCGWBF912B6E\"]}, \"VpcPublicSubnet2EIP3C605A87\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"cdk-integ-lambda-nodejs/Vpc/PublicSubnet2\"}]}}, \"VpcPublicSubnet2NATGateway9182C01D\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VpcPublicSubnet2Subnet691E08A3\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VpcPublicSubnet2EIP3C605A87\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"cdk-integ-lambda-nodejs/Vpc/PublicSubnet2\"}]}, \"DependsOn\": [\"VpcPublicSubnet2DefaultRoute97F91067\", \"VpcPublicSubnet2RouteTableAssociationDD5762D8\"]}, \"VpcPrivateSubnet1Subnet536B997A\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"cdk-integ-lambda-nodejs/Vpc/PrivateSubnet1\"}]}}, \"VpcPrivateSubnet1RouteTableB2C5B500\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"cdk-integ-lambda-nodejs/Vpc/PrivateSubnet1\"}]}}, \"VpcPrivateSubnet1RouteTableAssociation70C59FA6\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet1RouteTableB2C5B500\"}, \"SubnetId\": {\"Ref\": \"VpcPrivateSubnet1Subnet536B997A\"}}}, \"VpcPrivateSubnet1DefaultRouteBE02A9ED\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet1RouteTableB2C5B500\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VpcPublicSubnet1NATGateway4D7517AA\"}}}, \"VpcPrivateSubnet2Subnet3788AAA1\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"cdk-integ-lambda-nodejs/Vpc/PrivateSubnet2\"}]}}, \"VpcPrivateSubnet2RouteTableA678073B\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"cdk-integ-lambda-nodejs/Vpc/PrivateSubnet2\"}]}}, \"VpcPrivateSubnet2RouteTableAssociationA89CAD56\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet2RouteTableA678073B\"}, \"SubnetId\": {\"Ref\": \"VpcPrivateSubnet2Subnet3788AAA1\"}}}, \"VpcPrivateSubnet2DefaultRoute060D2087\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet2RouteTableA678073B\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VpcPublicSubnet2NATGateway9182C01D\"}}}, \"VpcIGWD7BA715C\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"cdk-integ-lambda-nodejs/Vpc\"}]}}, \"VpcVPCGWBF912B6E\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"InternetGatewayId\": {\"Ref\": \"VpcIGWD7BA715C\"}}}, \"tshandlervpcServiceRoleF6D326A3\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole\"]]}]}, \"DependsOn\": [\"VpcPrivateSubnet1DefaultRouteBE02A9ED\", \"VpcPrivateSubnet1RouteTableAssociation70C59FA6\", \"VpcPrivateSubnet2DefaultRoute060D2087\", \"VpcPrivateSubnet2RouteTableAssociationA89CAD56\"]}, \"tshandlervpcSecurityGroup587CC215\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"Automatic security group for Lambda Function cdkinteglambdanodejstshandlervpcAAE6104A\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"VpcId\": {\"Ref\": \"Vpc8378EB38\"}}, \"DependsOn\": [\"VpcPrivateSubnet1DefaultRouteBE02A9ED\", \"VpcPrivateSubnet1RouteTableAssociation70C59FA6\", \"VpcPrivateSubnet2DefaultRoute060D2087\", \"VpcPrivateSubnet2RouteTableAssociationA89CAD56\"]}, \"tshandlervpcA502E26A\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"382942a012a71461edc27c0448dc538344be5c159143f651b626408206e10d44.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"tshandlervpcServiceRoleF6D326A3\", \"Arn\"]}, \"Environment\": {\"Variables\": {\"AWS_NODEJS_CONNECTION_REUSE_ENABLED\": \"1\"}}, \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\", \"VpcConfig\": {\"SecurityGroupIds\": [{\"Fn::GetAtt\": [\"tshandlervpcSecurityGroup587CC215\", \"GroupId\"]}], \"SubnetIds\": [{\"Ref\": \"VpcPrivateSubnet1Subnet536B997A\"}, {\"Ref\": \"VpcPrivateSubnet2Subnet3788AAA1\"}]}}, \"DependsOn\": [\"tshandlervpcServiceRoleF6D326A3\", \"VpcPrivateSubnet1DefaultRouteBE02A9ED\", \"VpcPrivateSubnet1RouteTableAssociation70C59FA6\", \"VpcPrivateSubnet2DefaultRoute060D2087\", \"VpcPrivateSubnet2RouteTableAssociationA89CAD56\"]}, \"tshandlercustomhandlernodotsServiceRole1775E15E\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"tshandlercustomhandlernodots381F62EE\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"5017e4b2e278e32bc634202d075b7ed8961b0d784f75450f7918a6a4f6f7df4a.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"tshandlercustomhandlernodotsServiceRole1775E15E\", \"Arn\"]}, \"Environment\": {\"Variables\": {\"AWS_NODEJS_CONNECTION_REUSE_ENABLED\": \"1\"}}, \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"tshandlercustomhandlernodotsServiceRole1775E15E\"]}, \"tshandlercustomhandlerdotsServiceRole0575D3CB\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"tshandlercustomhandlerdots2695F653\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"a33898f49e24c41ff9be236439c418d30e576c5f57763097162d9ec4245216ce.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"tshandlercustomhandlerdotsServiceRole0575D3CB\", \"Arn\"]}, \"Environment\": {\"Variables\": {\"AWS_NODEJS_CONNECTION_REUSE_ENABLED\": \"1\"}}, \"Handler\": \"ts-web.run.sh\", \"Layers\": [{\"Fn::Join\": [\"\", [\"arn:aws:lambda:\", {\"Ref\": \"AWS::Region\"}, \":753240598075:layer:LambdaAdapterLayerX86:13\"]]}], \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"tshandlercustomhandlerdotsServiceRole0575D3CB\"]}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as os from 'os';\nimport * as path from 'path';\nimport { Vpc } from 'aws-cdk-lib/aws-ec2';\nimport { LayerVersion, Runtime } from 'aws-cdk-lib/aws-lambda';\nimport { Aws, App, Stack, StackProps } from 'aws-cdk-lib';\nimport { Construct } from 'constructs';\nimport * as lambda from 'aws-cdk-lib/aws-lambda-nodejs';\n\nclass TestStack extends Stack {\n  constructor(scope: Construct, id: string, props?: StackProps) {\n    super(scope, id, props);\n\n    new lambda.NodejsFunction(this, 'ts-handler', {\n      entry: path.join(__dirname, 'integ-handlers/ts-handler.ts'),\n      runtime: Runtime.NODEJS_14_X,\n      bundling: {\n        minify: true,\n        sourceMap: true,\n        sourceMapMode: lambda.SourceMapMode.BOTH,\n      },\n    });\n\n    new lambda.NodejsFunction(this, 'js-handler', {\n      entry: path.join(__dirname, 'integ-handlers/js-handler.js'),\n      runtime: Runtime.NODEJS_14_X,\n    });\n\n    new lambda.NodejsFunction(this, 'ts-handler-vpc', {\n      entry: path.join(__dirname, 'integ-handlers/ts-handler.ts'),\n      runtime: Runtime.NODEJS_14_X,\n      vpc: new Vpc(this, 'Vpc', { restrictDefaultSecurityGroup: false }),\n    });\n\n    new lambda.NodejsFunction(this, 'ts-handler-custom-handler-no-dots', {\n      entry: path.join(__dirname, 'integ-handlers/ts-handler.ts'),\n      runtime: Runtime.NODEJS_14_X,\n      bundling: {\n        minify: true,\n        sourceMap: true,\n        sourceMapMode: lambda.SourceMapMode.BOTH,\n      },\n      handler: 'handler',\n    });\n\n    new lambda.NodejsFunction(this, 'ts-handler-custom-handler-dots', {\n      entry: path.join(__dirname, 'integ-handlers/ts-web-handler.ts'),\n      runtime: Runtime.NODEJS_14_X,\n      bundling: {\n        minify: true,\n        sourceMap: true,\n        sourceMapMode: lambda.SourceMapMode.BOTH,\n        commandHooks: {\n          beforeBundling: () => [],\n          beforeInstall: () => [],\n          afterBundling: (_inputDir, outputDir) => [\n            `${os.platform() === 'win32' ? 'copy' : 'cp'} ${path.join(\n              __dirname,\n              'integ-handlers',\n              'ts-web-run.sh',\n            )} ${outputDir}`,\n          ],\n        },\n      },\n      handler: 'ts-web.run.sh',\n      layers: [\n        LayerVersion.fromLayerVersionArn(\n          this,\n          'lambda-adapter-layer',\n          `arn:aws:lambda:${Aws.REGION}:753240598075:layer:LambdaAdapterLayerX86:13`,\n        ),\n      ],\n    });\n  }\n}\n\nconst app = new App();\nnew TestStack(app, 'cdk-integ-lambda-nodejs');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"tsdecoratorhandlerServiceRole61E9E52C\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"tsdecoratorhandlerC8E2F076\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"8df6c4f7f61921e6f88f328521b8a71aef10b045b77847bd61cfe75cf3a64c32.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"tsdecoratorhandlerServiceRole61E9E52C\", \"Arn\"]}, \"Environment\": {\"Variables\": {\"AWS_NODEJS_CONNECTION_REUSE_ENABLED\": \"1\"}}, \"Handler\": \"index.handler\", \"Runtime\": \"nodejs16.x\"}, \"DependsOn\": [\"tsdecoratorhandlerServiceRole61E9E52C\"]}, \"tsdecoratorhandlertsconfigServiceRoleC4AE481E\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"tsdecoratorhandlertsconfig68EC191E\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"26114660303fbc916c9e0f48b544e4360bb361bf9a2d87cf720983c8028ef314.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"tsdecoratorhandlertsconfigServiceRoleC4AE481E\", \"Arn\"]}, \"Environment\": {\"Variables\": {\"AWS_NODEJS_CONNECTION_REUSE_ENABLED\": \"1\"}}, \"Handler\": \"index.handler\", \"Runtime\": \"nodejs16.x\"}, \"DependsOn\": [\"tsdecoratorhandlertsconfigServiceRoleC4AE481E\"]}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as path from 'path';\nimport { Runtime } from 'aws-cdk-lib/aws-lambda';\nimport { App, Stack, StackProps } from 'aws-cdk-lib';\nimport { Construct } from 'constructs';\nimport * as lambda from 'aws-cdk-lib/aws-lambda-nodejs';\n\nclass TestStack extends Stack {\n  constructor(scope: Construct, id: string, props?: StackProps) {\n    super(scope, id, props);\n\n    new lambda.NodejsFunction(this, 'ts-decorator-handler', {\n      entry: path.join(__dirname, 'integ-handlers/ts-decorator-handler.ts'),\n      bundling: {\n        minify: true,\n        sourceMap: true,\n        sourceMapMode: lambda.SourceMapMode.BOTH,\n        preCompilation: true,\n      },\n      runtime: Runtime.NODEJS_16_X,\n    });\n\n    new lambda.NodejsFunction(this, 'ts-decorator-handler-tsconfig', {\n      entry: path.join(__dirname, 'integ-handlers/ts-decorator-handler.ts'),\n      bundling: {\n        minify: true,\n        sourceMap: true,\n        sourceMapMode: lambda.SourceMapMode.BOTH,\n        tsconfig: path.join(__dirname, '..', 'tsconfig-custom.json'),\n        preCompilation: true,\n      },\n      runtime: Runtime.NODEJS_16_X,\n    });\n  }\n}\n\nconst app = new App();\nnew TestStack(app, 'cdk-integ-compilations-lambda-nodejs');\napp.synth();\n"}
{ "prompt": "{\"Mappings\": {\"DefaultCrNodeVersionMap\": {\"af-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-east-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-3\": {\"value\": \"nodejs16.x\"}, \"ap-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-south-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-3\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-4\": {\"value\": \"nodejs16.x\"}, \"ca-central-1\": {\"value\": \"nodejs16.x\"}, \"cn-north-1\": {\"value\": \"nodejs16.x\"}, \"cn-northwest-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-2\": {\"value\": \"nodejs16.x\"}, \"eu-north-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-1\": {\"value\": \"nodejs16.x\"}, \"eu-west-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-3\": {\"value\": \"nodejs16.x\"}, \"me-central-1\": {\"value\": \"nodejs16.x\"}, \"me-south-1\": {\"value\": \"nodejs16.x\"}, \"sa-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-2\": {\"value\": \"nodejs16.x\"}, \"us-gov-east-1\": {\"value\": \"nodejs16.x\"}, \"us-gov-west-1\": {\"value\": \"nodejs16.x\"}, \"us-iso-east-1\": {\"value\": \"nodejs14.x\"}, \"us-iso-west-1\": {\"value\": \"nodejs14.x\"}, \"us-isob-east-1\": {\"value\": \"nodejs14.x\"}, \"us-west-1\": {\"value\": \"nodejs16.x\"}, \"us-west-2\": {\"value\": \"nodejs16.x\"}}}, \"Resources\": {\"esmServiceRole84AC2522\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"esm9B397D27\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"b1fe61f2900194572e27cce06c685324999fd8e34728c4ffc45e81f234b79e3f.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"esmServiceRole84AC2522\", \"Arn\"]}, \"Environment\": {\"Variables\": {\"AWS_NODEJS_CONNECTION_REUSE_ENABLED\": \"1\"}}, \"Handler\": \"index.handler\", \"Runtime\": {\"Fn::FindInMap\": [\"DefaultCrNodeVersionMap\", {\"Ref\": \"AWS::Region\"}, \"value\"]}}, \"DependsOn\": [\"esmServiceRole84AC2522\"]}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as path from 'path';\nimport { App, Stack, StackProps } from 'aws-cdk-lib';\nimport { Construct } from 'constructs';\nimport * as lambda from 'aws-cdk-lib/aws-lambda-nodejs';\n\nclass TestStack extends Stack {\n  constructor(scope: Construct, id: string, props?: StackProps) {\n    super(scope, id, props);\n\n    new lambda.NodejsFunction(this, 'esm', {\n      entry: path.join(__dirname, 'integ-handlers/esm.ts'),\n      bundling: {\n        format: lambda.OutputFormat.ESM,\n      },\n    });\n  }\n}\n\nconst app = new App();\nnew TestStack(app, 'cdk-integ-lambda-nodejs-esm');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyTopic86869434\": {\"Type\": \"AWS::SNS::Topic\"}, \"EncryptionMasterKey5BD393B9\": {\"Type\": \"AWS::KMS::Key\", \"Properties\": {\"KeyPolicy\": {\"Statement\": [{\"Action\": \"kms:*\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}, \"Resource\": \"*\"}, {\"Action\": [\"kms:Decrypt\", \"kms:GenerateDataKey\"], \"Condition\": {\"ArnEquals\": {\"aws:SourceArn\": {\"Ref\": \"MyTopic86869434\"}}}, \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"sns.amazonaws.com\"}, \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"MyQueueE6CA6235\": {\"Type\": \"AWS::SQS::Queue\", \"Properties\": {\"KmsMasterKeyId\": {\"Fn::GetAtt\": [\"EncryptionMasterKey5BD393B9\", \"Arn\"]}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"MyQueuePolicy6BBEDDAC\": {\"Type\": \"AWS::SQS::QueuePolicy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"sqs:SendMessage\", \"Condition\": {\"ArnEquals\": {\"aws:SourceArn\": {\"Ref\": \"MyTopic86869434\"}}}, \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"sns.amazonaws.com\"}, \"Resource\": {\"Fn::GetAtt\": [\"MyQueueE6CA6235\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"Queues\": [{\"Ref\": \"MyQueueE6CA6235\"}]}}, \"MyQueueawscdksnssqsMyTopic9361DEA223429051\": {\"DependsOn\": \"MyQueuePolicy6BBEDDAC\", \"Type\": \"AWS::SNS::Subscription\", \"Properties\": {\"Protocol\": \"sqs\", \"TopicArn\": {\"Ref\": \"MyTopic86869434\"}, \"Endpoint\": {\"Fn::GetAtt\": [\"MyQueueE6CA6235\", \"Arn\"]}, \"RedrivePolicy\": {\"deadLetterTargetArn\": {\"Fn::GetAtt\": [\"DeadLetterQueue9F481546\", \"Arn\"]}}}}, \"DeadLetterQueue9F481546\": {\"Type\": \"AWS::SQS::Queue\", \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"DeadLetterQueuePolicyB1FB890C\": {\"Type\": \"AWS::SQS::QueuePolicy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"sqs:SendMessage\", \"Condition\": {\"ArnEquals\": {\"aws:SourceArn\": {\"Ref\": \"MyTopic86869434\"}}}, \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"sns.amazonaws.com\"}, \"Resource\": {\"Fn::GetAtt\": [\"DeadLetterQueue9F481546\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"Queues\": [{\"Ref\": \"DeadLetterQueue9F481546\"}]}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as kms from 'aws-cdk-lib/aws-kms';\nimport * as sns from 'aws-cdk-lib/aws-sns';\nimport * as sqs from 'aws-cdk-lib/aws-sqs';\nimport * as cdk from 'aws-cdk-lib';\nimport * as cxapi from 'aws-cdk-lib/cx-api';\nimport * as subs from 'aws-cdk-lib/aws-sns-subscriptions';\n\nconst restrictSqsDescryption = { [cxapi.SNS_SUBSCRIPTIONS_SQS_DECRYPTION_POLICY]: true };\n\nclass SnsToSqs extends cdk.Stack {\n  constructor(scope: cdk.App, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n\n    /// !show\n    const topic = new sns.Topic(this, 'MyTopic');\n    const queue = new sqs.Queue(this, 'MyQueue', {\n      encryptionMasterKey: new kms.Key(this, 'EncryptionMasterKey'),\n    });\n\n    topic.addSubscription(new subs.SqsSubscription(queue, {\n      deadLetterQueue: new sqs.Queue(this, 'DeadLetterQueue'),\n    }));\n    /// !hide\n  }\n}\n\nconst app = new cdk.App({\n  context: restrictSqsDescryption,\n});\n\nnew SnsToSqs(app, 'aws-cdk-sns-sqs');\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyTopic86869434\": {\"Type\": \"AWS::SNS::Topic\"}, \"EchoServiceRoleBE28060B\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"Echo11F3FB29\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"exports.handler = function handler(event, _context, callback) {\n    /* eslint-disable no-console */\n    console.log('====================================================');\n    console.log(JSON.stringify(event, undefined, 2));\n    console.log('====================================================');\n    return callback(undefined, event);\n}\"}, \"Role\": {\"Fn::GetAtt\": [\"EchoServiceRoleBE28060B\", \"Arn\"]}, \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"EchoServiceRoleBE28060B\"]}, \"EchoAllowInvokeawscdksnslambdaMyTopic6C62AB907F727CDA\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"Echo11F3FB29\", \"Arn\"]}, \"Principal\": \"sns.amazonaws.com\", \"SourceArn\": {\"Ref\": \"MyTopic86869434\"}}}, \"EchoMyTopic4CB8819E\": {\"Type\": \"AWS::SNS::Subscription\", \"Properties\": {\"Protocol\": \"lambda\", \"TopicArn\": {\"Ref\": \"MyTopic86869434\"}, \"Endpoint\": {\"Fn::GetAtt\": [\"Echo11F3FB29\", \"Arn\"]}, \"RedrivePolicy\": {\"deadLetterTargetArn\": {\"Fn::GetAtt\": [\"DeadLetterQueue9F481546\", \"Arn\"]}}}}, \"DeadLetterQueue9F481546\": {\"Type\": \"AWS::SQS::Queue\", \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"DeadLetterQueuePolicyB1FB890C\": {\"Type\": \"AWS::SQS::QueuePolicy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"sqs:SendMessage\", \"Condition\": {\"ArnEquals\": {\"aws:SourceArn\": {\"Ref\": \"MyTopic86869434\"}}}, \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"sns.amazonaws.com\"}, \"Resource\": {\"Fn::GetAtt\": [\"DeadLetterQueue9F481546\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"Queues\": [{\"Ref\": \"DeadLetterQueue9F481546\"}]}}, \"FilteredServiceRole16D9DDC1\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"Filtered186C0D0A\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"exports.handler = function handler(event, _context, callback) {\n    /* eslint-disable no-console */\n    console.log('====================================================');\n    console.log(JSON.stringify(event, undefined, 2));\n    console.log('====================================================');\n    return callback(undefined, event);\n}\"}, \"Role\": {\"Fn::GetAtt\": [\"FilteredServiceRole16D9DDC1\", \"Arn\"]}, \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"FilteredServiceRole16D9DDC1\"]}, \"FilteredAllowInvokeawscdksnslambdaMyTopic6C62AB90A2EA1666\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"Filtered186C0D0A\", \"Arn\"]}, \"Principal\": \"sns.amazonaws.com\", \"SourceArn\": {\"Ref\": \"MyTopic86869434\"}}}, \"FilteredMyTopicC8395C27\": {\"Type\": \"AWS::SNS::Subscription\", \"Properties\": {\"Protocol\": \"lambda\", \"TopicArn\": {\"Ref\": \"MyTopic86869434\"}, \"Endpoint\": {\"Fn::GetAtt\": [\"Filtered186C0D0A\", \"Arn\"]}, \"FilterPolicy\": {\"color\": [\"red\", {\"prefix\": \"bl\"}, {\"prefix\": \"ye\"}], \"size\": [{\"anything-but\": [\"small\", \"medium\"]}], \"price\": [{\"numeric\": [\">=\", 100, \"<=\", 200]}]}}}, \"FilteredMessageBodyServiceRoleB2EB82B3\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"FilteredMessageBody222AE8F1\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"exports.handler = function handler(event, _context, callback) {\n    /* eslint-disable no-console */\n    console.log('====================================================');\n    console.log(JSON.stringify(event, undefined, 2));\n    console.log('====================================================');\n    return callback(undefined, event);\n}\"}, \"Role\": {\"Fn::GetAtt\": [\"FilteredMessageBodyServiceRoleB2EB82B3\", \"Arn\"]}, \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"FilteredMessageBodyServiceRoleB2EB82B3\"]}, \"FilteredMessageBodyAllowInvokeawscdksnslambdaMyTopic6C62AB90FB54CEA4\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"FilteredMessageBody222AE8F1\", \"Arn\"]}, \"Principal\": \"sns.amazonaws.com\", \"SourceArn\": {\"Ref\": \"MyTopic86869434\"}}}, \"FilteredMessageBodyMyTopicAD1F55C4\": {\"Type\": \"AWS::SNS::Subscription\", \"Properties\": {\"Protocol\": \"lambda\", \"TopicArn\": {\"Ref\": \"MyTopic86869434\"}, \"Endpoint\": {\"Fn::GetAtt\": [\"FilteredMessageBody222AE8F1\", \"Arn\"]}, \"FilterPolicy\": {\"background\": {\"color\": [\"red\", {\"prefix\": \"bl\"}, {\"prefix\": \"ye\"}]}}, \"FilterPolicyScope\": \"MessageBody\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as lambda from 'aws-cdk-lib/aws-lambda';\nimport * as sns from 'aws-cdk-lib/aws-sns';\nimport * as sqs from 'aws-cdk-lib/aws-sqs';\nimport * as cdk from 'aws-cdk-lib';\nimport * as subs from 'aws-cdk-lib/aws-sns-subscriptions';\n\nclass SnsToLambda extends cdk.Stack {\n  constructor(scope: cdk.App, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n\n    const topic = new sns.Topic(this, 'MyTopic');\n\n    const func = new lambda.Function(this, 'Echo', {\n      handler: 'index.handler',\n      runtime: lambda.Runtime.NODEJS_14_X,\n      code: lambda.Code.fromInline(`exports.handler = ${handler.toString()}`),\n    });\n\n    topic.addSubscription(new subs.LambdaSubscription(func, {\n      deadLetterQueue: new sqs.Queue(this, 'DeadLetterQueue'),\n    }));\n\n    const funcFiltered = new lambda.Function(this, 'Filtered', {\n      handler: 'index.handler',\n      runtime: lambda.Runtime.NODEJS_14_X,\n      code: lambda.Code.fromInline(`exports.handler = ${handler.toString()}`),\n    });\n\n    topic.addSubscription(new subs.LambdaSubscription(funcFiltered, {\n      filterPolicy: {\n        color: sns.SubscriptionFilter.stringFilter({\n          allowlist: ['red'],\n          matchPrefixes: ['bl', 'ye'],\n        }),\n        size: sns.SubscriptionFilter.stringFilter({\n          denylist: ['small', 'medium'],\n        }),\n        price: sns.SubscriptionFilter.numericFilter({\n          between: { start: 100, stop: 200 },\n        }),\n      },\n    }));\n\n    const funcFilteredWithMessageBody = new lambda.Function(this, 'FilteredMessageBody', {\n      handler: 'index.handler',\n      runtime: lambda.Runtime.NODEJS_14_X,\n      code: lambda.Code.fromInline(`exports.handler = ${handler.toString()}`),\n    });\n\n    topic.addSubscription(new subs.LambdaSubscription(funcFilteredWithMessageBody, {\n      filterPolicyWithMessageBody: {\n        background: sns.FilterOrPolicy.policy({\n          color: sns.FilterOrPolicy.filter(sns.SubscriptionFilter.stringFilter({\n            allowlist: ['red'],\n            matchPrefixes: ['bl', 'ye'],\n          })),\n        }),\n      },\n    }));\n  }\n}\n\nconst app = new cdk.App();\n\nnew SnsToLambda(app, 'aws-cdk-sns-lambda');\n\napp.synth();\n\nfunction handler(event: any, _context: any, callback: any) {\n  /* eslint-disable no-console */\n  console.log('====================================================');\n  console.log(JSON.stringify(event, undefined, 2));\n  console.log('====================================================');\n  return callback(undefined, event);\n}\n"}
{ "prompt": "{\"Resources\": {\"Vpc8378EB38\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-servicediscovery-integ/Vpc\"}]}}, \"VpcPublicSubnet1Subnet5C2D37C4\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-servicediscovery-integ/Vpc/PublicSubnet1\"}]}}, \"VpcPublicSubnet1RouteTable6C95E38E\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-servicediscovery-integ/Vpc/PublicSubnet1\"}]}}, \"VpcPublicSubnet1RouteTableAssociation97140677\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet1RouteTable6C95E38E\"}, \"SubnetId\": {\"Ref\": \"VpcPublicSubnet1Subnet5C2D37C4\"}}}, \"VpcPublicSubnet1DefaultRoute3DA9E72A\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet1RouteTable6C95E38E\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VpcIGWD7BA715C\"}}, \"DependsOn\": [\"VpcVPCGWBF912B6E\"]}, \"VpcPublicSubnet1EIPD7E02669\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-servicediscovery-integ/Vpc/PublicSubnet1\"}]}}, \"VpcPublicSubnet1NATGateway4D7517AA\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VpcPublicSubnet1Subnet5C2D37C4\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VpcPublicSubnet1EIPD7E02669\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-servicediscovery-integ/Vpc/PublicSubnet1\"}]}, \"DependsOn\": [\"VpcPublicSubnet1DefaultRoute3DA9E72A\", \"VpcPublicSubnet1RouteTableAssociation97140677\"]}, \"VpcPublicSubnet2Subnet691E08A3\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-servicediscovery-integ/Vpc/PublicSubnet2\"}]}}, \"VpcPublicSubnet2RouteTable94F7E489\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-servicediscovery-integ/Vpc/PublicSubnet2\"}]}}, \"VpcPublicSubnet2RouteTableAssociationDD5762D8\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet2RouteTable94F7E489\"}, \"SubnetId\": {\"Ref\": \"VpcPublicSubnet2Subnet691E08A3\"}}}, \"VpcPublicSubnet2DefaultRoute97F91067\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet2RouteTable94F7E489\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VpcIGWD7BA715C\"}}, \"DependsOn\": [\"VpcVPCGWBF912B6E\"]}, \"VpcPublicSubnet2EIP3C605A87\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-servicediscovery-integ/Vpc/PublicSubnet2\"}]}}, \"VpcPublicSubnet2NATGateway9182C01D\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VpcPublicSubnet2Subnet691E08A3\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VpcPublicSubnet2EIP3C605A87\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-servicediscovery-integ/Vpc/PublicSubnet2\"}]}, \"DependsOn\": [\"VpcPublicSubnet2DefaultRoute97F91067\", \"VpcPublicSubnet2RouteTableAssociationDD5762D8\"]}, \"VpcPrivateSubnet1Subnet536B997A\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-servicediscovery-integ/Vpc/PrivateSubnet1\"}]}}, \"VpcPrivateSubnet1RouteTableB2C5B500\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-servicediscovery-integ/Vpc/PrivateSubnet1\"}]}}, \"VpcPrivateSubnet1RouteTableAssociation70C59FA6\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet1RouteTableB2C5B500\"}, \"SubnetId\": {\"Ref\": \"VpcPrivateSubnet1Subnet536B997A\"}}}, \"VpcPrivateSubnet1DefaultRouteBE02A9ED\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet1RouteTableB2C5B500\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VpcPublicSubnet1NATGateway4D7517AA\"}}}, \"VpcPrivateSubnet2Subnet3788AAA1\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-servicediscovery-integ/Vpc/PrivateSubnet2\"}]}}, \"VpcPrivateSubnet2RouteTableA678073B\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-servicediscovery-integ/Vpc/PrivateSubnet2\"}]}}, \"VpcPrivateSubnet2RouteTableAssociationA89CAD56\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet2RouteTableA678073B\"}, \"SubnetId\": {\"Ref\": \"VpcPrivateSubnet2Subnet3788AAA1\"}}}, \"VpcPrivateSubnet2DefaultRoute060D2087\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet2RouteTableA678073B\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VpcPublicSubnet2NATGateway9182C01D\"}}}, \"VpcIGWD7BA715C\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-servicediscovery-integ/Vpc\"}]}}, \"VpcVPCGWBF912B6E\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"InternetGatewayId\": {\"Ref\": \"VpcIGWD7BA715C\"}}}, \"Namespace9B63B8C8\": {\"Type\": \"AWS::ServiceDiscovery::PrivateDnsNamespace\", \"Properties\": {\"Name\": \"boobar.com\", \"Vpc\": {\"Ref\": \"Vpc8378EB38\"}}}, \"NamespaceServiceCABDF534\": {\"Type\": \"AWS::ServiceDiscovery::Service\", \"Properties\": {\"DnsConfig\": {\"DnsRecords\": [{\"TTL\": 30, \"Type\": \"A\"}, {\"TTL\": 30, \"Type\": \"AAAA\"}], \"NamespaceId\": {\"Fn::GetAtt\": [\"Namespace9B63B8C8\", \"Id\"]}, \"RoutingPolicy\": \"WEIGHTED\"}, \"NamespaceId\": {\"Fn::GetAtt\": [\"Namespace9B63B8C8\", \"Id\"]}}}, \"NamespaceServiceLoadbalancerD271391A\": {\"Type\": \"AWS::ServiceDiscovery::Instance\", \"Properties\": {\"InstanceAttributes\": {\"AWS_ALIAS_DNS_NAME\": {\"Fn::GetAtt\": [\"LB8A12904C\", \"DNSName\"]}}, \"ServiceId\": {\"Fn::GetAtt\": [\"NamespaceServiceCABDF534\", \"Id\"]}, \"InstanceId\": \"awsservicediscoveryintegNamespaceServiceLoadbalancerA3D252B2\"}}, \"NamespaceArnService1F427735\": {\"Type\": \"AWS::ServiceDiscovery::Service\", \"Properties\": {\"NamespaceId\": {\"Fn::GetAtt\": [\"Namespace9B63B8C8\", \"Id\"]}, \"Type\": \"HTTP\"}}, \"NamespaceArnServiceNonIpInstance91BB57CE\": {\"Type\": \"AWS::ServiceDiscovery::Instance\", \"Properties\": {\"InstanceAttributes\": {\"arn\": \"arn://\"}, \"ServiceId\": {\"Fn::GetAtt\": [\"NamespaceArnService1F427735\", \"Id\"]}, \"InstanceId\": \"awsservicediscoveryintegNamespaceArnServiceNonIpInstance80DE1A4E\"}}, \"LB8A12904C\": {\"Type\": \"AWS::ElasticLoadBalancingV2::LoadBalancer\", \"Properties\": {\"LoadBalancerAttributes\": [{\"Key\": \"deletion_protection.enabled\", \"Value\": \"false\"}], \"Scheme\": \"internet-facing\", \"SecurityGroups\": [{\"Fn::GetAtt\": [\"LBSecurityGroup8A41EA2B\", \"GroupId\"]}], \"Subnets\": [{\"Ref\": \"VpcPublicSubnet1Subnet5C2D37C4\"}, {\"Ref\": \"VpcPublicSubnet2Subnet691E08A3\"}], \"Type\": \"application\"}, \"DependsOn\": [\"VpcPublicSubnet1DefaultRoute3DA9E72A\", \"VpcPublicSubnet1RouteTableAssociation97140677\", \"VpcPublicSubnet2DefaultRoute97F91067\", \"VpcPublicSubnet2RouteTableAssociationDD5762D8\"]}, \"LBSecurityGroup8A41EA2B\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"Automatically created Security Group for ELB awsservicediscoveryintegLB0601B046\", \"SecurityGroupEgress\": [{\"CidrIp\": \"255.255.255.255/32\", \"Description\": \"Disallow all traffic\", \"FromPort\": 252, \"IpProtocol\": \"icmp\", \"ToPort\": 86}], \"VpcId\": {\"Ref\": \"Vpc8378EB38\"}}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as elbv2 from 'aws-cdk-lib/aws-elasticloadbalancingv2';\nimport * as cdk from 'aws-cdk-lib';\nimport * as servicediscovery from 'aws-cdk-lib/aws-servicediscovery';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'aws-servicediscovery-integ');\n\nconst vpc = new ec2.Vpc(stack, 'Vpc', { maxAzs: 2, restrictDefaultSecurityGroup: false });\n\nconst namespace = new servicediscovery.PrivateDnsNamespace(stack, 'Namespace', {\n  name: 'boobar.com',\n  vpc,\n});\n\nconst service = namespace.createService('Service', {\n  dnsRecordType: servicediscovery.DnsRecordType.A_AAAA,\n  dnsTtl: cdk.Duration.seconds(30),\n  loadBalancer: true,\n});\n\nconst loadbalancer = new elbv2.ApplicationLoadBalancer(stack, 'LB', { vpc, internetFacing: true });\n\nservice.registerLoadBalancer('Loadbalancer', loadbalancer);\n\nconst arnService = namespace.createService('ArnService', {\n  discoveryType: servicediscovery.DiscoveryType.API,\n});\n\narnService.registerNonIpInstance('NonIpInstance', {\n  customAttributes: { arn: 'arn://' },\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"Namespace9B63B8C8\": {\"Type\": \"AWS::ServiceDiscovery::PublicDnsNamespace\", \"Properties\": {\"Name\": \"foobar.com\"}}, \"NamespaceServiceCABDF534\": {\"Type\": \"AWS::ServiceDiscovery::Service\", \"Properties\": {\"DnsConfig\": {\"DnsRecords\": [{\"TTL\": 30, \"Type\": \"A\"}], \"NamespaceId\": {\"Fn::GetAtt\": [\"Namespace9B63B8C8\", \"Id\"]}, \"RoutingPolicy\": \"MULTIVALUE\"}, \"HealthCheckConfig\": {\"FailureThreshold\": 2, \"ResourcePath\": \"/healthcheck\", \"Type\": \"HTTPS\"}, \"Name\": \"foo\", \"NamespaceId\": {\"Fn::GetAtt\": [\"Namespace9B63B8C8\", \"Id\"]}}}, \"NamespaceServiceIpInstanceCCED93E7\": {\"Type\": \"AWS::ServiceDiscovery::Instance\", \"Properties\": {\"InstanceAttributes\": {\"AWS_INSTANCE_IPV4\": \"54.239.25.192\", \"AWS_INSTANCE_PORT\": \"443\"}, \"ServiceId\": {\"Fn::GetAtt\": [\"NamespaceServiceCABDF534\", \"Id\"]}, \"InstanceId\": \"awsservicediscoveryintegNamespaceServiceIpInstance5A6845D4\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as cdk from 'aws-cdk-lib';\nimport * as servicediscovery from 'aws-cdk-lib/aws-servicediscovery';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'aws-servicediscovery-integ');\n\nconst namespace = new servicediscovery.PublicDnsNamespace(stack, 'Namespace', {\n  name: 'foobar.com',\n});\n\nconst service = namespace.createService('Service', {\n  name: 'foo',\n  dnsRecordType: servicediscovery.DnsRecordType.A,\n  dnsTtl: cdk.Duration.seconds(30),\n  healthCheck: {\n    type: servicediscovery.HealthCheckType.HTTPS,\n    resourcePath: '/healthcheck',\n    failureThreshold: 2,\n  },\n});\n\nservice.registerIpInstance('IpInstance', {\n  ipv4: '54.239.25.192',\n  port: 443,\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"Namespace9B63B8C8\": {\"Type\": \"AWS::ServiceDiscovery::PublicDnsNamespace\", \"Properties\": {\"Name\": \"foobar.com\"}}, \"NamespaceServiceCABDF534\": {\"Type\": \"AWS::ServiceDiscovery::Service\", \"Properties\": {\"DnsConfig\": {\"DnsRecords\": [{\"TTL\": 30, \"Type\": \"CNAME\"}], \"NamespaceId\": {\"Fn::GetAtt\": [\"Namespace9B63B8C8\", \"Id\"]}, \"RoutingPolicy\": \"WEIGHTED\"}, \"Name\": \"foo\", \"NamespaceId\": {\"Fn::GetAtt\": [\"Namespace9B63B8C8\", \"Id\"]}}}, \"NamespaceServiceCnameInstance5863ED3A\": {\"Type\": \"AWS::ServiceDiscovery::Instance\", \"Properties\": {\"InstanceAttributes\": {\"AWS_INSTANCE_CNAME\": \"service.pizza\"}, \"ServiceId\": {\"Fn::GetAtt\": [\"NamespaceServiceCABDF534\", \"Id\"]}, \"InstanceId\": \"awsservicediscoveryintegNamespaceServiceCnameInstance0F7DE989\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as cdk from 'aws-cdk-lib';\nimport * as servicediscovery from 'aws-cdk-lib/aws-servicediscovery';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'aws-servicediscovery-integ');\n\nconst namespace = new servicediscovery.PublicDnsNamespace(stack, 'Namespace', {\n  name: 'foobar.com',\n});\n\nconst service = namespace.createService('Service', {\n  name: 'foo',\n  dnsRecordType: servicediscovery.DnsRecordType.CNAME,\n  dnsTtl: cdk.Duration.seconds(30),\n});\n\nservice.registerCnameInstance('CnameInstance', {\n  instanceCname: 'service.pizza',\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyNamespaceD0BB8558\": {\"Type\": \"AWS::ServiceDiscovery::HttpNamespace\", \"Properties\": {\"Name\": \"MyHTTPNamespace\"}}, \"MyNamespaceNonIpService3B425009\": {\"Type\": \"AWS::ServiceDiscovery::Service\", \"Properties\": {\"Description\": \"service registering non-ip instances\", \"NamespaceId\": {\"Fn::GetAtt\": [\"MyNamespaceD0BB8558\", \"Id\"]}}}, \"MyNamespaceNonIpServiceNonIpInstanceFF8FB3DE\": {\"Type\": \"AWS::ServiceDiscovery::Instance\", \"Properties\": {\"InstanceAttributes\": {\"arn\": \"arn:aws:s3:::mybucket\"}, \"ServiceId\": {\"Fn::GetAtt\": [\"MyNamespaceNonIpService3B425009\", \"Id\"]}, \"InstanceId\": \"ervicediscoveryintegMyNamespaceNonIpServiceNonIpInstance45389A2A\"}}, \"MyNamespaceIpService220F547F\": {\"Type\": \"AWS::ServiceDiscovery::Service\", \"Properties\": {\"Description\": \"service registering ip instances\", \"HealthCheckConfig\": {\"FailureThreshold\": 1, \"ResourcePath\": \"/check\", \"Type\": \"HTTP\"}, \"NamespaceId\": {\"Fn::GetAtt\": [\"MyNamespaceD0BB8558\", \"Id\"]}}}, \"MyNamespaceIpServiceIpInstance8CD1B210\": {\"Type\": \"AWS::ServiceDiscovery::Instance\", \"Properties\": {\"InstanceAttributes\": {\"AWS_INSTANCE_IPV4\": \"54.239.25.192\", \"AWS_INSTANCE_PORT\": \"80\"}, \"ServiceId\": {\"Fn::GetAtt\": [\"MyNamespaceIpService220F547F\", \"Id\"]}, \"InstanceId\": \"awsservicediscoveryintegMyNamespaceIpServiceIpInstance56070746\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as cdk from 'aws-cdk-lib';\nimport * as servicediscovery from 'aws-cdk-lib/aws-servicediscovery';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'aws-servicediscovery-integ');\n\nconst namespace = new servicediscovery.HttpNamespace(stack, 'MyNamespace', {\n  name: 'MyHTTPNamespace',\n});\n\nconst service1 = namespace.createService('NonIpService', {\n  description: 'service registering non-ip instances',\n});\n\nservice1.registerNonIpInstance('NonIpInstance', {\n  customAttributes: { arn: 'arn:aws:s3:::mybucket' },\n});\n\nconst service2 = namespace.createService('IpService', {\n  description: 'service registering ip instances',\n  healthCheck: {\n    type: servicediscovery.HealthCheckType.HTTP,\n    resourcePath: '/check',\n  },\n});\n\nservice2.registerIpInstance('IpInstance', {\n  ipv4: '54.239.25.192',\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyLambdaServiceRole4539ECB6\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"MyLambdaCCE802FB\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"9678c34eca93259d11f2d714177347afd66c50116e1e08996eff893d3ca81232.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"MyLambdaServiceRole4539ECB6\", \"Arn\"]}, \"Handler\": \"index.main\", \"Runtime\": \"python3.9\"}, \"DependsOn\": [\"MyLambdaServiceRole4539ECB6\"]}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as path from 'path';\nimport * as cdk from 'aws-cdk-lib';\nimport * as lambda from 'aws-cdk-lib/aws-lambda';\n\nclass TestStack extends cdk.Stack {\n  constructor(scope: cdk.App, id: string) {\n    super(scope, id);\n\n    /// !show\n    new lambda.Function(this, 'MyLambda', {\n      code: lambda.Code.fromAsset(path.join(__dirname, 'my-lambda-handler')),\n      handler: 'index.main',\n      runtime: lambda.Runtime.PYTHON_3_9,\n    });\n    /// !hide\n  }\n}\n\nconst app = new cdk.App();\n\nnew TestStack(app, 'lambda-test-assets');\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyLambdaServiceRole4539ECB6\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"MyLambdaCCE802FB\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"8811a2632ac5564a08fd269e159298f7e497f259578b0dc5e927a1f48ab24d34.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"MyLambdaServiceRole4539ECB6\", \"Arn\"]}, \"Description\": \"version-hash:729d0f94105773f32ab290a92db57227\", \"Handler\": \"index.main\", \"Runtime\": \"python3.8\"}, \"DependsOn\": [\"MyLambdaServiceRole4539ECB6\"]}, \"MyLambdaCurrentVersionE7A382CC2ea27ea57e328c1e5be4991bd1bd072d\": {\"Type\": \"AWS::Lambda::Version\", \"Properties\": {\"FunctionName\": {\"Ref\": \"MyLambdaCCE802FB\"}}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"MyLambdaCurrentVersionEventInvokeConfigD120DC68\": {\"Type\": \"AWS::Lambda::EventInvokeConfig\", \"Properties\": {\"FunctionName\": {\"Ref\": \"MyLambdaCCE802FB\"}, \"Qualifier\": {\"Fn::GetAtt\": [\"MyLambdaCurrentVersionE7A382CC2ea27ea57e328c1e5be4991bd1bd072d\", \"Version\"]}, \"MaximumRetryAttempts\": 1}}, \"MyLambdaCurrentVersionAliaslive9151E913\": {\"Type\": \"AWS::Lambda::Alias\", \"Properties\": {\"FunctionName\": {\"Ref\": \"MyLambdaCCE802FB\"}, \"FunctionVersion\": {\"Fn::GetAtt\": [\"MyLambdaCurrentVersionE7A382CC2ea27ea57e328c1e5be4991bd1bd072d\", \"Version\"]}, \"Name\": \"live\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as path from 'path';\nimport { Aspects, App, RemovalPolicy, Stack } from 'aws-cdk-lib';\nimport { LAMBDA_RECOGNIZE_LAYER_VERSION } from 'aws-cdk-lib/cx-api';\nimport * as lambda from 'aws-cdk-lib/aws-lambda';\n\nclass TestStack extends Stack {\n  constructor(scope: App, id: string) {\n    super(scope, id);\n\n    const handler = new lambda.Function(this, 'MyLambda', {\n      code: lambda.Code.fromAsset(path.join(__dirname, 'layer-code')),\n      handler: 'index.main',\n      runtime: lambda.Runtime.PYTHON_3_8,\n      currentVersionOptions: {\n        removalPolicy: RemovalPolicy.RETAIN,\n        retryAttempts: 1,\n      },\n    });\n\n    handler.currentVersion.addAlias('live');\n  }\n}\n\nconst app = new App();\n\nconst stack = new TestStack(app, 'lambda-test-current-version');\n\n// Changes the function description when the feature flag is present\n// to validate the changed function hash.\nAspects.of(stack).add(new lambda.FunctionVersionUpgrade(LAMBDA_RECOGNIZE_LAYER_VERSION));\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyLayer38944FA5\": {\"Type\": \"AWS::Lambda::LayerVersion\", \"Properties\": {\"Content\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"8811a2632ac5564a08fd269e159298f7e497f259578b0dc5e927a1f48ab24d34.zip\"}, \"CompatibleRuntimes\": [\"nodejs14.x\"], \"Description\": \"A layer to test the L2 construct\", \"LicenseInfo\": \"Apache-2.0\"}}, \"MyLayerremoteaccountgrant715E5D21\": {\"Type\": \"AWS::Lambda::LayerVersionPermission\", \"Properties\": {\"Action\": \"lambda:GetLayerVersion\", \"LayerVersionArn\": {\"Ref\": \"MyLayer38944FA5\"}, \"Principal\": {\"Ref\": \"AWS::AccountId\"}}}, \"MyLayeredLambdaServiceRole1A7DC118\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"MyLayeredLambda9A3008D1\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"foo\"}, \"Role\": {\"Fn::GetAtt\": [\"MyLayeredLambdaServiceRole1A7DC118\", \"Arn\"]}, \"Handler\": \"index.handler\", \"Layers\": [{\"Ref\": \"MyLayer38944FA5\"}], \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"MyLayeredLambdaServiceRole1A7DC118\"]}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as path from 'path';\nimport * as cdk from 'aws-cdk-lib';\nimport * as lambda from 'aws-cdk-lib/aws-lambda';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'aws-cdk-layer-version-1');\n\n// Just for the example - granting to the current account is not necessary.\nconst awsAccountId = stack.account;\n\n/// !show\nconst layer = new lambda.LayerVersion(stack, 'MyLayer', {\n  code: lambda.Code.fromAsset(path.join(__dirname, 'layer-code')),\n  compatibleRuntimes: [lambda.Runtime.NODEJS_14_X],\n  license: 'Apache-2.0',\n  description: 'A layer to test the L2 construct',\n});\n\n// To grant usage by other AWS accounts\nlayer.addPermission('remote-account-grant', { accountId: awsAccountId });\n\n// To grant usage to all accounts in some AWS Ogranization\n// layer.grantUsage({ accountId: '*', organizationId });\n\nnew lambda.Function(stack, 'MyLayeredLambda', {\n  code: new lambda.InlineCode('foo'),\n  handler: 'index.handler',\n  runtime: lambda.Runtime.NODEJS_14_X,\n  layers: [layer],\n});\n/// !hide\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"OneWeekServiceRole05A6F9F8\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"OneWeekFE56F6A4\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"exports.handler = (event) => console.log(JSON.stringify(event));\"}, \"Role\": {\"Fn::GetAtt\": [\"OneWeekServiceRole05A6F9F8\", \"Arn\"]}, \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"OneWeekServiceRole05A6F9F8\"]}, \"OneWeekLogRetention8E8911C1\": {\"Type\": \"Custom::LogRetention\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A\", \"Arn\"]}, \"LogGroupName\": {\"Fn::Join\": [\"\", [\"/aws/lambda/\", {\"Ref\": \"OneWeekFE56F6A4\"}]]}, \"RetentionInDays\": 7}}, \"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"logs:DeleteRetentionPolicy\", \"logs:PutRetentionPolicy\"], \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB\", \"Roles\": [{\"Ref\": \"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB\"}]}}, \"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Handler\": \"index.handler\", \"Runtime\": {\"Fn::FindInMap\": [\"DefaultCrNodeVersionMap\", {\"Ref\": \"AWS::Region\"}, \"value\"]}, \"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"0f8a80f5f2310ea7e3295258fdbb79c43a1e8c0a11e863e63dc82832599412ed.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB\", \"Arn\"]}}, \"DependsOn\": [\"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB\", \"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB\"]}, \"OneMonthServiceRoleFBD1064F\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"OneMonth64E966BF\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"exports.handler = (event) => console.log(JSON.stringify(event));\"}, \"Role\": {\"Fn::GetAtt\": [\"OneMonthServiceRoleFBD1064F\", \"Arn\"]}, \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"OneMonthServiceRoleFBD1064F\"]}, \"OneMonthLogRetention814A40D9\": {\"Type\": \"Custom::LogRetention\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A\", \"Arn\"]}, \"LogGroupName\": {\"Fn::Join\": [\"\", [\"/aws/lambda/\", {\"Ref\": \"OneMonth64E966BF\"}]]}, \"RetentionInDays\": 30}}, \"OneYearServiceRole24D47762\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"OneYearA82EBDA9\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"exports.handler = (event) => console.log(JSON.stringify(event));\"}, \"Role\": {\"Fn::GetAtt\": [\"OneYearServiceRole24D47762\", \"Arn\"]}, \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"OneYearServiceRole24D47762\"]}, \"OneYearLogRetentionBD83A067\": {\"Type\": \"Custom::LogRetention\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A\", \"Arn\"]}, \"LogGroupName\": {\"Fn::Join\": [\"\", [\"/aws/lambda/\", {\"Ref\": \"OneYearA82EBDA9\"}]]}, \"RetentionInDays\": 365}}}, \"Mappings\": {\"DefaultCrNodeVersionMap\": {\"af-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-east-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-3\": {\"value\": \"nodejs16.x\"}, \"ap-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-south-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-3\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-4\": {\"value\": \"nodejs16.x\"}, \"ca-central-1\": {\"value\": \"nodejs16.x\"}, \"cn-north-1\": {\"value\": \"nodejs16.x\"}, \"cn-northwest-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-2\": {\"value\": \"nodejs16.x\"}, \"eu-north-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-1\": {\"value\": \"nodejs16.x\"}, \"eu-west-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-3\": {\"value\": \"nodejs16.x\"}, \"me-central-1\": {\"value\": \"nodejs16.x\"}, \"me-south-1\": {\"value\": \"nodejs16.x\"}, \"sa-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-2\": {\"value\": \"nodejs16.x\"}, \"us-gov-east-1\": {\"value\": \"nodejs16.x\"}, \"us-gov-west-1\": {\"value\": \"nodejs16.x\"}, \"us-iso-east-1\": {\"value\": \"nodejs14.x\"}, \"us-iso-west-1\": {\"value\": \"nodejs14.x\"}, \"us-isob-east-1\": {\"value\": \"nodejs14.x\"}, \"us-west-1\": {\"value\": \"nodejs16.x\"}, \"us-west-2\": {\"value\": \"nodejs16.x\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as logs from 'aws-cdk-lib/aws-logs';\nimport * as cdk from 'aws-cdk-lib';\nimport * as lambda from 'aws-cdk-lib/aws-lambda';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'aws-cdk-lambda-log-retention');\n\nnew lambda.Function(stack, 'OneWeek', {\n  code: new lambda.InlineCode('exports.handler = (event) => console.log(JSON.stringify(event));'),\n  handler: 'index.handler',\n  runtime: lambda.Runtime.NODEJS_14_X,\n  logRetention: logs.RetentionDays.ONE_WEEK,\n});\n\nnew lambda.Function(stack, 'OneMonth', {\n  code: new lambda.InlineCode('exports.handler = (event) => console.log(JSON.stringify(event));'),\n  handler: 'index.handler',\n  runtime: lambda.Runtime.NODEJS_14_X,\n  logRetention: logs.RetentionDays.ONE_MONTH,\n});\n\nnew lambda.Function(stack, 'OneYear', {\n  code: new lambda.InlineCode('exports.handler = (event) => console.log(JSON.stringify(event));'),\n  handler: 'index.handler',\n  runtime: lambda.Runtime.NODEJS_14_X,\n  logRetention: logs.RetentionDays.ONE_YEAR,\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"VPCB9E5F0B4\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-vpc-lambda/VPC\"}]}}, \"VPCPublicSubnet1SubnetB4246D30\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-vpc-lambda/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableFEE4B781\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-vpc-lambda/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableAssociation0B0896DC\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}}}, \"VPCPublicSubnet1DefaultRoute91CEF279\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet1EIP6AD938E8\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-vpc-lambda/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1NATGatewayE0556630\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet1EIP6AD938E8\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-vpc-lambda/VPC/PublicSubnet1\"}]}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\"]}, \"VPCPublicSubnet2Subnet74179F39\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-vpc-lambda/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTable6F1A15F1\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-vpc-lambda/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTableAssociation5A808732\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}}}, \"VPCPublicSubnet2DefaultRouteB7481BBA\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet2EIP4947BC00\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-vpc-lambda/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2NATGateway3C070193\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet2EIP4947BC00\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-vpc-lambda/VPC/PublicSubnet2\"}]}, \"DependsOn\": [\"VPCPublicSubnet2DefaultRouteB7481BBA\", \"VPCPublicSubnet2RouteTableAssociation5A808732\"]}, \"VPCPrivateSubnet1Subnet8BCA10E0\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-vpc-lambda/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableBE8A6027\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-vpc-lambda/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableAssociation347902D1\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}}}, \"VPCPrivateSubnet1DefaultRouteAE1D6490\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet1NATGatewayE0556630\"}}}, \"VPCPrivateSubnet2SubnetCFCDAA7A\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-vpc-lambda/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTable0A19E10E\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-vpc-lambda/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTableAssociation0C73D413\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}}}, \"VPCPrivateSubnet2DefaultRouteF4F5CFD2\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet2NATGateway3C070193\"}}}, \"VPCIGWB7E252D3\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-vpc-lambda/VPC\"}]}}, \"VPCVPCGW99B986DC\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"InternetGatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}}, \"MyLambdaServiceRole4539ECB6\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole\"]]}]}, \"DependsOn\": [\"VPCPrivateSubnet1DefaultRouteAE1D6490\", \"VPCPrivateSubnet1RouteTableAssociation347902D1\", \"VPCPrivateSubnet2DefaultRouteF4F5CFD2\", \"VPCPrivateSubnet2RouteTableAssociation0C73D413\"]}, \"MyLambdaSecurityGroup1E71A818\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"Automatic security group for Lambda Function awscdkvpclambdaMyLambda057789B0\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}, \"DependsOn\": [\"VPCPrivateSubnet1DefaultRouteAE1D6490\", \"VPCPrivateSubnet1RouteTableAssociation347902D1\", \"VPCPrivateSubnet2DefaultRouteF4F5CFD2\", \"VPCPrivateSubnet2RouteTableAssociation0C73D413\"]}, \"MyLambdaCCE802FB\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"def main(event, context): pass\"}, \"Role\": {\"Fn::GetAtt\": [\"MyLambdaServiceRole4539ECB6\", \"Arn\"]}, \"Handler\": \"index.main\", \"Runtime\": \"python3.9\", \"VpcConfig\": {\"SecurityGroupIds\": [{\"Fn::GetAtt\": [\"MyLambdaSecurityGroup1E71A818\", \"GroupId\"]}], \"SubnetIds\": [{\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}, {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}]}}, \"DependsOn\": [\"MyLambdaServiceRole4539ECB6\", \"VPCPrivateSubnet1DefaultRouteAE1D6490\", \"VPCPrivateSubnet1RouteTableAssociation347902D1\", \"VPCPrivateSubnet2DefaultRouteF4F5CFD2\", \"VPCPrivateSubnet2RouteTableAssociation0C73D413\"]}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as cdk from 'aws-cdk-lib';\nimport * as lambda from 'aws-cdk-lib/aws-lambda';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'aws-cdk-vpc-lambda');\nconst vpc = new ec2.Vpc(stack, 'VPC', { maxAzs: 2, restrictDefaultSecurityGroup: false });\n\nnew lambda.Function(stack, 'MyLambda', {\n  code: new lambda.InlineCode('def main(event, context): pass'),\n  handler: 'index.main',\n  runtime: lambda.Runtime.PYTHON_3_9,\n  vpc,\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyLambdaServiceRole4539ECB6\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"MyLambdaServiceRoleDefaultPolicy5BBC6F68\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"*\", \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyLambdaServiceRoleDefaultPolicy5BBC6F68\", \"Roles\": [{\"Ref\": \"MyLambdaServiceRole4539ECB6\"}]}}, \"MyLambdaCCE802FB\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"foo\"}, \"Role\": {\"Fn::GetAtt\": [\"MyLambdaServiceRole4539ECB6\", \"Arn\"]}, \"Description\": \"version-hash:1786de9fc1bc4cb2fd5b64d612628c6f\", \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"MyLambdaServiceRoleDefaultPolicy5BBC6F68\", \"MyLambdaServiceRole4539ECB6\"]}, \"MyLambdaFunctionUrlC2055677\": {\"Type\": \"AWS::Lambda::Url\", \"Properties\": {\"AuthType\": \"AWS_IAM\", \"TargetFunctionArn\": {\"Fn::GetAtt\": [\"MyLambdaCCE802FB\", \"Arn\"]}}}, \"MyLambdaCurrentVersionE7A382CCac1a0c5f52d7e233eaf45e0c00b74629\": {\"Type\": \"AWS::Lambda::Version\", \"Properties\": {\"FunctionName\": {\"Ref\": \"MyLambdaCCE802FB\"}}}, \"Alias325C5727\": {\"Type\": \"AWS::Lambda::Alias\", \"Properties\": {\"FunctionName\": {\"Ref\": \"MyLambdaCCE802FB\"}, \"FunctionVersion\": {\"Fn::GetAtt\": [\"MyLambdaCurrentVersionE7A382CCac1a0c5f52d7e233eaf45e0c00b74629\", \"Version\"]}, \"Name\": \"prod\"}}, \"AliasAliasPermissionAF30F9E8\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Ref\": \"Alias325C5727\"}, \"Principal\": \"cloudformation.amazonaws.com\"}}, \"AliasFunctionUrlDC6EC566\": {\"Type\": \"AWS::Lambda::Url\", \"Properties\": {\"AuthType\": \"NONE\", \"TargetFunctionArn\": {\"Fn::GetAtt\": [\"MyLambdaCCE802FB\", \"Arn\"]}, \"Qualifier\": \"prod\"}, \"DependsOn\": [\"Alias325C5727\"]}, \"Aliasinvokefunctionurl4CA9917B\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunctionUrl\", \"FunctionName\": {\"Ref\": \"Alias325C5727\"}, \"Principal\": \"*\", \"FunctionUrlAuthType\": \"NONE\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as iam from 'aws-cdk-lib/aws-iam';\nimport * as cdk from 'aws-cdk-lib';\nimport { LAMBDA_RECOGNIZE_LAYER_VERSION } from 'aws-cdk-lib/cx-api';\nimport * as lambda from 'aws-cdk-lib/aws-lambda';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'aws-cdk-lambda-1');\n\nconst fn = new lambda.Function(stack, 'MyLambda', {\n  code: new lambda.InlineCode('foo'),\n  handler: 'index.handler',\n  runtime: lambda.Runtime.NODEJS_14_X,\n});\n\nfn.addToRolePolicy(new iam.PolicyStatement({\n  resources: ['*'],\n  actions: ['*'],\n}));\nfn.addFunctionUrl();\n\nconst version = fn.currentVersion;\n\nconst alias = new lambda.Alias(stack, 'Alias', {\n  aliasName: 'prod',\n  version,\n});\nalias.addPermission('AliasPermission', {\n  principal: new iam.ServicePrincipal('cloudformation.amazonaws.com'),\n});\nalias.addFunctionUrl({\n  authType: lambda.FunctionUrlAuthType.NONE,\n});\n\n// Changes the function description when the feature flag is present\n// to validate the changed function hash.\ncdk.Aspects.of(stack).add(new lambda.FunctionVersionUpgrade(LAMBDA_RECOGNIZE_LAYER_VERSION));\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyLambdaServiceRole4539ECB6\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"MyLambdaCCE802FB\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"foo\"}, \"Role\": {\"Fn::GetAtt\": [\"MyLambdaServiceRole4539ECB6\", \"Arn\"]}, \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"MyLambdaServiceRole4539ECB6\"]}, \"MyLambdaInvokehlab6Vr41INt1IUXIhhCesB4gzNedP5IURKNgciwD9D5EABD\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"MyLambdaCCE802FB\", \"Arn\"]}, \"Principal\": \"*\", \"PrincipalOrgID\": \"o-yyyyyyyyyy\"}}, \"MyLambdaInvoke138AF9IJcZORjZNKCKShZMMuVQwCnUkbFqMoQf5of0C1F7DFD8\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"MyLambdaCCE802FB\", \"Arn\"]}, \"Principal\": \"*\", \"PrincipalOrgID\": \"o-xxxxxxxxxx\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as iam from 'aws-cdk-lib/aws-iam';\nimport * as cdk from 'aws-cdk-lib';\nimport * as lambda from 'aws-cdk-lib/aws-lambda';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'lambda-permissions');\n\nconst fn = new lambda.Function(stack, 'MyLambda', {\n  code: new lambda.InlineCode('foo'),\n  handler: 'index.handler',\n  runtime: lambda.Runtime.NODEJS_14_X,\n});\n\nfn.grantInvoke(new iam.AnyPrincipal().inOrganization('o-yyyyyyyyyy'));\n\nfn.grantInvoke(new iam.OrganizationPrincipal('o-xxxxxxxxxx'));\n"}
{ "prompt": "{\"Resources\": {\"MyFunc1ServiceRoleF96C5B5C\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy\"]]}]}}, \"MyFunc11BE70A62\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"exports.handler = function handler(event, _context, callback) {\n    console.log(JSON.stringify(event, undefined, 2));\n    return callback();\n}\"}, \"Role\": {\"Fn::GetAtt\": [\"MyFunc1ServiceRoleF96C5B5C\", \"Arn\"]}, \"Handler\": \"index.handler\", \"Layers\": [{\"Fn::Join\": [\"\", [\"arn:aws:lambda:\", {\"Ref\": \"AWS::Region\"}, \":580247275435:layer:LambdaInsightsExtension:2\"]]}], \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"MyFunc1ServiceRoleF96C5B5C\"]}, \"MyFunc2ServiceRole68E50443\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy\"]]}]}}, \"MyFunc242557A97\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"exports.handler = function handler(event, _context, callback) {\n    console.log(JSON.stringify(event, undefined, 2));\n    return callback();\n}\"}, \"Role\": {\"Fn::GetAtt\": [\"MyFunc2ServiceRole68E50443\", \"Arn\"]}, \"Handler\": \"index.handler\", \"Layers\": [{\"Fn::Join\": [\"\", [\"arn:aws:lambda:\", {\"Ref\": \"AWS::Region\"}, \":580247275435:layer:LambdaInsightsExtension:11\"]]}], \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"MyFunc2ServiceRole68E50443\"]}, \"MyFunc3ServiceRoleA69795ED\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy\"]]}]}}, \"MyFunc3666B7A2F\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"exports.handler = function handler(event, _context, callback) {\n    console.log(JSON.stringify(event, undefined, 2));\n    return callback();\n}\"}, \"Role\": {\"Fn::GetAtt\": [\"MyFunc3ServiceRoleA69795ED\", \"Arn\"]}, \"Handler\": \"index.handler\", \"Layers\": [{\"Fn::Join\": [\"\", [\"arn:aws:lambda:\", {\"Ref\": \"AWS::Region\"}, \":580247275435:layer:LambdaInsightsExtension:12\"]]}], \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"MyFunc3ServiceRoleA69795ED\"]}, \"MyFunc4ServiceRole93C4DEFF\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy\"]]}]}}, \"MyFunc4B88F85C6\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"exports.handler = function handler(event, _context, callback) {\n    console.log(JSON.stringify(event, undefined, 2));\n    return callback();\n}\"}, \"Role\": {\"Fn::GetAtt\": [\"MyFunc4ServiceRole93C4DEFF\", \"Arn\"]}, \"Handler\": \"index.handler\", \"Layers\": [{\"Fn::FindInMap\": [\"CloudwatchlambdainsightsversionMap\", {\"Ref\": \"AWS::Region\"}, \"1x0x98x0xx86x64\"]}], \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"MyFunc4ServiceRole93C4DEFF\"]}, \"MyFunc5ServiceRoleFE4CE92B\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy\"]]}]}}, \"MyFunc586573B53\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"exports.handler = function handler(event, _context, callback) {\n    console.log(JSON.stringify(event, undefined, 2));\n    return callback();\n}\"}, \"Role\": {\"Fn::GetAtt\": [\"MyFunc5ServiceRoleFE4CE92B\", \"Arn\"]}, \"Handler\": \"index.handler\", \"Layers\": [{\"Fn::FindInMap\": [\"CloudwatchlambdainsightsversionMap\", {\"Ref\": \"AWS::Region\"}, \"1x0x119x0xx86x64\"]}], \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"MyFunc5ServiceRoleFE4CE92B\"]}, \"MyFunc6ServiceRoleCDDBC2C6\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy\"]]}]}}, \"MyFunc60D944984\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"exports.handler = function handler(event, _context, callback) {\n    console.log(JSON.stringify(event, undefined, 2));\n    return callback();\n}\"}, \"Role\": {\"Fn::GetAtt\": [\"MyFunc6ServiceRoleCDDBC2C6\", \"Arn\"]}, \"Architectures\": [\"arm64\"], \"Handler\": \"index.handler\", \"Layers\": [{\"Fn::Join\": [\"\", [\"arn:aws:lambda:\", {\"Ref\": \"AWS::Region\"}, \":580247275435:layer:LambdaInsightsExtension-Arm64:1\"]]}], \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"MyFunc6ServiceRoleCDDBC2C6\"]}}, \"Mappings\": {\"CloudwatchlambdainsightsversionMap\": {\"af-south-1\": {\"1x0x98x0xx86x64\": \"arn:aws:lambda:af-south-1:012438385374:layer:LambdaInsightsExtension:8\", \"1x0x119x0xx86x64\": \"arn:aws:lambda:af-south-1:012438385374:layer:LambdaInsightsExtension:9\"}, \"ap-east-1\": {\"1x0x98x0xx86x64\": \"arn:aws:lambda:ap-east-1:519774774795:layer:LambdaInsightsExtension:8\", \"1x0x119x0xx86x64\": \"arn:aws:lambda:ap-east-1:519774774795:layer:LambdaInsightsExtension:9\"}, \"ap-northeast-1\": {\"1x0x98x0xx86x64\": \"arn:aws:lambda:ap-northeast-1:580247275435:layer:LambdaInsightsExtension:14\", \"1x0x119x0xx86x64\": \"arn:aws:lambda:ap-northeast-1:580247275435:layer:LambdaInsightsExtension:23\"}, \"ap-northeast-2\": {\"1x0x98x0xx86x64\": \"arn:aws:lambda:ap-northeast-2:580247275435:layer:LambdaInsightsExtension:14\", \"1x0x119x0xx86x64\": \"arn:aws:lambda:ap-northeast-2:580247275435:layer:LambdaInsightsExtension:16\"}, \"ap-south-1\": {\"1x0x98x0xx86x64\": \"arn:aws:lambda:ap-south-1:580247275435:layer:LambdaInsightsExtension:14\", \"1x0x119x0xx86x64\": \"arn:aws:lambda:ap-south-1:580247275435:layer:LambdaInsightsExtension:16\"}, \"ap-southeast-1\": {\"1x0x98x0xx86x64\": \"arn:aws:lambda:ap-southeast-1:580247275435:layer:LambdaInsightsExtension:14\", \"1x0x119x0xx86x64\": \"arn:aws:lambda:ap-southeast-1:580247275435:layer:LambdaInsightsExtension:16\"}, \"ap-southeast-2\": {\"1x0x98x0xx86x64\": \"arn:aws:lambda:ap-southeast-2:580247275435:layer:LambdaInsightsExtension:14\", \"1x0x119x0xx86x64\": \"arn:aws:lambda:ap-southeast-2:580247275435:layer:LambdaInsightsExtension:16\"}, \"ca-central-1\": {\"1x0x98x0xx86x64\": \"arn:aws:lambda:ca-central-1:580247275435:layer:LambdaInsightsExtension:14\", \"1x0x119x0xx86x64\": \"arn:aws:lambda:ca-central-1:580247275435:layer:LambdaInsightsExtension:16\"}, \"cn-north-1\": {\"1x0x98x0xx86x64\": \"arn:aws-cn:lambda:cn-north-1:488211338238:layer:LambdaInsightsExtension:8\", \"1x0x119x0xx86x64\": \"arn:aws-cn:lambda:cn-north-1:488211338238:layer:LambdaInsightsExtension:9\"}, \"cn-northwest-1\": {\"1x0x98x0xx86x64\": \"arn:aws-cn:lambda:cn-northwest-1:488211338238:layer:LambdaInsightsExtension:8\", \"1x0x119x0xx86x64\": \"arn:aws-cn:lambda:cn-northwest-1:488211338238:layer:LambdaInsightsExtension:9\"}, \"eu-central-1\": {\"1x0x98x0xx86x64\": \"arn:aws:lambda:eu-central-1:580247275435:layer:LambdaInsightsExtension:14\", \"1x0x119x0xx86x64\": \"arn:aws:lambda:eu-central-1:580247275435:layer:LambdaInsightsExtension:16\"}, \"eu-north-1\": {\"1x0x98x0xx86x64\": \"arn:aws:lambda:eu-north-1:580247275435:layer:LambdaInsightsExtension:14\", \"1x0x119x0xx86x64\": \"arn:aws:lambda:eu-north-1:580247275435:layer:LambdaInsightsExtension:16\"}, \"eu-south-1\": {\"1x0x98x0xx86x64\": \"arn:aws:lambda:eu-south-1:339249233099:layer:LambdaInsightsExtension:8\", \"1x0x119x0xx86x64\": \"arn:aws:lambda:eu-south-1:339249233099:layer:LambdaInsightsExtension:9\"}, \"eu-west-1\": {\"1x0x98x0xx86x64\": \"arn:aws:lambda:eu-west-1:580247275435:layer:LambdaInsightsExtension:14\", \"1x0x119x0xx86x64\": \"arn:aws:lambda:eu-west-1:580247275435:layer:LambdaInsightsExtension:16\"}, \"eu-west-2\": {\"1x0x98x0xx86x64\": \"arn:aws:lambda:eu-west-2:580247275435:layer:LambdaInsightsExtension:14\", \"1x0x119x0xx86x64\": \"arn:aws:lambda:eu-west-2:580247275435:layer:LambdaInsightsExtension:16\"}, \"eu-west-3\": {\"1x0x98x0xx86x64\": \"arn:aws:lambda:eu-west-3:580247275435:layer:LambdaInsightsExtension:14\", \"1x0x119x0xx86x64\": \"arn:aws:lambda:eu-west-3:580247275435:layer:LambdaInsightsExtension:16\"}, \"me-south-1\": {\"1x0x98x0xx86x64\": \"arn:aws:lambda:me-south-1:285320876703:layer:LambdaInsightsExtension:8\", \"1x0x119x0xx86x64\": \"arn:aws:lambda:me-south-1:285320876703:layer:LambdaInsightsExtension:9\"}, \"sa-east-1\": {\"1x0x98x0xx86x64\": \"arn:aws:lambda:sa-east-1:580247275435:layer:LambdaInsightsExtension:14\", \"1x0x119x0xx86x64\": \"arn:aws:lambda:sa-east-1:580247275435:layer:LambdaInsightsExtension:16\"}, \"us-east-1\": {\"1x0x98x0xx86x64\": \"arn:aws:lambda:us-east-1:580247275435:layer:LambdaInsightsExtension:14\", \"1x0x119x0xx86x64\": \"arn:aws:lambda:us-east-1:580247275435:layer:LambdaInsightsExtension:16\"}, \"us-east-2\": {\"1x0x98x0xx86x64\": \"arn:aws:lambda:us-east-2:580247275435:layer:LambdaInsightsExtension:14\", \"1x0x119x0xx86x64\": \"arn:aws:lambda:us-east-2:580247275435:layer:LambdaInsightsExtension:16\"}, \"us-west-1\": {\"1x0x98x0xx86x64\": \"arn:aws:lambda:us-west-1:580247275435:layer:LambdaInsightsExtension:14\", \"1x0x119x0xx86x64\": \"arn:aws:lambda:us-west-1:580247275435:layer:LambdaInsightsExtension:16\"}, \"us-west-2\": {\"1x0x98x0xx86x64\": \"arn:aws:lambda:us-west-2:580247275435:layer:LambdaInsightsExtension:14\", \"1x0x119x0xx86x64\": \"arn:aws:lambda:us-west-2:580247275435:layer:LambdaInsightsExtension:16\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as cdk from 'aws-cdk-lib';\nimport * as lambda from 'aws-cdk-lib/aws-lambda';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'stack');\n\nnew lambda.Function(stack, 'MyFunc1', {\n  runtime: lambda.Runtime.NODEJS_14_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromInline(`exports.handler = ${handler.toString()}`),\n  insightsVersion: lambda.LambdaInsightsVersion.VERSION_1_0_54_0,\n});\n\nnew lambda.Function(stack, 'MyFunc2', {\n  runtime: lambda.Runtime.NODEJS_14_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromInline(`exports.handler = ${handler.toString()}`),\n  insightsVersion: lambda.LambdaInsightsVersion.VERSION_1_0_86_0,\n});\n\nnew lambda.Function(stack, 'MyFunc3', {\n  runtime: lambda.Runtime.NODEJS_14_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromInline(`exports.handler = ${handler.toString()}`),\n  insightsVersion: lambda.LambdaInsightsVersion.VERSION_1_0_89_0,\n});\n\nnew lambda.Function(stack, 'MyFunc4', {\n  runtime: lambda.Runtime.NODEJS_14_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromInline(`exports.handler = ${handler.toString()}`),\n  insightsVersion: lambda.LambdaInsightsVersion.VERSION_1_0_98_0,\n});\n\nnew lambda.Function(stack, 'MyFunc5', {\n  runtime: lambda.Runtime.NODEJS_14_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromInline(`exports.handler = ${handler.toString()}`),\n  insightsVersion: lambda.LambdaInsightsVersion.VERSION_1_0_119_0,\n});\n\nnew lambda.Function(stack, 'MyFunc6', {\n  runtime: lambda.Runtime.NODEJS_14_X,\n  architecture: lambda.Architecture.ARM_64,\n  handler: 'index.handler',\n  code: lambda.Code.fromInline(`exports.handler = ${handler.toString()}`),\n  insightsVersion: lambda.LambdaInsightsVersion.VERSION_1_0_119_0,\n});\n\napp.synth();\n\n/* eslint-disable no-console */\nfunction handler(event: any, _context: any, callback: any) {\n  console.log(JSON.stringify(event, undefined, 2));\n  return callback();\n}\n"}
{ "prompt": "{\"Resources\": {\"MyLambdaServiceRole4539ECB6\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"MyLambdaCCE802FB\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"exports.handler = async () => { console.log('hello world'); };\"}, \"Role\": {\"Fn::GetAtt\": [\"MyLambdaServiceRole4539ECB6\", \"Arn\"]}, \"Description\": \"version-hash:7c384e097d7f7605c9405f788cdf9f7b\", \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"MyLambdaServiceRole4539ECB6\"]}, \"MyLambdaCurrentVersionE7A382CC0be4c7f7b82230afaf72d130ee920da9\": {\"Type\": \"AWS::Lambda::Version\", \"Properties\": {\"FunctionName\": {\"Ref\": \"MyLambdaCCE802FB\"}}}, \"Alias325C5727\": {\"Type\": \"AWS::Lambda::Alias\", \"Properties\": {\"FunctionName\": {\"Ref\": \"MyLambdaCCE802FB\"}, \"FunctionVersion\": {\"Fn::GetAtt\": [\"MyLambdaCurrentVersionE7A382CC0be4c7f7b82230afaf72d130ee920da9\", \"Version\"]}, \"Name\": \"prod\"}}, \"AliasAliasScalingTarget7449FF0E\": {\"Type\": \"AWS::ApplicationAutoScaling::ScalableTarget\", \"Properties\": {\"MaxCapacity\": 50, \"MinCapacity\": 3, \"ResourceId\": {\"Fn::Join\": [\"\", [\"function:\", {\"Fn::Select\": [6, {\"Fn::Split\": [\":\", {\"Ref\": \"Alias325C5727\"}]}]}, \":prod\"]]}, \"RoleARN\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/aws-service-role/lambda.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_LambdaConcurrency\"]]}, \"ScalableDimension\": \"lambda:function:ProvisionedConcurrency\", \"ServiceNamespace\": \"lambda\", \"ScheduledActions\": [{\"ScalableTargetAction\": {\"MinCapacity\": 20}, \"Schedule\": \"cron(0 8 * * ? *)\", \"ScheduledActionName\": \"ScaleUpInTheMorning\"}, {\"ScalableTargetAction\": {\"MaxCapacity\": 20}, \"Schedule\": \"cron(0 20 * * ? *)\", \"ScheduledActionName\": \"ScaleDownAtNight\"}]}}, \"AliasAliasScalingTargetTrackingA7718D48\": {\"Type\": \"AWS::ApplicationAutoScaling::ScalingPolicy\", \"Properties\": {\"PolicyName\": \"awslambdaautoscalingAliasAliasScalingTargetTrackingD339330D\", \"PolicyType\": \"TargetTrackingScaling\", \"ScalingTargetId\": {\"Ref\": \"AliasAliasScalingTarget7449FF0E\"}, \"TargetTrackingScalingPolicyConfiguration\": {\"PredefinedMetricSpecification\": {\"PredefinedMetricType\": \"LambdaProvisionedConcurrencyUtilization\"}, \"TargetValue\": 0.5}}}}, \"Outputs\": {\"FunctionName\": {\"Value\": {\"Ref\": \"MyLambdaCCE802FB\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as appscaling from 'aws-cdk-lib/aws-applicationautoscaling';\nimport * as cdk from 'aws-cdk-lib';\nimport { LAMBDA_RECOGNIZE_LAYER_VERSION } from 'aws-cdk-lib/cx-api';\nimport * as lambda from 'aws-cdk-lib/aws-lambda';\n\n/**\n* Stack verification steps:\n* aws application-autoscaling describe-scalable-targets --service-namespace lambda --resource-ids function:<function name>:prod\n* has a minCapacity of 3 and maxCapacity of 50\n*/\nclass TestStack extends cdk.Stack {\n  constructor(scope: cdk.App, id: string) {\n    super(scope, id);\n\n    const fn = new lambda.Function(this, 'MyLambda', {\n      code: new lambda.InlineCode('exports.handler = async () => { console.log(\\'hello world\\'); };'),\n      handler: 'index.handler',\n      runtime: lambda.Runtime.NODEJS_14_X,\n    });\n\n    const version = fn.currentVersion;\n\n    const alias = new lambda.Alias(this, 'Alias', {\n      aliasName: 'prod',\n      version,\n    });\n\n    const scalingTarget = alias.addAutoScaling({ minCapacity: 3, maxCapacity: 50 });\n\n    scalingTarget.scaleOnUtilization({\n      utilizationTarget: 0.5,\n    });\n\n    scalingTarget.scaleOnSchedule('ScaleUpInTheMorning', {\n      schedule: appscaling.Schedule.cron({ hour: '8', minute: '0' }),\n      minCapacity: 20,\n    });\n\n    scalingTarget.scaleOnSchedule('ScaleDownAtNight', {\n      schedule: appscaling.Schedule.cron({ hour: '20', minute: '0' }),\n      maxCapacity: 20,\n    });\n\n    new cdk.CfnOutput(this, 'FunctionName', {\n      value: fn.functionName,\n    });\n  }\n}\n\nconst app = new cdk.App();\n\nconst stack = new TestStack(app, 'aws-lambda-autoscaling');\n\n// Changes the function description when the feature flag is present\n// to validate the changed function hash.\ncdk.Aspects.of(stack).add(new lambda.FunctionVersionUpgrade(LAMBDA_RECOGNIZE_LAYER_VERSION));\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"PYTHON37ServiceRoleDE7E561E\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"PYTHON37D3A10E04\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"def handler(event, context):\n  return \\\"success\\\"\"}, \"Role\": {\"Fn::GetAtt\": [\"PYTHON37ServiceRoleDE7E561E\", \"Arn\"]}, \"Handler\": \"index.handler\", \"Runtime\": \"python3.7\"}, \"DependsOn\": [\"PYTHON37ServiceRoleDE7E561E\"]}, \"PYTHON38ServiceRole3EA86BBE\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"PYTHON38A180AE47\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"def handler(event, context):\n  return \\\"success\\\"\"}, \"Role\": {\"Fn::GetAtt\": [\"PYTHON38ServiceRole3EA86BBE\", \"Arn\"]}, \"Handler\": \"index.handler\", \"Runtime\": \"python3.8\"}, \"DependsOn\": [\"PYTHON38ServiceRole3EA86BBE\"]}, \"PYTHON39ServiceRole53E964DF\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"PYTHON39143BF976\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"def handler(event, context):\n  return \\\"success\\\"\"}, \"Role\": {\"Fn::GetAtt\": [\"PYTHON39ServiceRole53E964DF\", \"Arn\"]}, \"Handler\": \"index.handler\", \"Runtime\": \"python3.9\"}, \"DependsOn\": [\"PYTHON39ServiceRole53E964DF\"]}, \"PYTHON310ServiceRole65985CC8\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"PYTHON310431C418B\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"def handler(event, context):\n  return \\\"success\\\"\"}, \"Role\": {\"Fn::GetAtt\": [\"PYTHON310ServiceRole65985CC8\", \"Arn\"]}, \"Handler\": \"index.handler\", \"Runtime\": \"python3.10\"}, \"DependsOn\": [\"PYTHON310ServiceRole65985CC8\"]}, \"NODEJS14XServiceRole4523ECDB\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"NODEJS14X930214A3\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"exports.handler = async function(event) { return \\\"success\\\" }\"}, \"Role\": {\"Fn::GetAtt\": [\"NODEJS14XServiceRole4523ECDB\", \"Arn\"]}, \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"NODEJS14XServiceRole4523ECDB\"]}, \"NODEJS16XServiceRoleB9DAFDFD\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"NODEJS16XDE5DD82D\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"exports.handler = async function(event) { return \\\"success\\\" }\"}, \"Role\": {\"Fn::GetAtt\": [\"NODEJS16XServiceRoleB9DAFDFD\", \"Arn\"]}, \"Handler\": \"index.handler\", \"Runtime\": \"nodejs16.x\"}, \"DependsOn\": [\"NODEJS16XServiceRoleB9DAFDFD\"]}, \"NODEJS18XServiceRole4D18036A\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"NODEJS18X7B6E6033\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"exports.handler = async function(event) { return \\\"success\\\" }\"}, \"Role\": {\"Fn::GetAtt\": [\"NODEJS18XServiceRole4D18036A\", \"Arn\"]}, \"Handler\": \"index.handler\", \"Runtime\": \"nodejs18.x\"}, \"DependsOn\": [\"NODEJS18XServiceRole4D18036A\"]}}, \"Outputs\": {\"PYTHON37functionName\": {\"Value\": {\"Ref\": \"PYTHON37D3A10E04\"}}, \"PYTHON38functionName\": {\"Value\": {\"Ref\": \"PYTHON38A180AE47\"}}, \"PYTHON39functionName\": {\"Value\": {\"Ref\": \"PYTHON39143BF976\"}}, \"PYTHON310functionName\": {\"Value\": {\"Ref\": \"PYTHON310431C418B\"}}, \"NODEJS14XfunctionName\": {\"Value\": {\"Ref\": \"NODEJS14X930214A3\"}}, \"NODEJS16XfunctionName\": {\"Value\": {\"Ref\": \"NODEJS16XDE5DD82D\"}}, \"NODEJS18XfunctionName\": {\"Value\": {\"Ref\": \"NODEJS18X7B6E6033\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import { App, CfnOutput, Stack } from 'aws-cdk-lib';\nimport { Function, InlineCode, Runtime } from 'aws-cdk-lib/aws-lambda';\n\n// CloudFormation supports InlineCode only for a subset of runtimes. This integration test\n// is used to verify that the ones marked in the CDK are in fact supported by CloudFormation.\n// Running `cdk deploy` on this stack will confirm if all the runtimes here are supported.\n//\n// To verify that the lambda function works correctly, use the function names that are part\n// of the stack output (printed on the console at the end of 'cdk deploy') and run the command -\n// aws lambda invoke --function-name <function-name>\n//\n// If successful, the output will contain \"success\"\n\nconst app = new App();\n\nconst stack = new Stack(app, 'aws-cdk-lambda-runtime-inlinecode');\n\nconst python37 = new Function(stack, 'PYTHON_3_7', {\n  code: new InlineCode('def handler(event, context):\\n  return \"success\"'),\n  handler: 'index.handler',\n  runtime: Runtime.PYTHON_3_7,\n});\nnew CfnOutput(stack, 'PYTHON_3_7-functionName', { value: python37.functionName });\n\nconst python38 = new Function(stack, 'PYTHON_3_8', {\n  code: new InlineCode('def handler(event, context):\\n  return \"success\"'),\n  handler: 'index.handler',\n  runtime: Runtime.PYTHON_3_8,\n});\nnew CfnOutput(stack, 'PYTHON_3_8-functionName', { value: python38.functionName });\n\nconst python39 = new Function(stack, 'PYTHON_3_9', {\n  code: new InlineCode('def handler(event, context):\\n  return \"success\"'),\n  handler: 'index.handler',\n  runtime: Runtime.PYTHON_3_9,\n});\nnew CfnOutput(stack, 'PYTHON_3_9-functionName', { value: python39.functionName });\n\nconst python310 = new Function(stack, 'PYTHON_3_10', {\n  code: new InlineCode('def handler(event, context):\\n  return \"success\"'),\n  handler: 'index.handler',\n  runtime: Runtime.PYTHON_3_10,\n});\nnew CfnOutput(stack, 'PYTHON_3_10-functionName', { value: python310.functionName });\n\nconst node14xfn = new Function(stack, 'NODEJS_14_X', {\n  code: new InlineCode('exports.handler = async function(event) { return \"success\" }'),\n  handler: 'index.handler',\n  runtime: Runtime.NODEJS_14_X,\n});\nnew CfnOutput(stack, 'NODEJS_14_X-functionName', { value: node14xfn.functionName });\n\nconst node16xfn = new Function(stack, 'NODEJS_16_X', {\n  code: new InlineCode('exports.handler = async function(event) { return \"success\" }'),\n  handler: 'index.handler',\n  runtime: Runtime.NODEJS_16_X,\n});\nnew CfnOutput(stack, 'NODEJS_16_X-functionName', { value: node16xfn.functionName });\n\nconst node18xfn = new Function(stack, 'NODEJS_18_X', {\n  code: new InlineCode('exports.handler = async function(event) { return \"success\" }'),\n  handler: 'index.handler',\n  runtime: Runtime.NODEJS_18_X,\n});\nnew CfnOutput(stack, 'NODEJS_18_X-functionName', { value: node18xfn.functionName });\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyLambdaAliasPCEServiceRoleF7C9F212\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"MyLambdaAliasPCEServiceRoleDefaultPolicyE7418D56\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"*\", \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyLambdaAliasPCEServiceRoleDefaultPolicyE7418D56\", \"Roles\": [{\"Ref\": \"MyLambdaAliasPCEServiceRoleF7C9F212\"}]}}, \"MyLambdaAliasPCED0B8D751\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"exports.handler =  async function(event, context) { console.log(\\\"Hello from CDK! with Alias Provisioned Concurrent Exec!\\\");}\"}, \"Role\": {\"Fn::GetAtt\": [\"MyLambdaAliasPCEServiceRoleF7C9F212\", \"Arn\"]}, \"Description\": \"version-hash:22935888161d542257ba1aa7d6060c95\", \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"MyLambdaAliasPCEServiceRoleDefaultPolicyE7418D56\", \"MyLambdaAliasPCEServiceRoleF7C9F212\"]}, \"MyLambdaAliasPCECurrentVersion072335D3224448d87cb592b450e76b3259c1d874\": {\"Type\": \"AWS::Lambda::Version\", \"Properties\": {\"FunctionName\": {\"Ref\": \"MyLambdaAliasPCED0B8D751\"}}}, \"Alias325C5727\": {\"Type\": \"AWS::Lambda::Alias\", \"Properties\": {\"FunctionName\": {\"Ref\": \"MyLambdaAliasPCED0B8D751\"}, \"FunctionVersion\": {\"Fn::GetAtt\": [\"MyLambdaAliasPCECurrentVersion072335D3224448d87cb592b450e76b3259c1d874\", \"Version\"]}, \"Name\": \"prod\", \"ProvisionedConcurrencyConfig\": {\"ProvisionedConcurrentExecutions\": 5}}}, \"AliasAliasPermissionAF30F9E8\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Ref\": \"Alias325C5727\"}, \"Principal\": \"cloudformation.amazonaws.com\"}}, \"MyLambdaVersionPCEServiceRole2ACFB73E\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"MyLambdaVersionPCEServiceRoleDefaultPolicy229A1552\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"*\", \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyLambdaVersionPCEServiceRoleDefaultPolicy229A1552\", \"Roles\": [{\"Ref\": \"MyLambdaVersionPCEServiceRole2ACFB73E\"}]}}, \"MyLambdaVersionPCEA3A0D86B\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"exports.handler =  async function(event, context) { console.log(\\\"Hello from CDK! with Version Provisioned Concurrent Exec!\\\");}\"}, \"Role\": {\"Fn::GetAtt\": [\"MyLambdaVersionPCEServiceRole2ACFB73E\", \"Arn\"]}, \"Description\": \"version-hash:fa78bcfe53ab85fefd72b3ac4cc5679c\", \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"MyLambdaVersionPCEServiceRoleDefaultPolicy229A1552\", \"MyLambdaVersionPCEServiceRole2ACFB73E\"]}, \"MyLambdaVersionPCECurrentVersion27FC3932d779c9115684f8f405cbd7282b1508f5\": {\"Type\": \"AWS::Lambda::Version\", \"Properties\": {\"FunctionName\": {\"Ref\": \"MyLambdaVersionPCEA3A0D86B\"}, \"ProvisionedConcurrencyConfig\": {\"ProvisionedConcurrentExecutions\": 5}}}, \"Alias29455D932\": {\"Type\": \"AWS::Lambda::Alias\", \"Properties\": {\"FunctionName\": {\"Ref\": \"MyLambdaVersionPCEA3A0D86B\"}, \"FunctionVersion\": {\"Fn::GetAtt\": [\"MyLambdaVersionPCECurrentVersion27FC3932d779c9115684f8f405cbd7282b1508f5\", \"Version\"]}, \"Name\": \"prod\"}}, \"Alias2AliasPermission2448514B6\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Ref\": \"Alias29455D932\"}, \"Principal\": \"cloudformation.amazonaws.com\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as iam from 'aws-cdk-lib/aws-iam';\nimport * as cdk from 'aws-cdk-lib';\nimport { LAMBDA_RECOGNIZE_LAYER_VERSION } from 'aws-cdk-lib/cx-api';\nimport * as lambda from 'aws-cdk-lib/aws-lambda';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'aws-cdk-lambda-pce-1');\n\nconst lambdaCode = 'exports.handler =  async function(event, context) { ' +\n                   'console.log(\"Hello from CDK! with #type# Provisioned Concurrent Exec!\");}';\n\nconst pce = 5;\n\n// Integration test for provisioned concurrent execution via Alias\nconst fn = new lambda.Function(stack, 'MyLambdaAliasPCE', {\n  code: new lambda.InlineCode(lambdaCode.replace('#type#', 'Alias')),\n  handler: 'index.handler',\n  runtime: lambda.Runtime.NODEJS_14_X,\n});\n\nfn.addToRolePolicy(new iam.PolicyStatement({\n  resources: ['*'],\n  actions: ['*'],\n}));\n\nconst version = fn.currentVersion;\n\nconst alias = new lambda.Alias(stack, 'Alias', {\n  aliasName: 'prod',\n  version,\n  provisionedConcurrentExecutions: pce,\n});\n\nalias.addPermission('AliasPermission', {\n  principal: new iam.ServicePrincipal('cloudformation.amazonaws.com'),\n});\n\n// Integration test for provisioned concurrent execution via Version\nconst fnVersionPCE = new lambda.Function(stack, 'MyLambdaVersionPCE', {\n  code: new lambda.InlineCode(lambdaCode.replace('#type#', 'Version')),\n  handler: 'index.handler',\n  runtime: lambda.Runtime.NODEJS_14_X,\n  currentVersionOptions: {\n    provisionedConcurrentExecutions: pce,\n  },\n});\n\nfnVersionPCE.addToRolePolicy(new iam.PolicyStatement({\n  resources: ['*'],\n  actions: ['*'],\n}));\n\nconst version2 = fnVersionPCE.currentVersion;\n\nconst alias2 = new lambda.Alias(stack, 'Alias2', {\n  aliasName: 'prod',\n  version: version2,\n});\n\nalias2.addPermission('AliasPermission2', {\n  principal: new iam.ServicePrincipal('cloudformation.amazonaws.com'),\n});\n\n// Changes the function description when the feature flag is present\n// to validate the changed function hash.\ncdk.Aspects.of(stack).add(new lambda.FunctionVersionUpgrade(LAMBDA_RECOGNIZE_LAYER_VERSION));\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"Vpc8378EB38\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-lambda-1/Vpc\"}]}}, \"VpcPublicSubnet1Subnet5C2D37C4\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-lambda-1/Vpc/PublicSubnet1\"}]}}, \"VpcPublicSubnet1RouteTable6C95E38E\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-lambda-1/Vpc/PublicSubnet1\"}]}}, \"VpcPublicSubnet1RouteTableAssociation97140677\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet1RouteTable6C95E38E\"}, \"SubnetId\": {\"Ref\": \"VpcPublicSubnet1Subnet5C2D37C4\"}}}, \"VpcPublicSubnet1DefaultRoute3DA9E72A\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet1RouteTable6C95E38E\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VpcIGWD7BA715C\"}}, \"DependsOn\": [\"VpcVPCGWBF912B6E\"]}, \"VpcPublicSubnet1EIPD7E02669\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-lambda-1/Vpc/PublicSubnet1\"}]}}, \"VpcPublicSubnet1NATGateway4D7517AA\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VpcPublicSubnet1Subnet5C2D37C4\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VpcPublicSubnet1EIPD7E02669\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-lambda-1/Vpc/PublicSubnet1\"}]}, \"DependsOn\": [\"VpcPublicSubnet1DefaultRoute3DA9E72A\", \"VpcPublicSubnet1RouteTableAssociation97140677\"]}, \"VpcPublicSubnet2Subnet691E08A3\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-lambda-1/Vpc/PublicSubnet2\"}]}}, \"VpcPublicSubnet2RouteTable94F7E489\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-lambda-1/Vpc/PublicSubnet2\"}]}}, \"VpcPublicSubnet2RouteTableAssociationDD5762D8\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet2RouteTable94F7E489\"}, \"SubnetId\": {\"Ref\": \"VpcPublicSubnet2Subnet691E08A3\"}}}, \"VpcPublicSubnet2DefaultRoute97F91067\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet2RouteTable94F7E489\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VpcIGWD7BA715C\"}}, \"DependsOn\": [\"VpcVPCGWBF912B6E\"]}, \"VpcPrivateSubnet1Subnet536B997A\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-lambda-1/Vpc/PrivateSubnet1\"}]}}, \"VpcPrivateSubnet1RouteTableB2C5B500\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-lambda-1/Vpc/PrivateSubnet1\"}]}}, \"VpcPrivateSubnet1RouteTableAssociation70C59FA6\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet1RouteTableB2C5B500\"}, \"SubnetId\": {\"Ref\": \"VpcPrivateSubnet1Subnet536B997A\"}}}, \"VpcPrivateSubnet1DefaultRouteBE02A9ED\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet1RouteTableB2C5B500\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VpcPublicSubnet1NATGateway4D7517AA\"}}}, \"VpcPrivateSubnet2Subnet3788AAA1\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-lambda-1/Vpc/PrivateSubnet2\"}]}}, \"VpcPrivateSubnet2RouteTableA678073B\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-lambda-1/Vpc/PrivateSubnet2\"}]}}, \"VpcPrivateSubnet2RouteTableAssociationA89CAD56\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet2RouteTableA678073B\"}, \"SubnetId\": {\"Ref\": \"VpcPrivateSubnet2Subnet3788AAA1\"}}}, \"VpcPrivateSubnet2DefaultRoute060D2087\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet2RouteTableA678073B\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VpcPublicSubnet1NATGateway4D7517AA\"}}}, \"VpcIGWD7BA715C\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-lambda-1/Vpc\"}]}}, \"VpcVPCGWBF912B6E\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"InternetGatewayId\": {\"Ref\": \"VpcIGWD7BA715C\"}}}, \"Efs9E8BF36B\": {\"Type\": \"AWS::EFS::FileSystem\", \"Properties\": {\"Encrypted\": true, \"FileSystemTags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-lambda-1/Efs\"}]}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"EfsEfsSecurityGroup6F40EA3B\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"aws-cdk-lambda-1/Efs/EfsSecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-lambda-1/Efs\"}], \"VpcId\": {\"Ref\": \"Vpc8378EB38\"}}}, \"EfsEfsSecurityGroupfromawscdklambda1MyLambdaSecurityGroup86B085EE20490D9864A8\": {\"Type\": \"AWS::EC2::SecurityGroupIngress\", \"Properties\": {\"IpProtocol\": \"tcp\", \"Description\": \"from awscdklambda1MyLambdaSecurityGroup86B085EE:2049\", \"FromPort\": 2049, \"GroupId\": {\"Fn::GetAtt\": [\"EfsEfsSecurityGroup6F40EA3B\", \"GroupId\"]}, \"SourceSecurityGroupId\": {\"Fn::GetAtt\": [\"MyLambdaSecurityGroup1E71A818\", \"GroupId\"]}, \"ToPort\": 2049}}, \"EfsEfsMountTarget195B2DD2E\": {\"Type\": \"AWS::EFS::MountTarget\", \"Properties\": {\"FileSystemId\": {\"Ref\": \"Efs9E8BF36B\"}, \"SecurityGroups\": [{\"Fn::GetAtt\": [\"EfsEfsSecurityGroup6F40EA3B\", \"GroupId\"]}], \"SubnetId\": {\"Ref\": \"VpcPrivateSubnet1Subnet536B997A\"}}}, \"EfsEfsMountTarget2315C927F\": {\"Type\": \"AWS::EFS::MountTarget\", \"Properties\": {\"FileSystemId\": {\"Ref\": \"Efs9E8BF36B\"}, \"SecurityGroups\": [{\"Fn::GetAtt\": [\"EfsEfsSecurityGroup6F40EA3B\", \"GroupId\"]}], \"SubnetId\": {\"Ref\": \"VpcPrivateSubnet2Subnet3788AAA1\"}}}, \"EfsAccessPointE419FED9\": {\"Type\": \"AWS::EFS::AccessPoint\", \"Properties\": {\"FileSystemId\": {\"Ref\": \"Efs9E8BF36B\"}, \"AccessPointTags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-lambda-1/Efs/AccessPoint\"}], \"PosixUser\": {\"Gid\": \"1001\", \"Uid\": \"1001\"}, \"RootDirectory\": {\"CreationInfo\": {\"OwnerGid\": \"1001\", \"OwnerUid\": \"1001\", \"Permissions\": \"750\"}, \"Path\": \"/export/lambda\"}}}, \"MyLambdaServiceRole4539ECB6\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole\"]]}]}, \"DependsOn\": [\"EfsEfsMountTarget195B2DD2E\", \"EfsEfsMountTarget2315C927F\", \"VpcPrivateSubnet1DefaultRouteBE02A9ED\", \"VpcPrivateSubnet1RouteTableAssociation70C59FA6\", \"VpcPrivateSubnet2DefaultRoute060D2087\", \"VpcPrivateSubnet2RouteTableAssociationA89CAD56\"]}, \"MyLambdaServiceRoleDefaultPolicy5BBC6F68\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"elasticfilesystem:ClientMount\", \"Condition\": {\"StringEquals\": {\"elasticfilesystem:AccessPointArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":elasticfilesystem:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":access-point/\", {\"Ref\": \"EfsAccessPointE419FED9\"}]]}}}, \"Effect\": \"Allow\", \"Resource\": \"*\"}, {\"Action\": \"elasticfilesystem:ClientWrite\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":elasticfilesystem:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":file-system/\", {\"Ref\": \"Efs9E8BF36B\"}]]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyLambdaServiceRoleDefaultPolicy5BBC6F68\", \"Roles\": [{\"Ref\": \"MyLambdaServiceRole4539ECB6\"}]}, \"DependsOn\": [\"EfsEfsMountTarget195B2DD2E\", \"EfsEfsMountTarget2315C927F\", \"VpcPrivateSubnet1DefaultRouteBE02A9ED\", \"VpcPrivateSubnet1RouteTableAssociation70C59FA6\", \"VpcPrivateSubnet2DefaultRoute060D2087\", \"VpcPrivateSubnet2RouteTableAssociationA89CAD56\"]}, \"MyLambdaSecurityGroup1E71A818\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"Automatic security group for Lambda Function awscdklambda1MyLambda82056696\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"VpcId\": {\"Ref\": \"Vpc8378EB38\"}}, \"DependsOn\": [\"EfsEfsMountTarget195B2DD2E\", \"EfsEfsMountTarget2315C927F\", \"VpcPrivateSubnet1DefaultRouteBE02A9ED\", \"VpcPrivateSubnet1RouteTableAssociation70C59FA6\", \"VpcPrivateSubnet2DefaultRoute060D2087\", \"VpcPrivateSubnet2RouteTableAssociationA89CAD56\"]}, \"MyLambdaCCE802FB\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"\nimport json\nimport os\nimport string\nimport random\nimport datetime\n\nMSG_FILE_PATH = '/mnt/msg/content'\n\ndef randomString(stringLength=10):\n  letters = string.ascii_lowercase\n  return ''.join(random.choice(letters) for i in range(stringLength))\n\ndef lambda_handler(event, context):\n  with open(MSG_FILE_PATH, 'a') as f:\n      f.write(f\\\"{datetime.datetime.utcnow():%Y-%m-%d-%H:%M:%S} \\\" + randomString(5) + ' ')\n\n  file = open(MSG_FILE_PATH, \\\"r\\\")\n  file_content = file.read()\n  file.close()\n\n  return {\n    'statusCode': 200,\n    'body': str(file_content)\n  }\n\"}, \"Role\": {\"Fn::GetAtt\": [\"MyLambdaServiceRole4539ECB6\", \"Arn\"]}, \"FileSystemConfigs\": [{\"Arn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":elasticfilesystem:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":access-point/\", {\"Ref\": \"EfsAccessPointE419FED9\"}]]}, \"LocalMountPath\": \"/mnt/msg\"}], \"Handler\": \"index.lambda_handler\", \"Runtime\": \"python3.7\", \"VpcConfig\": {\"SecurityGroupIds\": [{\"Fn::GetAtt\": [\"MyLambdaSecurityGroup1E71A818\", \"GroupId\"]}], \"SubnetIds\": [{\"Ref\": \"VpcPrivateSubnet1Subnet536B997A\"}, {\"Ref\": \"VpcPrivateSubnet2Subnet3788AAA1\"}]}}, \"DependsOn\": [\"EfsEfsMountTarget195B2DD2E\", \"EfsEfsMountTarget2315C927F\", \"EfsEfsSecurityGroupfromawscdklambda1MyLambdaSecurityGroup86B085EE20490D9864A8\", \"MyLambdaServiceRoleDefaultPolicy5BBC6F68\", \"MyLambdaServiceRole4539ECB6\", \"VpcPrivateSubnet1DefaultRouteBE02A9ED\", \"VpcPrivateSubnet1RouteTableAssociation70C59FA6\", \"VpcPrivateSubnet2DefaultRoute060D2087\", \"VpcPrivateSubnet2RouteTableAssociationA89CAD56\"]}, \"securityGroupfromawscdklambda1MyLambda2SecurityGroup7492F70D20498301D9D2\": {\"Type\": \"AWS::EC2::SecurityGroupIngress\", \"Properties\": {\"IpProtocol\": \"tcp\", \"Description\": \"from awscdklambda1MyLambda2SecurityGroup7492F70D:2049\", \"FromPort\": 2049, \"GroupId\": {\"Fn::GetAtt\": [\"EfsEfsSecurityGroup6F40EA3B\", \"GroupId\"]}, \"SourceSecurityGroupId\": {\"Fn::GetAtt\": [\"MyLambda2SecurityGroup3C507954\", \"GroupId\"]}, \"ToPort\": 2049}}, \"MyLambda2ServiceRoleD09B370C\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole\"]]}]}, \"DependsOn\": [\"MyLambdaCCE802FB\", \"MyLambdaSecurityGroup1E71A818\", \"MyLambdaServiceRoleDefaultPolicy5BBC6F68\", \"MyLambdaServiceRole4539ECB6\", \"VpcPrivateSubnet1DefaultRouteBE02A9ED\", \"VpcPrivateSubnet1RouteTableAssociation70C59FA6\", \"VpcPrivateSubnet2DefaultRoute060D2087\", \"VpcPrivateSubnet2RouteTableAssociationA89CAD56\"]}, \"MyLambda2ServiceRoleDefaultPolicy2BECE79D\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"elasticfilesystem:ClientMount\", \"Condition\": {\"StringEquals\": {\"elasticfilesystem:AccessPointArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":elasticfilesystem:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":access-point/\", {\"Ref\": \"EfsAccessPointE419FED9\"}]]}}}, \"Effect\": \"Allow\", \"Resource\": \"*\"}, {\"Action\": \"elasticfilesystem:ClientWrite\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":elasticfilesystem:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":file-system/\", {\"Ref\": \"Efs9E8BF36B\"}]]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyLambda2ServiceRoleDefaultPolicy2BECE79D\", \"Roles\": [{\"Ref\": \"MyLambda2ServiceRoleD09B370C\"}]}, \"DependsOn\": [\"MyLambdaCCE802FB\", \"MyLambdaSecurityGroup1E71A818\", \"MyLambdaServiceRoleDefaultPolicy5BBC6F68\", \"MyLambdaServiceRole4539ECB6\", \"VpcPrivateSubnet1DefaultRouteBE02A9ED\", \"VpcPrivateSubnet1RouteTableAssociation70C59FA6\", \"VpcPrivateSubnet2DefaultRoute060D2087\", \"VpcPrivateSubnet2RouteTableAssociationA89CAD56\"]}, \"MyLambda2SecurityGroup3C507954\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"Automatic security group for Lambda Function awscdklambda1MyLambda232FB7CD2\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"VpcId\": {\"Ref\": \"Vpc8378EB38\"}}, \"DependsOn\": [\"MyLambdaCCE802FB\", \"MyLambdaSecurityGroup1E71A818\", \"MyLambdaServiceRoleDefaultPolicy5BBC6F68\", \"MyLambdaServiceRole4539ECB6\", \"VpcPrivateSubnet1DefaultRouteBE02A9ED\", \"VpcPrivateSubnet1RouteTableAssociation70C59FA6\", \"VpcPrivateSubnet2DefaultRoute060D2087\", \"VpcPrivateSubnet2RouteTableAssociationA89CAD56\"]}, \"MyLambda2254B54D5\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"\nimport json\nimport os\nimport string\nimport random\nimport datetime\n\nMSG_FILE_PATH = '/mnt/msg/content'\n\ndef randomString(stringLength=10):\n  letters = string.ascii_lowercase\n  return ''.join(random.choice(letters) for i in range(stringLength))\n\ndef lambda_handler(event, context):\n  with open(MSG_FILE_PATH, 'a') as f:\n      f.write(f\\\"{datetime.datetime.utcnow():%Y-%m-%d-%H:%M:%S} \\\" + randomString(5) + ' ')\n\n  file = open(MSG_FILE_PATH, \\\"r\\\")\n  file_content = file.read()\n  file.close()\n\n  return {\n    'statusCode': 200,\n    'body': str(file_content)\n  }\n\"}, \"Role\": {\"Fn::GetAtt\": [\"MyLambda2ServiceRoleD09B370C\", \"Arn\"]}, \"FileSystemConfigs\": [{\"Arn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":elasticfilesystem:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":access-point/\", {\"Ref\": \"EfsAccessPointE419FED9\"}]]}, \"LocalMountPath\": \"/mnt/msg\"}], \"Handler\": \"index.lambda_handler\", \"Runtime\": \"python3.7\", \"VpcConfig\": {\"SecurityGroupIds\": [{\"Fn::GetAtt\": [\"MyLambda2SecurityGroup3C507954\", \"GroupId\"]}], \"SubnetIds\": [{\"Ref\": \"VpcPrivateSubnet1Subnet536B997A\"}, {\"Ref\": \"VpcPrivateSubnet2Subnet3788AAA1\"}]}}, \"DependsOn\": [\"MyLambdaCCE802FB\", \"MyLambdaSecurityGroup1E71A818\", \"MyLambdaServiceRoleDefaultPolicy5BBC6F68\", \"MyLambdaServiceRole4539ECB6\", \"MyLambda2ServiceRoleDefaultPolicy2BECE79D\", \"MyLambda2ServiceRoleD09B370C\", \"securityGroupfromawscdklambda1MyLambda2SecurityGroup7492F70D20498301D9D2\", \"VpcPrivateSubnet1DefaultRouteBE02A9ED\", \"VpcPrivateSubnet1RouteTableAssociation70C59FA6\", \"VpcPrivateSubnet2DefaultRoute060D2087\", \"VpcPrivateSubnet2RouteTableAssociationA89CAD56\"]}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as efs from 'aws-cdk-lib/aws-efs';\nimport * as cdk from 'aws-cdk-lib';\nimport * as lambda from 'aws-cdk-lib/aws-lambda';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'aws-cdk-lambda-1');\n\nconst vpc = new ec2.Vpc(stack, 'Vpc', {\n  maxAzs: 3,\n  natGateways: 1,\n  restrictDefaultSecurityGroup: false,\n});\n\nconst fileSystem = new efs.FileSystem(stack, 'Efs', {\n  vpc,\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\n\n// create an access point and expose the root of the filesystem\nconst accessPoint = fileSystem.addAccessPoint('AccessPoint', {\n  createAcl: {\n    ownerGid: '1001',\n    ownerUid: '1001',\n    permissions: '750',\n  },\n  path: '/export/lambda',\n  posixUser: {\n    gid: '1001',\n    uid: '1001',\n  },\n});\n\nconst lambdaCode = new lambda.InlineCode(`\nimport json\nimport os\nimport string\nimport random\nimport datetime\n\nMSG_FILE_PATH = '/mnt/msg/content'\n\ndef randomString(stringLength=10):\n  letters = string.ascii_lowercase\n  return ''.join(random.choice(letters) for i in range(stringLength))\n\ndef lambda_handler(event, context):\n  with open(MSG_FILE_PATH, 'a') as f:\n      f.write(f\"{datetime.datetime.utcnow():%Y-%m-%d-%H:%M:%S} \" + randomString(5) + ' ')\n\n  file = open(MSG_FILE_PATH, \"r\")\n  file_content = file.read()\n  file.close()\n\n  return {\n    'statusCode': 200,\n    'body': str(file_content)\n  }\n`);\n\n// this function will mount the access point to '/mnt/msg' and write content onto /mnt/msg/content\nconst lambda1 = new lambda.Function(stack, 'MyLambda', {\n  code: lambdaCode,\n  handler: 'index.lambda_handler',\n  runtime: lambda.Runtime.PYTHON_3_7,\n  vpc,\n  filesystem: lambda.FileSystem.fromEfsAccessPoint(accessPoint, '/mnt/msg'),\n});\n\nlet importedFileSystem = efs.FileSystem.fromFileSystemAttributes(stack, 'fileSystemImported', {\n  fileSystemId: fileSystem.fileSystemId,\n  securityGroup: ec2.SecurityGroup.fromSecurityGroupId(\n    stack,\n    'securityGroup',\n    fileSystem.connections.securityGroups[0].securityGroupId,\n  ),\n});\n\nlet importedAccessPoint = efs.AccessPoint.fromAccessPointAttributes(stack, 'AccessPointImported', {\n  accessPointId: accessPoint.accessPointId,\n  fileSystem: importedFileSystem,\n});\n\n// this function will mount the access point to '/mnt/msg' and write content onto /mnt/msg/content\nconst lambda2 = new lambda.Function(stack, 'MyLambda2', {\n  code: lambdaCode,\n  handler: 'index.lambda_handler',\n  runtime: lambda.Runtime.PYTHON_3_7,\n  vpc,\n  filesystem: lambda.FileSystem.fromEfsAccessPoint(\n    importedAccessPoint,\n    '/mnt/msg',\n  ),\n});\n\n// lambda2 doesn't have dependencies on MountTargets because the fileSystem is imported.\n// Ideally, lambda2 would be deployed in another stack but integ doesn't support it.\n// We are adding a dependency on the first lambda to simulate this situation.\nlambda2.node.addDependency(lambda1);\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyLambdaServiceRole4539ECB6\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"MyLambdaCCE802FB\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"a37d3ef54c18e7738fe5dc008504591bd3b1f14c6a09ee91eac6d55f7ca5ba5f.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"MyLambdaServiceRole4539ECB6\", \"Arn\"]}, \"Handler\": \"index.main\", \"Runtime\": \"python3.9\"}, \"DependsOn\": [\"MyLambdaServiceRole4539ECB6\"]}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as path from 'path';\nimport * as cdk from 'aws-cdk-lib';\nimport * as lambda from 'aws-cdk-lib/aws-lambda';\n\nclass TestStack extends cdk.Stack {\n  constructor(scope: cdk.App, id: string) {\n    super(scope, id);\n\n    /// !show\n    new lambda.Function(this, 'MyLambda', {\n      code: lambda.Code.fromAsset(path.join(__dirname, 'handler.zip')),\n      handler: 'index.main',\n      runtime: lambda.Runtime.PYTHON_3_9,\n    });\n    /// !hide\n  }\n}\n\nconst app = new cdk.App();\n\nnew TestStack(app, 'lambda-test-assets-file');\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"SourceBucketDDD2130A\": {\"Type\": \"AWS::S3::Bucket\", \"Properties\": {\"Tags\": [{\"Key\": \"aws-cdk:auto-delete-objects\", \"Value\": \"true\"}]}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"SourceBucketPolicy703DFBF9\": {\"Type\": \"AWS::S3::BucketPolicy\", \"Properties\": {\"Bucket\": {\"Ref\": \"SourceBucketDDD2130A\"}, \"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::GetAtt\": [\"CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092\", \"Arn\"]}}, \"Resource\": [{\"Fn::GetAtt\": [\"SourceBucketDDD2130A\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"SourceBucketDDD2130A\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}}}, \"SourceBucketAutoDeleteObjectsCustomResourceC68FC040\": {\"Type\": \"Custom::S3AutoDeleteObjects\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F\", \"Arn\"]}, \"BucketName\": {\"Ref\": \"SourceBucketDDD2130A\"}}, \"DependsOn\": [\"SourceBucketPolicy703DFBF9\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Version\": \"2012-10-17\", \"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}]}, \"ManagedPolicyArns\": [{\"Fn::Sub\": \"arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"}]}}, \"CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"2575608c9455922c199396dd056f7479bb172f5c6068cd093f6d061160f48cee.zip\"}, \"Timeout\": 900, \"MemorySize\": 128, \"Handler\": \"index.handler\", \"Role\": {\"Fn::GetAtt\": [\"CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092\", \"Arn\"]}, \"Runtime\": \"nodejs16.x\", \"Description\": {\"Fn::Join\": [\"\", [\"Lambda function for auto-deleting objects in \", {\"Ref\": \"SourceBucketDDD2130A\"}, \" S3 bucket.\"]]}}, \"DependsOn\": [\"CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092\"]}, \"PipelineArtifactsBucketAEA9A052\": {\"Type\": \"AWS::S3::Bucket\", \"Properties\": {\"BucketEncryption\": {\"ServerSideEncryptionConfiguration\": [{\"ServerSideEncryptionByDefault\": {\"SSEAlgorithm\": \"aws:kms\"}}]}, \"PublicAccessBlockConfiguration\": {\"BlockPublicAcls\": true, \"BlockPublicPolicy\": true, \"IgnorePublicAcls\": true, \"RestrictPublicBuckets\": true}}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"PipelineArtifactsBucketPolicyF53CCC52\": {\"Type\": \"AWS::S3::BucketPolicy\", \"Properties\": {\"Bucket\": {\"Ref\": \"PipelineArtifactsBucketAEA9A052\"}, \"PolicyDocument\": {\"Statement\": [{\"Action\": \"s3:*\", \"Condition\": {\"Bool\": {\"aws:SecureTransport\": \"false\"}}, \"Effect\": \"Deny\", \"Principal\": {\"AWS\": \"*\"}, \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}}}, \"PipelineRoleB27FAA37\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codepipeline.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"PipelineRoleDefaultPolicy7BDC1ABB\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineCodeBuildActionRole226DB0CB\", \"Arn\"]}, {\"Fn::GetAtt\": [\"PipelineSourceS3CodePipelineActionRole83895A58\", \"Arn\"]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineRoleDefaultPolicy7BDC1ABB\", \"Roles\": [{\"Ref\": \"PipelineRoleB27FAA37\"}]}}, \"Pipeline9850B417\": {\"Type\": \"AWS::CodePipeline::Pipeline\", \"Properties\": {\"RoleArn\": {\"Fn::GetAtt\": [\"PipelineRoleB27FAA37\", \"Arn\"]}, \"Stages\": [{\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Source\", \"Owner\": \"AWS\", \"Provider\": \"S3\", \"Version\": \"1\"}, \"Configuration\": {\"S3Bucket\": {\"Ref\": \"SourceBucketDDD2130A\"}, \"S3ObjectKey\": \"key\"}, \"Name\": {\"Ref\": \"SourceBucketDDD2130A\"}, \"OutputArtifacts\": [{\"Name\": \"c8afb86a650460a8cc607cf72a0827e7c93d0d6d5c_Source\"}], \"RoleArn\": {\"Fn::GetAtt\": [\"PipelineSourceS3CodePipelineActionRole83895A58\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"Source\"}, {\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Build\", \"Owner\": \"AWS\", \"Provider\": \"CodeBuild\", \"Version\": \"1\"}, \"Configuration\": {\"ProjectName\": {\"Ref\": \"PipelineBuildSynthCdkBuildProject6BEFA8E6\"}}, \"InputArtifacts\": [{\"Name\": \"c8afb86a650460a8cc607cf72a0827e7c93d0d6d5c_Source\"}], \"Name\": \"Synth\", \"OutputArtifacts\": [{\"Name\": \"Synth_Output\"}], \"RoleArn\": {\"Fn::GetAtt\": [\"PipelineCodeBuildActionRole226DB0CB\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"Build\"}, {\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Build\", \"Owner\": \"AWS\", \"Provider\": \"CodeBuild\", \"Version\": \"1\"}, \"Configuration\": {\"ProjectName\": {\"Ref\": \"PipelineMyWaveProduce884410D6\"}}, \"InputArtifacts\": [{\"Name\": \"c8afb86a650460a8cc607cf72a0827e7c93d0d6d5c_Source\"}], \"Name\": \"Produce\", \"Namespace\": \"MyWave@Produce\", \"RoleArn\": {\"Fn::GetAtt\": [\"PipelineCodeBuildActionRole226DB0CB\", \"Arn\"]}, \"RunOrder\": 1}, {\"ActionTypeId\": {\"Category\": \"Build\", \"Owner\": \"AWS\", \"Provider\": \"CodeBuild\", \"Version\": \"1\"}, \"Configuration\": {\"ProjectName\": {\"Ref\": \"PipelineMyWaveConsumeC5D5CCD7\"}, \"EnvironmentVariables\": \"[{\\\"name\\\":\\\"THE_VAR\\\",\\\"type\\\":\\\"PLAINTEXT\\\",\\\"value\\\":\\\"#{MyWave@Produce.MY_VAR}\\\"}]\"}, \"InputArtifacts\": [{\"Name\": \"c8afb86a650460a8cc607cf72a0827e7c93d0d6d5c_Source\"}], \"Name\": \"Consume\", \"RoleArn\": {\"Fn::GetAtt\": [\"PipelineCodeBuildActionRole226DB0CB\", \"Arn\"]}, \"RunOrder\": 2}], \"Name\": \"MyWave\"}], \"ArtifactStore\": {\"Location\": {\"Ref\": \"PipelineArtifactsBucketAEA9A052\"}, \"Type\": \"S3\"}, \"RestartExecutionOnUpdate\": true}, \"DependsOn\": [\"PipelineRoleDefaultPolicy7BDC1ABB\", \"PipelineRoleB27FAA37\"]}, \"PipelineSourceS3CodePipelineActionRole83895A58\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}}, \"PipelineSourceS3CodePipelineActionRoleDefaultPolicyB176A07F\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"SourceBucketDDD2130A\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"SourceBucketDDD2130A\", \"Arn\"]}, \"/key\"]]}]}, {\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineSourceS3CodePipelineActionRoleDefaultPolicyB176A07F\", \"Roles\": [{\"Ref\": \"PipelineSourceS3CodePipelineActionRole83895A58\"}]}}, \"PipelineBuildSynthCdkBuildProjectRole231EEA2A\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codebuild.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"PipelineBuildSynthCdkBuildProjectRoleDefaultPolicyFB6C941C\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"logs:CreateLogGroup\", \"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"PipelineBuildSynthCdkBuildProject6BEFA8E6\"}, \":*\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"PipelineBuildSynthCdkBuildProject6BEFA8E6\"}]]}]}, {\"Action\": [\"codebuild:BatchPutCodeCoverages\", \"codebuild:BatchPutTestCases\", \"codebuild:CreateReport\", \"codebuild:CreateReportGroup\", \"codebuild:UpdateReport\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":codebuild:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":report-group/\", {\"Ref\": \"PipelineBuildSynthCdkBuildProject6BEFA8E6\"}, \"-*\"]]}}, {\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineBuildSynthCdkBuildProjectRoleDefaultPolicyFB6C941C\", \"Roles\": [{\"Ref\": \"PipelineBuildSynthCdkBuildProjectRole231EEA2A\"}]}}, \"PipelineBuildSynthCdkBuildProject6BEFA8E6\": {\"Type\": \"AWS::CodeBuild::Project\", \"Properties\": {\"Artifacts\": {\"Type\": \"CODEPIPELINE\"}, \"Environment\": {\"ComputeType\": \"BUILD_GENERAL1_SMALL\", \"Image\": \"aws/codebuild/standard:6.0\", \"ImagePullCredentialsType\": \"CODEBUILD\", \"PrivilegedMode\": false, \"Type\": \"LINUX_CONTAINER\"}, \"ServiceRole\": {\"Fn::GetAtt\": [\"PipelineBuildSynthCdkBuildProjectRole231EEA2A\", \"Arn\"]}, \"Source\": {\"BuildSpec\": \"{\n  \\\"version\\\": \\\"0.2\\\",\n  \\\"phases\\\": {\n    \\\"build\\\": {\n      \\\"commands\\\": [\n        \\\"mkdir cdk.out\\\",\n        \\\"touch cdk.out/dummy\\\"\n      ]\n    }\n  },\n  \\\"artifacts\\\": {\n    \\\"base-directory\\\": \\\"cdk.out\\\",\n    \\\"files\\\": \\\"**/*\\\"\n  }\n}\", \"Type\": \"CODEPIPELINE\"}, \"Cache\": {\"Type\": \"NO_CACHE\"}, \"Description\": \"Pipeline step VariablePipelineStack/Pipeline/Build/Synth\", \"EncryptionKey\": \"alias/aws/s3\"}}, \"PipelineMyWaveProduceRole24E3565D\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codebuild.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"PipelineMyWaveProduceRoleDefaultPolicy209239D4\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"TestCacheBucketA6BDC126\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"TestCacheBucketA6BDC126\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"logs:CreateLogGroup\", \"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"PipelineMyWaveProduce884410D6\"}, \":*\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"PipelineMyWaveProduce884410D6\"}]]}]}, {\"Action\": [\"codebuild:BatchPutCodeCoverages\", \"codebuild:BatchPutTestCases\", \"codebuild:CreateReport\", \"codebuild:CreateReportGroup\", \"codebuild:UpdateReport\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":codebuild:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":report-group/\", {\"Ref\": \"PipelineMyWaveProduce884410D6\"}, \"-*\"]]}}, {\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineMyWaveProduceRoleDefaultPolicy209239D4\", \"Roles\": [{\"Ref\": \"PipelineMyWaveProduceRole24E3565D\"}]}}, \"PipelineMyWaveProduce884410D6\": {\"Type\": \"AWS::CodeBuild::Project\", \"Properties\": {\"Artifacts\": {\"Type\": \"CODEPIPELINE\"}, \"Environment\": {\"ComputeType\": \"BUILD_GENERAL1_SMALL\", \"Image\": \"aws/codebuild/standard:6.0\", \"ImagePullCredentialsType\": \"CODEBUILD\", \"PrivilegedMode\": false, \"Type\": \"LINUX_CONTAINER\"}, \"ServiceRole\": {\"Fn::GetAtt\": [\"PipelineMyWaveProduceRole24E3565D\", \"Arn\"]}, \"Source\": {\"BuildSpec\": \"{\n  \\\"version\\\": \\\"0.2\\\",\n  \\\"env\\\": {\n    \\\"exported-variables\\\": [\n      \\\"MY_VAR\\\"\n    ]\n  },\n  \\\"phases\\\": {\n    \\\"build\\\": {\n      \\\"commands\\\": [\n        \\\"export MY_VAR=hello\\\"\n      ]\n    }\n  }\n}\", \"Type\": \"CODEPIPELINE\"}, \"Cache\": {\"Location\": {\"Fn::Join\": [\"/\", [{\"Ref\": \"TestCacheBucketA6BDC126\"}, {\"Ref\": \"AWS::NoValue\"}]]}, \"Type\": \"S3\"}, \"Description\": \"Pipeline step VariablePipelineStack/Pipeline/MyWave/Produce\", \"EncryptionKey\": \"alias/aws/s3\"}}, \"PipelineMyWaveConsumeRole2A96FF33\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codebuild.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"PipelineMyWaveConsumeRoleDefaultPolicyC80F0194\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"TestCacheBucketA6BDC126\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"TestCacheBucketA6BDC126\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"logs:CreateLogGroup\", \"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"PipelineMyWaveConsumeC5D5CCD7\"}, \":*\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"PipelineMyWaveConsumeC5D5CCD7\"}]]}]}, {\"Action\": [\"codebuild:BatchPutCodeCoverages\", \"codebuild:BatchPutTestCases\", \"codebuild:CreateReport\", \"codebuild:CreateReportGroup\", \"codebuild:UpdateReport\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":codebuild:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":report-group/\", {\"Ref\": \"PipelineMyWaveConsumeC5D5CCD7\"}, \"-*\"]]}}, {\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineMyWaveConsumeRoleDefaultPolicyC80F0194\", \"Roles\": [{\"Ref\": \"PipelineMyWaveConsumeRole2A96FF33\"}]}}, \"PipelineMyWaveConsumeC5D5CCD7\": {\"Type\": \"AWS::CodeBuild::Project\", \"Properties\": {\"Artifacts\": {\"Type\": \"CODEPIPELINE\"}, \"Environment\": {\"ComputeType\": \"BUILD_GENERAL1_SMALL\", \"Image\": \"aws/codebuild/standard:6.0\", \"ImagePullCredentialsType\": \"CODEBUILD\", \"PrivilegedMode\": false, \"Type\": \"LINUX_CONTAINER\"}, \"ServiceRole\": {\"Fn::GetAtt\": [\"PipelineMyWaveConsumeRole2A96FF33\", \"Arn\"]}, \"Source\": {\"BuildSpec\": \"{\n  \\\"version\\\": \\\"0.2\\\",\n  \\\"phases\\\": {\n    \\\"build\\\": {\n      \\\"commands\\\": [\n        \\\"echo \\\\\"The variable was: $THE_VAR\\\\\"\\\"\n      ]\n    }\n  }\n}\", \"Type\": \"CODEPIPELINE\"}, \"Cache\": {\"Location\": {\"Fn::Join\": [\"/\", [{\"Ref\": \"TestCacheBucketA6BDC126\"}, {\"Ref\": \"AWS::NoValue\"}]]}, \"Type\": \"S3\"}, \"Description\": \"Pipeline step VariablePipelineStack/Pipeline/MyWave/Consume\", \"EncryptionKey\": \"alias/aws/s3\"}}, \"PipelineCodeBuildActionRole226DB0CB\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::GetAtt\": [\"PipelineRoleB27FAA37\", \"Arn\"]}}}], \"Version\": \"2012-10-17\"}}}, \"PipelineCodeBuildActionRoleDefaultPolicy1D62A6FE\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"codebuild:BatchGetBuilds\", \"codebuild:StartBuild\", \"codebuild:StopBuild\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineBuildSynthCdkBuildProject6BEFA8E6\", \"Arn\"]}, {\"Fn::GetAtt\": [\"PipelineMyWaveConsumeC5D5CCD7\", \"Arn\"]}, {\"Fn::GetAtt\": [\"PipelineMyWaveProduce884410D6\", \"Arn\"]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineCodeBuildActionRoleDefaultPolicy1D62A6FE\", \"Roles\": [{\"Ref\": \"PipelineCodeBuildActionRole226DB0CB\"}]}}, \"TestCacheBucketA6BDC126\": {\"Type\": \"AWS::S3::Bucket\", \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}}, \"Mappings\": {\"DefaultCrNodeVersionMap\": {\"af-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-east-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-3\": {\"value\": \"nodejs16.x\"}, \"ap-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-south-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-3\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-4\": {\"value\": \"nodejs16.x\"}, \"ca-central-1\": {\"value\": \"nodejs16.x\"}, \"cn-north-1\": {\"value\": \"nodejs16.x\"}, \"cn-northwest-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-2\": {\"value\": \"nodejs16.x\"}, \"eu-north-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-1\": {\"value\": \"nodejs16.x\"}, \"eu-west-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-3\": {\"value\": \"nodejs16.x\"}, \"me-central-1\": {\"value\": \"nodejs16.x\"}, \"me-south-1\": {\"value\": \"nodejs16.x\"}, \"sa-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-2\": {\"value\": \"nodejs16.x\"}, \"us-gov-east-1\": {\"value\": \"nodejs16.x\"}, \"us-gov-west-1\": {\"value\": \"nodejs16.x\"}, \"us-iso-east-1\": {\"value\": \"nodejs14.x\"}, \"us-iso-west-1\": {\"value\": \"nodejs14.x\"}, \"us-isob-east-1\": {\"value\": \"nodejs14.x\"}, \"us-west-1\": {\"value\": \"nodejs16.x\"}, \"us-west-2\": {\"value\": \"nodejs16.x\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "// eslint-disable-next-line import/no-extraneous-dependencies\n/// !cdk-integ VariablePipelineStack pragma:set-context:@aws-cdk/core:newStyleStackSynthesis=true\nimport * as codebuild from 'aws-cdk-lib/aws-codebuild';\nimport * as s3 from 'aws-cdk-lib/aws-s3';\nimport { App, Stack, StackProps, RemovalPolicy } from 'aws-cdk-lib';\nimport { Construct } from 'constructs';\nimport * as pipelines from 'aws-cdk-lib/pipelines';\n\nclass PipelineStack extends Stack {\n  constructor(scope: Construct, id: string, props?: StackProps) {\n    super(scope, id, props);\n\n    const sourceBucket = new s3.Bucket(this, 'SourceBucket', {\n      removalPolicy: RemovalPolicy.DESTROY,\n      autoDeleteObjects: true,\n    });\n    const pipeline = new pipelines.CodePipeline(this, 'Pipeline', {\n      synth: new pipelines.ShellStep('Synth', {\n        input: pipelines.CodePipelineSource.s3(sourceBucket, 'key'),\n        // input: pipelines.CodePipelineSource.gitHub('cdklabs/construct-hub-probe', 'main', {\n        //   trigger: GitHubTrigger.POLL,\n        // }),\n        commands: ['mkdir cdk.out', 'touch cdk.out/dummy'],\n      }),\n      selfMutation: false,\n    });\n\n    const cacheBucket = new s3.Bucket(this, 'TestCacheBucket');\n\n    const producer = new pipelines.CodeBuildStep('Produce', {\n      commands: ['export MY_VAR=hello'],\n      cache: codebuild.Cache.bucket(cacheBucket),\n    });\n\n    const consumer = new pipelines.CodeBuildStep('Consume', {\n      env: {\n        THE_VAR: producer.exportedVariable('MY_VAR'),\n      },\n      commands: [\n        'echo \"The variable was: $THE_VAR\"',\n      ],\n      cache: codebuild.Cache.bucket(cacheBucket),\n    });\n\n    // WHEN\n    pipeline.addWave('MyWave', {\n      post: [consumer, producer],\n    });\n  }\n}\n\nconst app = new App({\n  context: {\n    '@aws-cdk/core:newStyleStackSynthesis': '1',\n  },\n});\n\nnew PipelineStack(app, 'VariablePipelineStack');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"SourceBucketDDD2130A\": {\"Type\": \"AWS::S3::Bucket\", \"Properties\": {\"Tags\": [{\"Key\": \"aws-cdk:auto-delete-objects\", \"Value\": \"true\"}]}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"SourceBucketPolicy703DFBF9\": {\"Type\": \"AWS::S3::BucketPolicy\", \"Properties\": {\"Bucket\": {\"Ref\": \"SourceBucketDDD2130A\"}, \"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::GetAtt\": [\"CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092\", \"Arn\"]}}, \"Resource\": [{\"Fn::GetAtt\": [\"SourceBucketDDD2130A\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"SourceBucketDDD2130A\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}}}, \"SourceBucketAutoDeleteObjectsCustomResourceC68FC040\": {\"Type\": \"Custom::S3AutoDeleteObjects\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F\", \"Arn\"]}, \"BucketName\": {\"Ref\": \"SourceBucketDDD2130A\"}}, \"DependsOn\": [\"SourceBucketPolicy703DFBF9\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Version\": \"2012-10-17\", \"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}]}, \"ManagedPolicyArns\": [{\"Fn::Sub\": \"arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"}]}}, \"CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"2575608c9455922c199396dd056f7479bb172f5c6068cd093f6d061160f48cee.zip\"}, \"Timeout\": 900, \"MemorySize\": 128, \"Handler\": \"index.handler\", \"Role\": {\"Fn::GetAtt\": [\"CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092\", \"Arn\"]}, \"Runtime\": \"nodejs16.x\", \"Description\": {\"Fn::Join\": [\"\", [\"Lambda function for auto-deleting objects in \", {\"Ref\": \"SourceBucketDDD2130A\"}, \" S3 bucket.\"]]}}, \"DependsOn\": [\"CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092\"]}, \"PipelineArtifactsBucketEncryptionKeyF5BF0670\": {\"Type\": \"AWS::KMS::Key\", \"Properties\": {\"KeyPolicy\": {\"Statement\": [{\"Action\": \"kms:*\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}, \"Resource\": \"*\"}, {\"Action\": [\"kms:Decrypt\", \"kms:DescribeKey\"], \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-deploy-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}}, \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"PipelineArtifactsBucketEncryptionKeyAlias94A07392\": {\"Type\": \"AWS::KMS::Alias\", \"Properties\": {\"AliasName\": \"alias/codepipeline-pipelinestack-pipeline-e95eedaa\", \"TargetKeyId\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKeyF5BF0670\", \"Arn\"]}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"PipelineArtifactsBucketAEA9A052\": {\"Type\": \"AWS::S3::Bucket\", \"Properties\": {\"BucketEncryption\": {\"ServerSideEncryptionConfiguration\": [{\"ServerSideEncryptionByDefault\": {\"KMSMasterKeyID\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKeyF5BF0670\", \"Arn\"]}, \"SSEAlgorithm\": \"aws:kms\"}}]}, \"PublicAccessBlockConfiguration\": {\"BlockPublicAcls\": true, \"BlockPublicPolicy\": true, \"IgnorePublicAcls\": true, \"RestrictPublicBuckets\": true}}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"PipelineArtifactsBucketPolicyF53CCC52\": {\"Type\": \"AWS::S3::BucketPolicy\", \"Properties\": {\"Bucket\": {\"Ref\": \"PipelineArtifactsBucketAEA9A052\"}, \"PolicyDocument\": {\"Statement\": [{\"Action\": \"s3:*\", \"Condition\": {\"Bool\": {\"aws:SecureTransport\": \"false\"}}, \"Effect\": \"Deny\", \"Principal\": {\"AWS\": \"*\"}, \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-deploy-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}}, \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}}}, \"PipelineRoleB27FAA37\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codepipeline.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"PipelineRoleDefaultPolicy7BDC1ABB\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"kms:Decrypt\", \"kms:DescribeKey\", \"kms:Encrypt\", \"kms:GenerateDataKey*\", \"kms:ReEncrypt*\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKeyF5BF0670\", \"Arn\"]}}, {\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineAssetsFileRole59943A77\", \"Arn\"]}, {\"Fn::GetAtt\": [\"PipelineBuildSynthCodePipelineActionRole4E7A6C97\", \"Arn\"]}, {\"Fn::GetAtt\": [\"PipelinePreProdUseSourceCodePipelineActionRoleA2043BDA\", \"Arn\"]}, {\"Fn::GetAtt\": [\"PipelineSourceS3CodePipelineActionRole83895A58\", \"Arn\"]}, {\"Fn::GetAtt\": [\"PipelineUpdatePipelineSelfMutateCodePipelineActionRoleD6D4E5CF\", \"Arn\"]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-deploy-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineRoleDefaultPolicy7BDC1ABB\", \"Roles\": [{\"Ref\": \"PipelineRoleB27FAA37\"}]}}, \"Pipeline9850B417\": {\"Type\": \"AWS::CodePipeline::Pipeline\", \"Properties\": {\"RoleArn\": {\"Fn::GetAtt\": [\"PipelineRoleB27FAA37\", \"Arn\"]}, \"Stages\": [{\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Source\", \"Owner\": \"AWS\", \"Provider\": \"S3\", \"Version\": \"1\"}, \"Configuration\": {\"S3Bucket\": {\"Ref\": \"SourceBucketDDD2130A\"}, \"S3ObjectKey\": \"key\"}, \"Name\": \"S3\", \"OutputArtifacts\": [{\"Name\": \"Artifact_Source_S3\"}], \"RoleArn\": {\"Fn::GetAtt\": [\"PipelineSourceS3CodePipelineActionRole83895A58\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"Source\"}, {\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Build\", \"Owner\": \"AWS\", \"Provider\": \"CodeBuild\", \"Version\": \"1\"}, \"Configuration\": {\"ProjectName\": {\"Ref\": \"PipelineBuildSynthCdkBuildProject6BEFA8E6\"}, \"EnvironmentVariables\": \"[{\\\"name\\\":\\\"_PROJECT_CONFIG_HASH\\\",\\\"type\\\":\\\"PLAINTEXT\\\",\\\"value\\\":\\\"51983b0b2e2ab480fd5d90c068e63373d8f0ab1a3a1da93ac53a82b8a296d34f\\\"}]\"}, \"InputArtifacts\": [{\"Name\": \"Artifact_Source_S3\"}], \"Name\": \"Synth\", \"OutputArtifacts\": [{\"Name\": \"CloudAsm\"}, {\"Name\": \"IntegTests\"}], \"RoleArn\": {\"Fn::GetAtt\": [\"PipelineBuildSynthCodePipelineActionRole4E7A6C97\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"Build\"}, {\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Build\", \"Owner\": \"AWS\", \"Provider\": \"CodeBuild\", \"Version\": \"1\"}, \"Configuration\": {\"ProjectName\": {\"Ref\": \"PipelineUpdatePipelineSelfMutationDAA41400\"}, \"EnvironmentVariables\": \"[{\\\"name\\\":\\\"CDK_CLI_VERSION\\\",\\\"type\\\":\\\"PLAINTEXT\\\",\\\"value\\\":\\\"2\\\"}]\"}, \"InputArtifacts\": [{\"Name\": \"CloudAsm\"}], \"Name\": \"SelfMutate\", \"RoleArn\": {\"Fn::GetAtt\": [\"PipelineUpdatePipelineSelfMutateCodePipelineActionRoleD6D4E5CF\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"UpdatePipeline\"}, {\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Build\", \"Owner\": \"AWS\", \"Provider\": \"CodeBuild\", \"Version\": \"1\"}, \"Configuration\": {\"ProjectName\": {\"Ref\": \"PipelineAssetsFileAsset5D8C5DA6\"}, \"EnvironmentVariables\": \"[{\\\"name\\\":\\\"CDK_CLI_VERSION\\\",\\\"type\\\":\\\"PLAINTEXT\\\",\\\"value\\\":\\\"2\\\"}]\"}, \"InputArtifacts\": [{\"Name\": \"CloudAsm\"}], \"Name\": \"FileAsset\", \"RoleArn\": {\"Fn::GetAtt\": [\"PipelineAssetsFileRole59943A77\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"Assets\"}, {\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Build\", \"Owner\": \"AWS\", \"Provider\": \"CodeBuild\", \"Version\": \"1\"}, \"Configuration\": {\"ProjectName\": {\"Ref\": \"PipelinePreProdUseSourceProject2E711EB4\"}}, \"InputArtifacts\": [{\"Name\": \"Artifact_Source_S3\"}], \"Name\": \"UseSource\", \"RoleArn\": {\"Fn::GetAtt\": [\"PipelinePreProdUseSourceCodePipelineActionRoleA2043BDA\", \"Arn\"]}, \"RunOrder\": 100}, {\"ActionTypeId\": {\"Category\": \"Deploy\", \"Owner\": \"AWS\", \"Provider\": \"CloudFormation\", \"Version\": \"1\"}, \"Configuration\": {\"StackName\": \"PreProd-Stack\", \"Capabilities\": \"CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-cfn-exec-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"ActionMode\": \"CHANGE_SET_REPLACE\", \"ChangeSetName\": \"PipelineChange\", \"TemplatePath\": \"CloudAsm::assembly-PipelineStack-PreProd/PipelineStackPreProdStack65A0AD1F.template.json\"}, \"InputArtifacts\": [{\"Name\": \"CloudAsm\"}], \"Name\": \"Stack.Prepare\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-deploy-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"RunOrder\": 1}, {\"ActionTypeId\": {\"Category\": \"Deploy\", \"Owner\": \"AWS\", \"Provider\": \"CloudFormation\", \"Version\": \"1\"}, \"Configuration\": {\"StackName\": \"PreProd-Stack\", \"ActionMode\": \"CHANGE_SET_EXECUTE\", \"ChangeSetName\": \"PipelineChange\"}, \"Name\": \"Stack.Deploy\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-deploy-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"RunOrder\": 2}], \"Name\": \"PreProd\"}], \"ArtifactStore\": {\"EncryptionKey\": {\"Id\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKeyF5BF0670\", \"Arn\"]}, \"Type\": \"KMS\"}, \"Location\": {\"Ref\": \"PipelineArtifactsBucketAEA9A052\"}, \"Type\": \"S3\"}, \"RestartExecutionOnUpdate\": true}, \"DependsOn\": [\"PipelineRoleDefaultPolicy7BDC1ABB\", \"PipelineRoleB27FAA37\"]}, \"PipelineSourceS3CodePipelineActionRole83895A58\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}}, \"PipelineSourceS3CodePipelineActionRoleDefaultPolicyB176A07F\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"SourceBucketDDD2130A\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"SourceBucketDDD2130A\", \"Arn\"]}, \"/key\"]]}]}, {\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"kms:Decrypt\", \"kms:Encrypt\", \"kms:GenerateDataKey*\", \"kms:ReEncrypt*\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKeyF5BF0670\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineSourceS3CodePipelineActionRoleDefaultPolicyB176A07F\", \"Roles\": [{\"Ref\": \"PipelineSourceS3CodePipelineActionRole83895A58\"}]}}, \"PipelineBuildSynthCodePipelineActionRole4E7A6C97\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}}, \"PipelineBuildSynthCodePipelineActionRoleDefaultPolicy92C90290\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"codebuild:BatchGetBuilds\", \"codebuild:StartBuild\", \"codebuild:StopBuild\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"PipelineBuildSynthCdkBuildProject6BEFA8E6\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineBuildSynthCodePipelineActionRoleDefaultPolicy92C90290\", \"Roles\": [{\"Ref\": \"PipelineBuildSynthCodePipelineActionRole4E7A6C97\"}]}}, \"PipelineBuildSynthCdkBuildProjectRole231EEA2A\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codebuild.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"PipelineBuildSynthCdkBuildProjectRoleDefaultPolicyFB6C941C\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"logs:CreateLogGroup\", \"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"PipelineBuildSynthCdkBuildProject6BEFA8E6\"}, \":*\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"PipelineBuildSynthCdkBuildProject6BEFA8E6\"}]]}]}, {\"Action\": [\"codebuild:BatchPutCodeCoverages\", \"codebuild:BatchPutTestCases\", \"codebuild:CreateReport\", \"codebuild:CreateReportGroup\", \"codebuild:UpdateReport\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":codebuild:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":report-group/\", {\"Ref\": \"PipelineBuildSynthCdkBuildProject6BEFA8E6\"}, \"-*\"]]}}, {\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"kms:Decrypt\", \"kms:DescribeKey\", \"kms:Encrypt\", \"kms:GenerateDataKey*\", \"kms:ReEncrypt*\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKeyF5BF0670\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineBuildSynthCdkBuildProjectRoleDefaultPolicyFB6C941C\", \"Roles\": [{\"Ref\": \"PipelineBuildSynthCdkBuildProjectRole231EEA2A\"}]}}, \"PipelineBuildSynthCdkBuildProject6BEFA8E6\": {\"Type\": \"AWS::CodeBuild::Project\", \"Properties\": {\"Artifacts\": {\"Type\": \"CODEPIPELINE\"}, \"Environment\": {\"ComputeType\": \"BUILD_GENERAL1_SMALL\", \"EnvironmentVariables\": [{\"Name\": \"NPM_CONFIG_UNSAFE_PERM\", \"Type\": \"PLAINTEXT\", \"Value\": \"true\"}], \"Image\": \"aws/codebuild/standard:6.0\", \"ImagePullCredentialsType\": \"CODEBUILD\", \"PrivilegedMode\": false, \"Type\": \"LINUX_CONTAINER\"}, \"ServiceRole\": {\"Fn::GetAtt\": [\"PipelineBuildSynthCdkBuildProjectRole231EEA2A\", \"Arn\"]}, \"Source\": {\"BuildSpec\": \"{\n  \\\"version\\\": \\\"0.2\\\",\n  \\\"phases\\\": {\n    \\\"pre_build\\\": {\n      \\\"commands\\\": [\n        \\\"npm ci\\\"\n      ]\n    },\n    \\\"build\\\": {\n      \\\"commands\\\": [\n        \\\"npx cdk synth\\\"\n      ]\n    }\n  },\n  \\\"artifacts\\\": {\n    \\\"secondary-artifacts\\\": {\n      \\\"CloudAsm\\\": {\n        \\\"base-directory\\\": \\\"cdk.out\\\",\n        \\\"files\\\": \\\"**/*\\\"\n      },\n      \\\"IntegTests\\\": {\n        \\\"base-directory\\\": \\\"test\\\",\n        \\\"files\\\": \\\"**/*\\\"\n      }\n    }\n  }\n}\", \"Type\": \"CODEPIPELINE\"}, \"Cache\": {\"Type\": \"NO_CACHE\"}, \"EncryptionKey\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKeyF5BF0670\", \"Arn\"]}, \"Name\": \"MyServicePipeline-synth\"}}, \"PipelineUpdatePipelineSelfMutateCodePipelineActionRoleD6D4E5CF\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}}, \"PipelineUpdatePipelineSelfMutateCodePipelineActionRoleDefaultPolicyE626265B\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"codebuild:BatchGetBuilds\", \"codebuild:StartBuild\", \"codebuild:StopBuild\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"PipelineUpdatePipelineSelfMutationDAA41400\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineUpdatePipelineSelfMutateCodePipelineActionRoleDefaultPolicyE626265B\", \"Roles\": [{\"Ref\": \"PipelineUpdatePipelineSelfMutateCodePipelineActionRoleD6D4E5CF\"}]}}, \"PipelinePreProdUseSourceCodePipelineActionRoleA2043BDA\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}}, \"PipelinePreProdUseSourceCodePipelineActionRoleDefaultPolicy9BE325AD\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"codebuild:BatchGetBuilds\", \"codebuild:StartBuild\", \"codebuild:StopBuild\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"PipelinePreProdUseSourceProject2E711EB4\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelinePreProdUseSourceCodePipelineActionRoleDefaultPolicy9BE325AD\", \"Roles\": [{\"Ref\": \"PipelinePreProdUseSourceCodePipelineActionRoleA2043BDA\"}]}}, \"PipelinePreProdUseSourceProjectRole69B20A71\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codebuild.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"PipelinePreProdUseSourceProjectRoleDefaultPolicy50F68DF3\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"logs:CreateLogGroup\", \"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"PipelinePreProdUseSourceProject2E711EB4\"}, \":*\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"PipelinePreProdUseSourceProject2E711EB4\"}]]}]}, {\"Action\": [\"codebuild:BatchPutCodeCoverages\", \"codebuild:BatchPutTestCases\", \"codebuild:CreateReport\", \"codebuild:CreateReportGroup\", \"codebuild:UpdateReport\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":codebuild:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":report-group/\", {\"Ref\": \"PipelinePreProdUseSourceProject2E711EB4\"}, \"-*\"]]}}, {\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"kms:Decrypt\", \"kms:DescribeKey\", \"kms:Encrypt\", \"kms:GenerateDataKey*\", \"kms:ReEncrypt*\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKeyF5BF0670\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelinePreProdUseSourceProjectRoleDefaultPolicy50F68DF3\", \"Roles\": [{\"Ref\": \"PipelinePreProdUseSourceProjectRole69B20A71\"}]}}, \"PipelinePreProdUseSourceProject2E711EB4\": {\"Type\": \"AWS::CodeBuild::Project\", \"Properties\": {\"Artifacts\": {\"Type\": \"CODEPIPELINE\"}, \"Environment\": {\"ComputeType\": \"BUILD_GENERAL1_SMALL\", \"Image\": \"aws/codebuild/standard:6.0\", \"ImagePullCredentialsType\": \"CODEBUILD\", \"PrivilegedMode\": false, \"Type\": \"LINUX_CONTAINER\"}, \"ServiceRole\": {\"Fn::GetAtt\": [\"PipelinePreProdUseSourceProjectRole69B20A71\", \"Arn\"]}, \"Source\": {\"BuildSpec\": \"{\n  \\\"version\\\": \\\"0.2\\\",\n  \\\"phases\\\": {\n    \\\"build\\\": {\n      \\\"commands\\\": [\n        \\\"set -eu\\\",\n        \\\"cat README.md\\\"\n      ]\n    }\n  }\n}\", \"Type\": \"CODEPIPELINE\"}, \"Cache\": {\"Type\": \"NO_CACHE\"}, \"EncryptionKey\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKeyF5BF0670\", \"Arn\"]}}}, \"PipelineUpdatePipelineSelfMutationRole57E559E8\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codebuild.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"PipelineUpdatePipelineSelfMutationRoleDefaultPolicyA225DA4E\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"logs:CreateLogGroup\", \"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"PipelineUpdatePipelineSelfMutationDAA41400\"}, \":*\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"PipelineUpdatePipelineSelfMutationDAA41400\"}]]}]}, {\"Action\": [\"codebuild:BatchPutCodeCoverages\", \"codebuild:BatchPutTestCases\", \"codebuild:CreateReport\", \"codebuild:CreateReportGroup\", \"codebuild:UpdateReport\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":codebuild:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":report-group/\", {\"Ref\": \"PipelineUpdatePipelineSelfMutationDAA41400\"}, \"-*\"]]}}, {\"Action\": \"sts:AssumeRole\", \"Condition\": {\"ForAnyValue:StringEquals\": {\"iam:ResourceTag/aws-cdk:bootstrap-role\": [\"image-publishing\", \"file-publishing\", \"deploy\"]}}, \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:*:iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/*\"]]}}, {\"Action\": [\"cloudformation:DescribeStacks\", \"s3:ListBucket\"], \"Effect\": \"Allow\", \"Resource\": \"*\"}, {\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"kms:Decrypt\", \"kms:DescribeKey\", \"kms:Encrypt\", \"kms:GenerateDataKey*\", \"kms:ReEncrypt*\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKeyF5BF0670\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineUpdatePipelineSelfMutationRoleDefaultPolicyA225DA4E\", \"Roles\": [{\"Ref\": \"PipelineUpdatePipelineSelfMutationRole57E559E8\"}]}}, \"PipelineUpdatePipelineSelfMutationDAA41400\": {\"Type\": \"AWS::CodeBuild::Project\", \"Properties\": {\"Artifacts\": {\"Type\": \"CODEPIPELINE\"}, \"Environment\": {\"ComputeType\": \"BUILD_GENERAL1_SMALL\", \"Image\": \"aws/codebuild/standard:6.0\", \"ImagePullCredentialsType\": \"CODEBUILD\", \"PrivilegedMode\": false, \"Type\": \"LINUX_CONTAINER\"}, \"ServiceRole\": {\"Fn::GetAtt\": [\"PipelineUpdatePipelineSelfMutationRole57E559E8\", \"Arn\"]}, \"Source\": {\"BuildSpec\": \"{\n  \\\"version\\\": \\\"0.2\\\",\n  \\\"phases\\\": {\n    \\\"install\\\": {\n      \\\"commands\\\": [\n        \\\"npm install -g aws-cdk@2\\\"\n      ]\n    },\n    \\\"build\\\": {\n      \\\"commands\\\": [\n        \\\"cdk -a . deploy PipelineStack --require-approval=never --verbose\\\"\n      ]\n    }\n  }\n}\", \"Type\": \"CODEPIPELINE\"}, \"Cache\": {\"Type\": \"NO_CACHE\"}, \"EncryptionKey\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKeyF5BF0670\", \"Arn\"]}}}, \"PipelineAssetsFileRole59943A77\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}, \"Service\": \"codebuild.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"PipelineAssetsFileRoleDefaultPolicy14DB8755\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"logs:CreateLogGroup\", \"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/*\"]]}}, {\"Action\": [\"codebuild:BatchPutCodeCoverages\", \"codebuild:BatchPutTestCases\", \"codebuild:CreateReport\", \"codebuild:CreateReportGroup\", \"codebuild:UpdateReport\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":codebuild:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":report-group/*\"]]}}, {\"Action\": [\"codebuild:BatchGetBuilds\", \"codebuild:StartBuild\", \"codebuild:StopBuild\"], \"Effect\": \"Allow\", \"Resource\": \"*\"}, {\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::Sub\": \"arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-file-publishing-role-${AWS::AccountId}-${AWS::Region}\"}}, {\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"kms:Decrypt\", \"kms:DescribeKey\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKeyF5BF0670\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineAssetsFileRoleDefaultPolicy14DB8755\", \"Roles\": [{\"Ref\": \"PipelineAssetsFileRole59943A77\"}]}}, \"PipelineAssetsFileAsset5D8C5DA6\": {\"Type\": \"AWS::CodeBuild::Project\", \"Properties\": {\"Artifacts\": {\"Type\": \"CODEPIPELINE\"}, \"Environment\": {\"ComputeType\": \"BUILD_GENERAL1_SMALL\", \"Image\": \"aws/codebuild/standard:6.0\", \"ImagePullCredentialsType\": \"CODEBUILD\", \"PrivilegedMode\": false, \"Type\": \"LINUX_CONTAINER\"}, \"ServiceRole\": {\"Fn::GetAtt\": [\"PipelineAssetsFileRole59943A77\", \"Arn\"]}, \"Source\": {\"BuildSpec\": \"buildspec-assets-PipelineStack-Pipeline-Assets-FileAsset.yaml\", \"Type\": \"CODEPIPELINE\"}, \"Cache\": {\"Type\": \"NO_CACHE\"}, \"EncryptionKey\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKeyF5BF0670\", \"Arn\"]}}}}, \"Mappings\": {\"DefaultCrNodeVersionMap\": {\"af-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-east-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-3\": {\"value\": \"nodejs16.x\"}, \"ap-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-south-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-3\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-4\": {\"value\": \"nodejs16.x\"}, \"ca-central-1\": {\"value\": \"nodejs16.x\"}, \"cn-north-1\": {\"value\": \"nodejs16.x\"}, \"cn-northwest-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-2\": {\"value\": \"nodejs16.x\"}, \"eu-north-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-1\": {\"value\": \"nodejs16.x\"}, \"eu-west-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-3\": {\"value\": \"nodejs16.x\"}, \"me-central-1\": {\"value\": \"nodejs16.x\"}, \"me-south-1\": {\"value\": \"nodejs16.x\"}, \"sa-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-2\": {\"value\": \"nodejs16.x\"}, \"us-gov-east-1\": {\"value\": \"nodejs16.x\"}, \"us-gov-west-1\": {\"value\": \"nodejs16.x\"}, \"us-iso-east-1\": {\"value\": \"nodejs14.x\"}, \"us-iso-west-1\": {\"value\": \"nodejs14.x\"}, \"us-isob-east-1\": {\"value\": \"nodejs14.x\"}, \"us-west-1\": {\"value\": \"nodejs16.x\"}, \"us-west-2\": {\"value\": \"nodejs16.x\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "/// !cdk-integ PipelineStack pragma:set-context:@aws-cdk/core:newStyleStackSynthesis=true\nimport * as path from 'path';\nimport * as codepipeline from 'aws-cdk-lib/aws-codepipeline';\nimport * as codepipeline_actions from 'aws-cdk-lib/aws-codepipeline-actions';\nimport * as s3 from 'aws-cdk-lib/aws-s3';\nimport * as s3_assets from 'aws-cdk-lib/aws-s3-assets';\nimport { App, CfnResource, RemovalPolicy, DefaultStackSynthesizer, Stack, StackProps, Stage, StageProps } from 'aws-cdk-lib';\nimport { Construct } from 'constructs';\nimport * as cdkp from 'aws-cdk-lib/pipelines';\n\nclass MyStage extends Stage {\n  constructor(scope: Construct, id: string, props?: StageProps) {\n    super(scope, id, props);\n\n    const stack = new Stack(this, 'Stack', {\n      ...props,\n      synthesizer: new DefaultStackSynthesizer(),\n    });\n\n    new s3_assets.Asset(stack, 'Asset', {\n      path: path.join(__dirname, 'testhelpers/assets/test-file-asset.txt'),\n    });\n    new s3_assets.Asset(stack, 'Asset2', {\n      path: path.join(__dirname, 'testhelpers/assets/test-file-asset-two.txt'),\n    });\n\n    new CfnResource(stack, 'Resource', {\n      type: 'AWS::Test::SomeResource',\n    });\n  }\n}\n\n/**\n * The stack that defines the application pipeline\n */\nclass CdkpipelinesDemoPipelineStack extends Stack {\n  constructor(scope: Construct, id: string, props?: StackProps) {\n    super(scope, id, props);\n\n    const sourceArtifact = new codepipeline.Artifact();\n    const cloudAssemblyArtifact = new codepipeline.Artifact('CloudAsm');\n    const integTestArtifact = new codepipeline.Artifact('IntegTests');\n\n    const sourceBucket = new s3.Bucket(this, 'SourceBucket', {\n      removalPolicy: RemovalPolicy.DESTROY,\n      autoDeleteObjects: true,\n    });\n    const pipeline = new cdkp.CdkPipeline(this, 'Pipeline', {\n      cloudAssemblyArtifact,\n      singlePublisherPerType: true,\n\n      // Where the source can be found\n      sourceAction: new codepipeline_actions.S3SourceAction({\n        bucket: sourceBucket,\n        output: sourceArtifact,\n        bucketKey: 'key',\n        actionName: 'S3',\n      }),\n\n      // How it will be built\n      synthAction: cdkp.SimpleSynthAction.standardNpmSynth({\n        sourceArtifact,\n        cloudAssemblyArtifact,\n        projectName: 'MyServicePipeline-synth',\n        additionalArtifacts: [\n          {\n            directory: 'test',\n            artifact: integTestArtifact,\n          },\n        ],\n      }),\n    });\n\n    // This is where we add the application stages\n    // ...\n    const stage = pipeline.addApplicationStage(new MyStage(this, 'PreProd'));\n    stage.addActions(\n      new cdkp.ShellScriptAction({\n        actionName: 'UseSource',\n        commands: [\n          // Comes from source\n          'cat README.md',\n        ],\n        additionalArtifacts: [sourceArtifact],\n      }),\n    );\n  }\n}\n\nconst app = new App({\n  context: {\n    '@aws-cdk/core:newStyleStackSynthesis': 'true',\n  },\n});\nnew CdkpipelinesDemoPipelineStack(app, 'PipelineStack', {\n  synthesizer: new DefaultStackSynthesizer(),\n});\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"PipelineArtifactsBucketAEA9A052\": {\"Type\": \"AWS::S3::Bucket\", \"Properties\": {\"BucketEncryption\": {\"ServerSideEncryptionConfiguration\": [{\"ServerSideEncryptionByDefault\": {\"SSEAlgorithm\": \"aws:kms\"}}]}, \"PublicAccessBlockConfiguration\": {\"BlockPublicAcls\": true, \"BlockPublicPolicy\": true, \"IgnorePublicAcls\": true, \"RestrictPublicBuckets\": true}}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"PipelineArtifactsBucketPolicyF53CCC52\": {\"Type\": \"AWS::S3::BucketPolicy\", \"Properties\": {\"Bucket\": {\"Ref\": \"PipelineArtifactsBucketAEA9A052\"}, \"PolicyDocument\": {\"Statement\": [{\"Action\": \"s3:*\", \"Condition\": {\"Bool\": {\"aws:SecureTransport\": \"false\"}}, \"Effect\": \"Deny\", \"Principal\": {\"AWS\": \"*\"}, \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-deploy-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}}, \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}}}, \"PipelineRoleB27FAA37\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codepipeline.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"PipelineRoleDefaultPolicy7BDC1ABB\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineCodeBuildActionRole226DB0CB\", \"Arn\"]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-deploy-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineRoleDefaultPolicy7BDC1ABB\", \"Roles\": [{\"Ref\": \"PipelineRoleB27FAA37\"}]}}, \"Pipeline9850B417\": {\"Type\": \"AWS::CodePipeline::Pipeline\", \"Properties\": {\"RoleArn\": {\"Fn::GetAtt\": [\"PipelineRoleB27FAA37\", \"Arn\"]}, \"Stages\": [{\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Source\", \"Owner\": \"ThirdParty\", \"Provider\": \"GitHub\", \"Version\": \"1\"}, \"Configuration\": {\"Owner\": \"rix0rrr\", \"Repo\": \"cdk-pipelines-demo\", \"Branch\": \"main\", \"OAuthToken\": \"{{resolve:secretsmanager:github-token:SecretString:::}}\", \"PollForSourceChanges\": false}, \"Name\": \"rix0rrr_cdk-pipelines-demo\", \"OutputArtifacts\": [{\"Name\": \"rix0rrr_cdk_pipelines_demo_Source\"}], \"RunOrder\": 1}], \"Name\": \"Source\"}, {\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Build\", \"Owner\": \"AWS\", \"Provider\": \"CodeBuild\", \"Version\": \"1\"}, \"Configuration\": {\"ProjectName\": {\"Ref\": \"PipelineBuildSynthCdkBuildProject6BEFA8E6\"}, \"EnvironmentVariables\": \"[{\\\"name\\\":\\\"_PROJECT_CONFIG_HASH\\\",\\\"type\\\":\\\"PLAINTEXT\\\",\\\"value\\\":\\\"09deb76d97fe89f2ccd364ad1eedc7ebc7c010be6bf79da68c34f358446cd134\\\"}]\"}, \"InputArtifacts\": [{\"Name\": \"rix0rrr_cdk_pipelines_demo_Source\"}], \"Name\": \"Synth\", \"OutputArtifacts\": [{\"Name\": \"Synth_Output\"}], \"RoleArn\": {\"Fn::GetAtt\": [\"PipelineCodeBuildActionRole226DB0CB\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"Build\"}, {\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Build\", \"Owner\": \"AWS\", \"Provider\": \"CodeBuild\", \"Version\": \"1\"}, \"Configuration\": {\"ProjectName\": {\"Ref\": \"PipelineUpdatePipelineSelfMutationDAA41400\"}, \"EnvironmentVariables\": \"[{\\\"name\\\":\\\"_PROJECT_CONFIG_HASH\\\",\\\"type\\\":\\\"PLAINTEXT\\\",\\\"value\\\":\\\"d481eb7e52fa70e98aa3e0e22b2f258bef28632bc13e90928d96c7e1479e3a2b\\\"}]\"}, \"InputArtifacts\": [{\"Name\": \"Synth_Output\"}], \"Name\": \"SelfMutate\", \"RoleArn\": {\"Fn::GetAtt\": [\"PipelineCodeBuildActionRole226DB0CB\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"UpdatePipeline\"}, {\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Deploy\", \"Owner\": \"AWS\", \"Provider\": \"CloudFormation\", \"Version\": \"1\"}, \"Configuration\": {\"StackName\": \"Beta-Stack1\", \"Capabilities\": \"CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-cfn-exec-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"ActionMode\": \"CHANGE_SET_REPLACE\", \"ChangeSetName\": \"PipelineChange\", \"TemplatePath\": \"Synth_Output::assembly-PipelineStack-Beta/PipelineStackBetaStack1E6541489.template.json\"}, \"InputArtifacts\": [{\"Name\": \"Synth_Output\"}], \"Name\": \"Stack1.Prepare\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-deploy-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"RunOrder\": 1}, {\"ActionTypeId\": {\"Category\": \"Deploy\", \"Owner\": \"AWS\", \"Provider\": \"CloudFormation\", \"Version\": \"1\"}, \"Configuration\": {\"StackName\": \"Beta-Stack1\", \"ActionMode\": \"CHANGE_SET_EXECUTE\", \"ChangeSetName\": \"PipelineChange\"}, \"Name\": \"Stack1.Deploy\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-deploy-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"RunOrder\": 2}, {\"ActionTypeId\": {\"Category\": \"Deploy\", \"Owner\": \"AWS\", \"Provider\": \"CloudFormation\", \"Version\": \"1\"}, \"Configuration\": {\"StackName\": \"Beta-Stack2\", \"Capabilities\": \"CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-cfn-exec-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"ActionMode\": \"CHANGE_SET_REPLACE\", \"ChangeSetName\": \"PipelineChange\", \"TemplatePath\": \"Synth_Output::assembly-PipelineStack-Beta/PipelineStackBetaStack2C79AD00A.template.json\"}, \"InputArtifacts\": [{\"Name\": \"Synth_Output\"}], \"Name\": \"Stack2.Prepare\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-deploy-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"RunOrder\": 3}, {\"ActionTypeId\": {\"Category\": \"Deploy\", \"Owner\": \"AWS\", \"Provider\": \"CloudFormation\", \"Version\": \"1\"}, \"Configuration\": {\"StackName\": \"Beta-Stack2\", \"ActionMode\": \"CHANGE_SET_EXECUTE\", \"ChangeSetName\": \"PipelineChange\"}, \"Name\": \"Stack2.Deploy\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-deploy-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"RunOrder\": 4}], \"Name\": \"Beta\"}, {\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Deploy\", \"Owner\": \"AWS\", \"Provider\": \"CloudFormation\", \"Version\": \"1\"}, \"Configuration\": {\"StackName\": \"Prod1-Stack1\", \"Capabilities\": \"CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-cfn-exec-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"ActionMode\": \"CHANGE_SET_REPLACE\", \"ChangeSetName\": \"PipelineChange\", \"TemplatePath\": \"Synth_Output::assembly-PipelineStack-Prod1/PipelineStackProd1Stack14013D698.template.json\"}, \"InputArtifacts\": [{\"Name\": \"Synth_Output\"}], \"Name\": \"Prod1.Stack1.Prepare\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-deploy-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"RunOrder\": 1}, {\"ActionTypeId\": {\"Category\": \"Deploy\", \"Owner\": \"AWS\", \"Provider\": \"CloudFormation\", \"Version\": \"1\"}, \"Configuration\": {\"StackName\": \"Prod2-Stack1\", \"Capabilities\": \"CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-cfn-exec-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"ActionMode\": \"CHANGE_SET_REPLACE\", \"ChangeSetName\": \"PipelineChange\", \"TemplatePath\": \"Synth_Output::assembly-PipelineStack-Prod2/PipelineStackProd2Stack1FD464162.template.json\"}, \"InputArtifacts\": [{\"Name\": \"Synth_Output\"}], \"Name\": \"Prod2.Stack1.Prepare\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-deploy-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"RunOrder\": 1}, {\"ActionTypeId\": {\"Category\": \"Deploy\", \"Owner\": \"AWS\", \"Provider\": \"CloudFormation\", \"Version\": \"1\"}, \"Configuration\": {\"StackName\": \"Prod1-Stack1\", \"ActionMode\": \"CHANGE_SET_EXECUTE\", \"ChangeSetName\": \"PipelineChange\"}, \"Name\": \"Prod1.Stack1.Deploy\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-deploy-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"RunOrder\": 2}, {\"ActionTypeId\": {\"Category\": \"Deploy\", \"Owner\": \"AWS\", \"Provider\": \"CloudFormation\", \"Version\": \"1\"}, \"Configuration\": {\"StackName\": \"Prod2-Stack1\", \"ActionMode\": \"CHANGE_SET_EXECUTE\", \"ChangeSetName\": \"PipelineChange\"}, \"Name\": \"Prod2.Stack1.Deploy\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-deploy-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"RunOrder\": 2}, {\"ActionTypeId\": {\"Category\": \"Deploy\", \"Owner\": \"AWS\", \"Provider\": \"CloudFormation\", \"Version\": \"1\"}, \"Configuration\": {\"StackName\": \"Prod1-Stack2\", \"Capabilities\": \"CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-cfn-exec-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"ActionMode\": \"CHANGE_SET_REPLACE\", \"ChangeSetName\": \"PipelineChange\", \"TemplatePath\": \"Synth_Output::assembly-PipelineStack-Prod1/PipelineStackProd1Stack2F0681AFF.template.json\"}, \"InputArtifacts\": [{\"Name\": \"Synth_Output\"}], \"Name\": \"Prod1.Stack2.Prepare\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-deploy-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"RunOrder\": 3}, {\"ActionTypeId\": {\"Category\": \"Deploy\", \"Owner\": \"AWS\", \"Provider\": \"CloudFormation\", \"Version\": \"1\"}, \"Configuration\": {\"StackName\": \"Prod2-Stack2\", \"Capabilities\": \"CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-cfn-exec-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"ActionMode\": \"CHANGE_SET_REPLACE\", \"ChangeSetName\": \"PipelineChange\", \"TemplatePath\": \"Synth_Output::assembly-PipelineStack-Prod2/PipelineStackProd2Stack2176123EB.template.json\"}, \"InputArtifacts\": [{\"Name\": \"Synth_Output\"}], \"Name\": \"Prod2.Stack2.Prepare\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-deploy-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"RunOrder\": 3}, {\"ActionTypeId\": {\"Category\": \"Deploy\", \"Owner\": \"AWS\", \"Provider\": \"CloudFormation\", \"Version\": \"1\"}, \"Configuration\": {\"StackName\": \"Prod1-Stack2\", \"ActionMode\": \"CHANGE_SET_EXECUTE\", \"ChangeSetName\": \"PipelineChange\"}, \"Name\": \"Prod1.Stack2.Deploy\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-deploy-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"RunOrder\": 4}, {\"ActionTypeId\": {\"Category\": \"Deploy\", \"Owner\": \"AWS\", \"Provider\": \"CloudFormation\", \"Version\": \"1\"}, \"Configuration\": {\"StackName\": \"Prod2-Stack2\", \"ActionMode\": \"CHANGE_SET_EXECUTE\", \"ChangeSetName\": \"PipelineChange\"}, \"Name\": \"Prod2.Stack2.Deploy\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-deploy-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"RunOrder\": 4}], \"Name\": \"Wave1\"}, {\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Deploy\", \"Owner\": \"AWS\", \"Provider\": \"CloudFormation\", \"Version\": \"1\"}, \"Configuration\": {\"StackName\": \"Prod3-Stack1\", \"Capabilities\": \"CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-cfn-exec-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"ActionMode\": \"CHANGE_SET_REPLACE\", \"ChangeSetName\": \"PipelineChange\", \"TemplatePath\": \"Synth_Output::assembly-PipelineStack-Prod3/PipelineStackProd3Stack1795F3D43.template.json\"}, \"InputArtifacts\": [{\"Name\": \"Synth_Output\"}], \"Name\": \"Prod3.Stack1.Prepare\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-deploy-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"RunOrder\": 1}, {\"ActionTypeId\": {\"Category\": \"Deploy\", \"Owner\": \"AWS\", \"Provider\": \"CloudFormation\", \"Version\": \"1\"}, \"Configuration\": {\"StackName\": \"Prod4-Stack1\", \"Capabilities\": \"CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-cfn-exec-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"ActionMode\": \"CHANGE_SET_REPLACE\", \"ChangeSetName\": \"PipelineChange\", \"TemplatePath\": \"Synth_Output::assembly-PipelineStack-Prod4/PipelineStackProd4Stack118F74ADB.template.json\"}, \"InputArtifacts\": [{\"Name\": \"Synth_Output\"}], \"Name\": \"Prod4.Stack1.Prepare\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-deploy-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"RunOrder\": 1}, {\"ActionTypeId\": {\"Category\": \"Deploy\", \"Owner\": \"AWS\", \"Provider\": \"CloudFormation\", \"Version\": \"1\"}, \"Configuration\": {\"StackName\": \"Prod5-Stack1\", \"Capabilities\": \"CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-cfn-exec-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"ActionMode\": \"CHANGE_SET_REPLACE\", \"ChangeSetName\": \"PipelineChange\", \"TemplatePath\": \"Synth_Output::assembly-PipelineStack-Prod5/PipelineStackProd5Stack1E7E4E4C6.template.json\"}, \"InputArtifacts\": [{\"Name\": \"Synth_Output\"}], \"Name\": \"Prod5.Stack1.Prepare\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-deploy-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"RunOrder\": 1}, {\"ActionTypeId\": {\"Category\": \"Deploy\", \"Owner\": \"AWS\", \"Provider\": \"CloudFormation\", \"Version\": \"1\"}, \"Configuration\": {\"StackName\": \"Prod6-Stack1\", \"Capabilities\": \"CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-cfn-exec-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"ActionMode\": \"CHANGE_SET_REPLACE\", \"ChangeSetName\": \"PipelineChange\", \"TemplatePath\": \"Synth_Output::assembly-PipelineStack-Prod6/PipelineStackProd6Stack1E7C34314.template.json\"}, \"InputArtifacts\": [{\"Name\": \"Synth_Output\"}], \"Name\": \"Prod6.Stack1.Prepare\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-deploy-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"RunOrder\": 1}, {\"ActionTypeId\": {\"Category\": \"Deploy\", \"Owner\": \"AWS\", \"Provider\": \"CloudFormation\", \"Version\": \"1\"}, \"Configuration\": {\"StackName\": \"Prod3-Stack1\", \"ActionMode\": \"CHANGE_SET_EXECUTE\", \"ChangeSetName\": \"PipelineChange\"}, \"Name\": \"Prod3.Stack1.Deploy\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-deploy-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"RunOrder\": 2}, {\"ActionTypeId\": {\"Category\": \"Deploy\", \"Owner\": \"AWS\", \"Provider\": \"CloudFormation\", \"Version\": \"1\"}, \"Configuration\": {\"StackName\": \"Prod4-Stack1\", \"ActionMode\": \"CHANGE_SET_EXECUTE\", \"ChangeSetName\": \"PipelineChange\"}, \"Name\": \"Prod4.Stack1.Deploy\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-deploy-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"RunOrder\": 2}, {\"ActionTypeId\": {\"Category\": \"Deploy\", \"Owner\": \"AWS\", \"Provider\": \"CloudFormation\", \"Version\": \"1\"}, \"Configuration\": {\"StackName\": \"Prod5-Stack1\", \"ActionMode\": \"CHANGE_SET_EXECUTE\", \"ChangeSetName\": \"PipelineChange\"}, \"Name\": \"Prod5.Stack1.Deploy\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-deploy-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"RunOrder\": 2}, {\"ActionTypeId\": {\"Category\": \"Deploy\", \"Owner\": \"AWS\", \"Provider\": \"CloudFormation\", \"Version\": \"1\"}, \"Configuration\": {\"StackName\": \"Prod6-Stack1\", \"ActionMode\": \"CHANGE_SET_EXECUTE\", \"ChangeSetName\": \"PipelineChange\"}, \"Name\": \"Prod6.Stack1.Deploy\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-deploy-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"RunOrder\": 2}, {\"ActionTypeId\": {\"Category\": \"Deploy\", \"Owner\": \"AWS\", \"Provider\": \"CloudFormation\", \"Version\": \"1\"}, \"Configuration\": {\"StackName\": \"Prod3-Stack2\", \"Capabilities\": \"CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-cfn-exec-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"ActionMode\": \"CHANGE_SET_REPLACE\", \"ChangeSetName\": \"PipelineChange\", \"TemplatePath\": \"Synth_Output::assembly-PipelineStack-Prod3/PipelineStackProd3Stack2DFBBA0B2.template.json\"}, \"InputArtifacts\": [{\"Name\": \"Synth_Output\"}], \"Name\": \"Prod3.Stack2.Prepare\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-deploy-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"RunOrder\": 3}, {\"ActionTypeId\": {\"Category\": \"Deploy\", \"Owner\": \"AWS\", \"Provider\": \"CloudFormation\", \"Version\": \"1\"}, \"Configuration\": {\"StackName\": \"Prod4-Stack2\", \"Capabilities\": \"CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-cfn-exec-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"ActionMode\": \"CHANGE_SET_REPLACE\", \"ChangeSetName\": \"PipelineChange\", \"TemplatePath\": \"Synth_Output::assembly-PipelineStack-Prod4/PipelineStackProd4Stack2E2CB4ED3.template.json\"}, \"InputArtifacts\": [{\"Name\": \"Synth_Output\"}], \"Name\": \"Prod4.Stack2.Prepare\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-deploy-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"RunOrder\": 3}, {\"ActionTypeId\": {\"Category\": \"Deploy\", \"Owner\": \"AWS\", \"Provider\": \"CloudFormation\", \"Version\": \"1\"}, \"Configuration\": {\"StackName\": \"Prod5-Stack2\", \"Capabilities\": \"CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-cfn-exec-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"ActionMode\": \"CHANGE_SET_REPLACE\", \"ChangeSetName\": \"PipelineChange\", \"TemplatePath\": \"Synth_Output::assembly-PipelineStack-Prod5/PipelineStackProd5Stack2C39BEE5B.template.json\"}, \"InputArtifacts\": [{\"Name\": \"Synth_Output\"}], \"Name\": \"Prod5.Stack2.Prepare\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-deploy-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"RunOrder\": 3}, {\"ActionTypeId\": {\"Category\": \"Deploy\", \"Owner\": \"AWS\", \"Provider\": \"CloudFormation\", \"Version\": \"1\"}, \"Configuration\": {\"StackName\": \"Prod6-Stack2\", \"Capabilities\": \"CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-cfn-exec-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"ActionMode\": \"CHANGE_SET_REPLACE\", \"ChangeSetName\": \"PipelineChange\", \"TemplatePath\": \"Synth_Output::assembly-PipelineStack-Prod6/PipelineStackProd6Stack2BED1BBCE.template.json\"}, \"InputArtifacts\": [{\"Name\": \"Synth_Output\"}], \"Name\": \"Prod6.Stack2.Prepare\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-deploy-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"RunOrder\": 3}, {\"ActionTypeId\": {\"Category\": \"Deploy\", \"Owner\": \"AWS\", \"Provider\": \"CloudFormation\", \"Version\": \"1\"}, \"Configuration\": {\"StackName\": \"Prod3-Stack2\", \"ActionMode\": \"CHANGE_SET_EXECUTE\", \"ChangeSetName\": \"PipelineChange\"}, \"Name\": \"Prod3.Stack2.Deploy\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-deploy-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"RunOrder\": 4}, {\"ActionTypeId\": {\"Category\": \"Deploy\", \"Owner\": \"AWS\", \"Provider\": \"CloudFormation\", \"Version\": \"1\"}, \"Configuration\": {\"StackName\": \"Prod4-Stack2\", \"ActionMode\": \"CHANGE_SET_EXECUTE\", \"ChangeSetName\": \"PipelineChange\"}, \"Name\": \"Prod4.Stack2.Deploy\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-deploy-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"RunOrder\": 4}, {\"ActionTypeId\": {\"Category\": \"Deploy\", \"Owner\": \"AWS\", \"Provider\": \"CloudFormation\", \"Version\": \"1\"}, \"Configuration\": {\"StackName\": \"Prod5-Stack2\", \"ActionMode\": \"CHANGE_SET_EXECUTE\", \"ChangeSetName\": \"PipelineChange\"}, \"Name\": \"Prod5.Stack2.Deploy\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-deploy-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"RunOrder\": 4}, {\"ActionTypeId\": {\"Category\": \"Deploy\", \"Owner\": \"AWS\", \"Provider\": \"CloudFormation\", \"Version\": \"1\"}, \"Configuration\": {\"StackName\": \"Prod6-Stack2\", \"ActionMode\": \"CHANGE_SET_EXECUTE\", \"ChangeSetName\": \"PipelineChange\"}, \"Name\": \"Prod6.Stack2.Deploy\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-deploy-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"RunOrder\": 4}], \"Name\": \"Wave2\"}], \"ArtifactStore\": {\"Location\": {\"Ref\": \"PipelineArtifactsBucketAEA9A052\"}, \"Type\": \"S3\"}, \"RestartExecutionOnUpdate\": true}, \"DependsOn\": [\"PipelineRoleDefaultPolicy7BDC1ABB\", \"PipelineRoleB27FAA37\"]}, \"PipelineSourcerix0rrrcdkpipelinesdemoWebhookResourceDB0C1BCA\": {\"Type\": \"AWS::CodePipeline::Webhook\", \"Properties\": {\"Authentication\": \"GITHUB_HMAC\", \"AuthenticationConfiguration\": {\"SecretToken\": \"{{resolve:secretsmanager:github-token:SecretString:::}}\"}, \"Filters\": [{\"JsonPath\": \"$.ref\", \"MatchEquals\": \"refs/heads/{Branch}\"}], \"TargetAction\": \"rix0rrr_cdk-pipelines-demo\", \"TargetPipeline\": {\"Ref\": \"Pipeline9850B417\"}, \"TargetPipelineVersion\": 1, \"RegisterWithThirdParty\": true}}, \"PipelineBuildSynthCdkBuildProjectRole231EEA2A\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codebuild.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"PipelineBuildSynthCdkBuildProjectRoleDefaultPolicyFB6C941C\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"logs:CreateLogGroup\", \"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"PipelineBuildSynthCdkBuildProject6BEFA8E6\"}, \":*\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"PipelineBuildSynthCdkBuildProject6BEFA8E6\"}]]}]}, {\"Action\": [\"codebuild:BatchPutCodeCoverages\", \"codebuild:BatchPutTestCases\", \"codebuild:CreateReport\", \"codebuild:CreateReportGroup\", \"codebuild:UpdateReport\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":codebuild:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":report-group/\", {\"Ref\": \"PipelineBuildSynthCdkBuildProject6BEFA8E6\"}, \"-*\"]]}}, {\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineBuildSynthCdkBuildProjectRoleDefaultPolicyFB6C941C\", \"Roles\": [{\"Ref\": \"PipelineBuildSynthCdkBuildProjectRole231EEA2A\"}]}}, \"PipelineBuildSynthCdkBuildProject6BEFA8E6\": {\"Type\": \"AWS::CodeBuild::Project\", \"Properties\": {\"Artifacts\": {\"Type\": \"CODEPIPELINE\"}, \"Environment\": {\"ComputeType\": \"BUILD_GENERAL1_SMALL\", \"Image\": \"aws/codebuild/standard:6.0\", \"ImagePullCredentialsType\": \"CODEBUILD\", \"PrivilegedMode\": false, \"Type\": \"LINUX_CONTAINER\"}, \"ServiceRole\": {\"Fn::GetAtt\": [\"PipelineBuildSynthCdkBuildProjectRole231EEA2A\", \"Arn\"]}, \"Source\": {\"BuildSpec\": \"{\n  \\\"version\\\": \\\"0.2\\\",\n  \\\"phases\\\": {\n    \\\"build\\\": {\n      \\\"commands\\\": [\n        \\\"npm ci\\\",\n        \\\"npm run build\\\",\n        \\\"npx cdk synth\\\"\n      ]\n    }\n  },\n  \\\"artifacts\\\": {\n    \\\"base-directory\\\": \\\"cdk.out\\\",\n    \\\"files\\\": \\\"**/*\\\"\n  }\n}\", \"Type\": \"CODEPIPELINE\"}, \"Cache\": {\"Type\": \"NO_CACHE\"}, \"Description\": \"Pipeline step PipelineStack/Pipeline/Build/Synth\", \"EncryptionKey\": \"alias/aws/s3\"}}, \"PipelineCodeBuildActionRole226DB0CB\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::GetAtt\": [\"PipelineRoleB27FAA37\", \"Arn\"]}}}], \"Version\": \"2012-10-17\"}}}, \"PipelineCodeBuildActionRoleDefaultPolicy1D62A6FE\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"codebuild:BatchGetBuilds\", \"codebuild:StartBuild\", \"codebuild:StopBuild\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineBuildSynthCdkBuildProject6BEFA8E6\", \"Arn\"]}, {\"Fn::GetAtt\": [\"PipelineUpdatePipelineSelfMutationDAA41400\", \"Arn\"]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineCodeBuildActionRoleDefaultPolicy1D62A6FE\", \"Roles\": [{\"Ref\": \"PipelineCodeBuildActionRole226DB0CB\"}]}}, \"PipelineUpdatePipelineSelfMutationRole57E559E8\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codebuild.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"PipelineUpdatePipelineSelfMutationRoleDefaultPolicyA225DA4E\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"logs:CreateLogGroup\", \"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"PipelineUpdatePipelineSelfMutationDAA41400\"}, \":*\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"PipelineUpdatePipelineSelfMutationDAA41400\"}]]}]}, {\"Action\": [\"codebuild:BatchPutCodeCoverages\", \"codebuild:BatchPutTestCases\", \"codebuild:CreateReport\", \"codebuild:CreateReportGroup\", \"codebuild:UpdateReport\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":codebuild:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":report-group/\", {\"Ref\": \"PipelineUpdatePipelineSelfMutationDAA41400\"}, \"-*\"]]}}, {\"Action\": \"sts:AssumeRole\", \"Condition\": {\"ForAnyValue:StringEquals\": {\"iam:ResourceTag/aws-cdk:bootstrap-role\": [\"image-publishing\", \"file-publishing\", \"deploy\"]}}, \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:*:iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/*\"]]}}, {\"Action\": [\"cloudformation:DescribeStacks\", \"s3:ListBucket\"], \"Effect\": \"Allow\", \"Resource\": \"*\"}, {\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineUpdatePipelineSelfMutationRoleDefaultPolicyA225DA4E\", \"Roles\": [{\"Ref\": \"PipelineUpdatePipelineSelfMutationRole57E559E8\"}]}}, \"PipelineUpdatePipelineSelfMutationDAA41400\": {\"Type\": \"AWS::CodeBuild::Project\", \"Properties\": {\"Artifacts\": {\"Type\": \"CODEPIPELINE\"}, \"Environment\": {\"ComputeType\": \"BUILD_GENERAL1_SMALL\", \"Image\": \"aws/codebuild/standard:6.0\", \"ImagePullCredentialsType\": \"CODEBUILD\", \"PrivilegedMode\": false, \"Type\": \"LINUX_CONTAINER\"}, \"ServiceRole\": {\"Fn::GetAtt\": [\"PipelineUpdatePipelineSelfMutationRole57E559E8\", \"Arn\"]}, \"Source\": {\"BuildSpec\": \"{\n  \\\"version\\\": \\\"0.2\\\",\n  \\\"phases\\\": {\n    \\\"install\\\": {\n      \\\"commands\\\": [\n        \\\"npm install -g aws-cdk@2\\\"\n      ]\n    },\n    \\\"build\\\": {\n      \\\"commands\\\": [\n        \\\"cdk -a . deploy PipelineStack --require-approval=never --verbose\\\"\n      ]\n    }\n  }\n}\", \"Type\": \"CODEPIPELINE\"}, \"Cache\": {\"Type\": \"NO_CACHE\"}, \"Description\": \"Pipeline step PipelineStack/Pipeline/UpdatePipeline/SelfMutate\", \"EncryptionKey\": \"alias/aws/s3\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "// eslint-disable-next-line import/no-extraneous-dependencies\n/// !cdk-integ PipelineStack pragma:set-context:@aws-cdk/core:newStyleStackSynthesis=true\nimport * as sqs from 'aws-cdk-lib/aws-sqs';\nimport { App, Stack, StackProps, Stage, StageProps } from 'aws-cdk-lib';\nimport { Construct } from 'constructs';\nimport * as pipelines from 'aws-cdk-lib/pipelines';\n\nclass PipelineStack extends Stack {\n  constructor(scope: Construct, id: string, props?: StackProps) {\n    super(scope, id, props);\n\n    const pipeline = new pipelines.CodePipeline(this, 'Pipeline', {\n      synth: new pipelines.ShellStep('Synth', {\n        input: pipelines.CodePipelineSource.gitHub('rix0rrr/cdk-pipelines-demo', 'main'),\n        commands: [\n          'npm ci',\n          'npm run build',\n          'npx cdk synth',\n        ],\n      }),\n    });\n\n    pipeline.addStage(new AppStage(this, 'Beta'));\n\n    const group = pipeline.addWave('Wave1');\n    group.addStage(new AppStage(this, 'Prod1'));\n    group.addStage(new AppStage(this, 'Prod2'));\n\n    const group2 = pipeline.addWave('Wave2');\n    group2.addStage(new AppStage(this, 'Prod3'));\n    group2.addStage(new AppStage(this, 'Prod4'));\n    group2.addStage(new AppStage(this, 'Prod5'));\n    group2.addStage(new AppStage(this, 'Prod6'));\n  }\n}\n\nclass AppStage extends Stage {\n  constructor(scope: Construct, id: string, props?: StageProps) {\n    super(scope, id, props);\n\n    const stack1 = new Stack(this, 'Stack1');\n    const queue1 = new sqs.Queue(stack1, 'Queue');\n\n    const stack2 = new Stack(this, 'Stack2');\n    new sqs.Queue(stack2, 'OtherQueue', {\n      deadLetterQueue: {\n        queue: queue1,\n        maxReceiveCount: 5,\n      },\n    });\n  }\n}\n\nconst app = new App({\n  context: {\n    '@aws-cdk/core:newStyleStackSynthesis': '1',\n  },\n});\nnew PipelineStack(app, 'PipelineStack');\napp.synth();"}
{ "prompt": "{\"Resources\": {\"SourceBucketDDD2130A\": {\"Type\": \"AWS::S3::Bucket\", \"Properties\": {\"Tags\": [{\"Key\": \"aws-cdk:auto-delete-objects\", \"Value\": \"true\"}]}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"SourceBucketPolicy703DFBF9\": {\"Type\": \"AWS::S3::BucketPolicy\", \"Properties\": {\"Bucket\": {\"Ref\": \"SourceBucketDDD2130A\"}, \"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::GetAtt\": [\"CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092\", \"Arn\"]}}, \"Resource\": [{\"Fn::GetAtt\": [\"SourceBucketDDD2130A\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"SourceBucketDDD2130A\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}}}, \"SourceBucketAutoDeleteObjectsCustomResourceC68FC040\": {\"Type\": \"Custom::S3AutoDeleteObjects\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F\", \"Arn\"]}, \"BucketName\": {\"Ref\": \"SourceBucketDDD2130A\"}}, \"DependsOn\": [\"SourceBucketPolicy703DFBF9\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Version\": \"2012-10-17\", \"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}]}, \"ManagedPolicyArns\": [{\"Fn::Sub\": \"arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"}]}}, \"CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"2575608c9455922c199396dd056f7479bb172f5c6068cd093f6d061160f48cee.zip\"}, \"Timeout\": 900, \"MemorySize\": 128, \"Handler\": \"index.handler\", \"Role\": {\"Fn::GetAtt\": [\"CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092\", \"Arn\"]}, \"Runtime\": \"nodejs16.x\", \"Description\": {\"Fn::Join\": [\"\", [\"Lambda function for auto-deleting objects in \", {\"Ref\": \"SourceBucketDDD2130A\"}, \" S3 bucket.\"]]}}, \"DependsOn\": [\"CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092\"]}, \"PipelineArtifactsBucketEncryptionKeyF5BF0670\": {\"Type\": \"AWS::KMS::Key\", \"Properties\": {\"KeyPolicy\": {\"Statement\": [{\"Action\": \"kms:*\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}, \"Resource\": \"*\"}, {\"Action\": [\"kms:Decrypt\", \"kms:DescribeKey\"], \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-deploy-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}}, \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"PipelineArtifactsBucketEncryptionKeyAlias94A07392\": {\"Type\": \"AWS::KMS::Alias\", \"Properties\": {\"AliasName\": \"alias/codepipeline-pipelinestack-pipeline-e95eedaa\", \"TargetKeyId\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKeyF5BF0670\", \"Arn\"]}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"PipelineArtifactsBucketAEA9A052\": {\"Type\": \"AWS::S3::Bucket\", \"Properties\": {\"BucketEncryption\": {\"ServerSideEncryptionConfiguration\": [{\"ServerSideEncryptionByDefault\": {\"KMSMasterKeyID\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKeyF5BF0670\", \"Arn\"]}, \"SSEAlgorithm\": \"aws:kms\"}}]}, \"PublicAccessBlockConfiguration\": {\"BlockPublicAcls\": true, \"BlockPublicPolicy\": true, \"IgnorePublicAcls\": true, \"RestrictPublicBuckets\": true}}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"PipelineArtifactsBucketPolicyF53CCC52\": {\"Type\": \"AWS::S3::BucketPolicy\", \"Properties\": {\"Bucket\": {\"Ref\": \"PipelineArtifactsBucketAEA9A052\"}, \"PolicyDocument\": {\"Statement\": [{\"Action\": \"s3:*\", \"Condition\": {\"Bool\": {\"aws:SecureTransport\": \"false\"}}, \"Effect\": \"Deny\", \"Principal\": {\"AWS\": \"*\"}, \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-deploy-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}}, \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}}}, \"PipelineRoleB27FAA37\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codepipeline.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"PipelineRoleDefaultPolicy7BDC1ABB\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"kms:Decrypt\", \"kms:DescribeKey\", \"kms:Encrypt\", \"kms:GenerateDataKey*\", \"kms:ReEncrypt*\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKeyF5BF0670\", \"Arn\"]}}, {\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineBuildSynthCodePipelineActionRole4E7A6C97\", \"Arn\"]}, {\"Fn::GetAtt\": [\"PipelinePreProdUseSourceCodePipelineActionRoleA2043BDA\", \"Arn\"]}, {\"Fn::GetAtt\": [\"PipelineSourceS3CodePipelineActionRole83895A58\", \"Arn\"]}, {\"Fn::GetAtt\": [\"PipelineUpdatePipelineSelfMutateCodePipelineActionRoleD6D4E5CF\", \"Arn\"]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-deploy-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineRoleDefaultPolicy7BDC1ABB\", \"Roles\": [{\"Ref\": \"PipelineRoleB27FAA37\"}]}}, \"Pipeline9850B417\": {\"Type\": \"AWS::CodePipeline::Pipeline\", \"Properties\": {\"RoleArn\": {\"Fn::GetAtt\": [\"PipelineRoleB27FAA37\", \"Arn\"]}, \"Stages\": [{\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Source\", \"Owner\": \"AWS\", \"Provider\": \"S3\", \"Version\": \"1\"}, \"Configuration\": {\"S3Bucket\": {\"Ref\": \"SourceBucketDDD2130A\"}, \"S3ObjectKey\": \"key\"}, \"Name\": \"S3\", \"OutputArtifacts\": [{\"Name\": \"Artifact_Source_S3\"}], \"RoleArn\": {\"Fn::GetAtt\": [\"PipelineSourceS3CodePipelineActionRole83895A58\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"Source\"}, {\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Build\", \"Owner\": \"AWS\", \"Provider\": \"CodeBuild\", \"Version\": \"1\"}, \"Configuration\": {\"ProjectName\": {\"Ref\": \"PipelineBuildSynthCdkBuildProject6BEFA8E6\"}, \"EnvironmentVariables\": \"[{\\\"name\\\":\\\"_PROJECT_CONFIG_HASH\\\",\\\"type\\\":\\\"PLAINTEXT\\\",\\\"value\\\":\\\"51983b0b2e2ab480fd5d90c068e63373d8f0ab1a3a1da93ac53a82b8a296d34f\\\"}]\"}, \"InputArtifacts\": [{\"Name\": \"Artifact_Source_S3\"}], \"Name\": \"Synth\", \"OutputArtifacts\": [{\"Name\": \"CloudAsm\"}, {\"Name\": \"IntegTests\"}], \"RoleArn\": {\"Fn::GetAtt\": [\"PipelineBuildSynthCodePipelineActionRole4E7A6C97\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"Build\"}, {\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Build\", \"Owner\": \"AWS\", \"Provider\": \"CodeBuild\", \"Version\": \"1\"}, \"Configuration\": {\"ProjectName\": {\"Ref\": \"PipelineUpdatePipelineSelfMutationDAA41400\"}, \"EnvironmentVariables\": \"[{\\\"name\\\":\\\"CDK_CLI_VERSION\\\",\\\"type\\\":\\\"PLAINTEXT\\\",\\\"value\\\":\\\"2\\\"}]\"}, \"InputArtifacts\": [{\"Name\": \"CloudAsm\"}], \"Name\": \"SelfMutate\", \"RoleArn\": {\"Fn::GetAtt\": [\"PipelineUpdatePipelineSelfMutateCodePipelineActionRoleD6D4E5CF\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"UpdatePipeline\"}, {\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Build\", \"Owner\": \"AWS\", \"Provider\": \"CodeBuild\", \"Version\": \"1\"}, \"Configuration\": {\"ProjectName\": {\"Ref\": \"PipelinePreProdUseSourceProject2E711EB4\"}}, \"InputArtifacts\": [{\"Name\": \"Artifact_Source_S3\"}], \"Name\": \"UseSource\", \"RoleArn\": {\"Fn::GetAtt\": [\"PipelinePreProdUseSourceCodePipelineActionRoleA2043BDA\", \"Arn\"]}, \"RunOrder\": 100}, {\"ActionTypeId\": {\"Category\": \"Deploy\", \"Owner\": \"AWS\", \"Provider\": \"CloudFormation\", \"Version\": \"1\"}, \"Configuration\": {\"StackName\": \"PreProd-Stack\", \"Capabilities\": \"CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-cfn-exec-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"ActionMode\": \"CHANGE_SET_REPLACE\", \"ChangeSetName\": \"PipelineChange\", \"TemplatePath\": \"CloudAsm::assembly-PipelineStack-PreProd/PipelineStackPreProdStack65A0AD1F.template.json\"}, \"InputArtifacts\": [{\"Name\": \"CloudAsm\"}], \"Name\": \"Stack.Prepare\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-deploy-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"RunOrder\": 1}, {\"ActionTypeId\": {\"Category\": \"Deploy\", \"Owner\": \"AWS\", \"Provider\": \"CloudFormation\", \"Version\": \"1\"}, \"Configuration\": {\"StackName\": \"PreProd-Stack\", \"ActionMode\": \"CHANGE_SET_EXECUTE\", \"ChangeSetName\": \"PipelineChange\"}, \"Name\": \"Stack.Deploy\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-deploy-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"RunOrder\": 2}], \"Name\": \"PreProd\"}], \"ArtifactStore\": {\"EncryptionKey\": {\"Id\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKeyF5BF0670\", \"Arn\"]}, \"Type\": \"KMS\"}, \"Location\": {\"Ref\": \"PipelineArtifactsBucketAEA9A052\"}, \"Type\": \"S3\"}, \"RestartExecutionOnUpdate\": true}, \"DependsOn\": [\"PipelineRoleDefaultPolicy7BDC1ABB\", \"PipelineRoleB27FAA37\"]}, \"PipelineSourceS3CodePipelineActionRole83895A58\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}}, \"PipelineSourceS3CodePipelineActionRoleDefaultPolicyB176A07F\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"SourceBucketDDD2130A\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"SourceBucketDDD2130A\", \"Arn\"]}, \"/key\"]]}]}, {\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"kms:Decrypt\", \"kms:Encrypt\", \"kms:GenerateDataKey*\", \"kms:ReEncrypt*\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKeyF5BF0670\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineSourceS3CodePipelineActionRoleDefaultPolicyB176A07F\", \"Roles\": [{\"Ref\": \"PipelineSourceS3CodePipelineActionRole83895A58\"}]}}, \"PipelineBuildSynthCodePipelineActionRole4E7A6C97\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}}, \"PipelineBuildSynthCodePipelineActionRoleDefaultPolicy92C90290\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"codebuild:BatchGetBuilds\", \"codebuild:StartBuild\", \"codebuild:StopBuild\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"PipelineBuildSynthCdkBuildProject6BEFA8E6\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineBuildSynthCodePipelineActionRoleDefaultPolicy92C90290\", \"Roles\": [{\"Ref\": \"PipelineBuildSynthCodePipelineActionRole4E7A6C97\"}]}}, \"PipelineBuildSynthCdkBuildProjectRole231EEA2A\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codebuild.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"PipelineBuildSynthCdkBuildProjectRoleDefaultPolicyFB6C941C\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"logs:CreateLogGroup\", \"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"PipelineBuildSynthCdkBuildProject6BEFA8E6\"}, \":*\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"PipelineBuildSynthCdkBuildProject6BEFA8E6\"}]]}]}, {\"Action\": [\"codebuild:BatchPutCodeCoverages\", \"codebuild:BatchPutTestCases\", \"codebuild:CreateReport\", \"codebuild:CreateReportGroup\", \"codebuild:UpdateReport\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":codebuild:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":report-group/\", {\"Ref\": \"PipelineBuildSynthCdkBuildProject6BEFA8E6\"}, \"-*\"]]}}, {\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"kms:Decrypt\", \"kms:DescribeKey\", \"kms:Encrypt\", \"kms:GenerateDataKey*\", \"kms:ReEncrypt*\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKeyF5BF0670\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineBuildSynthCdkBuildProjectRoleDefaultPolicyFB6C941C\", \"Roles\": [{\"Ref\": \"PipelineBuildSynthCdkBuildProjectRole231EEA2A\"}]}}, \"PipelineBuildSynthCdkBuildProject6BEFA8E6\": {\"Type\": \"AWS::CodeBuild::Project\", \"Properties\": {\"Artifacts\": {\"Type\": \"CODEPIPELINE\"}, \"Environment\": {\"ComputeType\": \"BUILD_GENERAL1_SMALL\", \"EnvironmentVariables\": [{\"Name\": \"NPM_CONFIG_UNSAFE_PERM\", \"Type\": \"PLAINTEXT\", \"Value\": \"true\"}], \"Image\": \"aws/codebuild/standard:6.0\", \"ImagePullCredentialsType\": \"CODEBUILD\", \"PrivilegedMode\": false, \"Type\": \"LINUX_CONTAINER\"}, \"ServiceRole\": {\"Fn::GetAtt\": [\"PipelineBuildSynthCdkBuildProjectRole231EEA2A\", \"Arn\"]}, \"Source\": {\"BuildSpec\": \"{\n  \\\"version\\\": \\\"0.2\\\",\n  \\\"phases\\\": {\n    \\\"pre_build\\\": {\n      \\\"commands\\\": [\n        \\\"npm ci\\\"\n      ]\n    },\n    \\\"build\\\": {\n      \\\"commands\\\": [\n        \\\"npx cdk synth\\\"\n      ]\n    }\n  },\n  \\\"artifacts\\\": {\n    \\\"secondary-artifacts\\\": {\n      \\\"CloudAsm\\\": {\n        \\\"base-directory\\\": \\\"cdk.out\\\",\n        \\\"files\\\": \\\"**/*\\\"\n      },\n      \\\"IntegTests\\\": {\n        \\\"base-directory\\\": \\\"test\\\",\n        \\\"files\\\": \\\"**/*\\\"\n      }\n    }\n  }\n}\", \"Type\": \"CODEPIPELINE\"}, \"Cache\": {\"Type\": \"NO_CACHE\"}, \"EncryptionKey\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKeyF5BF0670\", \"Arn\"]}, \"Name\": \"MyServicePipeline-synth\"}}, \"PipelineUpdatePipelineSelfMutateCodePipelineActionRoleD6D4E5CF\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}}, \"PipelineUpdatePipelineSelfMutateCodePipelineActionRoleDefaultPolicyE626265B\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"codebuild:BatchGetBuilds\", \"codebuild:StartBuild\", \"codebuild:StopBuild\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"PipelineUpdatePipelineSelfMutationDAA41400\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineUpdatePipelineSelfMutateCodePipelineActionRoleDefaultPolicyE626265B\", \"Roles\": [{\"Ref\": \"PipelineUpdatePipelineSelfMutateCodePipelineActionRoleD6D4E5CF\"}]}}, \"PipelinePreProdUseSourceCodePipelineActionRoleA2043BDA\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}}, \"PipelinePreProdUseSourceCodePipelineActionRoleDefaultPolicy9BE325AD\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"codebuild:BatchGetBuilds\", \"codebuild:StartBuild\", \"codebuild:StopBuild\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"PipelinePreProdUseSourceProject2E711EB4\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelinePreProdUseSourceCodePipelineActionRoleDefaultPolicy9BE325AD\", \"Roles\": [{\"Ref\": \"PipelinePreProdUseSourceCodePipelineActionRoleA2043BDA\"}]}}, \"PipelinePreProdUseSourceProjectRole69B20A71\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codebuild.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"PipelinePreProdUseSourceProjectRoleDefaultPolicy50F68DF3\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"logs:CreateLogGroup\", \"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"PipelinePreProdUseSourceProject2E711EB4\"}, \":*\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"PipelinePreProdUseSourceProject2E711EB4\"}]]}]}, {\"Action\": [\"codebuild:BatchPutCodeCoverages\", \"codebuild:BatchPutTestCases\", \"codebuild:CreateReport\", \"codebuild:CreateReportGroup\", \"codebuild:UpdateReport\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":codebuild:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":report-group/\", {\"Ref\": \"PipelinePreProdUseSourceProject2E711EB4\"}, \"-*\"]]}}, {\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"kms:Decrypt\", \"kms:DescribeKey\", \"kms:Encrypt\", \"kms:GenerateDataKey*\", \"kms:ReEncrypt*\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKeyF5BF0670\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelinePreProdUseSourceProjectRoleDefaultPolicy50F68DF3\", \"Roles\": [{\"Ref\": \"PipelinePreProdUseSourceProjectRole69B20A71\"}]}}, \"PipelinePreProdUseSourceProject2E711EB4\": {\"Type\": \"AWS::CodeBuild::Project\", \"Properties\": {\"Artifacts\": {\"Type\": \"CODEPIPELINE\"}, \"Environment\": {\"ComputeType\": \"BUILD_GENERAL1_SMALL\", \"Image\": \"aws/codebuild/standard:6.0\", \"ImagePullCredentialsType\": \"CODEBUILD\", \"PrivilegedMode\": false, \"Type\": \"LINUX_CONTAINER\"}, \"ServiceRole\": {\"Fn::GetAtt\": [\"PipelinePreProdUseSourceProjectRole69B20A71\", \"Arn\"]}, \"Source\": {\"BuildSpec\": \"{\n  \\\"version\\\": \\\"0.2\\\",\n  \\\"phases\\\": {\n    \\\"build\\\": {\n      \\\"commands\\\": [\n        \\\"set -eu\\\",\n        \\\"cat README.md\\\"\n      ]\n    }\n  }\n}\", \"Type\": \"CODEPIPELINE\"}, \"Cache\": {\"Type\": \"NO_CACHE\"}, \"EncryptionKey\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKeyF5BF0670\", \"Arn\"]}}}, \"PipelineUpdatePipelineSelfMutationRole57E559E8\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codebuild.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"PipelineUpdatePipelineSelfMutationRoleDefaultPolicyA225DA4E\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"logs:CreateLogGroup\", \"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"PipelineUpdatePipelineSelfMutationDAA41400\"}, \":*\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"PipelineUpdatePipelineSelfMutationDAA41400\"}]]}]}, {\"Action\": [\"codebuild:BatchPutCodeCoverages\", \"codebuild:BatchPutTestCases\", \"codebuild:CreateReport\", \"codebuild:CreateReportGroup\", \"codebuild:UpdateReport\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":codebuild:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":report-group/\", {\"Ref\": \"PipelineUpdatePipelineSelfMutationDAA41400\"}, \"-*\"]]}}, {\"Action\": \"sts:AssumeRole\", \"Condition\": {\"ForAnyValue:StringEquals\": {\"iam:ResourceTag/aws-cdk:bootstrap-role\": [\"image-publishing\", \"file-publishing\", \"deploy\"]}}, \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:*:iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/*\"]]}}, {\"Action\": [\"cloudformation:DescribeStacks\", \"s3:ListBucket\"], \"Effect\": \"Allow\", \"Resource\": \"*\"}, {\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"kms:Decrypt\", \"kms:DescribeKey\", \"kms:Encrypt\", \"kms:GenerateDataKey*\", \"kms:ReEncrypt*\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKeyF5BF0670\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineUpdatePipelineSelfMutationRoleDefaultPolicyA225DA4E\", \"Roles\": [{\"Ref\": \"PipelineUpdatePipelineSelfMutationRole57E559E8\"}]}}, \"PipelineUpdatePipelineSelfMutationDAA41400\": {\"Type\": \"AWS::CodeBuild::Project\", \"Properties\": {\"Artifacts\": {\"Type\": \"CODEPIPELINE\"}, \"Environment\": {\"ComputeType\": \"BUILD_GENERAL1_SMALL\", \"Image\": \"aws/codebuild/standard:6.0\", \"ImagePullCredentialsType\": \"CODEBUILD\", \"PrivilegedMode\": false, \"Type\": \"LINUX_CONTAINER\"}, \"ServiceRole\": {\"Fn::GetAtt\": [\"PipelineUpdatePipelineSelfMutationRole57E559E8\", \"Arn\"]}, \"Source\": {\"BuildSpec\": \"{\n  \\\"version\\\": \\\"0.2\\\",\n  \\\"phases\\\": {\n    \\\"install\\\": {\n      \\\"commands\\\": [\n        \\\"npm install -g aws-cdk@2\\\"\n      ]\n    },\n    \\\"build\\\": {\n      \\\"commands\\\": [\n        \\\"cdk -a . deploy PipelineStack --require-approval=never --verbose\\\"\n      ]\n    }\n  }\n}\", \"Type\": \"CODEPIPELINE\"}, \"Cache\": {\"Type\": \"NO_CACHE\"}, \"EncryptionKey\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKeyF5BF0670\", \"Arn\"]}}}}, \"Mappings\": {\"DefaultCrNodeVersionMap\": {\"af-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-east-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-3\": {\"value\": \"nodejs16.x\"}, \"ap-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-south-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-3\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-4\": {\"value\": \"nodejs16.x\"}, \"ca-central-1\": {\"value\": \"nodejs16.x\"}, \"cn-north-1\": {\"value\": \"nodejs16.x\"}, \"cn-northwest-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-2\": {\"value\": \"nodejs16.x\"}, \"eu-north-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-1\": {\"value\": \"nodejs16.x\"}, \"eu-west-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-3\": {\"value\": \"nodejs16.x\"}, \"me-central-1\": {\"value\": \"nodejs16.x\"}, \"me-south-1\": {\"value\": \"nodejs16.x\"}, \"sa-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-2\": {\"value\": \"nodejs16.x\"}, \"us-gov-east-1\": {\"value\": \"nodejs16.x\"}, \"us-gov-west-1\": {\"value\": \"nodejs16.x\"}, \"us-iso-east-1\": {\"value\": \"nodejs14.x\"}, \"us-iso-west-1\": {\"value\": \"nodejs14.x\"}, \"us-isob-east-1\": {\"value\": \"nodejs14.x\"}, \"us-west-1\": {\"value\": \"nodejs16.x\"}, \"us-west-2\": {\"value\": \"nodejs16.x\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "/// !cdk-integ PipelineStack pragma:set-context:@aws-cdk/core:newStyleStackSynthesis=true\nimport * as codepipeline from 'aws-cdk-lib/aws-codepipeline';\nimport * as codepipeline_actions from 'aws-cdk-lib/aws-codepipeline-actions';\nimport * as s3 from 'aws-cdk-lib/aws-s3';\nimport { App, CfnResource, DefaultStackSynthesizer, RemovalPolicy, Stack, StackProps, Stage, StageProps } from 'aws-cdk-lib';\nimport { Construct } from 'constructs';\nimport * as cdkp from 'aws-cdk-lib/pipelines';\n\nclass MyStage extends Stage {\n  constructor(scope: Construct, id: string, props?: StageProps) {\n    super(scope, id, props);\n\n    const stack = new Stack(this, 'Stack', {\n      ...props,\n      synthesizer: new DefaultStackSynthesizer(),\n    });\n    new CfnResource(stack, 'Resource', {\n      type: 'AWS::Test::SomeResource',\n    });\n  }\n}\n\n/**\n * The stack that defines the application pipeline\n */\nclass CdkpipelinesDemoPipelineStack extends Stack {\n  constructor(scope: Construct, id: string, props?: StackProps) {\n    super(scope, id, props);\n\n    const sourceArtifact = new codepipeline.Artifact();\n    const cloudAssemblyArtifact = new codepipeline.Artifact('CloudAsm');\n    const integTestArtifact = new codepipeline.Artifact('IntegTests');\n\n    const sourceBucket = new s3.Bucket(this, 'SourceBucket', {\n      removalPolicy: RemovalPolicy.DESTROY,\n      autoDeleteObjects: true,\n    });\n    const pipeline = new cdkp.CdkPipeline(this, 'Pipeline', {\n      cloudAssemblyArtifact,\n\n      // Where the source can be found\n      sourceAction: new codepipeline_actions.S3SourceAction({\n        bucket: sourceBucket,\n        output: sourceArtifact,\n        bucketKey: 'key',\n        actionName: 'S3',\n      }),\n\n      // How it will be built\n      synthAction: cdkp.SimpleSynthAction.standardNpmSynth({\n        sourceArtifact,\n        cloudAssemblyArtifact,\n        projectName: 'MyServicePipeline-synth',\n        additionalArtifacts: [\n          {\n            directory: 'test',\n            artifact: integTestArtifact,\n          },\n        ],\n      }),\n    });\n\n    // This is where we add the application stages\n    // ...\n    const stage = pipeline.addApplicationStage(new MyStage(this, 'PreProd'));\n    stage.addActions(\n      new cdkp.ShellScriptAction({\n        actionName: 'UseSource',\n        commands: [\n          // Comes from source\n          'cat README.md',\n        ],\n        additionalArtifacts: [sourceArtifact],\n      }),\n    );\n  }\n}\n\nconst app = new App({\n  context: {\n    '@aws-cdk/core:newStyleStackSynthesis': 'true',\n  },\n});\nnew CdkpipelinesDemoPipelineStack(app, 'PipelineStack', {\n  synthesizer: new DefaultStackSynthesizer(),\n});\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"SourceBucketDDD2130A\": {\"Type\": \"AWS::S3::Bucket\", \"Properties\": {\"Tags\": [{\"Key\": \"aws-cdk:auto-delete-objects\", \"Value\": \"true\"}]}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"SourceBucketPolicy703DFBF9\": {\"Type\": \"AWS::S3::BucketPolicy\", \"Properties\": {\"Bucket\": {\"Ref\": \"SourceBucketDDD2130A\"}, \"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::GetAtt\": [\"CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092\", \"Arn\"]}}, \"Resource\": [{\"Fn::GetAtt\": [\"SourceBucketDDD2130A\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"SourceBucketDDD2130A\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}}}, \"SourceBucketAutoDeleteObjectsCustomResourceC68FC040\": {\"Type\": \"Custom::S3AutoDeleteObjects\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F\", \"Arn\"]}, \"BucketName\": {\"Ref\": \"SourceBucketDDD2130A\"}}, \"DependsOn\": [\"SourceBucketPolicy703DFBF9\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Version\": \"2012-10-17\", \"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}]}, \"ManagedPolicyArns\": [{\"Fn::Sub\": \"arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"}]}}, \"CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"2575608c9455922c199396dd056f7479bb172f5c6068cd093f6d061160f48cee.zip\"}, \"Timeout\": 900, \"MemorySize\": 128, \"Handler\": \"index.handler\", \"Role\": {\"Fn::GetAtt\": [\"CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092\", \"Arn\"]}, \"Runtime\": \"nodejs16.x\", \"Description\": {\"Fn::Join\": [\"\", [\"Lambda function for auto-deleting objects in \", {\"Ref\": \"SourceBucketDDD2130A\"}, \" S3 bucket.\"]]}}, \"DependsOn\": [\"CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092\"]}, \"PipelineArtifactsBucketEncryptionKeyF5BF0670\": {\"Type\": \"AWS::KMS::Key\", \"Properties\": {\"KeyPolicy\": {\"Statement\": [{\"Action\": \"kms:*\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}, \"Resource\": \"*\"}, {\"Action\": [\"kms:Decrypt\", \"kms:DescribeKey\"], \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-deploy-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}}, \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"PipelineArtifactsBucketEncryptionKeyAlias94A07392\": {\"Type\": \"AWS::KMS::Alias\", \"Properties\": {\"AliasName\": \"alias/codepipeline-pipelinestack-pipeline-e95eedaa\", \"TargetKeyId\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKeyF5BF0670\", \"Arn\"]}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"PipelineArtifactsBucketAEA9A052\": {\"Type\": \"AWS::S3::Bucket\", \"Properties\": {\"BucketEncryption\": {\"ServerSideEncryptionConfiguration\": [{\"ServerSideEncryptionByDefault\": {\"KMSMasterKeyID\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKeyF5BF0670\", \"Arn\"]}, \"SSEAlgorithm\": \"aws:kms\"}}]}, \"PublicAccessBlockConfiguration\": {\"BlockPublicAcls\": true, \"BlockPublicPolicy\": true, \"IgnorePublicAcls\": true, \"RestrictPublicBuckets\": true}}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"PipelineArtifactsBucketPolicyF53CCC52\": {\"Type\": \"AWS::S3::BucketPolicy\", \"Properties\": {\"Bucket\": {\"Ref\": \"PipelineArtifactsBucketAEA9A052\"}, \"PolicyDocument\": {\"Statement\": [{\"Action\": \"s3:*\", \"Condition\": {\"Bool\": {\"aws:SecureTransport\": \"false\"}}, \"Effect\": \"Deny\", \"Principal\": {\"AWS\": \"*\"}, \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-deploy-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}}, \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}}}, \"PipelineRoleB27FAA37\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codepipeline.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"PipelineRoleDefaultPolicy7BDC1ABB\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"kms:Decrypt\", \"kms:DescribeKey\", \"kms:Encrypt\", \"kms:GenerateDataKey*\", \"kms:ReEncrypt*\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKeyF5BF0670\", \"Arn\"]}}, {\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineAssetsFileRole59943A77\", \"Arn\"]}, {\"Fn::GetAtt\": [\"PipelineBuildSynthCodePipelineActionRole4E7A6C97\", \"Arn\"]}, {\"Fn::GetAtt\": [\"PipelinePreProdUseSourceCodePipelineActionRoleA2043BDA\", \"Arn\"]}, {\"Fn::GetAtt\": [\"PipelineSourceS3CodePipelineActionRole83895A58\", \"Arn\"]}, {\"Fn::GetAtt\": [\"PipelineUpdatePipelineSelfMutateCodePipelineActionRoleD6D4E5CF\", \"Arn\"]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-deploy-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineRoleDefaultPolicy7BDC1ABB\", \"Roles\": [{\"Ref\": \"PipelineRoleB27FAA37\"}]}}, \"Pipeline9850B417\": {\"Type\": \"AWS::CodePipeline::Pipeline\", \"Properties\": {\"RoleArn\": {\"Fn::GetAtt\": [\"PipelineRoleB27FAA37\", \"Arn\"]}, \"Stages\": [{\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Source\", \"Owner\": \"AWS\", \"Provider\": \"S3\", \"Version\": \"1\"}, \"Configuration\": {\"S3Bucket\": {\"Ref\": \"SourceBucketDDD2130A\"}, \"S3ObjectKey\": \"key\"}, \"Name\": \"S3\", \"OutputArtifacts\": [{\"Name\": \"Artifact_Source_S3\"}], \"RoleArn\": {\"Fn::GetAtt\": [\"PipelineSourceS3CodePipelineActionRole83895A58\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"Source\"}, {\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Build\", \"Owner\": \"AWS\", \"Provider\": \"CodeBuild\", \"Version\": \"1\"}, \"Configuration\": {\"ProjectName\": {\"Ref\": \"PipelineBuildSynthCdkBuildProject6BEFA8E6\"}, \"EnvironmentVariables\": \"[{\\\"name\\\":\\\"_PROJECT_CONFIG_HASH\\\",\\\"type\\\":\\\"PLAINTEXT\\\",\\\"value\\\":\\\"51983b0b2e2ab480fd5d90c068e63373d8f0ab1a3a1da93ac53a82b8a296d34f\\\"}]\"}, \"InputArtifacts\": [{\"Name\": \"Artifact_Source_S3\"}], \"Name\": \"Synth\", \"OutputArtifacts\": [{\"Name\": \"CloudAsm\"}, {\"Name\": \"IntegTests\"}], \"RoleArn\": {\"Fn::GetAtt\": [\"PipelineBuildSynthCodePipelineActionRole4E7A6C97\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"Build\"}, {\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Build\", \"Owner\": \"AWS\", \"Provider\": \"CodeBuild\", \"Version\": \"1\"}, \"Configuration\": {\"ProjectName\": {\"Ref\": \"PipelineUpdatePipelineSelfMutationDAA41400\"}, \"EnvironmentVariables\": \"[{\\\"name\\\":\\\"CDK_CLI_VERSION\\\",\\\"type\\\":\\\"PLAINTEXT\\\",\\\"value\\\":\\\"2\\\"}]\"}, \"InputArtifacts\": [{\"Name\": \"CloudAsm\"}], \"Name\": \"SelfMutate\", \"RoleArn\": {\"Fn::GetAtt\": [\"PipelineUpdatePipelineSelfMutateCodePipelineActionRoleD6D4E5CF\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"UpdatePipeline\"}, {\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Build\", \"Owner\": \"AWS\", \"Provider\": \"CodeBuild\", \"Version\": \"1\"}, \"Configuration\": {\"ProjectName\": {\"Ref\": \"PipelineAssetsFileAsset185A67CB4\"}, \"EnvironmentVariables\": \"[{\\\"name\\\":\\\"CDK_CLI_VERSION\\\",\\\"type\\\":\\\"PLAINTEXT\\\",\\\"value\\\":\\\"2\\\"}]\"}, \"InputArtifacts\": [{\"Name\": \"CloudAsm\"}], \"Name\": \"FileAsset1\", \"RoleArn\": {\"Fn::GetAtt\": [\"PipelineAssetsFileRole59943A77\", \"Arn\"]}, \"RunOrder\": 1}, {\"ActionTypeId\": {\"Category\": \"Build\", \"Owner\": \"AWS\", \"Provider\": \"CodeBuild\", \"Version\": \"1\"}, \"Configuration\": {\"ProjectName\": {\"Ref\": \"PipelineAssetsFileAsset24D2D639B\"}, \"EnvironmentVariables\": \"[{\\\"name\\\":\\\"CDK_CLI_VERSION\\\",\\\"type\\\":\\\"PLAINTEXT\\\",\\\"value\\\":\\\"2\\\"}]\"}, \"InputArtifacts\": [{\"Name\": \"CloudAsm\"}], \"Name\": \"FileAsset2\", \"RoleArn\": {\"Fn::GetAtt\": [\"PipelineAssetsFileRole59943A77\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"Assets\"}, {\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Build\", \"Owner\": \"AWS\", \"Provider\": \"CodeBuild\", \"Version\": \"1\"}, \"Configuration\": {\"ProjectName\": {\"Ref\": \"PipelinePreProdUseSourceProject2E711EB4\"}}, \"InputArtifacts\": [{\"Name\": \"Artifact_Source_S3\"}], \"Name\": \"UseSource\", \"RoleArn\": {\"Fn::GetAtt\": [\"PipelinePreProdUseSourceCodePipelineActionRoleA2043BDA\", \"Arn\"]}, \"RunOrder\": 100}, {\"ActionTypeId\": {\"Category\": \"Deploy\", \"Owner\": \"AWS\", \"Provider\": \"CloudFormation\", \"Version\": \"1\"}, \"Configuration\": {\"StackName\": \"PreProd-Stack\", \"Capabilities\": \"CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-cfn-exec-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"ActionMode\": \"CHANGE_SET_REPLACE\", \"ChangeSetName\": \"PipelineChange\", \"TemplatePath\": \"CloudAsm::assembly-PipelineStack-PreProd/PipelineStackPreProdStack65A0AD1F.template.json\"}, \"InputArtifacts\": [{\"Name\": \"CloudAsm\"}], \"Name\": \"Stack.Prepare\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-deploy-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"RunOrder\": 1}, {\"ActionTypeId\": {\"Category\": \"Deploy\", \"Owner\": \"AWS\", \"Provider\": \"CloudFormation\", \"Version\": \"1\"}, \"Configuration\": {\"StackName\": \"PreProd-Stack\", \"ActionMode\": \"CHANGE_SET_EXECUTE\", \"ChangeSetName\": \"PipelineChange\"}, \"Name\": \"Stack.Deploy\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-deploy-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"RunOrder\": 2}], \"Name\": \"PreProd\"}], \"ArtifactStore\": {\"EncryptionKey\": {\"Id\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKeyF5BF0670\", \"Arn\"]}, \"Type\": \"KMS\"}, \"Location\": {\"Ref\": \"PipelineArtifactsBucketAEA9A052\"}, \"Type\": \"S3\"}, \"RestartExecutionOnUpdate\": true}, \"DependsOn\": [\"PipelineRoleDefaultPolicy7BDC1ABB\", \"PipelineRoleB27FAA37\"]}, \"PipelineSourceS3CodePipelineActionRole83895A58\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}}, \"PipelineSourceS3CodePipelineActionRoleDefaultPolicyB176A07F\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"SourceBucketDDD2130A\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"SourceBucketDDD2130A\", \"Arn\"]}, \"/key\"]]}]}, {\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"kms:Decrypt\", \"kms:Encrypt\", \"kms:GenerateDataKey*\", \"kms:ReEncrypt*\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKeyF5BF0670\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineSourceS3CodePipelineActionRoleDefaultPolicyB176A07F\", \"Roles\": [{\"Ref\": \"PipelineSourceS3CodePipelineActionRole83895A58\"}]}}, \"PipelineBuildSynthCodePipelineActionRole4E7A6C97\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}}, \"PipelineBuildSynthCodePipelineActionRoleDefaultPolicy92C90290\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"codebuild:BatchGetBuilds\", \"codebuild:StartBuild\", \"codebuild:StopBuild\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"PipelineBuildSynthCdkBuildProject6BEFA8E6\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineBuildSynthCodePipelineActionRoleDefaultPolicy92C90290\", \"Roles\": [{\"Ref\": \"PipelineBuildSynthCodePipelineActionRole4E7A6C97\"}]}}, \"PipelineBuildSynthCdkBuildProjectRole231EEA2A\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codebuild.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"PipelineBuildSynthCdkBuildProjectRoleDefaultPolicyFB6C941C\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"logs:CreateLogGroup\", \"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"PipelineBuildSynthCdkBuildProject6BEFA8E6\"}, \":*\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"PipelineBuildSynthCdkBuildProject6BEFA8E6\"}]]}]}, {\"Action\": [\"codebuild:BatchPutCodeCoverages\", \"codebuild:BatchPutTestCases\", \"codebuild:CreateReport\", \"codebuild:CreateReportGroup\", \"codebuild:UpdateReport\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":codebuild:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":report-group/\", {\"Ref\": \"PipelineBuildSynthCdkBuildProject6BEFA8E6\"}, \"-*\"]]}}, {\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"kms:Decrypt\", \"kms:DescribeKey\", \"kms:Encrypt\", \"kms:GenerateDataKey*\", \"kms:ReEncrypt*\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKeyF5BF0670\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineBuildSynthCdkBuildProjectRoleDefaultPolicyFB6C941C\", \"Roles\": [{\"Ref\": \"PipelineBuildSynthCdkBuildProjectRole231EEA2A\"}]}}, \"PipelineBuildSynthCdkBuildProject6BEFA8E6\": {\"Type\": \"AWS::CodeBuild::Project\", \"Properties\": {\"Artifacts\": {\"Type\": \"CODEPIPELINE\"}, \"Environment\": {\"ComputeType\": \"BUILD_GENERAL1_SMALL\", \"EnvironmentVariables\": [{\"Name\": \"NPM_CONFIG_UNSAFE_PERM\", \"Type\": \"PLAINTEXT\", \"Value\": \"true\"}], \"Image\": \"aws/codebuild/standard:6.0\", \"ImagePullCredentialsType\": \"CODEBUILD\", \"PrivilegedMode\": false, \"Type\": \"LINUX_CONTAINER\"}, \"ServiceRole\": {\"Fn::GetAtt\": [\"PipelineBuildSynthCdkBuildProjectRole231EEA2A\", \"Arn\"]}, \"Source\": {\"BuildSpec\": \"{\n  \\\"version\\\": \\\"0.2\\\",\n  \\\"phases\\\": {\n    \\\"pre_build\\\": {\n      \\\"commands\\\": [\n        \\\"npm ci\\\"\n      ]\n    },\n    \\\"build\\\": {\n      \\\"commands\\\": [\n        \\\"npx cdk synth\\\"\n      ]\n    }\n  },\n  \\\"artifacts\\\": {\n    \\\"secondary-artifacts\\\": {\n      \\\"CloudAsm\\\": {\n        \\\"base-directory\\\": \\\"cdk.out\\\",\n        \\\"files\\\": \\\"**/*\\\"\n      },\n      \\\"IntegTests\\\": {\n        \\\"base-directory\\\": \\\"test\\\",\n        \\\"files\\\": \\\"**/*\\\"\n      }\n    }\n  }\n}\", \"Type\": \"CODEPIPELINE\"}, \"Cache\": {\"Type\": \"NO_CACHE\"}, \"EncryptionKey\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKeyF5BF0670\", \"Arn\"]}, \"Name\": \"MyServicePipeline-synth\"}}, \"PipelineUpdatePipelineSelfMutateCodePipelineActionRoleD6D4E5CF\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}}, \"PipelineUpdatePipelineSelfMutateCodePipelineActionRoleDefaultPolicyE626265B\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"codebuild:BatchGetBuilds\", \"codebuild:StartBuild\", \"codebuild:StopBuild\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"PipelineUpdatePipelineSelfMutationDAA41400\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineUpdatePipelineSelfMutateCodePipelineActionRoleDefaultPolicyE626265B\", \"Roles\": [{\"Ref\": \"PipelineUpdatePipelineSelfMutateCodePipelineActionRoleD6D4E5CF\"}]}}, \"PipelinePreProdUseSourceCodePipelineActionRoleA2043BDA\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}}, \"PipelinePreProdUseSourceCodePipelineActionRoleDefaultPolicy9BE325AD\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"codebuild:BatchGetBuilds\", \"codebuild:StartBuild\", \"codebuild:StopBuild\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"PipelinePreProdUseSourceProject2E711EB4\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelinePreProdUseSourceCodePipelineActionRoleDefaultPolicy9BE325AD\", \"Roles\": [{\"Ref\": \"PipelinePreProdUseSourceCodePipelineActionRoleA2043BDA\"}]}}, \"PipelinePreProdUseSourceProjectRole69B20A71\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codebuild.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"PipelinePreProdUseSourceProjectRoleDefaultPolicy50F68DF3\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"logs:CreateLogGroup\", \"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"PipelinePreProdUseSourceProject2E711EB4\"}, \":*\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"PipelinePreProdUseSourceProject2E711EB4\"}]]}]}, {\"Action\": [\"codebuild:BatchPutCodeCoverages\", \"codebuild:BatchPutTestCases\", \"codebuild:CreateReport\", \"codebuild:CreateReportGroup\", \"codebuild:UpdateReport\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":codebuild:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":report-group/\", {\"Ref\": \"PipelinePreProdUseSourceProject2E711EB4\"}, \"-*\"]]}}, {\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"kms:Decrypt\", \"kms:DescribeKey\", \"kms:Encrypt\", \"kms:GenerateDataKey*\", \"kms:ReEncrypt*\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKeyF5BF0670\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelinePreProdUseSourceProjectRoleDefaultPolicy50F68DF3\", \"Roles\": [{\"Ref\": \"PipelinePreProdUseSourceProjectRole69B20A71\"}]}}, \"PipelinePreProdUseSourceProject2E711EB4\": {\"Type\": \"AWS::CodeBuild::Project\", \"Properties\": {\"Artifacts\": {\"Type\": \"CODEPIPELINE\"}, \"Environment\": {\"ComputeType\": \"BUILD_GENERAL1_SMALL\", \"Image\": \"aws/codebuild/standard:6.0\", \"ImagePullCredentialsType\": \"CODEBUILD\", \"PrivilegedMode\": false, \"Type\": \"LINUX_CONTAINER\"}, \"ServiceRole\": {\"Fn::GetAtt\": [\"PipelinePreProdUseSourceProjectRole69B20A71\", \"Arn\"]}, \"Source\": {\"BuildSpec\": \"{\n  \\\"version\\\": \\\"0.2\\\",\n  \\\"phases\\\": {\n    \\\"build\\\": {\n      \\\"commands\\\": [\n        \\\"set -eu\\\",\n        \\\"cat README.md\\\"\n      ]\n    }\n  }\n}\", \"Type\": \"CODEPIPELINE\"}, \"Cache\": {\"Type\": \"NO_CACHE\"}, \"EncryptionKey\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKeyF5BF0670\", \"Arn\"]}}}, \"PipelineUpdatePipelineSelfMutationRole57E559E8\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codebuild.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"PipelineUpdatePipelineSelfMutationRoleDefaultPolicyA225DA4E\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"logs:CreateLogGroup\", \"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"PipelineUpdatePipelineSelfMutationDAA41400\"}, \":*\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"PipelineUpdatePipelineSelfMutationDAA41400\"}]]}]}, {\"Action\": [\"codebuild:BatchPutCodeCoverages\", \"codebuild:BatchPutTestCases\", \"codebuild:CreateReport\", \"codebuild:CreateReportGroup\", \"codebuild:UpdateReport\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":codebuild:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":report-group/\", {\"Ref\": \"PipelineUpdatePipelineSelfMutationDAA41400\"}, \"-*\"]]}}, {\"Action\": \"sts:AssumeRole\", \"Condition\": {\"ForAnyValue:StringEquals\": {\"iam:ResourceTag/aws-cdk:bootstrap-role\": [\"image-publishing\", \"file-publishing\", \"deploy\"]}}, \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:*:iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/*\"]]}}, {\"Action\": [\"cloudformation:DescribeStacks\", \"s3:ListBucket\"], \"Effect\": \"Allow\", \"Resource\": \"*\"}, {\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"kms:Decrypt\", \"kms:DescribeKey\", \"kms:Encrypt\", \"kms:GenerateDataKey*\", \"kms:ReEncrypt*\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKeyF5BF0670\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineUpdatePipelineSelfMutationRoleDefaultPolicyA225DA4E\", \"Roles\": [{\"Ref\": \"PipelineUpdatePipelineSelfMutationRole57E559E8\"}]}}, \"PipelineUpdatePipelineSelfMutationDAA41400\": {\"Type\": \"AWS::CodeBuild::Project\", \"Properties\": {\"Artifacts\": {\"Type\": \"CODEPIPELINE\"}, \"Environment\": {\"ComputeType\": \"BUILD_GENERAL1_SMALL\", \"Image\": \"aws/codebuild/standard:6.0\", \"ImagePullCredentialsType\": \"CODEBUILD\", \"PrivilegedMode\": false, \"Type\": \"LINUX_CONTAINER\"}, \"ServiceRole\": {\"Fn::GetAtt\": [\"PipelineUpdatePipelineSelfMutationRole57E559E8\", \"Arn\"]}, \"Source\": {\"BuildSpec\": \"{\n  \\\"version\\\": \\\"0.2\\\",\n  \\\"phases\\\": {\n    \\\"install\\\": {\n      \\\"commands\\\": [\n        \\\"npm install -g aws-cdk@2\\\"\n      ]\n    },\n    \\\"build\\\": {\n      \\\"commands\\\": [\n        \\\"cdk -a . deploy PipelineStack --require-approval=never --verbose\\\"\n      ]\n    }\n  }\n}\", \"Type\": \"CODEPIPELINE\"}, \"Cache\": {\"Type\": \"NO_CACHE\"}, \"EncryptionKey\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKeyF5BF0670\", \"Arn\"]}}}, \"PipelineAssetsFileRole59943A77\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}, \"Service\": \"codebuild.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"PipelineAssetsFileRoleDefaultPolicy14DB8755\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"logs:CreateLogGroup\", \"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/*\"]]}}, {\"Action\": [\"codebuild:BatchPutCodeCoverages\", \"codebuild:BatchPutTestCases\", \"codebuild:CreateReport\", \"codebuild:CreateReportGroup\", \"codebuild:UpdateReport\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":codebuild:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":report-group/*\"]]}}, {\"Action\": [\"codebuild:BatchGetBuilds\", \"codebuild:StartBuild\", \"codebuild:StopBuild\"], \"Effect\": \"Allow\", \"Resource\": \"*\"}, {\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::Sub\": \"arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-file-publishing-role-${AWS::AccountId}-${AWS::Region}\"}}, {\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"kms:Decrypt\", \"kms:DescribeKey\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKeyF5BF0670\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineAssetsFileRoleDefaultPolicy14DB8755\", \"Roles\": [{\"Ref\": \"PipelineAssetsFileRole59943A77\"}]}}, \"PipelineAssetsFileAsset185A67CB4\": {\"Type\": \"AWS::CodeBuild::Project\", \"Properties\": {\"Artifacts\": {\"Type\": \"CODEPIPELINE\"}, \"Environment\": {\"ComputeType\": \"BUILD_GENERAL1_SMALL\", \"Image\": \"aws/codebuild/standard:6.0\", \"ImagePullCredentialsType\": \"CODEBUILD\", \"PrivilegedMode\": false, \"Type\": \"LINUX_CONTAINER\"}, \"ServiceRole\": {\"Fn::GetAtt\": [\"PipelineAssetsFileRole59943A77\", \"Arn\"]}, \"Source\": {\"BuildSpec\": \"{\n  \\\"version\\\": \\\"0.2\\\",\n  \\\"phases\\\": {\n    \\\"install\\\": {\n      \\\"commands\\\": [\n        \\\"npm install -g cdk-assets@2\\\"\n      ]\n    },\n    \\\"build\\\": {\n      \\\"commands\\\": [\n        \\\"cdk-assets --path \\\\\"assembly-PipelineStack-PreProd/PipelineStackPreProdStack65A0AD1F.assets.json\\\\\" --verbose publish \\\\\"8289faf53c7da377bb2b90615999171adef5e1d8f6b88810e5fef75e6ca09ba5:current_account-current_region\\\\\"\\\"\n      ]\n    }\n  }\n}\", \"Type\": \"CODEPIPELINE\"}, \"Cache\": {\"Type\": \"NO_CACHE\"}, \"EncryptionKey\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKeyF5BF0670\", \"Arn\"]}}}, \"PipelineAssetsFileAsset24D2D639B\": {\"Type\": \"AWS::CodeBuild::Project\", \"Properties\": {\"Artifacts\": {\"Type\": \"CODEPIPELINE\"}, \"Environment\": {\"ComputeType\": \"BUILD_GENERAL1_SMALL\", \"Image\": \"aws/codebuild/standard:6.0\", \"ImagePullCredentialsType\": \"CODEBUILD\", \"PrivilegedMode\": false, \"Type\": \"LINUX_CONTAINER\"}, \"ServiceRole\": {\"Fn::GetAtt\": [\"PipelineAssetsFileRole59943A77\", \"Arn\"]}, \"Source\": {\"BuildSpec\": \"{\n  \\\"version\\\": \\\"0.2\\\",\n  \\\"phases\\\": {\n    \\\"install\\\": {\n      \\\"commands\\\": [\n        \\\"npm install -g cdk-assets@2\\\"\n      ]\n    },\n    \\\"build\\\": {\n      \\\"commands\\\": [\n        \\\"cdk-assets --path \\\\\"assembly-PipelineStack-PreProd/PipelineStackPreProdStack65A0AD1F.assets.json\\\\\" --verbose publish \\\\\"ac76997971c3f6ddf37120660003f1ced72b4fc58c498dfd99c78fa77e721e0e:current_account-current_region\\\\\"\\\"\n      ]\n    }\n  }\n}\", \"Type\": \"CODEPIPELINE\"}, \"Cache\": {\"Type\": \"NO_CACHE\"}, \"EncryptionKey\": {\"Fn::GetAtt\": [\"PipelineArtifactsBucketEncryptionKeyF5BF0670\", \"Arn\"]}}}}, \"Mappings\": {\"DefaultCrNodeVersionMap\": {\"af-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-east-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-3\": {\"value\": \"nodejs16.x\"}, \"ap-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-south-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-3\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-4\": {\"value\": \"nodejs16.x\"}, \"ca-central-1\": {\"value\": \"nodejs16.x\"}, \"cn-north-1\": {\"value\": \"nodejs16.x\"}, \"cn-northwest-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-2\": {\"value\": \"nodejs16.x\"}, \"eu-north-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-1\": {\"value\": \"nodejs16.x\"}, \"eu-west-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-3\": {\"value\": \"nodejs16.x\"}, \"me-central-1\": {\"value\": \"nodejs16.x\"}, \"me-south-1\": {\"value\": \"nodejs16.x\"}, \"sa-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-2\": {\"value\": \"nodejs16.x\"}, \"us-gov-east-1\": {\"value\": \"nodejs16.x\"}, \"us-gov-west-1\": {\"value\": \"nodejs16.x\"}, \"us-iso-east-1\": {\"value\": \"nodejs14.x\"}, \"us-iso-west-1\": {\"value\": \"nodejs14.x\"}, \"us-isob-east-1\": {\"value\": \"nodejs14.x\"}, \"us-west-1\": {\"value\": \"nodejs16.x\"}, \"us-west-2\": {\"value\": \"nodejs16.x\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "/// !cdk-integ PipelineStack pragma:set-context:@aws-cdk/core:newStyleStackSynthesis=true\nimport * as path from 'path';\nimport * as codepipeline from 'aws-cdk-lib/aws-codepipeline';\nimport * as codepipeline_actions from 'aws-cdk-lib/aws-codepipeline-actions';\nimport * as s3 from 'aws-cdk-lib/aws-s3';\nimport * as s3_assets from 'aws-cdk-lib/aws-s3-assets';\nimport { App, CfnResource, DefaultStackSynthesizer, RemovalPolicy, Stack, StackProps, Stage, StageProps } from 'aws-cdk-lib';\nimport { Construct } from 'constructs';\nimport * as cdkp from 'aws-cdk-lib/pipelines';\n\nclass MyStage extends Stage {\n  constructor(scope: Construct, id: string, props?: StageProps) {\n    super(scope, id, props);\n\n    const stack = new Stack(this, 'Stack', {\n      ...props,\n      synthesizer: new DefaultStackSynthesizer(),\n    });\n\n    new s3_assets.Asset(stack, 'Asset', {\n      path: path.join(__dirname, 'testhelpers/assets/test-file-asset.txt'),\n    });\n    new s3_assets.Asset(stack, 'Asset2', {\n      path: path.join(__dirname, 'testhelpers/assets/test-file-asset-two.txt'),\n    });\n\n    new CfnResource(stack, 'Resource', {\n      type: 'AWS::Test::SomeResource',\n    });\n  }\n}\n\n/**\n * The stack that defines the application pipeline\n */\nclass CdkpipelinesDemoPipelineStack extends Stack {\n  constructor(scope: Construct, id: string, props?: StackProps) {\n    super(scope, id, props);\n\n    const sourceArtifact = new codepipeline.Artifact();\n    const cloudAssemblyArtifact = new codepipeline.Artifact('CloudAsm');\n    const integTestArtifact = new codepipeline.Artifact('IntegTests');\n\n    const sourceBucket = new s3.Bucket(this, 'SourceBucket', {\n      removalPolicy: RemovalPolicy.DESTROY,\n      autoDeleteObjects: true,\n    });\n    const pipeline = new cdkp.CdkPipeline(this, 'Pipeline', {\n      cloudAssemblyArtifact,\n\n      // Where the source can be found\n      sourceAction: new codepipeline_actions.S3SourceAction({\n        bucket: sourceBucket,\n        output: sourceArtifact,\n        bucketKey: 'key',\n        actionName: 'S3',\n      }),\n\n      // How it will be built\n      synthAction: cdkp.SimpleSynthAction.standardNpmSynth({\n        sourceArtifact,\n        cloudAssemblyArtifact,\n        projectName: 'MyServicePipeline-synth',\n        additionalArtifacts: [\n          {\n            directory: 'test',\n            artifact: integTestArtifact,\n          },\n        ],\n      }),\n    });\n\n    // This is where we add the application stages\n    // ...\n    const stage = pipeline.addApplicationStage(new MyStage(this, 'PreProd'));\n    stage.addActions(\n      new cdkp.ShellScriptAction({\n        actionName: 'UseSource',\n        commands: [\n          // Comes from source\n          'cat README.md',\n        ],\n        additionalArtifacts: [sourceArtifact],\n      }),\n    );\n  }\n}\n\nconst app = new App({\n  context: {\n    '@aws-cdk/core:newStyleStackSynthesis': 'true',\n  },\n});\nnew CdkpipelinesDemoPipelineStack(app, 'PipelineStack', {\n  synthesizer: new DefaultStackSynthesizer(),\n});\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"Vpc8378EB38\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"PipelineStack/Vpc\"}]}}, \"VpcPublicSubnet1Subnet5C2D37C4\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"PipelineStack/Vpc/PublicSubnet1\"}]}}, \"VpcPublicSubnet1RouteTable6C95E38E\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"PipelineStack/Vpc/PublicSubnet1\"}]}}, \"VpcPublicSubnet1RouteTableAssociation97140677\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet1RouteTable6C95E38E\"}, \"SubnetId\": {\"Ref\": \"VpcPublicSubnet1Subnet5C2D37C4\"}}}, \"VpcPublicSubnet1DefaultRoute3DA9E72A\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet1RouteTable6C95E38E\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VpcIGWD7BA715C\"}}, \"DependsOn\": [\"VpcVPCGWBF912B6E\"]}, \"VpcPublicSubnet1EIPD7E02669\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"PipelineStack/Vpc/PublicSubnet1\"}]}}, \"VpcPublicSubnet1NATGateway4D7517AA\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VpcPublicSubnet1Subnet5C2D37C4\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VpcPublicSubnet1EIPD7E02669\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"PipelineStack/Vpc/PublicSubnet1\"}]}, \"DependsOn\": [\"VpcPublicSubnet1DefaultRoute3DA9E72A\", \"VpcPublicSubnet1RouteTableAssociation97140677\"]}, \"VpcPublicSubnet2Subnet691E08A3\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"PipelineStack/Vpc/PublicSubnet2\"}]}}, \"VpcPublicSubnet2RouteTable94F7E489\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"PipelineStack/Vpc/PublicSubnet2\"}]}}, \"VpcPublicSubnet2RouteTableAssociationDD5762D8\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet2RouteTable94F7E489\"}, \"SubnetId\": {\"Ref\": \"VpcPublicSubnet2Subnet691E08A3\"}}}, \"VpcPublicSubnet2DefaultRoute97F91067\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet2RouteTable94F7E489\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VpcIGWD7BA715C\"}}, \"DependsOn\": [\"VpcVPCGWBF912B6E\"]}, \"VpcPublicSubnet2EIP3C605A87\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"PipelineStack/Vpc/PublicSubnet2\"}]}}, \"VpcPublicSubnet2NATGateway9182C01D\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VpcPublicSubnet2Subnet691E08A3\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VpcPublicSubnet2EIP3C605A87\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"PipelineStack/Vpc/PublicSubnet2\"}]}, \"DependsOn\": [\"VpcPublicSubnet2DefaultRoute97F91067\", \"VpcPublicSubnet2RouteTableAssociationDD5762D8\"]}, \"VpcPrivateSubnet1Subnet536B997A\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"PipelineStack/Vpc/PrivateSubnet1\"}]}}, \"VpcPrivateSubnet1RouteTableB2C5B500\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"PipelineStack/Vpc/PrivateSubnet1\"}]}}, \"VpcPrivateSubnet1RouteTableAssociation70C59FA6\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet1RouteTableB2C5B500\"}, \"SubnetId\": {\"Ref\": \"VpcPrivateSubnet1Subnet536B997A\"}}}, \"VpcPrivateSubnet1DefaultRouteBE02A9ED\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet1RouteTableB2C5B500\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VpcPublicSubnet1NATGateway4D7517AA\"}}}, \"VpcPrivateSubnet2Subnet3788AAA1\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"PipelineStack/Vpc/PrivateSubnet2\"}]}}, \"VpcPrivateSubnet2RouteTableA678073B\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"PipelineStack/Vpc/PrivateSubnet2\"}]}}, \"VpcPrivateSubnet2RouteTableAssociationA89CAD56\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet2RouteTableA678073B\"}, \"SubnetId\": {\"Ref\": \"VpcPrivateSubnet2Subnet3788AAA1\"}}}, \"VpcPrivateSubnet2DefaultRoute060D2087\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet2RouteTableA678073B\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VpcPublicSubnet2NATGateway9182C01D\"}}}, \"VpcIGWD7BA715C\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"PipelineStack/Vpc\"}]}}, \"VpcVPCGWBF912B6E\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"InternetGatewayId\": {\"Ref\": \"VpcIGWD7BA715C\"}}}, \"PipelineArtifactsBucketAEA9A052\": {\"Type\": \"AWS::S3::Bucket\", \"Properties\": {\"BucketEncryption\": {\"ServerSideEncryptionConfiguration\": [{\"ServerSideEncryptionByDefault\": {\"SSEAlgorithm\": \"aws:kms\"}}]}, \"PublicAccessBlockConfiguration\": {\"BlockPublicAcls\": true, \"BlockPublicPolicy\": true, \"IgnorePublicAcls\": true, \"RestrictPublicBuckets\": true}}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"PipelineArtifactsBucketPolicyF53CCC52\": {\"Type\": \"AWS::S3::BucketPolicy\", \"Properties\": {\"Bucket\": {\"Ref\": \"PipelineArtifactsBucketAEA9A052\"}, \"PolicyDocument\": {\"Statement\": [{\"Action\": \"s3:*\", \"Condition\": {\"Bool\": {\"aws:SecureTransport\": \"false\"}}, \"Effect\": \"Deny\", \"Principal\": {\"AWS\": \"*\"}, \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-deploy-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}}, \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}}}, \"PipelineRoleB27FAA37\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codepipeline.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"PipelineRoleDefaultPolicy7BDC1ABB\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineCodeBuildActionRole226DB0CB\", \"Arn\"]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-deploy-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineRoleDefaultPolicy7BDC1ABB\", \"Roles\": [{\"Ref\": \"PipelineRoleB27FAA37\"}]}}, \"Pipeline9850B417\": {\"Type\": \"AWS::CodePipeline::Pipeline\", \"Properties\": {\"RoleArn\": {\"Fn::GetAtt\": [\"PipelineRoleB27FAA37\", \"Arn\"]}, \"Stages\": [{\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Source\", \"Owner\": \"ThirdParty\", \"Provider\": \"GitHub\", \"Version\": \"1\"}, \"Configuration\": {\"Owner\": \"aws\", \"Repo\": \"aws-cdk\", \"Branch\": \"v2-main\", \"OAuthToken\": \"{{resolve:secretsmanager:github-token:SecretString:::}}\", \"PollForSourceChanges\": false}, \"Name\": \"aws_aws-cdk\", \"OutputArtifacts\": [{\"Name\": \"aws_aws_cdk_Source\"}], \"RunOrder\": 1}], \"Name\": \"Source\"}, {\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Build\", \"Owner\": \"AWS\", \"Provider\": \"CodeBuild\", \"Version\": \"1\"}, \"Configuration\": {\"ProjectName\": {\"Ref\": \"PipelineBuildSynthCdkBuildProject6BEFA8E6\"}, \"EnvironmentVariables\": \"[{\\\"name\\\":\\\"_PROJECT_CONFIG_HASH\\\",\\\"type\\\":\\\"PLAINTEXT\\\",\\\"value\\\":\\\"09deb76d97fe89f2ccd364ad1eedc7ebc7c010be6bf79da68c34f358446cd134\\\"}]\"}, \"InputArtifacts\": [{\"Name\": \"aws_aws_cdk_Source\"}], \"Name\": \"Synth\", \"OutputArtifacts\": [{\"Name\": \"Synth_Output\"}], \"RoleArn\": {\"Fn::GetAtt\": [\"PipelineCodeBuildActionRole226DB0CB\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"Build\"}, {\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Build\", \"Owner\": \"AWS\", \"Provider\": \"CodeBuild\", \"Version\": \"1\"}, \"Configuration\": {\"ProjectName\": {\"Ref\": \"PipelineUpdatePipelineSelfMutationDAA41400\"}, \"EnvironmentVariables\": \"[{\\\"name\\\":\\\"_PROJECT_CONFIG_HASH\\\",\\\"type\\\":\\\"PLAINTEXT\\\",\\\"value\\\":\\\"d481eb7e52fa70e98aa3e0e22b2f258bef28632bc13e90928d96c7e1479e3a2b\\\"}]\"}, \"InputArtifacts\": [{\"Name\": \"Synth_Output\"}], \"Name\": \"SelfMutate\", \"RoleArn\": {\"Fn::GetAtt\": [\"PipelineCodeBuildActionRole226DB0CB\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"UpdatePipeline\"}, {\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Build\", \"Owner\": \"AWS\", \"Provider\": \"CodeBuild\", \"Version\": \"1\"}, \"Configuration\": {\"ProjectName\": {\"Ref\": \"PipelineAssetsFileAsset185A67CB4\"}}, \"InputArtifacts\": [{\"Name\": \"Synth_Output\"}], \"Name\": \"FileAsset1\", \"RoleArn\": {\"Fn::GetAtt\": [\"PipelineCodeBuildActionRole226DB0CB\", \"Arn\"]}, \"RunOrder\": 1}, {\"ActionTypeId\": {\"Category\": \"Build\", \"Owner\": \"AWS\", \"Provider\": \"CodeBuild\", \"Version\": \"1\"}, \"Configuration\": {\"ProjectName\": {\"Ref\": \"PipelineAssetsFileAsset24D2D639B\"}}, \"InputArtifacts\": [{\"Name\": \"Synth_Output\"}], \"Name\": \"FileAsset2\", \"RoleArn\": {\"Fn::GetAtt\": [\"PipelineCodeBuildActionRole226DB0CB\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"Assets\"}, {\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Deploy\", \"Owner\": \"AWS\", \"Provider\": \"CloudFormation\", \"Version\": \"1\"}, \"Configuration\": {\"StackName\": \"Beta-Stack1\", \"Capabilities\": \"CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-cfn-exec-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"ActionMode\": \"CHANGE_SET_REPLACE\", \"ChangeSetName\": \"PipelineChange\", \"TemplatePath\": \"Synth_Output::assembly-PipelineStack-Beta/PipelineStackBetaStack1E6541489.template.json\"}, \"InputArtifacts\": [{\"Name\": \"Synth_Output\"}], \"Name\": \"Prepare\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-deploy-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"RunOrder\": 1}, {\"ActionTypeId\": {\"Category\": \"Deploy\", \"Owner\": \"AWS\", \"Provider\": \"CloudFormation\", \"Version\": \"1\"}, \"Configuration\": {\"StackName\": \"Beta-Stack1\", \"ActionMode\": \"CHANGE_SET_EXECUTE\", \"ChangeSetName\": \"PipelineChange\"}, \"Name\": \"Deploy\", \"RoleArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/cdk-hnb659fds-deploy-role-\", {\"Ref\": \"AWS::AccountId\"}, \"-\", {\"Ref\": \"AWS::Region\"}]]}, \"RunOrder\": 2}], \"Name\": \"Beta\"}], \"ArtifactStore\": {\"Location\": {\"Ref\": \"PipelineArtifactsBucketAEA9A052\"}, \"Type\": \"S3\"}, \"RestartExecutionOnUpdate\": true}, \"DependsOn\": [\"PipelineRoleDefaultPolicy7BDC1ABB\", \"PipelineRoleB27FAA37\"]}, \"PipelineSourceawsawscdkWebhookResource46EC529B\": {\"Type\": \"AWS::CodePipeline::Webhook\", \"Properties\": {\"Authentication\": \"GITHUB_HMAC\", \"AuthenticationConfiguration\": {\"SecretToken\": \"{{resolve:secretsmanager:github-token:SecretString:::}}\"}, \"Filters\": [{\"JsonPath\": \"$.ref\", \"MatchEquals\": \"refs/heads/{Branch}\"}], \"TargetAction\": \"aws_aws-cdk\", \"TargetPipeline\": {\"Ref\": \"Pipeline9850B417\"}, \"TargetPipelineVersion\": 1, \"RegisterWithThirdParty\": true}}, \"PipelineBuildSynthCdkBuildProjectRole231EEA2A\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codebuild.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"PipelineBuildSynthCdkBuildProjectRoleDefaultPolicyFB6C941C\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"ec2:CreateNetworkInterfacePermission\", \"Condition\": {\"StringEquals\": {\"ec2:Subnet\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":ec2:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":subnet/\", {\"Ref\": \"VpcPrivateSubnet1Subnet536B997A\"}]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":ec2:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":subnet/\", {\"Ref\": \"VpcPrivateSubnet2Subnet3788AAA1\"}]]}], \"ec2:AuthorizedService\": \"codebuild.amazonaws.com\"}}, \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":ec2:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":network-interface/*\"]]}}, {\"Action\": [\"logs:CreateLogGroup\", \"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"PipelineBuildSynthCdkBuildProject6BEFA8E6\"}, \":*\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"PipelineBuildSynthCdkBuildProject6BEFA8E6\"}]]}]}, {\"Action\": [\"codebuild:BatchPutCodeCoverages\", \"codebuild:BatchPutTestCases\", \"codebuild:CreateReport\", \"codebuild:CreateReportGroup\", \"codebuild:UpdateReport\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":codebuild:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":report-group/\", {\"Ref\": \"PipelineBuildSynthCdkBuildProject6BEFA8E6\"}, \"-*\"]]}}, {\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineBuildSynthCdkBuildProjectRoleDefaultPolicyFB6C941C\", \"Roles\": [{\"Ref\": \"PipelineBuildSynthCdkBuildProjectRole231EEA2A\"}]}}, \"PipelineBuildSynthCdkBuildProjectSecurityGroup84F92459\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"Automatic generated security group for CodeBuild PipelineStackPipelineBuildSynthCdkBuildProject225CEB2C\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"VpcId\": {\"Ref\": \"Vpc8378EB38\"}}}, \"PipelineBuildSynthCdkBuildProject6BEFA8E6\": {\"Type\": \"AWS::CodeBuild::Project\", \"Properties\": {\"Artifacts\": {\"Type\": \"CODEPIPELINE\"}, \"Environment\": {\"ComputeType\": \"BUILD_GENERAL1_SMALL\", \"Image\": \"aws/codebuild/standard:6.0\", \"ImagePullCredentialsType\": \"CODEBUILD\", \"PrivilegedMode\": false, \"Type\": \"LINUX_CONTAINER\"}, \"ServiceRole\": {\"Fn::GetAtt\": [\"PipelineBuildSynthCdkBuildProjectRole231EEA2A\", \"Arn\"]}, \"Source\": {\"BuildSpec\": \"{\n  \\\"version\\\": \\\"0.2\\\",\n  \\\"phases\\\": {\n    \\\"build\\\": {\n      \\\"commands\\\": [\n        \\\"npm ci\\\",\n        \\\"npm run build\\\",\n        \\\"npx cdk synth\\\"\n      ]\n    }\n  },\n  \\\"artifacts\\\": {\n    \\\"base-directory\\\": \\\"cdk.out\\\",\n    \\\"files\\\": \\\"**/*\\\"\n  }\n}\", \"Type\": \"CODEPIPELINE\"}, \"Cache\": {\"Type\": \"NO_CACHE\"}, \"Description\": \"Pipeline step PipelineStack/Pipeline/Build/Synth\", \"EncryptionKey\": \"alias/aws/s3\", \"VpcConfig\": {\"SecurityGroupIds\": [{\"Fn::GetAtt\": [\"PipelineBuildSynthCdkBuildProjectSecurityGroup84F92459\", \"GroupId\"]}], \"Subnets\": [{\"Ref\": \"VpcPrivateSubnet1Subnet536B997A\"}, {\"Ref\": \"VpcPrivateSubnet2Subnet3788AAA1\"}], \"VpcId\": {\"Ref\": \"Vpc8378EB38\"}}}, \"DependsOn\": [\"PipelineBuildSynthCdkBuildProjectPolicyDocument4D16371A\"]}, \"PipelineBuildSynthCdkBuildProjectPolicyDocument4D16371A\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"ec2:CreateNetworkInterface\", \"ec2:DeleteNetworkInterface\", \"ec2:DescribeDhcpOptions\", \"ec2:DescribeNetworkInterfaces\", \"ec2:DescribeSecurityGroups\", \"ec2:DescribeSubnets\", \"ec2:DescribeVpcs\"], \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineBuildSynthCdkBuildProjectPolicyDocument4D16371A\", \"Roles\": [{\"Ref\": \"PipelineBuildSynthCdkBuildProjectRole231EEA2A\"}]}}, \"PipelineCodeBuildActionRole226DB0CB\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::GetAtt\": [\"PipelineRoleB27FAA37\", \"Arn\"]}}}], \"Version\": \"2012-10-17\"}}}, \"PipelineCodeBuildActionRoleDefaultPolicy1D62A6FE\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"codebuild:BatchGetBuilds\", \"codebuild:StartBuild\", \"codebuild:StopBuild\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineAssetsFileAsset185A67CB4\", \"Arn\"]}, {\"Fn::GetAtt\": [\"PipelineAssetsFileAsset24D2D639B\", \"Arn\"]}, {\"Fn::GetAtt\": [\"PipelineBuildSynthCdkBuildProject6BEFA8E6\", \"Arn\"]}, {\"Fn::GetAtt\": [\"PipelineUpdatePipelineSelfMutationDAA41400\", \"Arn\"]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineCodeBuildActionRoleDefaultPolicy1D62A6FE\", \"Roles\": [{\"Ref\": \"PipelineCodeBuildActionRole226DB0CB\"}]}}, \"PipelineUpdatePipelineSelfMutationRole57E559E8\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codebuild.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"PipelineUpdatePipelineSelfMutationRoleDefaultPolicyA225DA4E\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"ec2:CreateNetworkInterfacePermission\", \"Condition\": {\"StringEquals\": {\"ec2:Subnet\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":ec2:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":subnet/\", {\"Ref\": \"VpcPrivateSubnet1Subnet536B997A\"}]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":ec2:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":subnet/\", {\"Ref\": \"VpcPrivateSubnet2Subnet3788AAA1\"}]]}], \"ec2:AuthorizedService\": \"codebuild.amazonaws.com\"}}, \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":ec2:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":network-interface/*\"]]}}, {\"Action\": [\"logs:CreateLogGroup\", \"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"PipelineUpdatePipelineSelfMutationDAA41400\"}, \":*\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"PipelineUpdatePipelineSelfMutationDAA41400\"}]]}]}, {\"Action\": [\"codebuild:BatchPutCodeCoverages\", \"codebuild:BatchPutTestCases\", \"codebuild:CreateReport\", \"codebuild:CreateReportGroup\", \"codebuild:UpdateReport\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":codebuild:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":report-group/\", {\"Ref\": \"PipelineUpdatePipelineSelfMutationDAA41400\"}, \"-*\"]]}}, {\"Action\": \"sts:AssumeRole\", \"Condition\": {\"ForAnyValue:StringEquals\": {\"iam:ResourceTag/aws-cdk:bootstrap-role\": [\"image-publishing\", \"file-publishing\", \"deploy\"]}}, \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:*:iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/*\"]]}}, {\"Action\": [\"cloudformation:DescribeStacks\", \"s3:ListBucket\"], \"Effect\": \"Allow\", \"Resource\": \"*\"}, {\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineUpdatePipelineSelfMutationRoleDefaultPolicyA225DA4E\", \"Roles\": [{\"Ref\": \"PipelineUpdatePipelineSelfMutationRole57E559E8\"}]}}, \"PipelineUpdatePipelineSelfMutationSecurityGroup94164EDC\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"Automatic generated security group for CodeBuild PipelineStackPipelineUpdatePipelineSelfMutationE51045FC\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"VpcId\": {\"Ref\": \"Vpc8378EB38\"}}}, \"PipelineUpdatePipelineSelfMutationDAA41400\": {\"Type\": \"AWS::CodeBuild::Project\", \"Properties\": {\"Artifacts\": {\"Type\": \"CODEPIPELINE\"}, \"Environment\": {\"ComputeType\": \"BUILD_GENERAL1_SMALL\", \"Image\": \"aws/codebuild/standard:6.0\", \"ImagePullCredentialsType\": \"CODEBUILD\", \"PrivilegedMode\": false, \"Type\": \"LINUX_CONTAINER\"}, \"ServiceRole\": {\"Fn::GetAtt\": [\"PipelineUpdatePipelineSelfMutationRole57E559E8\", \"Arn\"]}, \"Source\": {\"BuildSpec\": \"{\n  \\\"version\\\": \\\"0.2\\\",\n  \\\"phases\\\": {\n    \\\"install\\\": {\n      \\\"commands\\\": [\n        \\\"npm install -g aws-cdk@2\\\"\n      ]\n    },\n    \\\"build\\\": {\n      \\\"commands\\\": [\n        \\\"cdk -a . deploy PipelineStack --require-approval=never --verbose\\\"\n      ]\n    }\n  }\n}\", \"Type\": \"CODEPIPELINE\"}, \"Cache\": {\"Type\": \"NO_CACHE\"}, \"Description\": \"Pipeline step PipelineStack/Pipeline/UpdatePipeline/SelfMutate\", \"EncryptionKey\": \"alias/aws/s3\", \"VpcConfig\": {\"SecurityGroupIds\": [{\"Fn::GetAtt\": [\"PipelineUpdatePipelineSelfMutationSecurityGroup94164EDC\", \"GroupId\"]}], \"Subnets\": [{\"Ref\": \"VpcPrivateSubnet1Subnet536B997A\"}, {\"Ref\": \"VpcPrivateSubnet2Subnet3788AAA1\"}], \"VpcId\": {\"Ref\": \"Vpc8378EB38\"}}}, \"DependsOn\": [\"PipelineUpdatePipelineSelfMutationPolicyDocumentD327DC74\"]}, \"PipelineUpdatePipelineSelfMutationPolicyDocumentD327DC74\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"ec2:CreateNetworkInterface\", \"ec2:DeleteNetworkInterface\", \"ec2:DescribeDhcpOptions\", \"ec2:DescribeNetworkInterfaces\", \"ec2:DescribeSecurityGroups\", \"ec2:DescribeSubnets\", \"ec2:DescribeVpcs\"], \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineUpdatePipelineSelfMutationPolicyDocumentD327DC74\", \"Roles\": [{\"Ref\": \"PipelineUpdatePipelineSelfMutationRole57E559E8\"}]}}, \"PipelineAssetsFileRole59943A77\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}, \"Service\": \"codebuild.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"PipelineAssetsFileRoleDefaultPolicy14DB8755\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"logs:CreateLogGroup\", \"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/*\"]]}}, {\"Action\": [\"codebuild:BatchPutCodeCoverages\", \"codebuild:BatchPutTestCases\", \"codebuild:CreateReport\", \"codebuild:CreateReportGroup\", \"codebuild:UpdateReport\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":codebuild:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":report-group/*\"]]}}, {\"Action\": [\"codebuild:BatchGetBuilds\", \"codebuild:StartBuild\", \"codebuild:StopBuild\"], \"Effect\": \"Allow\", \"Resource\": \"*\"}, {\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::Sub\": \"arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-file-publishing-role-${AWS::AccountId}-${AWS::Region}\"}}, {\"Action\": \"ec2:CreateNetworkInterfacePermission\", \"Condition\": {\"StringEquals\": {\"ec2:Subnet\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":ec2:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":subnet/\", {\"Ref\": \"VpcPrivateSubnet1Subnet536B997A\"}]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":ec2:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":subnet/\", {\"Ref\": \"VpcPrivateSubnet2Subnet3788AAA1\"}]]}], \"ec2:AuthorizedService\": \"codebuild.amazonaws.com\"}}, \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":ec2:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":network-interface/*\"]]}}, {\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"PipelineArtifactsBucketAEA9A052\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineAssetsFileRoleDefaultPolicy14DB8755\", \"Roles\": [{\"Ref\": \"PipelineAssetsFileRole59943A77\"}]}}, \"PipelineAssetsFileAsset1SecurityGroupF04F1AD4\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"Automatic generated security group for CodeBuild PipelineStackPipelineAssetsFileAsset10191BEFB\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"VpcId\": {\"Ref\": \"Vpc8378EB38\"}}}, \"PipelineAssetsFileAsset185A67CB4\": {\"Type\": \"AWS::CodeBuild::Project\", \"Properties\": {\"Artifacts\": {\"Type\": \"CODEPIPELINE\"}, \"Environment\": {\"ComputeType\": \"BUILD_GENERAL1_SMALL\", \"Image\": \"aws/codebuild/standard:6.0\", \"ImagePullCredentialsType\": \"CODEBUILD\", \"PrivilegedMode\": false, \"Type\": \"LINUX_CONTAINER\"}, \"ServiceRole\": {\"Fn::GetAtt\": [\"PipelineAssetsFileRole59943A77\", \"Arn\"]}, \"Source\": {\"BuildSpec\": \"{\n  \\\"version\\\": \\\"0.2\\\",\n  \\\"phases\\\": {\n    \\\"install\\\": {\n      \\\"commands\\\": [\n        \\\"npm install -g cdk-assets@2\\\"\n      ]\n    },\n    \\\"build\\\": {\n      \\\"commands\\\": [\n        \\\"cdk-assets --path \\\\\"assembly-PipelineStack-Beta/PipelineStackBetaStack1E6541489.assets.json\\\\\" --verbose publish \\\\\"8289faf53c7da377bb2b90615999171adef5e1d8f6b88810e5fef75e6ca09ba5:current_account-current_region\\\\\"\\\"\n      ]\n    }\n  }\n}\", \"Type\": \"CODEPIPELINE\"}, \"Cache\": {\"Type\": \"NO_CACHE\"}, \"Description\": \"Pipeline step PipelineStack/Pipeline/Assets/FileAsset1\", \"EncryptionKey\": \"alias/aws/s3\", \"VpcConfig\": {\"SecurityGroupIds\": [{\"Fn::GetAtt\": [\"PipelineAssetsFileAsset1SecurityGroupF04F1AD4\", \"GroupId\"]}], \"Subnets\": [{\"Ref\": \"VpcPrivateSubnet1Subnet536B997A\"}, {\"Ref\": \"VpcPrivateSubnet2Subnet3788AAA1\"}], \"VpcId\": {\"Ref\": \"Vpc8378EB38\"}}}, \"DependsOn\": [\"PipelineAssetsFileAsset1PolicyDocument4681543E\"]}, \"PipelineAssetsFileAsset1PolicyDocument4681543E\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"ec2:CreateNetworkInterface\", \"ec2:DeleteNetworkInterface\", \"ec2:DescribeDhcpOptions\", \"ec2:DescribeNetworkInterfaces\", \"ec2:DescribeSecurityGroups\", \"ec2:DescribeSubnets\", \"ec2:DescribeVpcs\"], \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"PipelineAssetsFileAsset1PolicyDocument4681543E\", \"Roles\": [{\"Ref\": \"PipelineAssetsFileRole59943A77\"}]}}, \"PipelineAssetsFileAsset2SecurityGroupA400C1A5\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"Automatic generated security group for CodeBuild PipelineStackPipelineAssetsFileAsset24DB856A2\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"VpcId\": {\"Ref\": \"Vpc8378EB38\"}}}, \"PipelineAssetsFileAsset24D2D639B\": {\"Type\": \"AWS::CodeBuild::Project\", \"Properties\": {\"Artifacts\": {\"Type\": \"CODEPIPELINE\"}, \"Environment\": {\"ComputeType\": \"BUILD_GENERAL1_SMALL\", \"Image\": \"aws/codebuild/standard:6.0\", \"ImagePullCredentialsType\": \"CODEBUILD\", \"PrivilegedMode\": false, \"Type\": \"LINUX_CONTAINER\"}, \"ServiceRole\": {\"Fn::GetAtt\": [\"PipelineAssetsFileRole59943A77\", \"Arn\"]}, \"Source\": {\"BuildSpec\": \"{\n  \\\"version\\\": \\\"0.2\\\",\n  \\\"phases\\\": {\n    \\\"install\\\": {\n      \\\"commands\\\": [\n        \\\"npm install -g cdk-assets@2\\\"\n      ]\n    },\n    \\\"build\\\": {\n      \\\"commands\\\": [\n        \\\"cdk-assets --path \\\\\"assembly-PipelineStack-Beta/PipelineStackBetaStack1E6541489.assets.json\\\\\" --verbose publish \\\\\"ac76997971c3f6ddf37120660003f1ced72b4fc58c498dfd99c78fa77e721e0e:current_account-current_region\\\\\"\\\"\n      ]\n    }\n  }\n}\", \"Type\": \"CODEPIPELINE\"}, \"Cache\": {\"Type\": \"NO_CACHE\"}, \"Description\": \"Pipeline step PipelineStack/Pipeline/Assets/FileAsset2\", \"EncryptionKey\": \"alias/aws/s3\", \"VpcConfig\": {\"SecurityGroupIds\": [{\"Fn::GetAtt\": [\"PipelineAssetsFileAsset2SecurityGroupA400C1A5\", \"GroupId\"]}], \"Subnets\": [{\"Ref\": \"VpcPrivateSubnet1Subnet536B997A\"}, {\"Ref\": \"VpcPrivateSubnet2Subnet3788AAA1\"}], \"VpcId\": {\"Ref\": \"Vpc8378EB38\"}}}, \"DependsOn\": [\"PipelineAssetsFileAsset1PolicyDocument4681543E\"]}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "// eslint-disable-next-line import/no-extraneous-dependencies\n/// !cdk-integ PipelineStack pragma:set-context:@aws-cdk/core:newStyleStackSynthesis=true\nimport * as path from 'path';\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as s3_assets from 'aws-cdk-lib/aws-s3-assets';\nimport * as sqs from 'aws-cdk-lib/aws-sqs';\nimport { App, Stack, StackProps, Stage, StageProps } from 'aws-cdk-lib';\nimport { Construct } from 'constructs';\nimport * as pipelines from 'aws-cdk-lib/pipelines';\n\nclass PipelineStack extends Stack {\n  constructor(scope: Construct, id: string, props?: StackProps) {\n    super(scope, id, props);\n\n    const vpc = new ec2.Vpc(this, 'Vpc', { restrictDefaultSecurityGroup: false });\n\n    const pipeline = new pipelines.CodePipeline(this, 'Pipeline', {\n      codeBuildDefaults: { vpc },\n      synth: new pipelines.ShellStep('Synth', {\n        input: pipelines.CodePipelineSource.gitHub('aws/aws-cdk', 'v2-main'),\n        commands: [\n          'npm ci',\n          'npm run build',\n          'npx cdk synth',\n        ],\n      }),\n    });\n\n    pipeline.addStage(new AppStage(this, 'Beta'));\n  }\n}\n\nclass AppStage extends Stage {\n  constructor(scope: Construct, id: string, props?: StageProps) {\n    super(scope, id, props);\n\n    const stack = new Stack(this, 'Stack1');\n    new s3_assets.Asset(stack, 'Asset', {\n      path: path.join(__dirname, 'testhelpers/assets/test-file-asset.txt'),\n    });\n    new s3_assets.Asset(stack, 'Asset2', {\n      path: path.join(__dirname, 'testhelpers/assets/test-file-asset-two.txt'),\n    });\n\n    new sqs.Queue(stack, 'OtherQueue');\n  }\n}\n\nconst app = new App({\n  context: {\n    '@aws-cdk/core:newStyleStackSynthesis': '1',\n  },\n});\nnew PipelineStack(app, 'PipelineStack');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"vpcA2121C38\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"mesh-stack/vpc\"}]}}, \"vpcPublicSubnet1Subnet2E65531E\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"vpcA2121C38\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"mesh-stack/vpc/PublicSubnet1\"}]}}, \"vpcPublicSubnet1RouteTable48A2DF9B\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"vpcA2121C38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"mesh-stack/vpc/PublicSubnet1\"}]}}, \"vpcPublicSubnet1RouteTableAssociation5D3F4579\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"vpcPublicSubnet1RouteTable48A2DF9B\"}, \"SubnetId\": {\"Ref\": \"vpcPublicSubnet1Subnet2E65531E\"}}}, \"vpcPublicSubnet1DefaultRoute10708846\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"vpcPublicSubnet1RouteTable48A2DF9B\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"vpcIGWE57CBDCA\"}}, \"DependsOn\": [\"vpcVPCGW7984C166\"]}, \"vpcPublicSubnet1EIPDA49DCBE\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"mesh-stack/vpc/PublicSubnet1\"}]}}, \"vpcPublicSubnet1NATGateway9C16659E\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"vpcPublicSubnet1Subnet2E65531E\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"vpcPublicSubnet1EIPDA49DCBE\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"mesh-stack/vpc/PublicSubnet1\"}]}, \"DependsOn\": [\"vpcPublicSubnet1DefaultRoute10708846\", \"vpcPublicSubnet1RouteTableAssociation5D3F4579\"]}, \"vpcPublicSubnet2Subnet009B674F\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"vpcA2121C38\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"mesh-stack/vpc/PublicSubnet2\"}]}}, \"vpcPublicSubnet2RouteTableEB40D4CB\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"vpcA2121C38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"mesh-stack/vpc/PublicSubnet2\"}]}}, \"vpcPublicSubnet2RouteTableAssociation21F81B59\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"vpcPublicSubnet2RouteTableEB40D4CB\"}, \"SubnetId\": {\"Ref\": \"vpcPublicSubnet2Subnet009B674F\"}}}, \"vpcPublicSubnet2DefaultRouteA1EC0F60\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"vpcPublicSubnet2RouteTableEB40D4CB\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"vpcIGWE57CBDCA\"}}, \"DependsOn\": [\"vpcVPCGW7984C166\"]}, \"vpcPrivateSubnet1Subnet934893E8\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"vpcA2121C38\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"mesh-stack/vpc/PrivateSubnet1\"}]}}, \"vpcPrivateSubnet1RouteTableB41A48CC\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"vpcA2121C38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"mesh-stack/vpc/PrivateSubnet1\"}]}}, \"vpcPrivateSubnet1RouteTableAssociation67945127\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"vpcPrivateSubnet1RouteTableB41A48CC\"}, \"SubnetId\": {\"Ref\": \"vpcPrivateSubnet1Subnet934893E8\"}}}, \"vpcPrivateSubnet1DefaultRoute1AA8E2E5\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"vpcPrivateSubnet1RouteTableB41A48CC\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"vpcPublicSubnet1NATGateway9C16659E\"}}}, \"vpcPrivateSubnet2Subnet7031C2BA\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"vpcA2121C38\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"mesh-stack/vpc/PrivateSubnet2\"}]}}, \"vpcPrivateSubnet2RouteTable7280F23E\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"vpcA2121C38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"mesh-stack/vpc/PrivateSubnet2\"}]}}, \"vpcPrivateSubnet2RouteTableAssociation007E94D3\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"vpcPrivateSubnet2RouteTable7280F23E\"}, \"SubnetId\": {\"Ref\": \"vpcPrivateSubnet2Subnet7031C2BA\"}}}, \"vpcPrivateSubnet2DefaultRouteB0E07F99\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"vpcPrivateSubnet2RouteTable7280F23E\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"vpcPublicSubnet1NATGateway9C16659E\"}}}, \"vpcIGWE57CBDCA\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"mesh-stack/vpc\"}]}}, \"vpcVPCGW7984C166\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"vpcA2121C38\"}, \"InternetGatewayId\": {\"Ref\": \"vpcIGWE57CBDCA\"}}}, \"testnamespace01FA2CAF\": {\"Type\": \"AWS::ServiceDiscovery::PrivateDnsNamespace\", \"Properties\": {\"Name\": \"domain.local\", \"Vpc\": {\"Ref\": \"vpcA2121C38\"}}}, \"meshACDFE68E\": {\"Type\": \"AWS::AppMesh::Mesh\", \"Properties\": {\"MeshName\": \"meshstackmesh680D3CEB\", \"Spec\": {}}}, \"meshrouter81B8087E\": {\"Type\": \"AWS::AppMesh::VirtualRouter\", \"Properties\": {\"MeshName\": {\"Fn::GetAtt\": [\"meshACDFE68E\", \"MeshName\"]}, \"Spec\": {\"Listeners\": [{\"PortMapping\": {\"Port\": 8080, \"Protocol\": \"http\"}}]}, \"VirtualRouterName\": \"meshstackmeshrouter2FE6E358\"}}, \"meshrouterroute118BAC45E\": {\"Type\": \"AWS::AppMesh::Route\", \"Properties\": {\"MeshName\": {\"Fn::GetAtt\": [\"meshACDFE68E\", \"MeshName\"]}, \"Spec\": {\"HttpRoute\": {\"Action\": {\"WeightedTargets\": [{\"VirtualNode\": {\"Fn::GetAtt\": [\"meshnode726C787D\", \"VirtualNodeName\"]}, \"Weight\": 50}]}, \"Match\": {\"Prefix\": \"/\"}, \"Timeout\": {\"Idle\": {\"Unit\": \"ms\", \"Value\": 10000}, \"PerRequest\": {\"Unit\": \"ms\", \"Value\": 10000}}}}, \"VirtualRouterName\": {\"Fn::GetAtt\": [\"meshrouter81B8087E\", \"VirtualRouterName\"]}, \"RouteName\": \"route-1\"}}, \"meshrouterroute2486D9DEF\": {\"Type\": \"AWS::AppMesh::Route\", \"Properties\": {\"MeshName\": {\"Fn::GetAtt\": [\"meshACDFE68E\", \"MeshName\"]}, \"Spec\": {\"HttpRoute\": {\"Action\": {\"WeightedTargets\": [{\"VirtualNode\": {\"Fn::GetAtt\": [\"meshnode2092BA426\", \"VirtualNodeName\"]}, \"Weight\": 30}]}, \"Match\": {\"Prefix\": \"/path2\"}, \"Timeout\": {\"Idle\": {\"Unit\": \"ms\", \"Value\": 11000}, \"PerRequest\": {\"Unit\": \"ms\", \"Value\": 11000}}}}, \"VirtualRouterName\": {\"Fn::GetAtt\": [\"meshrouter81B8087E\", \"VirtualRouterName\"]}, \"RouteName\": \"route-2\"}}, \"meshrouterroute3BD0FA22F\": {\"Type\": \"AWS::AppMesh::Route\", \"Properties\": {\"MeshName\": {\"Fn::GetAtt\": [\"meshACDFE68E\", \"MeshName\"]}, \"Spec\": {\"TcpRoute\": {\"Action\": {\"WeightedTargets\": [{\"VirtualNode\": {\"Fn::GetAtt\": [\"meshnode3D2A19CF2\", \"VirtualNodeName\"]}, \"Weight\": 20}]}, \"Timeout\": {\"Idle\": {\"Unit\": \"ms\", \"Value\": 12000}}}}, \"VirtualRouterName\": {\"Fn::GetAtt\": [\"meshrouter81B8087E\", \"VirtualRouterName\"]}, \"RouteName\": \"route-3\"}}, \"meshrouterroute417D3F5B5\": {\"Type\": \"AWS::AppMesh::Route\", \"Properties\": {\"MeshName\": {\"Fn::GetAtt\": [\"meshACDFE68E\", \"MeshName\"]}, \"Spec\": {\"GrpcRoute\": {\"Action\": {\"WeightedTargets\": [{\"VirtualNode\": {\"Fn::GetAtt\": [\"meshnode4AE87F692\", \"VirtualNodeName\"]}, \"Weight\": 20}]}, \"Match\": {\"ServiceName\": \"test\"}, \"Timeout\": {\"Idle\": {\"Unit\": \"ms\", \"Value\": 12000}}}}, \"VirtualRouterName\": {\"Fn::GetAtt\": [\"meshrouter81B8087E\", \"VirtualRouterName\"]}, \"RouteName\": \"route-4\"}}, \"meshrouterroutematchingACC12F04\": {\"Type\": \"AWS::AppMesh::Route\", \"Properties\": {\"MeshName\": {\"Fn::GetAtt\": [\"meshACDFE68E\", \"MeshName\"]}, \"Spec\": {\"Http2Route\": {\"Action\": {\"WeightedTargets\": [{\"VirtualNode\": {\"Fn::GetAtt\": [\"meshnode3D2A19CF2\", \"VirtualNodeName\"]}, \"Weight\": 1}]}, \"Match\": {\"Headers\": [{\"Invert\": false, \"Match\": {\"Exact\": \"application/json\"}, \"Name\": \"Content-Type\"}, {\"Invert\": false, \"Match\": {\"Prefix\": \"application/json\"}, \"Name\": \"Content-Type\"}, {\"Invert\": false, \"Match\": {\"Suffix\": \"application/json\"}, \"Name\": \"Content-Type\"}, {\"Invert\": false, \"Match\": {\"Regex\": \"application/.*\"}, \"Name\": \"Content-Type\"}, {\"Invert\": false, \"Match\": {\"Range\": {\"End\": 5, \"Start\": 1}}, \"Name\": \"Content-Type\"}, {\"Invert\": true, \"Match\": {\"Exact\": \"application/json\"}, \"Name\": \"Content-Type\"}, {\"Invert\": true, \"Match\": {\"Prefix\": \"application/json\"}, \"Name\": \"Content-Type\"}, {\"Invert\": true, \"Match\": {\"Suffix\": \"application/json\"}, \"Name\": \"Content-Type\"}, {\"Invert\": true, \"Match\": {\"Regex\": \"application/.*\"}, \"Name\": \"Content-Type\"}, {\"Invert\": true, \"Match\": {\"Range\": {\"End\": 5, \"Start\": 1}}, \"Name\": \"Content-Type\"}], \"Method\": \"POST\", \"Prefix\": \"/\", \"Scheme\": \"https\"}}}, \"VirtualRouterName\": {\"Fn::GetAtt\": [\"meshrouter81B8087E\", \"VirtualRouterName\"]}, \"RouteName\": \"route-matching\"}}, \"meshrouterroutehttp2retryCC41345F\": {\"Type\": \"AWS::AppMesh::Route\", \"Properties\": {\"MeshName\": {\"Fn::GetAtt\": [\"meshACDFE68E\", \"MeshName\"]}, \"Spec\": {\"Http2Route\": {\"Action\": {\"WeightedTargets\": [{\"VirtualNode\": {\"Fn::GetAtt\": [\"meshnode3D2A19CF2\", \"VirtualNodeName\"]}, \"Weight\": 1}]}, \"Match\": {\"Prefix\": \"/\"}, \"RetryPolicy\": {\"HttpRetryEvents\": [\"client-error\"], \"MaxRetries\": 5, \"PerRetryTimeout\": {\"Unit\": \"ms\", \"Value\": 1000}, \"TcpRetryEvents\": [\"connection-error\"]}}}, \"VirtualRouterName\": {\"Fn::GetAtt\": [\"meshrouter81B8087E\", \"VirtualRouterName\"]}, \"RouteName\": \"route-http2-retry\"}}, \"meshrouterroute53F46B0FE\": {\"Type\": \"AWS::AppMesh::Route\", \"Properties\": {\"MeshName\": {\"Fn::GetAtt\": [\"meshACDFE68E\", \"MeshName\"]}, \"Spec\": {\"Http2Route\": {\"Action\": {\"WeightedTargets\": [{\"VirtualNode\": {\"Fn::GetAtt\": [\"meshnode2092BA426\", \"VirtualNodeName\"]}, \"Weight\": 1}]}, \"Match\": {\"Prefix\": \"/\"}}, \"Priority\": 10}, \"VirtualRouterName\": {\"Fn::GetAtt\": [\"meshrouter81B8087E\", \"VirtualRouterName\"]}, \"RouteName\": \"route-5\"}}, \"meshrouterroutegrpcretry9BEB798A\": {\"Type\": \"AWS::AppMesh::Route\", \"Properties\": {\"MeshName\": {\"Fn::GetAtt\": [\"meshACDFE68E\", \"MeshName\"]}, \"Spec\": {\"GrpcRoute\": {\"Action\": {\"WeightedTargets\": [{\"VirtualNode\": {\"Fn::GetAtt\": [\"meshnode3D2A19CF2\", \"VirtualNodeName\"]}, \"Weight\": 1}]}, \"Match\": {\"ServiceName\": \"servicename\"}, \"RetryPolicy\": {\"GrpcRetryEvents\": [\"deadline-exceeded\"], \"HttpRetryEvents\": [\"client-error\"], \"MaxRetries\": 5, \"PerRetryTimeout\": {\"Unit\": \"ms\", \"Value\": 1000}, \"TcpRetryEvents\": [\"connection-error\"]}}}, \"VirtualRouterName\": {\"Fn::GetAtt\": [\"meshrouter81B8087E\", \"VirtualRouterName\"]}, \"RouteName\": \"route-grpc-retry\"}}, \"meshrouterroute699804AE1\": {\"Type\": \"AWS::AppMesh::Route\", \"Properties\": {\"MeshName\": {\"Fn::GetAtt\": [\"meshACDFE68E\", \"MeshName\"]}, \"Spec\": {\"Http2Route\": {\"Action\": {\"WeightedTargets\": [{\"VirtualNode\": {\"Fn::GetAtt\": [\"meshnode2092BA426\", \"VirtualNodeName\"]}, \"Weight\": 30}]}, \"Match\": {\"Path\": {\"Regex\": \"regex\"}, \"QueryParameters\": [{\"Match\": {\"Exact\": \"value\"}, \"Name\": \"query-field\"}]}}}, \"VirtualRouterName\": {\"Fn::GetAtt\": [\"meshrouter81B8087E\", \"VirtualRouterName\"]}, \"RouteName\": \"route-6\"}}, \"meshrouterroute76C21E6E7\": {\"Type\": \"AWS::AppMesh::Route\", \"Properties\": {\"MeshName\": {\"Fn::GetAtt\": [\"meshACDFE68E\", \"MeshName\"]}, \"Spec\": {\"GrpcRoute\": {\"Action\": {\"WeightedTargets\": [{\"VirtualNode\": {\"Fn::GetAtt\": [\"meshnode4AE87F692\", \"VirtualNodeName\"]}, \"Weight\": 20}]}, \"Match\": {\"Metadata\": [{\"Invert\": false, \"Match\": {\"Exact\": \"application/json\"}, \"Name\": \"Content-Type\"}], \"MethodName\": \"test-method\", \"ServiceName\": \"test-service\"}}}, \"VirtualRouterName\": {\"Fn::GetAtt\": [\"meshrouter81B8087E\", \"VirtualRouterName\"]}, \"RouteName\": \"route-7\"}}, \"meshnode726C787D\": {\"Type\": \"AWS::AppMesh::VirtualNode\", \"Properties\": {\"MeshName\": {\"Fn::GetAtt\": [\"meshACDFE68E\", \"MeshName\"]}, \"Spec\": {\"Backends\": [{\"VirtualService\": {\"VirtualServiceName\": \"service1.domain.local\"}}, {\"VirtualService\": {\"VirtualServiceName\": \"service2.domain.local\"}}], \"Listeners\": [{\"HealthCheck\": {\"HealthyThreshold\": 3, \"IntervalMillis\": 5000, \"Path\": \"/check-path\", \"Port\": 8080, \"Protocol\": \"http\", \"TimeoutMillis\": 2000, \"UnhealthyThreshold\": 2}, \"PortMapping\": {\"Port\": 8080, \"Protocol\": \"http\"}}], \"ServiceDiscovery\": {\"DNS\": {\"Hostname\": \"node1.domain.local\", \"IpPreference\": \"IPv4_ONLY\"}}}, \"VirtualNodeName\": \"meshstackmeshnode61AD3D23\"}}, \"meshnode2092BA426\": {\"Type\": \"AWS::AppMesh::VirtualNode\", \"Properties\": {\"MeshName\": {\"Fn::GetAtt\": [\"meshACDFE68E\", \"MeshName\"]}, \"Spec\": {\"BackendDefaults\": {\"ClientPolicy\": {\"TLS\": {\"Validation\": {\"Trust\": {\"File\": {\"CertificateChain\": \"path/to/cert\"}}}}}}, \"Backends\": [{\"VirtualService\": {\"VirtualServiceName\": \"service3.domain.local\"}}], \"Listeners\": [{\"HealthCheck\": {\"HealthyThreshold\": 3, \"IntervalMillis\": 5000, \"Path\": \"/check-path2\", \"Port\": 8080, \"Protocol\": \"http\", \"TimeoutMillis\": 2000, \"UnhealthyThreshold\": 2}, \"PortMapping\": {\"Port\": 8080, \"Protocol\": \"http\"}}], \"ServiceDiscovery\": {\"DNS\": {\"Hostname\": \"node2.domain.local\"}}}, \"VirtualNodeName\": \"meshstackmeshnode2F1F28441\"}}, \"meshnode3D2A19CF2\": {\"Type\": \"AWS::AppMesh::VirtualNode\", \"Properties\": {\"MeshName\": {\"Fn::GetAtt\": [\"meshACDFE68E\", \"MeshName\"]}, \"Spec\": {\"BackendDefaults\": {\"ClientPolicy\": {\"TLS\": {\"Validation\": {\"Trust\": {\"File\": {\"CertificateChain\": \"path-to-certificate\"}}}}}}, \"Listeners\": [{\"HealthCheck\": {\"HealthyThreshold\": 3, \"IntervalMillis\": 5000, \"Path\": \"/check-path3\", \"Port\": 8080, \"Protocol\": \"http\", \"TimeoutMillis\": 2000, \"UnhealthyThreshold\": 2}, \"PortMapping\": {\"Port\": 8080, \"Protocol\": \"http\"}}], \"Logging\": {\"AccessLog\": {\"File\": {\"Format\": {\"Text\": \"test_pattern\"}, \"Path\": \"/dev/stdout\"}}}, \"ServiceDiscovery\": {\"DNS\": {\"Hostname\": \"node3.domain.local\"}}}, \"VirtualNodeName\": \"meshstackmeshnode3C5835BCB\"}}, \"meshnode4AE87F692\": {\"Type\": \"AWS::AppMesh::VirtualNode\", \"Properties\": {\"MeshName\": {\"Fn::GetAtt\": [\"meshACDFE68E\", \"MeshName\"]}, \"Spec\": {\"BackendDefaults\": {\"ClientPolicy\": {\"TLS\": {\"Certificate\": {\"File\": {\"CertificateChain\": \"path/to/certChain\", \"PrivateKey\": \"path/to/privateKey\"}}, \"Validation\": {\"SubjectAlternativeNames\": {\"Match\": {\"Exact\": [\"mymesh.local\"]}}, \"Trust\": {\"File\": {\"CertificateChain\": \"path-to-certificate\"}}}}}}, \"Backends\": [{\"VirtualService\": {\"VirtualServiceName\": \"service4.domain.local\"}}], \"Listeners\": [{\"HealthCheck\": {\"HealthyThreshold\": 3, \"IntervalMillis\": 5000, \"Path\": \"/check-path3\", \"Port\": 8080, \"Protocol\": \"http\", \"TimeoutMillis\": 2000, \"UnhealthyThreshold\": 2}, \"PortMapping\": {\"Port\": 8080, \"Protocol\": \"http\"}, \"TLS\": {\"Certificate\": {\"SDS\": {\"SecretName\": \"spiffe://domain.local/backend-service\"}}, \"Mode\": \"STRICT\", \"Validation\": {\"SubjectAlternativeNames\": {\"Match\": {\"Exact\": [\"client.domain.local\"]}}, \"Trust\": {\"SDS\": {\"SecretName\": \"spiffe://domain.local\"}}}}}], \"Logging\": {\"AccessLog\": {\"File\": {\"Format\": {\"Json\": [{\"Key\": \"testKey1\", \"Value\": \"testValue1\"}, {\"Key\": \"testKey2\", \"Value\": \"testValue2\"}]}, \"Path\": \"/dev/stdout\"}}}, \"ServiceDiscovery\": {\"DNS\": {\"Hostname\": \"node4.domain.local\", \"ResponseType\": \"ENDPOINTS\"}}}, \"VirtualNodeName\": \"meshstackmeshnode404B014E7\"}}, \"meshgateway1B02387E8\": {\"Type\": \"AWS::AppMesh::VirtualGateway\", \"Properties\": {\"MeshName\": {\"Fn::GetAtt\": [\"meshACDFE68E\", \"MeshName\"]}, \"Spec\": {\"Listeners\": [{\"PortMapping\": {\"Port\": 8080, \"Protocol\": \"http\"}}], \"Logging\": {\"AccessLog\": {\"File\": {\"Path\": \"/dev/stdout\"}}}}, \"VirtualGatewayName\": \"gateway1\"}}, \"meshgateway1gateway1routehttpE8D6F433\": {\"Type\": \"AWS::AppMesh::GatewayRoute\", \"Properties\": {\"MeshName\": {\"Fn::GetAtt\": [\"meshACDFE68E\", \"MeshName\"]}, \"Spec\": {\"HttpRoute\": {\"Action\": {\"Target\": {\"VirtualService\": {\"VirtualServiceName\": {\"Fn::GetAtt\": [\"service6D174F83\", \"VirtualServiceName\"]}}}}, \"Match\": {\"Prefix\": \"/\"}}}, \"VirtualGatewayName\": {\"Fn::GetAtt\": [\"meshgateway1B02387E8\", \"VirtualGatewayName\"]}, \"GatewayRouteName\": \"meshstackmeshgateway1gateway1routehttpBA921D42\"}}, \"meshgateway1gateway1routehttp2B672D43F\": {\"Type\": \"AWS::AppMesh::GatewayRoute\", \"Properties\": {\"MeshName\": {\"Fn::GetAtt\": [\"meshACDFE68E\", \"MeshName\"]}, \"Spec\": {\"HttpRoute\": {\"Action\": {\"Rewrite\": {\"Hostname\": {\"DefaultTargetHostname\": \"ENABLED\"}, \"Prefix\": {\"DefaultPrefix\": \"DISABLED\"}}, \"Target\": {\"VirtualService\": {\"VirtualServiceName\": {\"Fn::GetAtt\": [\"service6D174F83\", \"VirtualServiceName\"]}}}}, \"Match\": {\"Headers\": [{\"Invert\": false, \"Match\": {\"Exact\": \"application/json\"}, \"Name\": \"Content-Type\"}, {\"Invert\": false, \"Match\": {\"Prefix\": \"application/json\"}, \"Name\": \"Content-Type\"}, {\"Invert\": false, \"Match\": {\"Suffix\": \"application/json\"}, \"Name\": \"Content-Type\"}, {\"Invert\": false, \"Match\": {\"Regex\": \"application/.*\"}, \"Name\": \"Content-Type\"}, {\"Invert\": false, \"Match\": {\"Range\": {\"End\": 5, \"Start\": 1}}, \"Name\": \"Content-Type\"}, {\"Invert\": true, \"Match\": {\"Exact\": \"application/json\"}, \"Name\": \"Content-Type\"}, {\"Invert\": true, \"Match\": {\"Prefix\": \"application/json\"}, \"Name\": \"Content-Type\"}, {\"Invert\": true, \"Match\": {\"Suffix\": \"application/json\"}, \"Name\": \"Content-Type\"}, {\"Invert\": true, \"Match\": {\"Regex\": \"application/.*\"}, \"Name\": \"Content-Type\"}, {\"Invert\": true, \"Match\": {\"Range\": {\"End\": 5, \"Start\": 1}}, \"Name\": \"Content-Type\"}], \"Hostname\": {\"Exact\": \"example.com\"}, \"Method\": \"POST\", \"Port\": 8080, \"Prefix\": \"/\", \"QueryParameters\": [{\"Match\": {\"Exact\": \"value\"}, \"Name\": \"query-field\"}]}}}, \"VirtualGatewayName\": {\"Fn::GetAtt\": [\"meshgateway1B02387E8\", \"VirtualGatewayName\"]}, \"GatewayRouteName\": \"meshstackmeshgateway1gateway1routehttp27F17263B\"}}, \"meshgateway1gateway1routehttp2FD69C306\": {\"Type\": \"AWS::AppMesh::GatewayRoute\", \"Properties\": {\"MeshName\": {\"Fn::GetAtt\": [\"meshACDFE68E\", \"MeshName\"]}, \"Spec\": {\"Http2Route\": {\"Action\": {\"Target\": {\"VirtualService\": {\"VirtualServiceName\": {\"Fn::GetAtt\": [\"service6D174F83\", \"VirtualServiceName\"]}}}}, \"Match\": {\"Prefix\": \"/\"}}}, \"VirtualGatewayName\": {\"Fn::GetAtt\": [\"meshgateway1B02387E8\", \"VirtualGatewayName\"]}, \"GatewayRouteName\": \"meshstackmeshgateway1gateway1routehttp255781963\"}}, \"meshgateway1gateway1routehttp2225001508\": {\"Type\": \"AWS::AppMesh::GatewayRoute\", \"Properties\": {\"MeshName\": {\"Fn::GetAtt\": [\"meshACDFE68E\", \"MeshName\"]}, \"Spec\": {\"Http2Route\": {\"Action\": {\"Rewrite\": {\"Path\": {\"Exact\": \"/rewrittenpath\"}}, \"Target\": {\"VirtualService\": {\"VirtualServiceName\": {\"Fn::GetAtt\": [\"service6D174F83\", \"VirtualServiceName\"]}}}}, \"Match\": {\"Path\": {\"Exact\": \"/exact\"}}}}, \"VirtualGatewayName\": {\"Fn::GetAtt\": [\"meshgateway1B02387E8\", \"VirtualGatewayName\"]}, \"GatewayRouteName\": \"meshstackmeshgateway1gateway1routehttp22BD49AE9D\"}}, \"meshgateway1gateway1routehttp2376EB99D6\": {\"Type\": \"AWS::AppMesh::GatewayRoute\", \"Properties\": {\"MeshName\": {\"Fn::GetAtt\": [\"meshACDFE68E\", \"MeshName\"]}, \"Spec\": {\"Http2Route\": {\"Action\": {\"Target\": {\"VirtualService\": {\"VirtualServiceName\": {\"Fn::GetAtt\": [\"service6D174F83\", \"VirtualServiceName\"]}}}}, \"Match\": {\"Path\": {\"Regex\": \"regex\"}}}}, \"VirtualGatewayName\": {\"Fn::GetAtt\": [\"meshgateway1B02387E8\", \"VirtualGatewayName\"]}, \"GatewayRouteName\": \"meshstackmeshgateway1gateway1routehttp23E44F5774\"}}, \"meshgateway1gateway1routegrpc76486062\": {\"Type\": \"AWS::AppMesh::GatewayRoute\", \"Properties\": {\"MeshName\": {\"Fn::GetAtt\": [\"meshACDFE68E\", \"MeshName\"]}, \"Spec\": {\"GrpcRoute\": {\"Action\": {\"Target\": {\"VirtualService\": {\"VirtualServiceName\": {\"Fn::GetAtt\": [\"service6D174F83\", \"VirtualServiceName\"]}}}}, \"Match\": {\"ServiceName\": {\"Fn::GetAtt\": [\"service6D174F83\", \"VirtualServiceName\"]}}}}, \"VirtualGatewayName\": {\"Fn::GetAtt\": [\"meshgateway1B02387E8\", \"VirtualGatewayName\"]}, \"GatewayRouteName\": \"meshstackmeshgateway1gateway1routegrpcCD4D891D\"}}, \"meshgateway1gateway1routegrpc2FAC1FF36\": {\"Type\": \"AWS::AppMesh::GatewayRoute\", \"Properties\": {\"MeshName\": {\"Fn::GetAtt\": [\"meshACDFE68E\", \"MeshName\"]}, \"Spec\": {\"GrpcRoute\": {\"Action\": {\"Rewrite\": {\"Hostname\": {\"DefaultTargetHostname\": \"DISABLED\"}}, \"Target\": {\"VirtualService\": {\"VirtualServiceName\": {\"Fn::GetAtt\": [\"service6D174F83\", \"VirtualServiceName\"]}}}}, \"Match\": {\"Hostname\": {\"Exact\": \"example.com\"}, \"Metadata\": [{\"Invert\": false, \"Match\": {\"Exact\": \"application/json\"}, \"Name\": \"Content-Type\"}, {\"Invert\": true, \"Match\": {\"Exact\": \"text/html\"}, \"Name\": \"Content-Type\"}, {\"Invert\": false, \"Match\": {\"Prefix\": \"application/\"}, \"Name\": \"Content-Type\"}, {\"Invert\": true, \"Match\": {\"Prefix\": \"text/\"}, \"Name\": \"Content-Type\"}, {\"Invert\": false, \"Match\": {\"Suffix\": \"/json\"}, \"Name\": \"Content-Type\"}, {\"Invert\": true, \"Match\": {\"Suffix\": \"/json+foobar\"}, \"Name\": \"Content-Type\"}, {\"Invert\": false, \"Match\": {\"Regex\": \"application/.*\"}, \"Name\": \"Content-Type\"}, {\"Invert\": true, \"Match\": {\"Regex\": \"text/.*\"}, \"Name\": \"Content-Type\"}, {\"Invert\": false, \"Match\": {\"Range\": {\"End\": 5, \"Start\": 1}}, \"Name\": \"Max-Forward\"}, {\"Invert\": true, \"Match\": {\"Range\": {\"End\": 5, \"Start\": 1}}, \"Name\": \"Max-Forward\"}]}}}, \"VirtualGatewayName\": {\"Fn::GetAtt\": [\"meshgateway1B02387E8\", \"VirtualGatewayName\"]}, \"GatewayRouteName\": \"meshstackmeshgateway1gateway1routegrpc2AE8379FD\"}}, \"meshwithpreferenceCC9682C9\": {\"Type\": \"AWS::AppMesh::Mesh\", \"Properties\": {\"MeshName\": \"meshstackmeshwithpreference13C624E1\", \"Spec\": {\"ServiceDiscovery\": {\"IpPreference\": \"IPv4_ONLY\"}}}}, \"service6D174F83\": {\"Type\": \"AWS::AppMesh::VirtualService\", \"Properties\": {\"MeshName\": {\"Fn::GetAtt\": [\"meshACDFE68E\", \"MeshName\"]}, \"Spec\": {\"Provider\": {\"VirtualRouter\": {\"VirtualRouterName\": {\"Fn::GetAtt\": [\"meshrouter81B8087E\", \"VirtualRouterName\"]}}}}, \"VirtualServiceName\": \"service1.domain.local\"}}, \"service27C65CF7D\": {\"Type\": \"AWS::AppMesh::VirtualService\", \"Properties\": {\"MeshName\": {\"Fn::GetAtt\": [\"meshACDFE68E\", \"MeshName\"]}, \"Spec\": {}, \"VirtualServiceName\": \"service2.domain.local\"}}, \"service3859EB104\": {\"Type\": \"AWS::AppMesh::VirtualService\", \"Properties\": {\"MeshName\": {\"Fn::GetAtt\": [\"meshACDFE68E\", \"MeshName\"]}, \"Spec\": {}, \"VirtualServiceName\": \"service3.domain.local\"}}, \"service4983B61EE\": {\"Type\": \"AWS::AppMesh::VirtualService\", \"Properties\": {\"MeshName\": {\"Fn::GetAtt\": [\"meshACDFE68E\", \"MeshName\"]}, \"Spec\": {}, \"VirtualServiceName\": \"service4.domain.local\"}}, \"gateway2BCE5C5E0\": {\"Type\": \"AWS::AppMesh::VirtualGateway\", \"Properties\": {\"MeshName\": {\"Fn::GetAtt\": [\"meshACDFE68E\", \"MeshName\"]}, \"Spec\": {\"Listeners\": [{\"HealthCheck\": {\"HealthyThreshold\": 2, \"IntervalMillis\": 10000, \"Path\": \"/\", \"Port\": 443, \"Protocol\": \"http\", \"TimeoutMillis\": 2000, \"UnhealthyThreshold\": 2}, \"PortMapping\": {\"Port\": 443, \"Protocol\": \"http\"}, \"TLS\": {\"Certificate\": {\"File\": {\"CertificateChain\": \"path/to/certChain\", \"PrivateKey\": \"path/to/privateKey\"}}, \"Mode\": \"STRICT\"}}]}, \"VirtualGatewayName\": \"meshstackgateway2BEC62D7C\"}}, \"gateway3F9F16554\": {\"Type\": \"AWS::AppMesh::VirtualGateway\", \"Properties\": {\"MeshName\": {\"Fn::GetAtt\": [\"meshACDFE68E\", \"MeshName\"]}, \"Spec\": {\"BackendDefaults\": {\"ClientPolicy\": {\"TLS\": {\"Certificate\": {\"SDS\": {\"SecretName\": \"secret_validation\"}}, \"Validation\": {\"Trust\": {\"File\": {\"CertificateChain\": \"path/to/certChain\"}}}}}}, \"Listeners\": [{\"HealthCheck\": {\"HealthyThreshold\": 2, \"IntervalMillis\": 10000, \"Path\": \"/\", \"Port\": 443, \"Protocol\": \"http\", \"TimeoutMillis\": 2000, \"UnhealthyThreshold\": 2}, \"PortMapping\": {\"Port\": 443, \"Protocol\": \"http\"}, \"TLS\": {\"Certificate\": {\"SDS\": {\"SecretName\": \"secret_certificate\"}}, \"Mode\": \"STRICT\", \"Validation\": {\"Trust\": {\"File\": {\"CertificateChain\": \"path/to/certChain\"}}}}}]}, \"VirtualGatewayName\": \"meshstackgateway34EC5ED00\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as cloudmap from 'aws-cdk-lib/aws-servicediscovery';\nimport * as cdk from 'aws-cdk-lib';\nimport * as appmesh from 'aws-cdk-lib/aws-appmesh';\n\nexport const app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'mesh-stack', {});\n\nconst vpc = new ec2.Vpc(stack, 'vpc', {\n  restrictDefaultSecurityGroup: false,\n  natGateways: 1,\n});\n\nconst namespace = new cloudmap.PrivateDnsNamespace(stack, 'test-namespace', {\n  vpc,\n  name: 'domain.local',\n});\n\nconst mesh = new appmesh.Mesh(stack, 'mesh');\nnew appmesh.Mesh(stack, 'mesh-with-preference', {\n  serviceDiscovery: {\n    ipPreference: appmesh.IpPreference.IPV4_ONLY,\n  },\n});\nconst router = mesh.addVirtualRouter('router', {\n  listeners: [\n    appmesh.VirtualRouterListener.http(),\n  ],\n});\n\nconst virtualService = new appmesh.VirtualService(stack, 'service', {\n  virtualServiceProvider: appmesh.VirtualServiceProvider.virtualRouter(router),\n  virtualServiceName: 'service1.domain.local',\n});\n\nconst node = mesh.addVirtualNode('node', {\n  serviceDiscovery: appmesh.ServiceDiscovery.dns(`node1.${namespace.namespaceName}`, undefined, appmesh.IpPreference.IPV4_ONLY),\n  listeners: [appmesh.VirtualNodeListener.http({\n    healthCheck: appmesh.HealthCheck.http({\n      healthyThreshold: 3,\n      path: '/check-path',\n    }),\n  })],\n  backends: [appmesh.Backend.virtualService(virtualService)],\n});\n\nnode.addBackend(appmesh.Backend.virtualService(\n  new appmesh.VirtualService(stack, 'service-2', {\n    virtualServiceName: 'service2.domain.local',\n    virtualServiceProvider: appmesh.VirtualServiceProvider.none(mesh),\n  }),\n));\n\nrouter.addRoute('route-1', {\n  routeSpec: appmesh.RouteSpec.http({\n    weightedTargets: [\n      {\n        virtualNode: node,\n        weight: 50,\n      },\n    ],\n    match: {\n      path: appmesh.HttpRoutePathMatch.startsWith('/'),\n    },\n    timeout: {\n      idle: cdk.Duration.seconds(10),\n      perRequest: cdk.Duration.seconds(10),\n    },\n  }),\n});\n\nconst node2 = mesh.addVirtualNode('node2', {\n  serviceDiscovery: appmesh.ServiceDiscovery.dns(`node2.${namespace.namespaceName}`),\n  listeners: [appmesh.VirtualNodeListener.http({\n    healthCheck: appmesh.HealthCheck.http({\n      healthyThreshold: 3,\n      interval: cdk.Duration.seconds(5),\n      path: '/check-path2',\n      timeout: cdk.Duration.seconds(2),\n      unhealthyThreshold: 2,\n    }),\n  })],\n  backendDefaults: {\n    tlsClientPolicy: {\n      validation: {\n        trust: appmesh.TlsValidationTrust.file('path/to/cert'),\n      },\n    },\n  },\n  backends: [appmesh.Backend.virtualService(\n    new appmesh.VirtualService(stack, 'service-3', {\n      virtualServiceName: 'service3.domain.local',\n      virtualServiceProvider: appmesh.VirtualServiceProvider.none(mesh),\n    }),\n  )],\n});\n\nconst node3 = mesh.addVirtualNode('node3', {\n  serviceDiscovery: appmesh.ServiceDiscovery.dns(`node3.${namespace.namespaceName}`),\n  listeners: [appmesh.VirtualNodeListener.http({\n    healthCheck: appmesh.HealthCheck.http({\n      healthyThreshold: 3,\n      interval: cdk.Duration.seconds(5),\n      path: '/check-path3',\n      timeout: cdk.Duration.seconds(2),\n      unhealthyThreshold: 2,\n    }),\n  })],\n  backendDefaults: {\n    tlsClientPolicy: {\n      validation: {\n        trust: appmesh.TlsValidationTrust.file('path-to-certificate'),\n      },\n    },\n  },\n  accessLog: appmesh.AccessLog.fromFilePath('/dev/stdout', appmesh.LoggingFormat.fromText('test_pattern')),\n});\n\nconst node4 = mesh.addVirtualNode('node4', {\n  serviceDiscovery: appmesh.ServiceDiscovery.dns(`node4.${namespace.namespaceName}`, appmesh.DnsResponseType.ENDPOINTS),\n  listeners: [appmesh.VirtualNodeListener.http({\n    tls: {\n      mode: appmesh.TlsMode.STRICT,\n      certificate: appmesh.TlsCertificate.sds('spiffe://domain.local/backend-service'),\n      mutualTlsValidation: {\n        trust: appmesh.TlsValidationTrust.sds('spiffe://domain.local'),\n        subjectAlternativeNames: appmesh.SubjectAlternativeNames.matchingExactly('client.domain.local'),\n      },\n    },\n    healthCheck: appmesh.HealthCheck.http({\n      healthyThreshold: 3,\n      interval: cdk.Duration.seconds(5),\n      path: '/check-path3',\n      timeout: cdk.Duration.seconds(2),\n      unhealthyThreshold: 2,\n    }),\n  })],\n  backendDefaults: {\n    tlsClientPolicy: {\n      mutualTlsCertificate: appmesh.TlsCertificate.file('path/to/certChain', 'path/to/privateKey'),\n      validation: {\n        subjectAlternativeNames: appmesh.SubjectAlternativeNames.matchingExactly('mymesh.local'),\n        trust: appmesh.TlsValidationTrust.file('path-to-certificate'),\n      },\n    },\n  },\n  accessLog: appmesh.AccessLog.fromFilePath('/dev/stdout',\n    appmesh.LoggingFormat.fromJson(\n      { testKey1: 'testValue1', testKey2: 'testValue2' })),\n});\n\nnode4.addBackend(appmesh.Backend.virtualService(\n  new appmesh.VirtualService(stack, 'service-4', {\n    virtualServiceName: 'service4.domain.local',\n    virtualServiceProvider: appmesh.VirtualServiceProvider.none(mesh),\n  }),\n));\n\nrouter.addRoute('route-2', {\n  routeSpec: appmesh.RouteSpec.http({\n    weightedTargets: [\n      {\n        virtualNode: node2,\n        weight: 30,\n      },\n    ],\n    match: {\n      path: appmesh.HttpRoutePathMatch.startsWith('/path2'),\n    },\n    timeout: {\n      idle: cdk.Duration.seconds(11),\n      perRequest: cdk.Duration.seconds(11),\n    },\n  }),\n});\n\nrouter.addRoute('route-3', {\n  routeSpec: appmesh.RouteSpec.tcp({\n    weightedTargets: [\n      {\n        virtualNode: node3,\n        weight: 20,\n      },\n    ],\n    timeout: {\n      idle: cdk.Duration.seconds(12),\n    },\n  }),\n});\n\nrouter.addRoute('route-4', {\n  routeSpec: appmesh.RouteSpec.grpc({\n    weightedTargets: [\n      {\n        virtualNode: node4,\n        weight: 20,\n      },\n    ],\n    timeout: {\n      idle: cdk.Duration.seconds(12),\n    },\n    match: {\n      serviceName: 'test',\n    },\n  }),\n});\n\nrouter.addRoute('route-matching', {\n  routeSpec: appmesh.RouteSpec.http2({\n    weightedTargets: [{ virtualNode: node3 }],\n    match: {\n      path: appmesh.HttpRoutePathMatch.startsWith('/'),\n      method: appmesh.HttpRouteMethod.POST,\n      protocol: appmesh.HttpRouteProtocol.HTTPS,\n      headers: [\n        appmesh.HeaderMatch.valueIs('Content-Type', 'application/json'),\n        appmesh.HeaderMatch.valueStartsWith('Content-Type', 'application/json'),\n        appmesh.HeaderMatch.valueEndsWith('Content-Type', 'application/json'),\n        appmesh.HeaderMatch.valueMatchesRegex('Content-Type', 'application/.*'),\n        appmesh.HeaderMatch.valuesIsInRange('Content-Type', 1, 5),\n        appmesh.HeaderMatch.valueIsNot('Content-Type', 'application/json'),\n        appmesh.HeaderMatch.valueDoesNotStartWith('Content-Type', 'application/json'),\n        appmesh.HeaderMatch.valueDoesNotEndWith('Content-Type', 'application/json'),\n        appmesh.HeaderMatch.valueDoesNotMatchRegex('Content-Type', 'application/.*'),\n        appmesh.HeaderMatch.valuesIsNotInRange('Content-Type', 1, 5),\n      ],\n    },\n  }),\n});\n\nrouter.addRoute('route-http2-retry', {\n  routeSpec: appmesh.RouteSpec.http2({\n    weightedTargets: [{ virtualNode: node3 }],\n    retryPolicy: {\n      httpRetryEvents: [appmesh.HttpRetryEvent.CLIENT_ERROR],\n      tcpRetryEvents: [appmesh.TcpRetryEvent.CONNECTION_ERROR],\n      retryAttempts: 5,\n      retryTimeout: cdk.Duration.seconds(1),\n    },\n  }),\n});\n\nrouter.addRoute('route-5', {\n  routeSpec: appmesh.RouteSpec.http2({\n    priority: 10,\n    weightedTargets: [{ virtualNode: node2 }],\n  }),\n});\n\nrouter.addRoute('route-grpc-retry', {\n  routeSpec: appmesh.RouteSpec.grpc({\n    weightedTargets: [{ virtualNode: node3 }],\n    match: { serviceName: 'servicename' },\n    retryPolicy: {\n      grpcRetryEvents: [appmesh.GrpcRetryEvent.DEADLINE_EXCEEDED],\n      httpRetryEvents: [appmesh.HttpRetryEvent.CLIENT_ERROR],\n      tcpRetryEvents: [appmesh.TcpRetryEvent.CONNECTION_ERROR],\n      retryAttempts: 5,\n      retryTimeout: cdk.Duration.seconds(1),\n    },\n  }),\n});\n\nrouter.addRoute('route-6', {\n  routeSpec: appmesh.RouteSpec.http2({\n    weightedTargets: [\n      {\n        virtualNode: node2,\n        weight: 30,\n      },\n    ],\n    match: {\n      path: appmesh.HttpRoutePathMatch.regex('regex'),\n      queryParameters: [\n        appmesh.QueryParameterMatch.valueIs('query-field', 'value'),\n      ],\n    },\n  }),\n});\n\nrouter.addRoute('route-7', {\n  routeSpec: appmesh.RouteSpec.grpc({\n    weightedTargets: [\n      {\n        virtualNode: node4,\n        weight: 20,\n      },\n    ],\n    match: {\n      serviceName: 'test-service',\n      methodName: 'test-method',\n      metadata: [\n        appmesh.HeaderMatch.valueIs('Content-Type', 'application/json'),\n      ],\n    },\n  }),\n});\n\nconst gateway = mesh.addVirtualGateway('gateway1', {\n  accessLog: appmesh.AccessLog.fromFilePath('/dev/stdout'),\n  virtualGatewayName: 'gateway1',\n});\n\nnew appmesh.VirtualGateway(stack, 'gateway2', {\n  mesh: mesh,\n  listeners: [appmesh.VirtualGatewayListener.http({\n    port: 443,\n    healthCheck: appmesh.HealthCheck.http({\n      interval: cdk.Duration.seconds(10),\n    }),\n    tls: {\n      mode: appmesh.TlsMode.STRICT,\n      certificate: appmesh.TlsCertificate.file('path/to/certChain', 'path/to/privateKey'),\n    },\n  })],\n});\n\nnew appmesh.VirtualGateway(stack, 'gateway3', {\n  mesh: mesh,\n  listeners: [appmesh.VirtualGatewayListener.http({\n    port: 443,\n    healthCheck: appmesh.HealthCheck.http({\n      interval: cdk.Duration.seconds(10),\n    }),\n    tls: {\n      mode: appmesh.TlsMode.STRICT,\n      certificate: appmesh.TlsCertificate.sds('secret_certificate'),\n      mutualTlsValidation: {\n        trust: appmesh.TlsValidationTrust.file('path/to/certChain'),\n      },\n    },\n  })],\n  backendDefaults: {\n    tlsClientPolicy: {\n      mutualTlsCertificate: appmesh.TlsCertificate.sds('secret_validation'),\n      validation: {\n        trust: appmesh.TlsValidationTrust.file('path/to/certChain'),\n      },\n    },\n  },\n});\n\ngateway.addGatewayRoute('gateway1-route-http', {\n  routeSpec: appmesh.GatewayRouteSpec.http({\n    routeTarget: virtualService,\n  }),\n});\n\ngateway.addGatewayRoute('gateway1-route-http-2', {\n  routeSpec: appmesh.GatewayRouteSpec.http({\n    routeTarget: virtualService,\n    match: {\n      path: appmesh.HttpGatewayRoutePathMatch.startsWith('/', ''),\n      hostname: appmesh.GatewayRouteHostnameMatch.exactly('example.com'),\n      method: appmesh.HttpRouteMethod.POST,\n      headers: [\n        appmesh.HeaderMatch.valueIs('Content-Type', 'application/json'),\n        appmesh.HeaderMatch.valueStartsWith('Content-Type', 'application/json'),\n        appmesh.HeaderMatch.valueEndsWith('Content-Type', 'application/json'),\n        appmesh.HeaderMatch.valueMatchesRegex('Content-Type', 'application/.*'),\n        appmesh.HeaderMatch.valuesIsInRange('Content-Type', 1, 5),\n        appmesh.HeaderMatch.valueIsNot('Content-Type', 'application/json'),\n        appmesh.HeaderMatch.valueDoesNotStartWith('Content-Type', 'application/json'),\n        appmesh.HeaderMatch.valueDoesNotEndWith('Content-Type', 'application/json'),\n        appmesh.HeaderMatch.valueDoesNotMatchRegex('Content-Type', 'application/.*'),\n        appmesh.HeaderMatch.valuesIsNotInRange('Content-Type', 1, 5),\n      ],\n      queryParameters: [\n        appmesh.QueryParameterMatch.valueIs('query-field', 'value'),\n      ],\n      rewriteRequestHostname: true,\n      port: 8080,\n    },\n  }),\n});\n\ngateway.addGatewayRoute('gateway1-route-http2', {\n  routeSpec: appmesh.GatewayRouteSpec.http2({\n    routeTarget: virtualService,\n  }),\n});\n\ngateway.addGatewayRoute('gateway1-route-http2-2', {\n  routeSpec: appmesh.GatewayRouteSpec.http2({\n    routeTarget: virtualService,\n    match: {\n      path: appmesh.HttpGatewayRoutePathMatch.exactly('/exact', '/rewrittenpath'),\n    },\n  }),\n});\n\ngateway.addGatewayRoute('gateway1-route-http2-3', {\n  routeSpec: appmesh.GatewayRouteSpec.http2({\n    routeTarget: virtualService,\n    match: {\n      path: appmesh.HttpGatewayRoutePathMatch.regex('regex'),\n    },\n  }),\n});\n\ngateway.addGatewayRoute('gateway1-route-grpc', {\n  routeSpec: appmesh.GatewayRouteSpec.grpc({\n    routeTarget: virtualService,\n    match: {\n      serviceName: virtualService.virtualServiceName,\n    },\n  }),\n});\n\ngateway.addGatewayRoute('gateway1-route-grpc-2', {\n  routeSpec: appmesh.GatewayRouteSpec.grpc({\n    routeTarget: virtualService,\n    match: {\n      hostname: appmesh.GatewayRouteHostnameMatch.exactly('example.com'),\n      metadata: [\n        appmesh.HeaderMatch.valueIs('Content-Type', 'application/json'),\n        appmesh.HeaderMatch.valueIsNot('Content-Type', 'text/html'),\n        appmesh.HeaderMatch.valueStartsWith('Content-Type', 'application/'),\n        appmesh.HeaderMatch.valueDoesNotStartWith('Content-Type', 'text/'),\n        appmesh.HeaderMatch.valueEndsWith('Content-Type', '/json'),\n        appmesh.HeaderMatch.valueDoesNotEndWith('Content-Type', '/json+foobar'),\n        appmesh.HeaderMatch.valueMatchesRegex('Content-Type', 'application/.*'),\n        appmesh.HeaderMatch.valueDoesNotMatchRegex('Content-Type', 'text/.*'),\n        appmesh.HeaderMatch.valuesIsInRange('Max-Forward', 1, 5),\n        appmesh.HeaderMatch.valuesIsNotInRange('Max-Forward', 1, 5),\n      ],\n      rewriteRequestHostname: false,\n    },\n  }),\n});\n"}
{ "prompt": "{\"Resources\": {\"DummyResourceF3AB250A\": {\"Type\": \"AWS::IAM::User\"}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as path from 'path';\nimport * as iam from 'aws-cdk-lib/aws-iam';\nimport * as cdk from 'aws-cdk-lib';\nimport * as assets from 'aws-cdk-lib/aws-s3-assets';\n\nclass TestStack extends cdk.Stack {\n  constructor(scope: cdk.App, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n\n    // The template must contain at least one resource, so there is this...\n    new iam.User(this, 'DummyResource');\n\n    // Check that the same asset added multiple times is\n    // uploaded and copied.\n    new assets.Asset(this, 'SampleAsset1', {\n      path: path.join(__dirname, 'file-asset.txt'),\n    });\n\n    new assets.Asset(this, 'SampleAsset2', {\n      path: path.join(__dirname, 'file-asset.txt'),\n    });\n  }\n}\n\nconst app = new cdk.App();\nnew TestStack(app, 'aws-cdk-multi-assets');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyUserDC45028B\": {\"Type\": \"AWS::IAM::User\"}, \"MyUserDefaultPolicy7B897426\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":s3:::\", {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"/*\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":s3:::\", {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyUserDefaultPolicy7B897426\", \"Users\": [{\"Ref\": \"MyUserDC45028B\"}]}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as path from 'path';\nimport * as iam from 'aws-cdk-lib/aws-iam';\nimport * as cdk from 'aws-cdk-lib';\nimport * as assets from 'aws-cdk-lib/aws-s3-assets';\n\nclass TestStack extends cdk.Stack {\n  constructor(scope: cdk.App, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n\n    /// !show\n    const asset = new assets.Asset(this, 'SampleAsset', {\n      path: path.join(__dirname, 'sample-asset-directory'),\n    });\n    /// !hide\n\n    const user = new iam.User(this, 'MyUser');\n    asset.grantRead(user);\n  }\n}\n\nconst app = new cdk.App();\nnew TestStack(app, 'aws-cdk-asset-test');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyUserDC45028B\": {\"Type\": \"AWS::IAM::User\"}, \"MyUserDefaultPolicy7B897426\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":s3:::\", {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"/*\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":s3:::\", {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyUserDefaultPolicy7B897426\", \"Users\": [{\"Ref\": \"MyUserDC45028B\"}]}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as path from 'path';\nimport * as iam from 'aws-cdk-lib/aws-iam';\nimport * as cdk from 'aws-cdk-lib';\nimport * as assets from 'aws-cdk-lib/aws-s3-assets';\n\nclass TestStack extends cdk.Stack {\n  constructor(scope: cdk.App, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n\n    /// !show\n    const asset = new assets.Asset(this, 'SampleAsset', {\n      path: path.join(__dirname, 'file-asset.txt'),\n    });\n    /// !hide\n\n    const user = new iam.User(this, 'MyUser');\n    asset.grantRead(user);\n  }\n}\n\nconst app = new cdk.App();\nnew TestStack(app, 'aws-cdk-asset-file-test');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyUserGroupDA7A39B2\": {\"Type\": \"AWS::IAM::Group\"}, \"MyUserGroupDefaultPolicy50C5D742\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":s3:::\", {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"/*\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":s3:::\", {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyUserGroupDefaultPolicy50C5D742\", \"Groups\": [{\"Ref\": \"MyUserGroupDA7A39B2\"}]}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as path from 'path';\nimport * as iam from 'aws-cdk-lib/aws-iam';\nimport * as cdk from 'aws-cdk-lib';\nimport * as assets from 'aws-cdk-lib/aws-s3-assets';\n\nclass TestStack extends cdk.Stack {\n  constructor(scope: cdk.App, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n\n    const asset = new assets.Asset(this, 'MyFile', {\n      path: path.join(__dirname, 'file-asset.txt'),\n    });\n\n    /// !show\n    const group = new iam.Group(this, 'MyUserGroup');\n    asset.grantRead(group);\n    /// !hide\n  }\n}\n\nconst app = new cdk.App();\nnew TestStack(app, 'aws-cdk-asset-refs');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyUserDC45028B\": {\"Type\": \"AWS::IAM::User\"}, \"MyUserDefaultPolicy7B897426\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":s3:::\", {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"/*\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":s3:::\", {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyUserDefaultPolicy7B897426\", \"Users\": [{\"Ref\": \"MyUserDC45028B\"}]}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as path from 'path';\nimport * as iam from 'aws-cdk-lib/aws-iam';\nimport { App, DockerImage, Stack, StackProps } from 'aws-cdk-lib';\nimport { Construct } from 'constructs';\nimport * as assets from 'aws-cdk-lib/aws-s3-assets';\n\nclass TestStack extends Stack {\n  constructor(scope: Construct, id: string, props?: StackProps) {\n    super(scope, id, props);\n\n    /// !show\n    const asset = new assets.Asset(this, 'BundledAsset', {\n      path: path.join(__dirname, 'markdown-asset'), // /asset-input and working directory in the container\n      bundling: {\n        image: DockerImage.fromBuild(path.join(__dirname, 'alpine-markdown')), // Build an image\n        command: [\n          'sh', '-c', `\n            markdown index.md > /asset-output/index.html\n          `,\n        ],\n      },\n    });\n    /// !hide\n\n    const user = new iam.User(this, 'MyUser');\n    asset.grantRead(user);\n  }\n}\n\nconst app = new App();\nnew TestStack(app, 'cdk-integ-assets-bundling');\napp.synth();\n"}
{ "prompt": "{\"Outputs\": {\"S3BucketName\": {\"Value\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}}, \"S3ObjectKey\": {\"Value\": \"6b84b87243a4a01c592d78e1fd3855c4bfef39328cd0a450cc97e81717fea2a2.zip\"}, \"S3HttpURL\": {\"Value\": {\"Fn::Sub\": \"https://s3.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}/6b84b87243a4a01c592d78e1fd3855c4bfef39328cd0a450cc97e81717fea2a2.zip\"}}, \"S3ObjectURL\": {\"Value\": {\"Fn::Sub\": \"s3://cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}/6b84b87243a4a01c592d78e1fd3855c4bfef39328cd0a450cc97e81717fea2a2.zip\"}}}, \"Resources\": {\"MyUserDC45028B\": {\"Type\": \"AWS::IAM::User\"}, \"MyUserDefaultPolicy7B897426\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":s3:::\", {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"/*\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":s3:::\", {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyUserDefaultPolicy7B897426\", \"Users\": [{\"Ref\": \"MyUserDC45028B\"}]}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as path from 'path';\nimport * as iam from 'aws-cdk-lib/aws-iam';\nimport * as cdk from 'aws-cdk-lib';\nimport * as assets from 'aws-cdk-lib/aws-s3-assets';\n\nclass TestStack extends cdk.Stack {\n  constructor(scope: cdk.App, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n\n    /// !show\n    const asset = new assets.Asset(this, 'SampleAsset', {\n      path: path.join(__dirname, 'sample-asset-directory'),\n    });\n\n    new cdk.CfnOutput(this, 'S3BucketName', { value: asset.s3BucketName });\n    new cdk.CfnOutput(this, 'S3ObjectKey', { value: asset.s3ObjectKey });\n    new cdk.CfnOutput(this, 'S3HttpURL', { value: asset.httpUrl });\n    new cdk.CfnOutput(this, 'S3ObjectURL', { value: asset.s3ObjectUrl });\n    /// !hide\n\n    // we need at least one resource\n    asset.grantRead(new iam.User(this, 'MyUser'));\n  }\n}\n\nconst app = new cdk.App();\nnew TestStack(app, 'aws-cdk-asset-refs');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyCodecommitRepository26DB372B\": {\"Type\": \"AWS::CodeCommit::Repository\", \"Properties\": {\"RepositoryName\": \"my-test-repository\"}}, \"MyCodecommitRepositoryNotifyOnPullRequestCreated4CAB0621\": {\"Type\": \"AWS::CodeStarNotifications::NotificationRule\", \"Properties\": {\"DetailType\": \"FULL\", \"EventTypeIds\": [\"codecommit-repository-pull-request-created\"], \"Name\": \"decommitMyCodecommitRepositoryNotifyOnPullRequestCreated65969BCB\", \"Resource\": {\"Fn::GetAtt\": [\"MyCodecommitRepository26DB372B\", \"Arn\"]}, \"Targets\": [{\"TargetAddress\": {\"Ref\": \"MyTopic86869434\"}, \"TargetType\": \"SNS\"}]}}, \"MyCodecommitRepositoryNotifyOnPullRequestMerged80574FED\": {\"Type\": \"AWS::CodeStarNotifications::NotificationRule\", \"Properties\": {\"DetailType\": \"FULL\", \"EventTypeIds\": [\"codecommit-repository-pull-request-merged\"], \"Name\": \"odecommitMyCodecommitRepositoryNotifyOnPullRequestMergedF426197C\", \"Resource\": {\"Fn::GetAtt\": [\"MyCodecommitRepository26DB372B\", \"Arn\"]}, \"Targets\": [{\"TargetAddress\": {\"Ref\": \"MyTopic86869434\"}, \"TargetType\": \"SNS\"}]}}, \"MyTopic86869434\": {\"Type\": \"AWS::SNS::Topic\"}, \"MyTopicPolicy12A5EC17\": {\"Type\": \"AWS::SNS::TopicPolicy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"sns:Publish\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codestar-notifications.amazonaws.com\"}, \"Resource\": {\"Ref\": \"MyTopic86869434\"}, \"Sid\": \"0\"}], \"Version\": \"2012-10-17\"}, \"Topics\": [{\"Ref\": \"MyTopic86869434\"}]}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "#!/usr/bin/env node\nimport * as sns from 'aws-cdk-lib/aws-sns';\nimport * as cdk from 'aws-cdk-lib';\nimport * as codecommit from 'aws-cdk-lib/aws-codecommit';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'aws-cdk-codecommit');\n\nconst repository = new codecommit.Repository(stack, 'MyCodecommitRepository', {\n  repositoryName: 'my-test-repository',\n});\n\nconst target = new sns.Topic(stack, 'MyTopic');\n\nrepository.notifyOnPullRequestCreated('NotifyOnPullRequestCreated', target);\nrepository.notifyOnPullRequestMerged('NotifyOnPullRequestMerged', target);\n\napp.synth();"}
{ "prompt": "{\"Resources\": {\"Repo02AC86CF\": {\"Type\": \"AWS::CodeCommit::Repository\", \"Properties\": {\"RepositoryName\": \"aws-cdk-codecommit-repo-contents-assets\", \"Code\": {\"S3\": {\"Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"Key\": \"32b8e8a8b79a84deb31e4d456dbcf3e40937f201633ae38c9e90e15b82084ae3.zip\"}}}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as cdk from 'aws-cdk-lib';\nimport * as codecommit from 'aws-cdk-lib/aws-codecommit';\nimport { Code } from 'aws-cdk-lib/aws-codecommit';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'aws-cdk-codecommit-repo-contents-assets');\n\nnew codecommit.Repository(stack, 'Repo', {\n  repositoryName: 'aws-cdk-codecommit-repo-contents-assets',\n  code: Code.fromDirectory('./asset-test'),\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"Repo02AC86CF\": {\"Type\": \"AWS::CodeCommit::Repository\", \"Properties\": {\"RepositoryName\": \"aws-cdk-codecommit-events\"}}, \"RepoOnReferenceCreatedF1C66FF1\": {\"Type\": \"AWS::Events::Rule\", \"Properties\": {\"EventPattern\": {\"source\": [\"aws.codecommit\"], \"resources\": [{\"Fn::GetAtt\": [\"Repo02AC86CF\", \"Arn\"]}], \"detail-type\": [\"CodeCommit Repository State Change\"], \"detail\": {\"event\": [\"referenceCreated\"]}}, \"State\": \"ENABLED\", \"Targets\": [{\"Arn\": {\"Ref\": \"MyTopic86869434\"}, \"Id\": \"Target0\"}]}}, \"MyTopic86869434\": {\"Type\": \"AWS::SNS::Topic\"}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as sns from 'aws-cdk-lib/aws-sns';\nimport * as cdk from 'aws-cdk-lib';\nimport * as codecommit from 'aws-cdk-lib/aws-codecommit';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'aws-cdk-codecommit-events');\n\nconst repo = new codecommit.Repository(stack, 'Repo', {\n  repositoryName: 'aws-cdk-codecommit-events',\n});\nconst topic = new sns.Topic(stack, 'MyTopic');\n\n// we can't use @aws-cdk/aws-events-targets.SnsTopic here because it will\n// create a cyclic dependency with codebuild, so we just fake it\nrepo.onReferenceCreated('OnReferenceCreated', {\n  target: {\n    bind: () => ({\n      arn: topic.topicArn,\n      id: '',\n    }),\n  },\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"Repo02AC86CF\": {\"Type\": \"AWS::CodeCommit::Repository\", \"Properties\": {\"RepositoryName\": \"aws-cdk-codecommit-repo-contents-zip-file\", \"Code\": {\"S3\": {\"Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"Key\": \"ea7c70c09e0d23ef6105931ee931effc8b607184343aebf5e45e972807b3fc18.zip\"}}}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as cdk from 'aws-cdk-lib';\nimport * as codecommit from 'aws-cdk-lib/aws-codecommit';\nimport { Code } from 'aws-cdk-lib/aws-codecommit';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'aws-cdk-codecommit-repo-contents-zip-file');\n\nnew codecommit.Repository(stack, 'Repo', {\n  repositoryName: 'aws-cdk-codecommit-repo-contents-zip-file',\n  code: Code.fromZipFile('./asset-test.zip'),\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"Vpc8378EB38\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"cloudfront-load-balancer-origin/Vpc\"}]}}, \"VpcPublicSubnet1Subnet5C2D37C4\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"cloudfront-load-balancer-origin/Vpc/PublicSubnet1\"}]}}, \"VpcPublicSubnet1RouteTable6C95E38E\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"cloudfront-load-balancer-origin/Vpc/PublicSubnet1\"}]}}, \"VpcPublicSubnet1RouteTableAssociation97140677\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet1RouteTable6C95E38E\"}, \"SubnetId\": {\"Ref\": \"VpcPublicSubnet1Subnet5C2D37C4\"}}}, \"VpcPublicSubnet1DefaultRoute3DA9E72A\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet1RouteTable6C95E38E\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VpcIGWD7BA715C\"}}, \"DependsOn\": [\"VpcVPCGWBF912B6E\"]}, \"VpcPublicSubnet1EIPD7E02669\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"cloudfront-load-balancer-origin/Vpc/PublicSubnet1\"}]}}, \"VpcPublicSubnet1NATGateway4D7517AA\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VpcPublicSubnet1Subnet5C2D37C4\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VpcPublicSubnet1EIPD7E02669\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"cloudfront-load-balancer-origin/Vpc/PublicSubnet1\"}]}, \"DependsOn\": [\"VpcPublicSubnet1DefaultRoute3DA9E72A\", \"VpcPublicSubnet1RouteTableAssociation97140677\"]}, \"VpcPublicSubnet2Subnet691E08A3\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"cloudfront-load-balancer-origin/Vpc/PublicSubnet2\"}]}}, \"VpcPublicSubnet2RouteTable94F7E489\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"cloudfront-load-balancer-origin/Vpc/PublicSubnet2\"}]}}, \"VpcPublicSubnet2RouteTableAssociationDD5762D8\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet2RouteTable94F7E489\"}, \"SubnetId\": {\"Ref\": \"VpcPublicSubnet2Subnet691E08A3\"}}}, \"VpcPublicSubnet2DefaultRoute97F91067\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet2RouteTable94F7E489\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VpcIGWD7BA715C\"}}, \"DependsOn\": [\"VpcVPCGWBF912B6E\"]}, \"VpcPublicSubnet2EIP3C605A87\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"cloudfront-load-balancer-origin/Vpc/PublicSubnet2\"}]}}, \"VpcPublicSubnet2NATGateway9182C01D\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VpcPublicSubnet2Subnet691E08A3\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VpcPublicSubnet2EIP3C605A87\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"cloudfront-load-balancer-origin/Vpc/PublicSubnet2\"}]}, \"DependsOn\": [\"VpcPublicSubnet2DefaultRoute97F91067\", \"VpcPublicSubnet2RouteTableAssociationDD5762D8\"]}, \"VpcPrivateSubnet1Subnet536B997A\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"cloudfront-load-balancer-origin/Vpc/PrivateSubnet1\"}]}}, \"VpcPrivateSubnet1RouteTableB2C5B500\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"cloudfront-load-balancer-origin/Vpc/PrivateSubnet1\"}]}}, \"VpcPrivateSubnet1RouteTableAssociation70C59FA6\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet1RouteTableB2C5B500\"}, \"SubnetId\": {\"Ref\": \"VpcPrivateSubnet1Subnet536B997A\"}}}, \"VpcPrivateSubnet1DefaultRouteBE02A9ED\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet1RouteTableB2C5B500\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VpcPublicSubnet1NATGateway4D7517AA\"}}}, \"VpcPrivateSubnet2Subnet3788AAA1\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"cloudfront-load-balancer-origin/Vpc/PrivateSubnet2\"}]}}, \"VpcPrivateSubnet2RouteTableA678073B\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"cloudfront-load-balancer-origin/Vpc/PrivateSubnet2\"}]}}, \"VpcPrivateSubnet2RouteTableAssociationA89CAD56\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet2RouteTableA678073B\"}, \"SubnetId\": {\"Ref\": \"VpcPrivateSubnet2Subnet3788AAA1\"}}}, \"VpcPrivateSubnet2DefaultRoute060D2087\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet2RouteTableA678073B\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VpcPublicSubnet2NATGateway9182C01D\"}}}, \"VpcIGWD7BA715C\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"cloudfront-load-balancer-origin/Vpc\"}]}}, \"VpcVPCGWBF912B6E\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"InternetGatewayId\": {\"Ref\": \"VpcIGWD7BA715C\"}}}, \"LB8A12904C\": {\"Type\": \"AWS::ElasticLoadBalancingV2::LoadBalancer\", \"Properties\": {\"LoadBalancerAttributes\": [{\"Key\": \"deletion_protection.enabled\", \"Value\": \"false\"}], \"Scheme\": \"internet-facing\", \"SecurityGroups\": [{\"Fn::GetAtt\": [\"LBSecurityGroup8A41EA2B\", \"GroupId\"]}], \"Subnets\": [{\"Ref\": \"VpcPublicSubnet1Subnet5C2D37C4\"}, {\"Ref\": \"VpcPublicSubnet2Subnet691E08A3\"}], \"Type\": \"application\"}, \"DependsOn\": [\"VpcPublicSubnet1DefaultRoute3DA9E72A\", \"VpcPublicSubnet1RouteTableAssociation97140677\", \"VpcPublicSubnet2DefaultRoute97F91067\", \"VpcPublicSubnet2RouteTableAssociationDD5762D8\"]}, \"LBSecurityGroup8A41EA2B\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"Automatically created Security Group for ELB cloudfrontloadbalanceroriginLB8CFBA9DF\", \"SecurityGroupEgress\": [{\"CidrIp\": \"255.255.255.255/32\", \"Description\": \"Disallow all traffic\", \"FromPort\": 252, \"IpProtocol\": \"icmp\", \"ToPort\": 86}], \"VpcId\": {\"Ref\": \"Vpc8378EB38\"}}}, \"Distribution830FAC52\": {\"Type\": \"AWS::CloudFront::Distribution\", \"Properties\": {\"DistributionConfig\": {\"DefaultCacheBehavior\": {\"CachePolicyId\": \"658327ea-f89d-4fab-a63d-7e88639e58f6\", \"Compress\": true, \"TargetOriginId\": \"cloudfrontloadbalanceroriginDistributionOrigin1BCC75186\", \"ViewerProtocolPolicy\": \"allow-all\"}, \"Enabled\": true, \"HttpVersion\": \"http2\", \"IPV6Enabled\": true, \"Origins\": [{\"CustomOriginConfig\": {\"OriginProtocolPolicy\": \"https-only\", \"OriginSSLProtocols\": [\"TLSv1.2\"]}, \"DomainName\": {\"Fn::GetAtt\": [\"LB8A12904C\", \"DNSName\"]}, \"Id\": \"cloudfrontloadbalanceroriginDistributionOrigin1BCC75186\"}]}}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as cloudfront from 'aws-cdk-lib/aws-cloudfront';\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as elbv2 from 'aws-cdk-lib/aws-elasticloadbalancingv2';\nimport * as cdk from 'aws-cdk-lib';\nimport * as origins from 'aws-cdk-lib/aws-cloudfront-origins';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'cloudfront-load-balancer-origin');\n\nconst vpc = new ec2.Vpc(stack, 'Vpc', { maxAzs: 2, restrictDefaultSecurityGroup: false });\nconst loadbalancer = new elbv2.ApplicationLoadBalancer(stack, 'LB', { vpc, internetFacing: true });\n\nnew cloudfront.Distribution(stack, 'Distribution', {\n  defaultBehavior: { origin: new origins.LoadBalancerV2Origin(loadbalancer) },\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"Bucket83908E77\": {\"Type\": \"AWS::S3::Bucket\", \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"BucketPolicyE9A3008A\": {\"Type\": \"AWS::S3::BucketPolicy\", \"Properties\": {\"Bucket\": {\"Ref\": \"Bucket83908E77\"}, \"PolicyDocument\": {\"Statement\": [{\"Action\": \"s3:GetObject\", \"Effect\": \"Allow\", \"Principal\": {\"CanonicalUser\": {\"Fn::GetAtt\": [\"DistributionOrigin1S3Origin5F5C0696\", \"S3CanonicalUserId\"]}}, \"Resource\": {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"Bucket83908E77\", \"Arn\"]}, \"/*\"]]}}], \"Version\": \"2012-10-17\"}}}, \"DistributionOrigin1S3Origin5F5C0696\": {\"Type\": \"AWS::CloudFront::CloudFrontOriginAccessIdentity\", \"Properties\": {\"CloudFrontOriginAccessIdentityConfig\": {\"Comment\": \"Identity for cloudfronts3originDistributionOrigin1741C4E95\"}}}, \"Distribution830FAC52\": {\"Type\": \"AWS::CloudFront::Distribution\", \"Properties\": {\"DistributionConfig\": {\"DefaultCacheBehavior\": {\"CachePolicyId\": \"658327ea-f89d-4fab-a63d-7e88639e58f6\", \"Compress\": true, \"TargetOriginId\": \"cloudfronts3originDistributionOrigin1741C4E95\", \"ViewerProtocolPolicy\": \"allow-all\"}, \"Enabled\": true, \"HttpVersion\": \"http2\", \"IPV6Enabled\": true, \"Origins\": [{\"DomainName\": {\"Fn::GetAtt\": [\"Bucket83908E77\", \"RegionalDomainName\"]}, \"Id\": \"cloudfronts3originDistributionOrigin1741C4E95\", \"S3OriginConfig\": {\"OriginAccessIdentity\": {\"Fn::Join\": [\"\", [\"origin-access-identity/cloudfront/\", {\"Ref\": \"DistributionOrigin1S3Origin5F5C0696\"}]]}}}]}}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as cloudfront from 'aws-cdk-lib/aws-cloudfront';\nimport * as s3 from 'aws-cdk-lib/aws-s3';\nimport * as cdk from 'aws-cdk-lib';\nimport * as origins from 'aws-cdk-lib/aws-cloudfront-origins';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'cloudfront-s3-origin');\n\nconst bucket = new s3.Bucket(stack, 'Bucket');\nnew cloudfront.Distribution(stack, 'Distribution', {\n  defaultBehavior: { origin: new origins.S3Origin(bucket) },\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"Distribution830FAC52\": {\"Type\": \"AWS::CloudFront::Distribution\", \"Properties\": {\"DistributionConfig\": {\"DefaultCacheBehavior\": {\"CachePolicyId\": \"658327ea-f89d-4fab-a63d-7e88639e58f6\", \"Compress\": true, \"TargetOriginId\": \"cloudfronthttporiginDistributionOrigin162B02709\", \"ViewerProtocolPolicy\": \"allow-all\"}, \"Enabled\": true, \"HttpVersion\": \"http2\", \"IPV6Enabled\": true, \"Origins\": [{\"CustomOriginConfig\": {\"OriginProtocolPolicy\": \"https-only\", \"OriginSSLProtocols\": [\"TLSv1.2\"]}, \"DomainName\": \"www.example.com\", \"Id\": \"cloudfronthttporiginDistributionOrigin162B02709\"}]}}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as cloudfront from 'aws-cdk-lib/aws-cloudfront';\nimport * as cdk from 'aws-cdk-lib';\nimport * as origins from 'aws-cdk-lib/aws-cloudfront-origins';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'cloudfront-http-origin');\n\nnew cloudfront.Distribution(stack, 'Distribution', {\n  defaultBehavior: { origin: new origins.HttpOrigin('www.example.com') },\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"Bucket83908E77\": {\"Type\": \"AWS::S3::Bucket\", \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"BucketPolicyE9A3008A\": {\"Type\": \"AWS::S3::BucketPolicy\", \"Properties\": {\"Bucket\": {\"Ref\": \"Bucket83908E77\"}, \"PolicyDocument\": {\"Statement\": [{\"Action\": \"s3:GetObject\", \"Effect\": \"Allow\", \"Principal\": {\"CanonicalUser\": {\"Fn::GetAtt\": [\"OriginAccessIdentityDF1E3CAC\", \"S3CanonicalUserId\"]}}, \"Resource\": {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"Bucket83908E77\", \"Arn\"]}, \"/*\"]]}}], \"Version\": \"2012-10-17\"}}}, \"OriginAccessIdentityDF1E3CAC\": {\"Type\": \"AWS::CloudFront::CloudFrontOriginAccessIdentity\", \"Properties\": {\"CloudFrontOriginAccessIdentityConfig\": {\"Comment\": \"Identity for bucket provided by test\"}}}, \"Distribution830FAC52\": {\"Type\": \"AWS::CloudFront::Distribution\", \"Properties\": {\"DistributionConfig\": {\"DefaultCacheBehavior\": {\"CachePolicyId\": \"658327ea-f89d-4fab-a63d-7e88639e58f6\", \"Compress\": true, \"TargetOriginId\": \"cloudfronts3originoaiDistributionOrigin1516C5A91\", \"ViewerProtocolPolicy\": \"allow-all\"}, \"Enabled\": true, \"HttpVersion\": \"http2\", \"IPV6Enabled\": true, \"Origins\": [{\"DomainName\": {\"Fn::GetAtt\": [\"Bucket83908E77\", \"RegionalDomainName\"]}, \"Id\": \"cloudfronts3originoaiDistributionOrigin1516C5A91\", \"S3OriginConfig\": {\"OriginAccessIdentity\": {\"Fn::Join\": [\"\", [\"origin-access-identity/cloudfront/\", {\"Ref\": \"OriginAccessIdentityDF1E3CAC\"}]]}}}]}}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as cloudfront from 'aws-cdk-lib/aws-cloudfront';\nimport * as s3 from 'aws-cdk-lib/aws-s3';\nimport * as cdk from 'aws-cdk-lib';\nimport * as origins from 'aws-cdk-lib/aws-cloudfront-origins';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'cloudfront-s3-origin-oai');\n\nconst bucket = new s3.Bucket(stack, 'Bucket');\nconst originAccessIdentity = new cloudfront.OriginAccessIdentity(stack, 'OriginAccessIdentity', {\n  comment: 'Identity for bucket provided by test',\n});\nnew cloudfront.Distribution(stack, 'Distribution', {\n  defaultBehavior: { origin: new origins.S3Origin(bucket, { originAccessIdentity }) },\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"Bucket83908E77\": {\"Type\": \"AWS::S3::Bucket\", \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"BucketPolicyE9A3008A\": {\"Type\": \"AWS::S3::BucketPolicy\", \"Properties\": {\"Bucket\": {\"Ref\": \"Bucket83908E77\"}, \"PolicyDocument\": {\"Statement\": [{\"Action\": \"s3:GetObject\", \"Effect\": \"Allow\", \"Principal\": {\"CanonicalUser\": {\"Fn::GetAtt\": [\"DistributionOrigin1S3Origin5F5C0696\", \"S3CanonicalUserId\"]}}, \"Resource\": {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"Bucket83908E77\", \"Arn\"]}, \"/*\"]]}}], \"Version\": \"2012-10-17\"}}}, \"DistributionOrigin1S3Origin5F5C0696\": {\"Type\": \"AWS::CloudFront::CloudFrontOriginAccessIdentity\", \"Properties\": {\"CloudFrontOriginAccessIdentityConfig\": {\"Comment\": \"Identity for cloudfrontorigingroupDistributionOrigin137659A54\"}}}, \"Distribution830FAC52\": {\"Type\": \"AWS::CloudFront::Distribution\", \"Properties\": {\"DistributionConfig\": {\"CacheBehaviors\": [{\"CachePolicyId\": \"658327ea-f89d-4fab-a63d-7e88639e58f6\", \"Compress\": true, \"PathPattern\": \"/api\", \"TargetOriginId\": \"cloudfrontorigingroupDistributionOriginGroup10B57F1D1\", \"ViewerProtocolPolicy\": \"allow-all\"}], \"DefaultCacheBehavior\": {\"CachePolicyId\": \"658327ea-f89d-4fab-a63d-7e88639e58f6\", \"Compress\": true, \"TargetOriginId\": \"cloudfrontorigingroupDistributionOriginGroup10B57F1D1\", \"ViewerProtocolPolicy\": \"allow-all\"}, \"Enabled\": true, \"HttpVersion\": \"http2\", \"IPV6Enabled\": true, \"OriginGroups\": {\"Items\": [{\"FailoverCriteria\": {\"StatusCodes\": {\"Items\": [500, 502, 503, 504], \"Quantity\": 4}}, \"Id\": \"cloudfrontorigingroupDistributionOriginGroup10B57F1D1\", \"Members\": {\"Items\": [{\"OriginId\": \"cloudfrontorigingroupDistributionOrigin137659A54\"}, {\"OriginId\": \"cloudfrontorigingroupDistributionOrigin2CCE5D500\"}], \"Quantity\": 2}}], \"Quantity\": 1}, \"Origins\": [{\"DomainName\": {\"Fn::GetAtt\": [\"Bucket83908E77\", \"RegionalDomainName\"]}, \"Id\": \"cloudfrontorigingroupDistributionOrigin137659A54\", \"S3OriginConfig\": {\"OriginAccessIdentity\": {\"Fn::Join\": [\"\", [\"origin-access-identity/cloudfront/\", {\"Ref\": \"DistributionOrigin1S3Origin5F5C0696\"}]]}}}, {\"CustomOriginConfig\": {\"OriginProtocolPolicy\": \"https-only\", \"OriginSSLProtocols\": [\"TLSv1.2\"]}, \"DomainName\": \"www.example.com\", \"Id\": \"cloudfrontorigingroupDistributionOrigin2CCE5D500\"}]}}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as cloudfront from 'aws-cdk-lib/aws-cloudfront';\nimport * as s3 from 'aws-cdk-lib/aws-s3';\nimport * as cdk from 'aws-cdk-lib';\nimport * as origins from 'aws-cdk-lib/aws-cloudfront-origins';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'cloudfront-origin-group');\n\nconst bucket = new s3.Bucket(stack, 'Bucket', {\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\n\nconst originGroup = new origins.OriginGroup({\n  primaryOrigin: new origins.S3Origin(bucket),\n  fallbackOrigin: new origins.HttpOrigin('www.example.com'),\n});\n\nnew cloudfront.Distribution(stack, 'Distribution', {\n  defaultBehavior: { origin: originGroup },\n  additionalBehaviors: {\n    '/api': {\n      origin: originGroup,\n    },\n  },\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"ChildRole1E3E0EF5\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"states.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"ChildDAB30558\": {\"Type\": \"AWS::StepFunctions::StateMachine\", \"Properties\": {\"RoleArn\": {\"Fn::GetAtt\": [\"ChildRole1E3E0EF5\", \"Arn\"]}, \"DefinitionString\": \"{\\\"StartAt\\\":\\\"Pass\\\",\\\"States\\\":{\\\"Pass\\\":{\\\"Type\\\":\\\"Pass\\\",\\\"End\\\":true}}}\"}, \"DependsOn\": [\"ChildRole1E3E0EF5\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"ParentRole5F0C366C\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"states.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"ParentRoleDefaultPolicy9BDC56DC\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"states:StartExecution\", \"Effect\": \"Allow\", \"Resource\": {\"Ref\": \"ChildDAB30558\"}}, {\"Action\": [\"states:DescribeExecution\", \"states:StopExecution\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":states:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":execution:\", {\"Fn::Select\": [6, {\"Fn::Split\": [\":\", {\"Ref\": \"ChildDAB30558\"}]}]}, \"*\"]]}}, {\"Action\": [\"events:DescribeRule\", \"events:PutRule\", \"events:PutTargets\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":events:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":rule/StepFunctionsGetEventsForStepFunctionsExecutionRule\"]]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"ParentRoleDefaultPolicy9BDC56DC\", \"Roles\": [{\"Ref\": \"ParentRole5F0C366C\"}]}}, \"Parent8B210403\": {\"Type\": \"AWS::StepFunctions::StateMachine\", \"Properties\": {\"RoleArn\": {\"Fn::GetAtt\": [\"ParentRole5F0C366C\", \"Arn\"]}, \"DefinitionString\": {\"Fn::Join\": [\"\", [\"{\\\"StartAt\\\":\\\"Task\\\",\\\"States\\\":{\\\"Task\\\":{\\\"End\\\":true,\\\"Parameters\\\":{\\\"Input\\\":{\\\"hello.$\\\":\\\"$.hello\\\"},\\\"StateMachineArn\\\":\\\"\", {\"Ref\": \"ChildDAB30558\"}, \"\\\"},\\\"Type\\\":\\\"Task\\\",\\\"Resource\\\":\\\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":states:::states:startExecution.sync\\\"}}}\"]]}}, \"DependsOn\": [\"ParentRoleDefaultPolicy9BDC56DC\", \"ParentRole5F0C366C\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}}, \"Outputs\": {\"StateMachineARN\": {\"Value\": {\"Ref\": \"Parent8B210403\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as sfn from 'aws-cdk-lib/aws-stepfunctions';\nimport { App, CfnOutput, Stack } from 'aws-cdk-lib';\nimport { Construct } from 'constructs';\nimport * as tasks from 'aws-cdk-lib/aws-stepfunctions-tasks';\n\n/*\n * Stack verification steps:\n * * aws stepfunctions start-execution --input '{\"hello\": \"world\"}' --state-machine-arn <StateMachineARN>\n * * aws stepfunctions describe-execution --execution-arn <execution-arn>\n * * The output here should contain `status: \"SUCCEEDED\"` and `output:\"{...\\\\\"Output\\\\\":\\\\\"{\\\\\\\\\"hello\\\\\\\\\":\\\\\\\\\"world\\\\\\\\\"}\\\\\"...}\"`\n */\n\nclass TestStack extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    const child = new sfn.StateMachine(this, 'Child', {\n      definition: new sfn.Pass(this, 'Pass'),\n    });\n\n    const parent = new sfn.StateMachine(this, 'Parent', {\n      definition: new sfn.Task(this, 'Task', {\n        task: new tasks.StartExecution(child, {\n          input: {\n            hello: sfn.JsonPath.stringAt('$.hello'),\n          },\n          integrationPattern: sfn.ServiceIntegrationPattern.SYNC,\n        }),\n      }),\n    });\n\n    new CfnOutput(this, 'StateMachineARN', {\n      value: parent.stateMachineArn,\n    });\n  }\n}\n\nconst app = new App();\n\nnew TestStack(app, 'integ-sfn-start-execution');\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"SubmitJobFB773A16\": {\"Type\": \"AWS::StepFunctions::Activity\", \"Properties\": {\"Name\": \"awsstepfunctionsintegSubmitJobA2508960\"}}, \"CheckJob5FFC1D6F\": {\"Type\": \"AWS::StepFunctions::Activity\", \"Properties\": {\"Name\": \"awsstepfunctionsintegCheckJobC4AC762D\"}}, \"StateMachineRoleB840431D\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"states.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"StateMachine2E01A3A5\": {\"Type\": \"AWS::StepFunctions::StateMachine\", \"Properties\": {\"RoleArn\": {\"Fn::GetAtt\": [\"StateMachineRoleB840431D\", \"Arn\"]}, \"DefinitionString\": {\"Fn::Join\": [\"\", [\"{\\\"StartAt\\\":\\\"Submit Job\\\",\\\"States\\\":{\\\"Submit Job\\\":{\\\"Next\\\":\\\"Wait X Seconds\\\",\\\"Type\\\":\\\"Task\\\",\\\"Resource\\\":\\\"\", {\"Ref\": \"SubmitJobFB773A16\"}, \"\\\",\\\"ResultPath\\\":\\\"$.guid\\\"},\\\"Wait X Seconds\\\":{\\\"Type\\\":\\\"Wait\\\",\\\"SecondsPath\\\":\\\"$.wait_time\\\",\\\"Next\\\":\\\"Get Job Status\\\"},\\\"Get Job Status\\\":{\\\"Next\\\":\\\"Job Complete?\\\",\\\"InputPath\\\":\\\"$.guid\\\",\\\"Type\\\":\\\"Task\\\",\\\"Resource\\\":\\\"\", {\"Ref\": \"CheckJob5FFC1D6F\"}, \"\\\",\\\"ResultPath\\\":\\\"$.status\\\"},\\\"Job Complete?\\\":{\\\"Type\\\":\\\"Choice\\\",\\\"Choices\\\":[{\\\"Variable\\\":\\\"$.status\\\",\\\"StringEquals\\\":\\\"FAILED\\\",\\\"Next\\\":\\\"Job Failed\\\"},{\\\"Variable\\\":\\\"$.status\\\",\\\"StringEquals\\\":\\\"SUCCEEDED\\\",\\\"Next\\\":\\\"Get Final Job Status\\\"}],\\\"Default\\\":\\\"Wait X Seconds\\\"},\\\"Job Failed\\\":{\\\"Type\\\":\\\"Fail\\\",\\\"Error\\\":\\\"DescribeJob returned FAILED\\\",\\\"Cause\\\":\\\"AWS Batch Job Failed\\\"},\\\"Get Final Job Status\\\":{\\\"End\\\":true,\\\"InputPath\\\":\\\"$.guid\\\",\\\"Type\\\":\\\"Task\\\",\\\"Resource\\\":\\\"\", {\"Ref\": \"CheckJob5FFC1D6F\"}, \"\\\"}},\\\"TimeoutSeconds\\\":30}\"]]}}, \"DependsOn\": [\"StateMachineRoleB840431D\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as sfn from 'aws-cdk-lib/aws-stepfunctions';\nimport * as cdk from 'aws-cdk-lib';\nimport * as tasks from 'aws-cdk-lib/aws-stepfunctions-tasks';\n\nclass JobPollerStack extends cdk.Stack {\n  constructor(scope: cdk.App, id: string, props: cdk.StackProps = {}) {\n    super(scope, id, props);\n\n    const submitJobActivity = new sfn.Activity(this, 'SubmitJob');\n    const checkJobActivity = new sfn.Activity(this, 'CheckJob');\n\n    const submitJob = new sfn.Task(this, 'Submit Job', {\n      task: new tasks.InvokeActivity(submitJobActivity),\n      resultPath: '$.guid',\n    });\n    const waitX = new sfn.Wait(this, 'Wait X Seconds', { time: sfn.WaitTime.secondsPath('$.wait_time') });\n    const getStatus = new sfn.Task(this, 'Get Job Status', {\n      task: new tasks.InvokeActivity(checkJobActivity),\n      inputPath: '$.guid',\n      resultPath: '$.status',\n    });\n    const isComplete = new sfn.Choice(this, 'Job Complete?');\n    const jobFailed = new sfn.Fail(this, 'Job Failed', {\n      cause: 'AWS Batch Job Failed',\n      error: 'DescribeJob returned FAILED',\n    });\n    const finalStatus = new sfn.Task(this, 'Get Final Job Status', {\n      task: new tasks.InvokeActivity(checkJobActivity),\n      inputPath: '$.guid',\n    });\n\n    const chain = sfn.Chain\n      .start(submitJob)\n      .next(waitX)\n      .next(getStatus)\n      .next(isComplete\n        .when(sfn.Condition.stringEquals('$.status', 'FAILED'), jobFailed)\n        .when(sfn.Condition.stringEquals('$.status', 'SUCCEEDED'), finalStatus)\n        .otherwise(waitX));\n\n    new sfn.StateMachine(this, 'StateMachine', {\n      definition: chain,\n      timeout: cdk.Duration.seconds(30),\n    });\n  }\n}\n\nconst app = new cdk.App();\nnew JobPollerStack(app, 'aws-stepfunctions-integ');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"ChildRole1E3E0EF5\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"states.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"ChildDAB30558\": {\"Type\": \"AWS::StepFunctions::StateMachine\", \"Properties\": {\"RoleArn\": {\"Fn::GetAtt\": [\"ChildRole1E3E0EF5\", \"Arn\"]}, \"DefinitionString\": \"{\\\"StartAt\\\":\\\"Pass\\\",\\\"States\\\":{\\\"Pass\\\":{\\\"Type\\\":\\\"Pass\\\",\\\"End\\\":true}}}\"}, \"DependsOn\": [\"ChildRole1E3E0EF5\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"ParentRole5F0C366C\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"states.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"ParentRoleDefaultPolicy9BDC56DC\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"states:StartExecution\", \"Effect\": \"Allow\", \"Resource\": {\"Ref\": \"ChildDAB30558\"}}, {\"Action\": [\"states:DescribeExecution\", \"states:StopExecution\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":states:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":execution:\", {\"Fn::Select\": [6, {\"Fn::Split\": [\":\", {\"Ref\": \"ChildDAB30558\"}]}]}, \"*\"]]}}, {\"Action\": [\"events:DescribeRule\", \"events:PutRule\", \"events:PutTargets\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":events:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":rule/StepFunctionsGetEventsForStepFunctionsExecutionRule\"]]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"ParentRoleDefaultPolicy9BDC56DC\", \"Roles\": [{\"Ref\": \"ParentRole5F0C366C\"}]}}, \"Parent8B210403\": {\"Type\": \"AWS::StepFunctions::StateMachine\", \"Properties\": {\"RoleArn\": {\"Fn::GetAtt\": [\"ParentRole5F0C366C\", \"Arn\"]}, \"DefinitionString\": {\"Fn::Join\": [\"\", [\"{\\\"StartAt\\\":\\\"Task\\\",\\\"States\\\":{\\\"Task\\\":{\\\"End\\\":true,\\\"Parameters\\\":{\\\"Input\\\":{\\\"hello.$\\\":\\\"$.hello\\\"},\\\"StateMachineArn\\\":\\\"\", {\"Ref\": \"ChildDAB30558\"}, \"\\\"},\\\"Type\\\":\\\"Task\\\",\\\"Resource\\\":\\\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":states:::states:startExecution.sync\\\"}}}\"]]}}, \"DependsOn\": [\"ParentRoleDefaultPolicy9BDC56DC\", \"ParentRole5F0C366C\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}}, \"Outputs\": {\"StateMachineARN\": {\"Value\": {\"Ref\": \"Parent8B210403\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as sfn from 'aws-cdk-lib/aws-stepfunctions';\nimport { App, CfnOutput, Stack } from 'aws-cdk-lib';\nimport { Construct } from 'constructs';\nimport * as tasks from 'aws-cdk-lib/aws-stepfunctions-tasks';\n\n/*\n * Stack verification steps:\n * * aws stepfunctions start-execution --input '{\"hello\": \"world\"}' --state-machine-arn <StateMachineARN>\n * * aws stepfunctions describe-execution --execution-arn <execution-arn>\n * * The output here should contain `status: \"SUCCEEDED\"` and `output:\"{...\\\\\"Output\\\\\":\\\\\"{\\\\\\\\\"hello\\\\\\\\\":\\\\\\\\\"world\\\\\\\\\"}\\\\\"...}\"`\n */\n\nclass TestStack extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    const child = new sfn.StateMachine(this, 'Child', {\n      definition: new sfn.Pass(this, 'Pass'),\n    });\n\n    const parent = new sfn.StateMachine(this, 'Parent', {\n      definition: new sfn.Task(this, 'Task', {\n        task: new tasks.StartExecution(child, {\n          input: {\n            hello: sfn.JsonPath.stringAt('$.hello'),\n          },\n          integrationPattern: sfn.ServiceIntegrationPattern.SYNC,\n        }),\n      }),\n    });\n\n    new CfnOutput(this, 'StateMachineARN', {\n      value: parent.stateMachineArn,\n    });\n  }\n}\n\nconst app = new App();\n\nnew TestStack(app, 'integ-sfn-start-execution');\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"myusageplan4B391740\": {\"Type\": \"AWS::ApiGateway::UsagePlan\"}, \"myusageplanUsagePlanKeyResourcetestapigatewayusageplanmultikeymyapikey1DDABC389A2809A73\": {\"Type\": \"AWS::ApiGateway::UsagePlanKey\", \"Properties\": {\"KeyId\": {\"Ref\": \"myapikey18B056ACE\"}, \"KeyType\": \"API_KEY\", \"UsagePlanId\": {\"Ref\": \"myusageplan4B391740\"}}}, \"myusageplanUsagePlanKeyResourcetestapigatewayusageplanmultikeymyapikey29D6460C6AE8DE59D\": {\"Type\": \"AWS::ApiGateway::UsagePlanKey\", \"Properties\": {\"KeyId\": {\"Ref\": \"myapikey250C8F11B\"}, \"KeyType\": \"API_KEY\", \"UsagePlanId\": {\"Ref\": \"myusageplan4B391740\"}}}, \"myapikey18B056ACE\": {\"Type\": \"AWS::ApiGateway::ApiKey\", \"Properties\": {\"Enabled\": true}}, \"myapikey250C8F11B\": {\"Type\": \"AWS::ApiGateway::ApiKey\", \"Properties\": {\"Enabled\": true}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as cdk from 'aws-cdk-lib';\nimport * as apigateway from 'aws-cdk-lib/aws-apigateway';\n\nclass Test extends cdk.Stack {\n  constructor(scope: cdk.App, id: string) {\n    super(scope, id);\n\n    const usageplan = new apigateway.UsagePlan(this, 'myusageplan');\n    const apikey1 = new apigateway.ApiKey(this, 'myapikey1');\n    const apikey2 = new apigateway.ApiKey(this, 'myapikey2');\n    usageplan.addApiKey(apikey1);\n    usageplan.addApiKey(apikey2);\n  }\n}\n\nconst app = new cdk.App();\n\nnew Test(app, 'test-apigateway-usageplan-multikey');\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"LogGroupF5B46931\": {\"Type\": \"AWS::Logs::LogGroup\", \"Properties\": {\"RetentionInDays\": 731}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"MetricFilter1B93B6E5\": {\"Type\": \"AWS::Logs::MetricFilter\", \"Properties\": {\"FilterPattern\": \"{ $.latency = \\\"*\\\" }\", \"LogGroupName\": {\"Ref\": \"LogGroupF5B46931\"}, \"MetricTransformations\": [{\"MetricName\": \"Latency\", \"MetricNamespace\": \"MyApp\", \"MetricValue\": \"$.latency\"}]}}, \"alarmfrommetricfilterF546D67D\": {\"Type\": \"AWS::CloudWatch::Alarm\", \"Properties\": {\"ComparisonOperator\": \"GreaterThanOrEqualToThreshold\", \"EvaluationPeriods\": 2, \"MetricName\": \"Latency\", \"Namespace\": \"MyApp\", \"Period\": 300, \"Statistic\": \"Average\", \"Threshold\": 100}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import { Alarm } from 'aws-cdk-lib/aws-cloudwatch';\nimport { App, RemovalPolicy, Stack, StackProps } from 'aws-cdk-lib';\nimport { FilterPattern, LogGroup, MetricFilter } from 'aws-cdk-lib/aws-logs';\nimport { IntegTest } from '@aws-cdk/integ-tests-alpha';\n\n/*\n * Stack verification steps:\n *\n * -- aws cloudwatch describe-alarms --alarm-name-prefix aws-cdk-expose-metric-integ\n * has Namespace of `MyApp` and Statistic of `Average`\n */\n\nclass ExposeMetricIntegStack extends Stack {\n  constructor(scope: App, id: string, props?: StackProps) {\n    super(scope, id, props);\n\n    const logGroup = new LogGroup(this, 'LogGroup', {\n      removalPolicy: RemovalPolicy.DESTROY,\n    });\n\n    /// !show\n    const mf = new MetricFilter(this, 'MetricFilter', {\n      logGroup,\n      metricNamespace: 'MyApp',\n      metricName: 'Latency',\n      filterPattern: FilterPattern.exists('$.latency'),\n      metricValue: '$.latency',\n    });\n\n    new Alarm(this, 'alarm from metric filter', {\n      metric: mf.metric(),\n      threshold: 100,\n      evaluationPeriods: 2,\n    });\n\n    /// !hide\n  }\n}\n\nconst app = new App();\nconst stack = new ExposeMetricIntegStack(app, 'aws-cdk-expose-metric-integ');\n\nnew IntegTest(app, 'LambdaTest', {\n  testCases: [stack],\n});\n\napp.synth();"}
{ "prompt": "{\"Resources\": {\"LogGroupF5B46931\": {\"Type\": \"AWS::Logs::LogGroup\", \"Properties\": {\"RetentionInDays\": 731}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"MetricFilter1B93B6E5\": {\"Type\": \"AWS::Logs::MetricFilter\", \"Properties\": {\"FilterPattern\": \"{ $.latency = \\\"*\\\" }\", \"LogGroupName\": {\"Ref\": \"LogGroupF5B46931\"}, \"MetricTransformations\": [{\"MetricName\": \"Latency\", \"MetricNamespace\": \"MyApp\", \"MetricValue\": \"$.latency\"}], \"FilterName\": \"MyFilterName\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import { App, RemovalPolicy, Stack, StackProps } from 'aws-cdk-lib';\nimport { FilterPattern, LogGroup, MetricFilter } from 'aws-cdk-lib/aws-logs';\n\nclass MetricFilterIntegStack extends Stack {\n  constructor(scope: App, id: string, props?: StackProps) {\n    super(scope, id, props);\n\n    const logGroup = new LogGroup(this, 'LogGroup', {\n      removalPolicy: RemovalPolicy.DESTROY,\n    });\n\n    /// !show\n    new MetricFilter(this, 'MetricFilter', {\n      logGroup,\n      metricNamespace: 'MyApp',\n      metricName: 'Latency',\n      filterName: 'MyFilterName',\n      filterPattern: FilterPattern.exists('$.latency'),\n      metricValue: '$.latency',\n    });\n    /// !hide\n  }\n}\n\nconst app = new App();\nnew MetricFilterIntegStack(app, 'aws-cdk-metricfilter-integ');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"TopicBFC7AF6E\": {\"Type\": \"AWS::SNS::Topic\"}, \"FunctionServiceRole675BB04A\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"Function76856677\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"exports.handler = async (event) => event;\"}, \"Role\": {\"Fn::GetAtt\": [\"FunctionServiceRole675BB04A\", \"Arn\"]}, \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"FunctionServiceRole675BB04A\"]}, \"FunctionAllowSes1829904A\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"Function76856677\", \"Arn\"]}, \"Principal\": \"ses.amazonaws.com\", \"SourceAccount\": {\"Ref\": \"AWS::AccountId\"}}}, \"Bucket83908E77\": {\"Type\": \"AWS::S3::Bucket\", \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"BucketPolicyE9A3008A\": {\"Type\": \"AWS::S3::BucketPolicy\", \"Properties\": {\"Bucket\": {\"Ref\": \"Bucket83908E77\"}, \"PolicyDocument\": {\"Statement\": [{\"Action\": \"s3:PutObject\", \"Condition\": {\"StringEquals\": {\"aws:Referer\": {\"Ref\": \"AWS::AccountId\"}}}, \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"ses.amazonaws.com\"}, \"Resource\": {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"Bucket83908E77\", \"Arn\"]}, \"/emails/*\"]]}}], \"Version\": \"2012-10-17\"}}}, \"Key961B73FD\": {\"Type\": \"AWS::KMS::Key\", \"Properties\": {\"KeyPolicy\": {\"Statement\": [{\"Action\": \"kms:*\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}, \"Resource\": \"*\"}, {\"Action\": [\"kms:Encrypt\", \"kms:GenerateDataKey\"], \"Condition\": {\"Null\": {\"kms:EncryptionContext:aws:ses:rule-name\": \"false\", \"kms:EncryptionContext:aws:ses:message-id\": \"false\"}, \"StringEquals\": {\"kms:EncryptionContext:aws:ses:source-account\": {\"Ref\": \"AWS::AccountId\"}}}, \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"ses.amazonaws.com\"}, \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"RuleSetE30C6C48\": {\"Type\": \"AWS::SES::ReceiptRuleSet\"}, \"RuleSetDropSpamRule5809F51B\": {\"Type\": \"AWS::SES::ReceiptRule\", \"Properties\": {\"Rule\": {\"Actions\": [{\"LambdaAction\": {\"FunctionArn\": {\"Fn::GetAtt\": [\"SingletonLambda224e77f9a32e4b4dac32983477abba164533EA15\", \"Arn\"]}, \"InvocationType\": \"RequestResponse\"}}], \"Enabled\": true, \"ScanEnabled\": true}, \"RuleSetName\": {\"Ref\": \"RuleSetE30C6C48\"}}}, \"RuleSetFirstRule0A27C8CC\": {\"Type\": \"AWS::SES::ReceiptRule\", \"Properties\": {\"Rule\": {\"Actions\": [{\"AddHeaderAction\": {\"HeaderName\": \"X-My-Header\", \"HeaderValue\": \"value\"}}, {\"LambdaAction\": {\"FunctionArn\": {\"Fn::GetAtt\": [\"Function76856677\", \"Arn\"]}, \"InvocationType\": \"RequestResponse\", \"TopicArn\": {\"Ref\": \"TopicBFC7AF6E\"}}}, {\"S3Action\": {\"BucketName\": {\"Ref\": \"Bucket83908E77\"}, \"KmsKeyArn\": {\"Fn::GetAtt\": [\"Key961B73FD\", \"Arn\"]}, \"ObjectKeyPrefix\": \"emails/\", \"TopicArn\": {\"Ref\": \"TopicBFC7AF6E\"}}}, {\"SNSAction\": {\"Encoding\": \"Base64\", \"TopicArn\": {\"Ref\": \"TopicBFC7AF6E\"}}}, {\"BounceAction\": {\"Message\": \"Message content rejected\", \"Sender\": \"cdk-ses-receipt-test@yopmail.com\", \"SmtpReplyCode\": \"500\", \"StatusCode\": \"5.6.1\", \"TopicArn\": {\"Ref\": \"TopicBFC7AF6E\"}}}], \"Enabled\": true, \"Name\": \"FirstRule\", \"Recipients\": [\"cdk-ses-receipt-test@yopmail.com\"], \"ScanEnabled\": true, \"TlsPolicy\": \"Require\"}, \"RuleSetName\": {\"Ref\": \"RuleSetE30C6C48\"}, \"After\": {\"Ref\": \"RuleSetDropSpamRule5809F51B\"}}, \"DependsOn\": [\"BucketPolicyE9A3008A\", \"FunctionAllowSes1829904A\"]}, \"RuleSetSecondRule03178AD4\": {\"Type\": \"AWS::SES::ReceiptRule\", \"Properties\": {\"Rule\": {\"Actions\": [{\"StopAction\": {\"Scope\": \"RuleSet\", \"TopicArn\": {\"Ref\": \"TopicBFC7AF6E\"}}}], \"Enabled\": true}, \"RuleSetName\": {\"Ref\": \"RuleSetE30C6C48\"}, \"After\": {\"Ref\": \"RuleSetFirstRule0A27C8CC\"}}}, \"SingletonLambda224e77f9a32e4b4dac32983477abba16ServiceRole3037F5B4\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"SingletonLambda224e77f9a32e4b4dac32983477abba164533EA15\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"96d0b6be9a64ae309bf89a86f5515453f0fa1d07b4f6b37198051cc98e251f34.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"SingletonLambda224e77f9a32e4b4dac32983477abba16ServiceRole3037F5B4\", \"Arn\"]}, \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"SingletonLambda224e77f9a32e4b4dac32983477abba16ServiceRole3037F5B4\"]}, \"SingletonLambda224e77f9a32e4b4dac32983477abba16AllowSesB42DF904\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"SingletonLambda224e77f9a32e4b4dac32983477abba164533EA15\", \"Arn\"]}, \"Principal\": \"ses.amazonaws.com\", \"SourceAccount\": {\"Ref\": \"AWS::AccountId\"}}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as kms from 'aws-cdk-lib/aws-kms';\nimport * as lambda from 'aws-cdk-lib/aws-lambda';\nimport * as s3 from 'aws-cdk-lib/aws-s3';\nimport * as ses from 'aws-cdk-lib/aws-ses';\nimport * as sns from 'aws-cdk-lib/aws-sns';\nimport * as cdk from 'aws-cdk-lib';\nimport * as actions from 'aws-cdk-lib/aws-ses-actions';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'aws-cdk-ses-receipt');\n\nconst topic = new sns.Topic(stack, 'Topic');\n\nconst fn = new lambda.Function(stack, 'Function', {\n  code: lambda.Code.fromInline('exports.handler = async (event) => event;'),\n  handler: 'index.handler',\n  runtime: lambda.Runtime.NODEJS_14_X,\n});\n\nconst bucket = new s3.Bucket(stack, 'Bucket');\n\nconst kmsKey = new kms.Key(stack, 'Key');\n\nconst ruleSet = new ses.ReceiptRuleSet(stack, 'RuleSet', {\n  dropSpam: true,\n});\n\nconst firstRule = ruleSet.addRule('FirstRule', {\n  actions: [\n    new actions.AddHeader({\n      name: 'X-My-Header',\n      value: 'value',\n    }),\n    new actions.Lambda({\n      function: fn,\n      invocationType: actions.LambdaInvocationType.REQUEST_RESPONSE,\n      topic,\n    }),\n    new actions.S3({\n      bucket,\n      kmsKey,\n      objectKeyPrefix: 'emails/',\n      topic,\n    }),\n    new actions.Sns({\n      encoding: actions.EmailEncoding.BASE64,\n      topic,\n    }),\n  ],\n  receiptRuleName: 'FirstRule',\n  recipients: ['cdk-ses-receipt-test@yopmail.com'],\n  scanEnabled: true,\n  tlsPolicy: ses.TlsPolicy.REQUIRE,\n});\n\nfirstRule.addAction(new actions.Bounce({\n  sender: 'cdk-ses-receipt-test@yopmail.com',\n  template: actions.BounceTemplate.MESSAGE_CONTENT_REJECTED,\n  topic,\n}));\n\nconst secondRule = ruleSet.addRule('SecondRule');\n\nsecondRule.addAction(new actions.Stop({\n  topic,\n}));\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"VPCB9E5F0B4\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"AwsCdkFsxLustre/VPC\"}]}}, \"VPCPublicSubnet1SubnetB4246D30\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"AwsCdkFsxLustre/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableFEE4B781\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"AwsCdkFsxLustre/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableAssociation0B0896DC\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}}}, \"VPCPublicSubnet1DefaultRoute91CEF279\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet1EIP6AD938E8\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"AwsCdkFsxLustre/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1NATGatewayE0556630\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet1EIP6AD938E8\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"AwsCdkFsxLustre/VPC/PublicSubnet1\"}]}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\"]}, \"VPCPublicSubnet2Subnet74179F39\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"AwsCdkFsxLustre/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTable6F1A15F1\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"AwsCdkFsxLustre/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTableAssociation5A808732\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}}}, \"VPCPublicSubnet2DefaultRouteB7481BBA\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet2EIP4947BC00\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"AwsCdkFsxLustre/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2NATGateway3C070193\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet2EIP4947BC00\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"AwsCdkFsxLustre/VPC/PublicSubnet2\"}]}, \"DependsOn\": [\"VPCPublicSubnet2DefaultRouteB7481BBA\", \"VPCPublicSubnet2RouteTableAssociation5A808732\"]}, \"VPCPrivateSubnet1Subnet8BCA10E0\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"AwsCdkFsxLustre/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableBE8A6027\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"AwsCdkFsxLustre/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableAssociation347902D1\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}}}, \"VPCPrivateSubnet1DefaultRouteAE1D6490\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet1NATGatewayE0556630\"}}}, \"VPCPrivateSubnet2SubnetCFCDAA7A\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"AwsCdkFsxLustre/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTable0A19E10E\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"AwsCdkFsxLustre/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTableAssociation0C73D413\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}}}, \"VPCPrivateSubnet2DefaultRouteF4F5CFD2\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet2NATGateway3C070193\"}}}, \"VPCIGWB7E252D3\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"AwsCdkFsxLustre/VPC\"}]}}, \"VPCVPCGW99B986DC\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"InternetGatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}}, \"FsxLustreFileSystemFsxLustreSecurityGroup1C661EA7\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"AwsCdkFsxLustre/FsxLustreFileSystem/FsxLustreSecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}}, \"FsxLustreFileSystemFsxLustreSecurityGroupfromAwsCdkFsxLustreFsxLustreFileSystemFsxLustreSecurityGroup95767E0C98810230FA2D695\": {\"Type\": \"AWS::EC2::SecurityGroupIngress\", \"Properties\": {\"IpProtocol\": \"tcp\", \"Description\": \"from AwsCdkFsxLustreFsxLustreFileSystemFsxLustreSecurityGroup95767E0C:988-1023\", \"FromPort\": 988, \"GroupId\": {\"Fn::GetAtt\": [\"FsxLustreFileSystemFsxLustreSecurityGroup1C661EA7\", \"GroupId\"]}, \"SourceSecurityGroupId\": {\"Fn::GetAtt\": [\"FsxLustreFileSystemFsxLustreSecurityGroup1C661EA7\", \"GroupId\"]}, \"ToPort\": 1023}}, \"FsxLustreFileSystemFsxLustreSecurityGroupfromAwsCdkFsxLustreinstInstanceSecurityGroup9566CC4898810234C78D25F\": {\"Type\": \"AWS::EC2::SecurityGroupIngress\", \"Properties\": {\"IpProtocol\": \"tcp\", \"Description\": \"from AwsCdkFsxLustreinstInstanceSecurityGroup9566CC48:988-1023\", \"FromPort\": 988, \"GroupId\": {\"Fn::GetAtt\": [\"FsxLustreFileSystemFsxLustreSecurityGroup1C661EA7\", \"GroupId\"]}, \"SourceSecurityGroupId\": {\"Fn::GetAtt\": [\"instInstanceSecurityGroup54790689\", \"GroupId\"]}, \"ToPort\": 1023}}, \"FsxLustreFileSystem1F786378\": {\"Type\": \"AWS::FSx::FileSystem\", \"Properties\": {\"FileSystemType\": \"LUSTRE\", \"SubnetIds\": [{\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}], \"LustreConfiguration\": {\"DataCompressionType\": \"LZ4\", \"DeploymentType\": \"SCRATCH_2\"}, \"SecurityGroupIds\": [{\"Fn::GetAtt\": [\"FsxLustreFileSystemFsxLustreSecurityGroup1C661EA7\", \"GroupId\"]}], \"StorageCapacity\": 1200}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"instInstanceSecurityGroup54790689\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"AwsCdkFsxLustre/inst/InstanceSecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"Tags\": [{\"Key\": \"Name\", \"Value\": \"AwsCdkFsxLustre/inst\"}], \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}}, \"instInstanceRoleFE783FB1\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"ec2.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"AwsCdkFsxLustre/inst\"}]}}, \"instInstanceProfile59FAEED2\": {\"Type\": \"AWS::IAM::InstanceProfile\", \"Properties\": {\"Roles\": [{\"Ref\": \"instInstanceRoleFE783FB1\"}]}}, \"instF992429F\": {\"Type\": \"AWS::EC2::Instance\", \"Properties\": {\"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"IamInstanceProfile\": {\"Ref\": \"instInstanceProfile59FAEED2\"}, \"ImageId\": {\"Ref\": \"SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter\"}, \"InstanceType\": \"t2.large\", \"SecurityGroupIds\": [{\"Fn::GetAtt\": [\"instInstanceSecurityGroup54790689\", \"GroupId\"]}], \"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"AwsCdkFsxLustre/inst\"}], \"UserData\": {\"Fn::Base64\": \"#!/bin/bash\"}}, \"DependsOn\": [\"instInstanceRoleFE783FB1\"]}}, \"Parameters\": {\"SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter\": {\"Type\": \"AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>\", \"Default\": \"/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2\"}, \"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import { AmazonLinuxGeneration, AmazonLinuxImage, Instance, InstanceClass, InstanceSize, InstanceType, SubnetType, Vpc } from 'aws-cdk-lib/aws-ec2';\nimport { App, RemovalPolicy, Stack } from 'aws-cdk-lib';\nimport { LustreDeploymentType, LustreFileSystem, LustreDataCompressionType } from 'aws-cdk-lib/aws-fsx';\n\nconst app = new App();\n\nconst stack = new Stack(app, 'AwsCdkFsxLustre');\n\nconst vpc = new Vpc(stack, 'VPC', { restrictDefaultSecurityGroup: false });\n\nconst storageCapacity = 1200;\nconst lustreConfiguration = {\n  deploymentType: LustreDeploymentType.SCRATCH_2,\n  dataCompressionType: LustreDataCompressionType.LZ4,\n};\nconst fs = new LustreFileSystem(stack, 'FsxLustreFileSystem', {\n  lustreConfiguration,\n  storageCapacityGiB: storageCapacity,\n  vpc,\n  vpcSubnet: vpc.privateSubnets[0],\n  removalPolicy: RemovalPolicy.DESTROY,\n});\n\nconst inst = new Instance(stack, 'inst', {\n  instanceType: InstanceType.of(InstanceClass.T2, InstanceSize.LARGE),\n  machineImage: new AmazonLinuxImage({\n    generation: AmazonLinuxGeneration.AMAZON_LINUX_2,\n  }),\n  vpc,\n  vpcSubnets: {\n    subnetType: SubnetType.PUBLIC,\n  },\n});\nfs.connections.allowDefaultPortFrom(inst);\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"PoolD3F588B8\": {\"Type\": \"AWS::Cognito::UserPool\", \"Properties\": {\"AccountRecoverySetting\": {\"RecoveryMechanisms\": [{\"Name\": \"verified_phone_number\", \"Priority\": 1}, {\"Name\": \"verified_email\", \"Priority\": 2}]}, \"AdminCreateUserConfig\": {\"AllowAdminCreateUserOnly\": true}, \"EmailVerificationMessage\": \"The verification code to your new account is {####}\", \"EmailVerificationSubject\": \"Verify your new account\", \"SmsVerificationMessage\": \"The verification code to your new account is {####}\", \"UserPoolName\": \"myPool\", \"VerificationMessageTemplate\": {\"DefaultEmailOption\": \"CONFIRM_WITH_CODE\", \"EmailMessage\": \"The verification code to your new account is {####}\", \"EmailSubject\": \"Verify your new account\", \"SmsMessage\": \"The verification code to your new account is {####}\"}}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"ApiF70053CD\": {\"Type\": \"AWS::AppSync::GraphQLApi\", \"Properties\": {\"AuthenticationType\": \"AMAZON_COGNITO_USER_POOLS\", \"Name\": \"demoapi\", \"AdditionalAuthenticationProviders\": [{\"AuthenticationType\": \"API_KEY\"}], \"UserPoolConfig\": {\"AwsRegion\": {\"Ref\": \"AWS::Region\"}, \"DefaultAction\": \"ALLOW\", \"UserPoolId\": {\"Ref\": \"PoolD3F588B8\"}}}}, \"ApiSchema510EECD7\": {\"Type\": \"AWS::AppSync::GraphQLSchema\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"Definition\": \"type ServiceVersion @aws_api_key {\n  version: String!\n}\n\ntype Customer @aws_api_key {\n  id: String!\n  name: String!\n}\n\ninput SaveCustomerInput {\n  name: String!\n}\n\ntype Order @aws_api_key {\n  customer: String!\n  order: String!\n}\n\ntype Payment @aws_api_key {\n  id: String!\n  amount: String!\n}\n\ninput PaymentInput {\n  amount: String!\n}\n\ntype Query @aws_api_key {\n  getServiceVersion: ServiceVersion\n  getCustomers: [Customer]\n  getCustomersNotConsistent: [Customer]\n  getCustomersConsistent: [Customer]\n  getCustomer(id: String): Customer\n  getCustomerNotConsistent(id: String): Customer\n  getCustomerConsistent(id: String): Customer\n  getCustomerOrdersEq(customer: String): Order\n  getCustomerOrdersLt(customer: String): Order\n  getCustomerOrdersLe(customer: String): Order\n  getCustomerOrdersGt(customer: String): Order\n  getCustomerOrdersGe(customer: String): Order\n  getCustomerOrdersNotConsistentEq(customer: String): Order\n  getCustomerOrdersNotConsistentLt(customer: String): Order\n  getCustomerOrdersNotConsistentLe(customer: String): Order\n  getCustomerOrdersNotConsistentGt(customer: String): Order\n  getCustomerOrdersNotConsistentGe(customer: String): Order\n  getCustomerOrdersConsistentEq(customer: String): Order\n  getCustomerOrdersConsistentLt(customer: String): Order\n  getCustomerOrdersConsistentLe(customer: String): Order\n  getCustomerOrdersConsistentGt(customer: String): Order\n  getCustomerOrdersConsistentGe(customer: String): Order\n  getCustomerOrdersFilter(customer: String, order: String): Order\n  getCustomerOrdersBetween(customer: String, order1: String, order2: String): Order\n  getOrderCustomersEq(order: String): [Customer]\n  getOrderCustomersLt(order: String): [Customer]\n  getOrderCustomersLe(order: String): [Customer]\n  getOrderCustomersGt(order: String): [Customer]\n  getOrderCustomersGe(order: String): [Customer]\n  getOrderCustomersNotConsistentEq(order: String): [Customer]\n  getOrderCustomersNotConsistentLt(order: String): [Customer]\n  getOrderCustomersNotConsistentLe(order: String): [Customer]\n  getOrderCustomersNotConsistentGt(order: String): [Customer]\n  getOrderCustomersNotConsistentGe(order: String): [Customer]\n  getOrderCustomersConsistentEq(order: String): [Customer]\n  getOrderCustomersConsistentLt(order: String): [Customer]\n  getOrderCustomersConsistentLe(order: String): [Customer]\n  getOrderCustomersConsistentGt(order: String): [Customer]\n  getOrderCustomersConsistentGe(order: String): [Customer]\n  getOrderCustomersFilter(order: String, customer: String): [Customer]\n  getOrderCustomersBetween(order: String, customer1: String, customer2: String): [Customer]\n  getPayment(id: String): Payment\n  getPaymentConsistent(id: String): Payment\n}\n\ninput FirstOrderInput {\n  product: String!\n  quantity: Int!\n}\n\ntype Mutation @aws_api_key {\n  addCustomer(customer: SaveCustomerInput!): Customer\n  saveCustomer(id: String!, customer: SaveCustomerInput!): Customer\n  removeCustomer(id: String!): Customer\n  saveCustomerWithFirstOrder(customer: SaveCustomerInput!, order: FirstOrderInput!, referral: String): Order\n  savePayment(payment: PaymentInput!): Payment\n  doPostOnAws: String!\n}\n\"}}, \"ApiDefaultApiKeyF991C37B\": {\"Type\": \"AWS::AppSync::ApiKey\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}}, \"DependsOn\": [\"ApiSchema510EECD7\"]}, \"Apinone1F55F3F3\": {\"Type\": \"AWS::AppSync::DataSource\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"Name\": \"None\", \"Type\": \"NONE\"}}, \"ApiQuerygetServiceVersionDA048589\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"getServiceVersion\", \"TypeName\": \"Query\", \"DataSourceName\": \"None\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\\\"version\\\":\\\"2017-02-28\\\"}\", \"ResponseMappingTemplate\": \"{\\\"version\\\":\\\"v1\\\"}\"}, \"DependsOn\": [\"Apinone1F55F3F3\", \"ApiSchema510EECD7\"]}, \"ApicustomerDsServiceRole76CAD539\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"appsync.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"ApicustomerDsServiceRoleDefaultPolicyF8E72AE7\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"dynamodb:BatchGetItem\", \"dynamodb:BatchWriteItem\", \"dynamodb:ConditionCheckItem\", \"dynamodb:DeleteItem\", \"dynamodb:DescribeTable\", \"dynamodb:GetItem\", \"dynamodb:GetRecords\", \"dynamodb:GetShardIterator\", \"dynamodb:PutItem\", \"dynamodb:Query\", \"dynamodb:Scan\", \"dynamodb:UpdateItem\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"CustomerTable260DCC08\", \"Arn\"]}, {\"Ref\": \"AWS::NoValue\"}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"ApicustomerDsServiceRoleDefaultPolicyF8E72AE7\", \"Roles\": [{\"Ref\": \"ApicustomerDsServiceRole76CAD539\"}]}}, \"ApicustomerDsFE73DAC5\": {\"Type\": \"AWS::AppSync::DataSource\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"Name\": \"Customer\", \"Type\": \"AMAZON_DYNAMODB\", \"DynamoDBConfig\": {\"AwsRegion\": {\"Ref\": \"AWS::Region\"}, \"TableName\": {\"Ref\": \"CustomerTable260DCC08\"}}, \"ServiceRoleArn\": {\"Fn::GetAtt\": [\"ApicustomerDsServiceRole76CAD539\", \"Arn\"]}}}, \"ApiorderDsServiceRoleCC2040C0\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"appsync.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"ApiorderDsServiceRoleDefaultPolicy3315FCF4\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"dynamodb:BatchGetItem\", \"dynamodb:BatchWriteItem\", \"dynamodb:ConditionCheckItem\", \"dynamodb:DeleteItem\", \"dynamodb:DescribeTable\", \"dynamodb:GetItem\", \"dynamodb:GetRecords\", \"dynamodb:GetShardIterator\", \"dynamodb:PutItem\", \"dynamodb:Query\", \"dynamodb:Scan\", \"dynamodb:UpdateItem\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"OrderTable416EB896\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"OrderTable416EB896\", \"Arn\"]}, \"/index/*\"]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"ApiorderDsServiceRoleDefaultPolicy3315FCF4\", \"Roles\": [{\"Ref\": \"ApiorderDsServiceRoleCC2040C0\"}]}}, \"ApiorderDsB50C8AAD\": {\"Type\": \"AWS::AppSync::DataSource\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"Name\": \"Order\", \"Type\": \"AMAZON_DYNAMODB\", \"DynamoDBConfig\": {\"AwsRegion\": {\"Ref\": \"AWS::Region\"}, \"TableName\": {\"Ref\": \"OrderTable416EB896\"}}, \"ServiceRoleArn\": {\"Fn::GetAtt\": [\"ApiorderDsServiceRoleCC2040C0\", \"Arn\"]}}}, \"ApipaymentDsServiceRole0DAC58D6\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"appsync.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"ApipaymentDsServiceRoleDefaultPolicy528E42B0\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"dynamodb:BatchGetItem\", \"dynamodb:BatchWriteItem\", \"dynamodb:ConditionCheckItem\", \"dynamodb:DeleteItem\", \"dynamodb:DescribeTable\", \"dynamodb:GetItem\", \"dynamodb:GetRecords\", \"dynamodb:GetShardIterator\", \"dynamodb:PutItem\", \"dynamodb:Query\", \"dynamodb:Scan\", \"dynamodb:UpdateItem\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":dynamodb:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":table/PaymentTable\"]]}, {\"Ref\": \"AWS::NoValue\"}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"ApipaymentDsServiceRoleDefaultPolicy528E42B0\", \"Roles\": [{\"Ref\": \"ApipaymentDsServiceRole0DAC58D6\"}]}}, \"ApipaymentDs95C7AC36\": {\"Type\": \"AWS::AppSync::DataSource\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"Name\": \"Payment\", \"Type\": \"AMAZON_DYNAMODB\", \"DynamoDBConfig\": {\"AwsRegion\": {\"Ref\": \"AWS::Region\"}, \"TableName\": \"PaymentTable\"}, \"ServiceRoleArn\": {\"Fn::GetAtt\": [\"ApipaymentDsServiceRole0DAC58D6\", \"Arn\"]}}}, \"ApiQueryGetCustomersAD7B06C3\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"getCustomers\", \"TypeName\": \"Query\", \"DataSourceName\": \"Customer\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\\\"version\\\" : \\\"2017-02-28\\\", \\\"operation\\\" : \\\"Scan\\\", \\\"consistentRead\\\": false}\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result.items)\"}, \"DependsOn\": [\"ApicustomerDsFE73DAC5\", \"ApiSchema510EECD7\"]}, \"ApiQueryGetCustomer5EC5BDE8\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"getCustomer\", \"TypeName\": \"Query\", \"DataSourceName\": \"Customer\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\\\"version\\\": \\\"2017-02-28\\\", \\\"operation\\\": \\\"GetItem\\\", \\\"consistentRead\\\": false, \\\"key\\\": {\\\"id\\\": $util.dynamodb.toDynamoDBJson($ctx.args.id)}}\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result)\"}, \"DependsOn\": [\"ApicustomerDsFE73DAC5\", \"ApiSchema510EECD7\"]}, \"ApiQueryGetCusomtersNotConsistent851627D3\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"getCustomersNotConsistent\", \"TypeName\": \"Query\", \"DataSourceName\": \"Customer\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\\\"version\\\" : \\\"2017-02-28\\\", \\\"operation\\\" : \\\"Scan\\\", \\\"consistentRead\\\": false}\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result.items)\"}, \"DependsOn\": [\"ApicustomerDsFE73DAC5\", \"ApiSchema510EECD7\"]}, \"ApiQueryGetCustomerNotConsistent090667B1\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"getCustomerNotConsistent\", \"TypeName\": \"Query\", \"DataSourceName\": \"Customer\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\\\"version\\\": \\\"2017-02-28\\\", \\\"operation\\\": \\\"GetItem\\\", \\\"consistentRead\\\": false, \\\"key\\\": {\\\"id\\\": $util.dynamodb.toDynamoDBJson($ctx.args.id)}}\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result)\"}, \"DependsOn\": [\"ApicustomerDsFE73DAC5\", \"ApiSchema510EECD7\"]}, \"ApiQueryGetCustomersConsistentCBD09D98\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"getCustomersConsistent\", \"TypeName\": \"Query\", \"DataSourceName\": \"Customer\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\\\"version\\\" : \\\"2017-02-28\\\", \\\"operation\\\" : \\\"Scan\\\", \\\"consistentRead\\\": true}\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result.items)\"}, \"DependsOn\": [\"ApicustomerDsFE73DAC5\", \"ApiSchema510EECD7\"]}, \"ApiQueryGetCustomerConsistentAE365D03\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"getCustomerConsistent\", \"TypeName\": \"Query\", \"DataSourceName\": \"Customer\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\\\"version\\\": \\\"2017-02-28\\\", \\\"operation\\\": \\\"GetItem\\\", \\\"consistentRead\\\": true, \\\"key\\\": {\\\"id\\\": $util.dynamodb.toDynamoDBJson($ctx.args.id)}}\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result)\"}, \"DependsOn\": [\"ApicustomerDsFE73DAC5\", \"ApiSchema510EECD7\"]}, \"ApiMutationAddCustomer4E43DA9D\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"addCustomer\", \"TypeName\": \"Mutation\", \"DataSourceName\": \"Customer\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"\n      #set($input = $ctx.args.customer)\n      \n      {\n        \\\"version\\\": \\\"2017-02-28\\\",\n        \\\"operation\\\": \\\"PutItem\\\",\n        \\\"key\\\" : {\n      \\\"id\\\" : $util.dynamodb.toDynamoDBJson($util.autoId())\n    },\n        \\\"attributeValues\\\": $util.dynamodb.toMapValuesJson($input)\n      }\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result)\"}, \"DependsOn\": [\"ApicustomerDsFE73DAC5\", \"ApiSchema510EECD7\"]}, \"ApiMutationSaveCustomer9E1B960E\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"saveCustomer\", \"TypeName\": \"Mutation\", \"DataSourceName\": \"Customer\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"\n      #set($input = $ctx.args.customer)\n      \n      {\n        \\\"version\\\": \\\"2017-02-28\\\",\n        \\\"operation\\\": \\\"PutItem\\\",\n        \\\"key\\\" : {\n      \\\"id\\\" : $util.dynamodb.toDynamoDBJson($ctx.args.id)\n    },\n        \\\"attributeValues\\\": $util.dynamodb.toMapValuesJson($input)\n      }\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result)\"}, \"DependsOn\": [\"ApicustomerDsFE73DAC5\", \"ApiSchema510EECD7\"]}, \"ApiMutationSaveCustomerWithFirstOrder9E0E3BDE\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"saveCustomerWithFirstOrder\", \"TypeName\": \"Mutation\", \"DataSourceName\": \"Customer\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"\n      #set($input = $ctx.args.order)\n      $util.qr($input.put(\\\"referral\\\", referral))\n      {\n        \\\"version\\\": \\\"2017-02-28\\\",\n        \\\"operation\\\": \\\"PutItem\\\",\n        \\\"key\\\" : {\n      \\\"order\\\" : $util.dynamodb.toDynamoDBJson($util.autoId()),\\\"customer\\\" : $util.dynamodb.toDynamoDBJson($ctx.args.customer.id)\n    },\n        \\\"attributeValues\\\": $util.dynamodb.toMapValuesJson($input)\n      }\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result)\"}, \"DependsOn\": [\"ApicustomerDsFE73DAC5\", \"ApiSchema510EECD7\"]}, \"ApiMutationRemoveCustomer9CB404E8\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"removeCustomer\", \"TypeName\": \"Mutation\", \"DataSourceName\": \"Customer\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\\\"version\\\": \\\"2017-02-28\\\", \\\"operation\\\": \\\"DeleteItem\\\", \\\"key\\\": {\\\"id\\\": $util.dynamodb.toDynamoDBJson($ctx.args.id)}}\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result)\"}, \"DependsOn\": [\"ApicustomerDsFE73DAC5\", \"ApiSchema510EECD7\"]}, \"ApiQueryGetCustomerOrdersEq8D77201B\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"getCustomerOrdersEq\", \"TypeName\": \"Query\", \"DataSourceName\": \"Order\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\\\"version\\\" : \\\"2017-02-28\\\", \\\"operation\\\" : \\\"Query\\\",  \\\"consistentRead\\\": false, \\\"query\\\" : {\n              \\\"expression\\\" : \\\"#customer = :customer\\\",\n              \\\"expressionNames\\\" : {\n                \\\"#customer\\\" : \\\"customer\\\"\n              },\n              \\\"expressionValues\\\" : {\n                \\\":customer\\\" : $util.dynamodb.toDynamoDBJson($ctx.args.customer)\n              }\n            }}\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result.items)\"}, \"DependsOn\": [\"ApiorderDsB50C8AAD\", \"ApiSchema510EECD7\"]}, \"ApiQueryGetOrderCustomersEq37D9DEE0\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"getOrderCustomersEq\", \"TypeName\": \"Query\", \"DataSourceName\": \"Order\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\\\"version\\\" : \\\"2017-02-28\\\", \\\"operation\\\" : \\\"Query\\\",  \\\"consistentRead\\\": false, \\\"index\\\" : \\\"orderIndex\\\", \\\"query\\\" : {\n              \\\"expression\\\" : \\\"#order = :order\\\",\n              \\\"expressionNames\\\" : {\n                \\\"#order\\\" : \\\"order\\\"\n              },\n              \\\"expressionValues\\\" : {\n                \\\":order\\\" : $util.dynamodb.toDynamoDBJson($ctx.args.order)\n              }\n            }}\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result.items)\"}, \"DependsOn\": [\"ApiorderDsB50C8AAD\", \"ApiSchema510EECD7\"]}, \"ApiQueryGetCustomerOrdersLt0C55634C\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"getCustomerOrdersLt\", \"TypeName\": \"Query\", \"DataSourceName\": \"Order\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\\\"version\\\" : \\\"2017-02-28\\\", \\\"operation\\\" : \\\"Query\\\",  \\\"consistentRead\\\": false, \\\"query\\\" : {\n              \\\"expression\\\" : \\\"#customer < :customer\\\",\n              \\\"expressionNames\\\" : {\n                \\\"#customer\\\" : \\\"customer\\\"\n              },\n              \\\"expressionValues\\\" : {\n                \\\":customer\\\" : $util.dynamodb.toDynamoDBJson($ctx.args.customer)\n              }\n            }}\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result.items)\"}, \"DependsOn\": [\"ApiorderDsB50C8AAD\", \"ApiSchema510EECD7\"]}, \"ApiQueryGetOrderCustomersLt4AB5E0F8\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"getOrderCustomersLt\", \"TypeName\": \"Query\", \"DataSourceName\": \"Order\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\\\"version\\\" : \\\"2017-02-28\\\", \\\"operation\\\" : \\\"Query\\\",  \\\"consistentRead\\\": false, \\\"index\\\" : \\\"orderIndex\\\", \\\"query\\\" : {\n              \\\"expression\\\" : \\\"#order < :order\\\",\n              \\\"expressionNames\\\" : {\n                \\\"#order\\\" : \\\"order\\\"\n              },\n              \\\"expressionValues\\\" : {\n                \\\":order\\\" : $util.dynamodb.toDynamoDBJson($ctx.args.order)\n              }\n            }}\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result.items)\"}, \"DependsOn\": [\"ApiorderDsB50C8AAD\", \"ApiSchema510EECD7\"]}, \"ApiQueryGetCustomerOrdersLe15936B5B\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"getCustomerOrdersLe\", \"TypeName\": \"Query\", \"DataSourceName\": \"Order\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\\\"version\\\" : \\\"2017-02-28\\\", \\\"operation\\\" : \\\"Query\\\",  \\\"consistentRead\\\": false, \\\"query\\\" : {\n              \\\"expression\\\" : \\\"#customer <= :customer\\\",\n              \\\"expressionNames\\\" : {\n                \\\"#customer\\\" : \\\"customer\\\"\n              },\n              \\\"expressionValues\\\" : {\n                \\\":customer\\\" : $util.dynamodb.toDynamoDBJson($ctx.args.customer)\n              }\n            }}\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result.items)\"}, \"DependsOn\": [\"ApiorderDsB50C8AAD\", \"ApiSchema510EECD7\"]}, \"ApiQueryGetOrderCustomersLeE726F374\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"getOrderCustomersLe\", \"TypeName\": \"Query\", \"DataSourceName\": \"Order\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\\\"version\\\" : \\\"2017-02-28\\\", \\\"operation\\\" : \\\"Query\\\",  \\\"consistentRead\\\": false, \\\"index\\\" : \\\"orderIndex\\\", \\\"query\\\" : {\n              \\\"expression\\\" : \\\"#order <= :order\\\",\n              \\\"expressionNames\\\" : {\n                \\\"#order\\\" : \\\"order\\\"\n              },\n              \\\"expressionValues\\\" : {\n                \\\":order\\\" : $util.dynamodb.toDynamoDBJson($ctx.args.order)\n              }\n            }}\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result.items)\"}, \"DependsOn\": [\"ApiorderDsB50C8AAD\", \"ApiSchema510EECD7\"]}, \"ApiQueryGetCustomerOrdersGtAABE2A40\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"getCustomerOrdersGt\", \"TypeName\": \"Query\", \"DataSourceName\": \"Order\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\\\"version\\\" : \\\"2017-02-28\\\", \\\"operation\\\" : \\\"Query\\\",  \\\"consistentRead\\\": false, \\\"query\\\" : {\n              \\\"expression\\\" : \\\"#customer > :customer\\\",\n              \\\"expressionNames\\\" : {\n                \\\"#customer\\\" : \\\"customer\\\"\n              },\n              \\\"expressionValues\\\" : {\n                \\\":customer\\\" : $util.dynamodb.toDynamoDBJson($ctx.args.customer)\n              }\n            }}\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result.items)\"}, \"DependsOn\": [\"ApiorderDsB50C8AAD\", \"ApiSchema510EECD7\"]}, \"ApiQueryGetOrderCustomersGtB37E8428\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"getOrderCustomersGt\", \"TypeName\": \"Query\", \"DataSourceName\": \"Order\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\\\"version\\\" : \\\"2017-02-28\\\", \\\"operation\\\" : \\\"Query\\\",  \\\"consistentRead\\\": false, \\\"index\\\" : \\\"orderIndex\\\", \\\"query\\\" : {\n              \\\"expression\\\" : \\\"#order > :order\\\",\n              \\\"expressionNames\\\" : {\n                \\\"#order\\\" : \\\"order\\\"\n              },\n              \\\"expressionValues\\\" : {\n                \\\":order\\\" : $util.dynamodb.toDynamoDBJson($ctx.args.order)\n              }\n            }}\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result.items)\"}, \"DependsOn\": [\"ApiorderDsB50C8AAD\", \"ApiSchema510EECD7\"]}, \"ApiQueryGetCustomerOrdersGeD1854D76\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"getCustomerOrdersGe\", \"TypeName\": \"Query\", \"DataSourceName\": \"Order\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\\\"version\\\" : \\\"2017-02-28\\\", \\\"operation\\\" : \\\"Query\\\",  \\\"consistentRead\\\": false, \\\"query\\\" : {\n              \\\"expression\\\" : \\\"#customer >= :customer\\\",\n              \\\"expressionNames\\\" : {\n                \\\"#customer\\\" : \\\"customer\\\"\n              },\n              \\\"expressionValues\\\" : {\n                \\\":customer\\\" : $util.dynamodb.toDynamoDBJson($ctx.args.customer)\n              }\n            }}\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result.items)\"}, \"DependsOn\": [\"ApiorderDsB50C8AAD\", \"ApiSchema510EECD7\"]}, \"ApiQueryGetOrderCustomersGe1790C495\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"getOrderCustomersGe\", \"TypeName\": \"Query\", \"DataSourceName\": \"Order\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\\\"version\\\" : \\\"2017-02-28\\\", \\\"operation\\\" : \\\"Query\\\",  \\\"consistentRead\\\": false, \\\"index\\\" : \\\"orderIndex\\\", \\\"query\\\" : {\n              \\\"expression\\\" : \\\"#order >= :order\\\",\n              \\\"expressionNames\\\" : {\n                \\\"#order\\\" : \\\"order\\\"\n              },\n              \\\"expressionValues\\\" : {\n                \\\":order\\\" : $util.dynamodb.toDynamoDBJson($ctx.args.order)\n              }\n            }}\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result.items)\"}, \"DependsOn\": [\"ApiorderDsB50C8AAD\", \"ApiSchema510EECD7\"]}, \"ApiQueryGetCustomerOrdersNotConsistentEqD733058C\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"getCustomerOrdersNotConsistentEq\", \"TypeName\": \"Query\", \"DataSourceName\": \"Order\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\\\"version\\\" : \\\"2017-02-28\\\", \\\"operation\\\" : \\\"Query\\\",  \\\"consistentRead\\\": false, \\\"query\\\" : {\n              \\\"expression\\\" : \\\"#customer = :customer\\\",\n              \\\"expressionNames\\\" : {\n                \\\"#customer\\\" : \\\"customer\\\"\n              },\n              \\\"expressionValues\\\" : {\n                \\\":customer\\\" : $util.dynamodb.toDynamoDBJson($ctx.args.customer)\n              }\n            }}\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result.items)\"}, \"DependsOn\": [\"ApiorderDsB50C8AAD\", \"ApiSchema510EECD7\"]}, \"ApiQueryGetOrderCustomersNotConsistentEq3BE248FE\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"getOrderCustomersNotConsistentEq\", \"TypeName\": \"Query\", \"DataSourceName\": \"Order\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\\\"version\\\" : \\\"2017-02-28\\\", \\\"operation\\\" : \\\"Query\\\",  \\\"consistentRead\\\": false, \\\"index\\\" : \\\"orderIndex\\\", \\\"query\\\" : {\n              \\\"expression\\\" : \\\"#order = :order\\\",\n              \\\"expressionNames\\\" : {\n                \\\"#order\\\" : \\\"order\\\"\n              },\n              \\\"expressionValues\\\" : {\n                \\\":order\\\" : $util.dynamodb.toDynamoDBJson($ctx.args.order)\n              }\n            }}\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result.items)\"}, \"DependsOn\": [\"ApiorderDsB50C8AAD\", \"ApiSchema510EECD7\"]}, \"ApiQueryGetCustomerOrdersNotConsistentLt7B43587C\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"getCustomerOrdersNotConsistentLt\", \"TypeName\": \"Query\", \"DataSourceName\": \"Order\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\\\"version\\\" : \\\"2017-02-28\\\", \\\"operation\\\" : \\\"Query\\\",  \\\"consistentRead\\\": false, \\\"query\\\" : {\n              \\\"expression\\\" : \\\"#customer < :customer\\\",\n              \\\"expressionNames\\\" : {\n                \\\"#customer\\\" : \\\"customer\\\"\n              },\n              \\\"expressionValues\\\" : {\n                \\\":customer\\\" : $util.dynamodb.toDynamoDBJson($ctx.args.customer)\n              }\n            }}\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result.items)\"}, \"DependsOn\": [\"ApiorderDsB50C8AAD\", \"ApiSchema510EECD7\"]}, \"ApiQueryGetOrderCustomersNotConsistentLt3B88F412\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"getOrderCustomersNotConsistentLt\", \"TypeName\": \"Query\", \"DataSourceName\": \"Order\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\\\"version\\\" : \\\"2017-02-28\\\", \\\"operation\\\" : \\\"Query\\\",  \\\"consistentRead\\\": false, \\\"index\\\" : \\\"orderIndex\\\", \\\"query\\\" : {\n              \\\"expression\\\" : \\\"#order < :order\\\",\n              \\\"expressionNames\\\" : {\n                \\\"#order\\\" : \\\"order\\\"\n              },\n              \\\"expressionValues\\\" : {\n                \\\":order\\\" : $util.dynamodb.toDynamoDBJson($ctx.args.order)\n              }\n            }}\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result.items)\"}, \"DependsOn\": [\"ApiorderDsB50C8AAD\", \"ApiSchema510EECD7\"]}, \"ApiQueryGetCustomerOrdersNotConsistentLe8817EDDB\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"getCustomerOrdersNotConsistentLe\", \"TypeName\": \"Query\", \"DataSourceName\": \"Order\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\\\"version\\\" : \\\"2017-02-28\\\", \\\"operation\\\" : \\\"Query\\\",  \\\"consistentRead\\\": false, \\\"query\\\" : {\n              \\\"expression\\\" : \\\"#customer <= :customer\\\",\n              \\\"expressionNames\\\" : {\n                \\\"#customer\\\" : \\\"customer\\\"\n              },\n              \\\"expressionValues\\\" : {\n                \\\":customer\\\" : $util.dynamodb.toDynamoDBJson($ctx.args.customer)\n              }\n            }}\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result.items)\"}, \"DependsOn\": [\"ApiorderDsB50C8AAD\", \"ApiSchema510EECD7\"]}, \"ApiQueryGetOrderCustomersNotConsistentLe09B90BC1\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"getOrderCustomersNotConsistentLe\", \"TypeName\": \"Query\", \"DataSourceName\": \"Order\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\\\"version\\\" : \\\"2017-02-28\\\", \\\"operation\\\" : \\\"Query\\\",  \\\"consistentRead\\\": false, \\\"index\\\" : \\\"orderIndex\\\", \\\"query\\\" : {\n              \\\"expression\\\" : \\\"#order <= :order\\\",\n              \\\"expressionNames\\\" : {\n                \\\"#order\\\" : \\\"order\\\"\n              },\n              \\\"expressionValues\\\" : {\n                \\\":order\\\" : $util.dynamodb.toDynamoDBJson($ctx.args.order)\n              }\n            }}\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result.items)\"}, \"DependsOn\": [\"ApiorderDsB50C8AAD\", \"ApiSchema510EECD7\"]}, \"ApiQueryGetCustomerOrdersNotConsistentGt92879DB9\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"getCustomerOrdersNotConsistentGt\", \"TypeName\": \"Query\", \"DataSourceName\": \"Order\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\\\"version\\\" : \\\"2017-02-28\\\", \\\"operation\\\" : \\\"Query\\\",  \\\"consistentRead\\\": false, \\\"query\\\" : {\n              \\\"expression\\\" : \\\"#customer > :customer\\\",\n              \\\"expressionNames\\\" : {\n                \\\"#customer\\\" : \\\"customer\\\"\n              },\n              \\\"expressionValues\\\" : {\n                \\\":customer\\\" : $util.dynamodb.toDynamoDBJson($ctx.args.customer)\n              }\n            }}\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result.items)\"}, \"DependsOn\": [\"ApiorderDsB50C8AAD\", \"ApiSchema510EECD7\"]}, \"ApiQueryGetOrderCustomersNotConsistentGt6C9F2F8F\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"getOrderCustomersNotConsistentGt\", \"TypeName\": \"Query\", \"DataSourceName\": \"Order\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\\\"version\\\" : \\\"2017-02-28\\\", \\\"operation\\\" : \\\"Query\\\",  \\\"consistentRead\\\": false, \\\"index\\\" : \\\"orderIndex\\\", \\\"query\\\" : {\n              \\\"expression\\\" : \\\"#order > :order\\\",\n              \\\"expressionNames\\\" : {\n                \\\"#order\\\" : \\\"order\\\"\n              },\n              \\\"expressionValues\\\" : {\n                \\\":order\\\" : $util.dynamodb.toDynamoDBJson($ctx.args.order)\n              }\n            }}\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result.items)\"}, \"DependsOn\": [\"ApiorderDsB50C8AAD\", \"ApiSchema510EECD7\"]}, \"ApiQueryGetCustomerOrdersNotConsistentGe8F8AA1E1\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"getCustomerOrdersNotConsistentGe\", \"TypeName\": \"Query\", \"DataSourceName\": \"Order\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\\\"version\\\" : \\\"2017-02-28\\\", \\\"operation\\\" : \\\"Query\\\",  \\\"consistentRead\\\": false, \\\"query\\\" : {\n              \\\"expression\\\" : \\\"#customer >= :customer\\\",\n              \\\"expressionNames\\\" : {\n                \\\"#customer\\\" : \\\"customer\\\"\n              },\n              \\\"expressionValues\\\" : {\n                \\\":customer\\\" : $util.dynamodb.toDynamoDBJson($ctx.args.customer)\n              }\n            }}\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result.items)\"}, \"DependsOn\": [\"ApiorderDsB50C8AAD\", \"ApiSchema510EECD7\"]}, \"ApiQueryGetOrderCustomersNotConsistentGe76FFC40E\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"getOrderCustomersNotConsistentGe\", \"TypeName\": \"Query\", \"DataSourceName\": \"Order\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\\\"version\\\" : \\\"2017-02-28\\\", \\\"operation\\\" : \\\"Query\\\",  \\\"consistentRead\\\": false, \\\"index\\\" : \\\"orderIndex\\\", \\\"query\\\" : {\n              \\\"expression\\\" : \\\"#order >= :order\\\",\n              \\\"expressionNames\\\" : {\n                \\\"#order\\\" : \\\"order\\\"\n              },\n              \\\"expressionValues\\\" : {\n                \\\":order\\\" : $util.dynamodb.toDynamoDBJson($ctx.args.order)\n              }\n            }}\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result.items)\"}, \"DependsOn\": [\"ApiorderDsB50C8AAD\", \"ApiSchema510EECD7\"]}, \"ApiQueryGetCustomerOrdersConsistentEq653D75B6\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"getCustomerOrdersConsistentEq\", \"TypeName\": \"Query\", \"DataSourceName\": \"Order\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\\\"version\\\" : \\\"2017-02-28\\\", \\\"operation\\\" : \\\"Query\\\",  \\\"consistentRead\\\": true, \\\"query\\\" : {\n              \\\"expression\\\" : \\\"#customer = :customer\\\",\n              \\\"expressionNames\\\" : {\n                \\\"#customer\\\" : \\\"customer\\\"\n              },\n              \\\"expressionValues\\\" : {\n                \\\":customer\\\" : $util.dynamodb.toDynamoDBJson($ctx.args.customer)\n              }\n            }}\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result.items)\"}, \"DependsOn\": [\"ApiorderDsB50C8AAD\", \"ApiSchema510EECD7\"]}, \"ApiQueryGetOrderCustomersConsistentEq6C9CAA47\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"getOrderCustomersConsistentEq\", \"TypeName\": \"Query\", \"DataSourceName\": \"Order\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\\\"version\\\" : \\\"2017-02-28\\\", \\\"operation\\\" : \\\"Query\\\",  \\\"consistentRead\\\": true, \\\"index\\\" : \\\"orderIndex\\\", \\\"query\\\" : {\n              \\\"expression\\\" : \\\"#order = :order\\\",\n              \\\"expressionNames\\\" : {\n                \\\"#order\\\" : \\\"order\\\"\n              },\n              \\\"expressionValues\\\" : {\n                \\\":order\\\" : $util.dynamodb.toDynamoDBJson($ctx.args.order)\n              }\n            }}\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result.items)\"}, \"DependsOn\": [\"ApiorderDsB50C8AAD\", \"ApiSchema510EECD7\"]}, \"ApiQueryGetCustomerOrdersConsistentLt250BF7EC\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"getCustomerOrdersConsistentLt\", \"TypeName\": \"Query\", \"DataSourceName\": \"Order\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\\\"version\\\" : \\\"2017-02-28\\\", \\\"operation\\\" : \\\"Query\\\",  \\\"consistentRead\\\": true, \\\"query\\\" : {\n              \\\"expression\\\" : \\\"#customer < :customer\\\",\n              \\\"expressionNames\\\" : {\n                \\\"#customer\\\" : \\\"customer\\\"\n              },\n              \\\"expressionValues\\\" : {\n                \\\":customer\\\" : $util.dynamodb.toDynamoDBJson($ctx.args.customer)\n              }\n            }}\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result.items)\"}, \"DependsOn\": [\"ApiorderDsB50C8AAD\", \"ApiSchema510EECD7\"]}, \"ApiQueryGetOrderCustomersConsistentLtB4B34793\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"getOrderCustomersConsistentLt\", \"TypeName\": \"Query\", \"DataSourceName\": \"Order\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\\\"version\\\" : \\\"2017-02-28\\\", \\\"operation\\\" : \\\"Query\\\",  \\\"consistentRead\\\": true, \\\"index\\\" : \\\"orderIndex\\\", \\\"query\\\" : {\n              \\\"expression\\\" : \\\"#order < :order\\\",\n              \\\"expressionNames\\\" : {\n                \\\"#order\\\" : \\\"order\\\"\n              },\n              \\\"expressionValues\\\" : {\n                \\\":order\\\" : $util.dynamodb.toDynamoDBJson($ctx.args.order)\n              }\n            }}\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result.items)\"}, \"DependsOn\": [\"ApiorderDsB50C8AAD\", \"ApiSchema510EECD7\"]}, \"ApiQueryGetCustomerOrdersConsistentLeECDEAB1B\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"getCustomerOrdersConsistentLe\", \"TypeName\": \"Query\", \"DataSourceName\": \"Order\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\\\"version\\\" : \\\"2017-02-28\\\", \\\"operation\\\" : \\\"Query\\\",  \\\"consistentRead\\\": true, \\\"query\\\" : {\n              \\\"expression\\\" : \\\"#customer <= :customer\\\",\n              \\\"expressionNames\\\" : {\n                \\\"#customer\\\" : \\\"customer\\\"\n              },\n              \\\"expressionValues\\\" : {\n                \\\":customer\\\" : $util.dynamodb.toDynamoDBJson($ctx.args.customer)\n              }\n            }}\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result.items)\"}, \"DependsOn\": [\"ApiorderDsB50C8AAD\", \"ApiSchema510EECD7\"]}, \"ApiQueryGetOrderCustomersConsistentLeA46A454C\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"getOrderCustomersConsistentLe\", \"TypeName\": \"Query\", \"DataSourceName\": \"Order\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\\\"version\\\" : \\\"2017-02-28\\\", \\\"operation\\\" : \\\"Query\\\",  \\\"consistentRead\\\": true, \\\"index\\\" : \\\"orderIndex\\\", \\\"query\\\" : {\n              \\\"expression\\\" : \\\"#order <= :order\\\",\n              \\\"expressionNames\\\" : {\n                \\\"#order\\\" : \\\"order\\\"\n              },\n              \\\"expressionValues\\\" : {\n                \\\":order\\\" : $util.dynamodb.toDynamoDBJson($ctx.args.order)\n              }\n            }}\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result.items)\"}, \"DependsOn\": [\"ApiorderDsB50C8AAD\", \"ApiSchema510EECD7\"]}, \"ApiQueryGetCustomerOrdersConsistentGtBC4B2EDF\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"getCustomerOrdersConsistentGt\", \"TypeName\": \"Query\", \"DataSourceName\": \"Order\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\\\"version\\\" : \\\"2017-02-28\\\", \\\"operation\\\" : \\\"Query\\\",  \\\"consistentRead\\\": true, \\\"query\\\" : {\n              \\\"expression\\\" : \\\"#customer > :customer\\\",\n              \\\"expressionNames\\\" : {\n                \\\"#customer\\\" : \\\"customer\\\"\n              },\n              \\\"expressionValues\\\" : {\n                \\\":customer\\\" : $util.dynamodb.toDynamoDBJson($ctx.args.customer)\n              }\n            }}\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result.items)\"}, \"DependsOn\": [\"ApiorderDsB50C8AAD\", \"ApiSchema510EECD7\"]}, \"ApiQueryGetOrderCustomersConsistentGt8185C8F7\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"getOrderCustomersConsistentGt\", \"TypeName\": \"Query\", \"DataSourceName\": \"Order\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\\\"version\\\" : \\\"2017-02-28\\\", \\\"operation\\\" : \\\"Query\\\",  \\\"consistentRead\\\": true, \\\"index\\\" : \\\"orderIndex\\\", \\\"query\\\" : {\n              \\\"expression\\\" : \\\"#order > :order\\\",\n              \\\"expressionNames\\\" : {\n                \\\"#order\\\" : \\\"order\\\"\n              },\n              \\\"expressionValues\\\" : {\n                \\\":order\\\" : $util.dynamodb.toDynamoDBJson($ctx.args.order)\n              }\n            }}\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result.items)\"}, \"DependsOn\": [\"ApiorderDsB50C8AAD\", \"ApiSchema510EECD7\"]}, \"ApiQueryGetCustomerOrdersConsistentGeB76BCC43\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"getCustomerOrdersConsistentGe\", \"TypeName\": \"Query\", \"DataSourceName\": \"Order\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\\\"version\\\" : \\\"2017-02-28\\\", \\\"operation\\\" : \\\"Query\\\",  \\\"consistentRead\\\": true, \\\"query\\\" : {\n              \\\"expression\\\" : \\\"#customer >= :customer\\\",\n              \\\"expressionNames\\\" : {\n                \\\"#customer\\\" : \\\"customer\\\"\n              },\n              \\\"expressionValues\\\" : {\n                \\\":customer\\\" : $util.dynamodb.toDynamoDBJson($ctx.args.customer)\n              }\n            }}\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result.items)\"}, \"DependsOn\": [\"ApiorderDsB50C8AAD\", \"ApiSchema510EECD7\"]}, \"ApiQueryGetOrderCustomersConsistentGeCE4A2D21\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"getOrderCustomersConsistentGe\", \"TypeName\": \"Query\", \"DataSourceName\": \"Order\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\\\"version\\\" : \\\"2017-02-28\\\", \\\"operation\\\" : \\\"Query\\\",  \\\"consistentRead\\\": true, \\\"index\\\" : \\\"orderIndex\\\", \\\"query\\\" : {\n              \\\"expression\\\" : \\\"#order >= :order\\\",\n              \\\"expressionNames\\\" : {\n                \\\"#order\\\" : \\\"order\\\"\n              },\n              \\\"expressionValues\\\" : {\n                \\\":order\\\" : $util.dynamodb.toDynamoDBJson($ctx.args.order)\n              }\n            }}\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result.items)\"}, \"DependsOn\": [\"ApiorderDsB50C8AAD\", \"ApiSchema510EECD7\"]}, \"ApiQueryGetCustomerOrdersFilter854FF70B\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"getCustomerOrdersFilter\", \"TypeName\": \"Query\", \"DataSourceName\": \"Order\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\\\"version\\\" : \\\"2017-02-28\\\", \\\"operation\\\" : \\\"Query\\\",  \\\"consistentRead\\\": false, \\\"query\\\" : {\n              \\\"expression\\\" : \\\"#customer = :customer AND begins_with(#order, :order)\\\",\n              \\\"expressionNames\\\" : {\n                \\\"#customer\\\" : \\\"customer\\\", \\\"#order\\\" : \\\"order\\\"\n              },\n              \\\"expressionValues\\\" : {\n                \\\":customer\\\" : $util.dynamodb.toDynamoDBJson($ctx.args.customer), \\\":order\\\" : $util.dynamodb.toDynamoDBJson($ctx.args.order)\n              }\n            }}\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result.items)\"}, \"DependsOn\": [\"ApiorderDsB50C8AAD\", \"ApiSchema510EECD7\"]}, \"ApiQueryGetCustomerOrdersBetween40B365B9\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"getCustomerOrdersBetween\", \"TypeName\": \"Query\", \"DataSourceName\": \"Order\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\\\"version\\\" : \\\"2017-02-28\\\", \\\"operation\\\" : \\\"Query\\\",  \\\"consistentRead\\\": false, \\\"query\\\" : {\n              \\\"expression\\\" : \\\"#customer = :customer AND #order BETWEEN :order1 AND :order2\\\",\n              \\\"expressionNames\\\" : {\n                \\\"#customer\\\" : \\\"customer\\\", \\\"#order\\\" : \\\"order\\\"\n              },\n              \\\"expressionValues\\\" : {\n                \\\":customer\\\" : $util.dynamodb.toDynamoDBJson($ctx.args.customer), \\\":order1\\\" : $util.dynamodb.toDynamoDBJson($ctx.args.order1), \\\":order2\\\" : $util.dynamodb.toDynamoDBJson($ctx.args.order2)\n              }\n            }}\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result.items)\"}, \"DependsOn\": [\"ApiorderDsB50C8AAD\", \"ApiSchema510EECD7\"]}, \"ApiQueryGetOrderCustomersFilter4E08981B\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"getOrderCustomersFilter\", \"TypeName\": \"Query\", \"DataSourceName\": \"Order\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\\\"version\\\" : \\\"2017-02-28\\\", \\\"operation\\\" : \\\"Query\\\",  \\\"consistentRead\\\": false, \\\"query\\\" : {\n              \\\"expression\\\" : \\\"#order = :order AND begins_with(#customer, :customer)\\\",\n              \\\"expressionNames\\\" : {\n                \\\"#order\\\" : \\\"order\\\", \\\"#customer\\\" : \\\"customer\\\"\n              },\n              \\\"expressionValues\\\" : {\n                \\\":order\\\" : $util.dynamodb.toDynamoDBJson($ctx.args.order), \\\":customer\\\" : $util.dynamodb.toDynamoDBJson($ctx.args.customer)\n              }\n            }}\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result.items)\"}, \"DependsOn\": [\"ApiorderDsB50C8AAD\", \"ApiSchema510EECD7\"]}, \"ApiQueryGetOrderCustomersBetween7C2EFCFE\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"getOrderCustomersBetween\", \"TypeName\": \"Query\", \"DataSourceName\": \"Order\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\\\"version\\\" : \\\"2017-02-28\\\", \\\"operation\\\" : \\\"Query\\\",  \\\"consistentRead\\\": false, \\\"index\\\" : \\\"orderIndex\\\", \\\"query\\\" : {\n              \\\"expression\\\" : \\\"#order = :order AND #customer BETWEEN :customer1 AND :customer2\\\",\n              \\\"expressionNames\\\" : {\n                \\\"#order\\\" : \\\"order\\\", \\\"#customer\\\" : \\\"customer\\\"\n              },\n              \\\"expressionValues\\\" : {\n                \\\":order\\\" : $util.dynamodb.toDynamoDBJson($ctx.args.order), \\\":customer1\\\" : $util.dynamodb.toDynamoDBJson($ctx.args.customer1), \\\":customer2\\\" : $util.dynamodb.toDynamoDBJson($ctx.args.customer2)\n              }\n            }}\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result.items)\"}, \"DependsOn\": [\"ApiorderDsB50C8AAD\", \"ApiSchema510EECD7\"]}, \"ApiQueryGetPayment26F71513\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"getPayment\", \"TypeName\": \"Query\", \"DataSourceName\": \"Payment\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\\\"version\\\": \\\"2017-02-28\\\", \\\"operation\\\": \\\"GetItem\\\", \\\"consistentRead\\\": false, \\\"key\\\": {\\\"id\\\": $util.dynamodb.toDynamoDBJson($ctx.args.id)}}\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result)\"}, \"DependsOn\": [\"ApipaymentDs95C7AC36\", \"ApiSchema510EECD7\"]}, \"ApiQueryGetPaymentConsistent0440A8CE\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"getPaymentConsistent\", \"TypeName\": \"Query\", \"DataSourceName\": \"Payment\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\\\"version\\\": \\\"2017-02-28\\\", \\\"operation\\\": \\\"GetItem\\\", \\\"consistentRead\\\": true, \\\"key\\\": {\\\"id\\\": $util.dynamodb.toDynamoDBJson($ctx.args.id)}}\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result)\"}, \"DependsOn\": [\"ApipaymentDs95C7AC36\", \"ApiSchema510EECD7\"]}, \"ApiMutationSavePayment63C236F7\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"savePayment\", \"TypeName\": \"Mutation\", \"DataSourceName\": \"Payment\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"\n      #set($input = $ctx.args.payment)\n      \n      {\n        \\\"version\\\": \\\"2017-02-28\\\",\n        \\\"operation\\\": \\\"PutItem\\\",\n        \\\"key\\\" : {\n      \\\"id\\\" : $util.dynamodb.toDynamoDBJson($util.autoId())\n    },\n        \\\"attributeValues\\\": $util.dynamodb.toMapValuesJson($input)\n      }\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result)\"}, \"DependsOn\": [\"ApipaymentDs95C7AC36\", \"ApiSchema510EECD7\"]}, \"ApidsServiceRoleADC7D124\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"appsync.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"Apids0DB53FEA\": {\"Type\": \"AWS::AppSync::DataSource\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"Name\": \"http\", \"Type\": \"HTTP\", \"HttpConfig\": {\"Endpoint\": \"https://aws.amazon.com/\"}, \"ServiceRoleArn\": {\"Fn::GetAtt\": [\"ApidsServiceRoleADC7D124\", \"Arn\"]}}}, \"ApiMutationDoPostOnAws6DBBF12B\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"doPostOnAws\", \"TypeName\": \"Mutation\", \"DataSourceName\": \"http\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\n    \\\"version\\\": \\\"2018-05-29\\\",\n    \\\"method\\\": \\\"POST\\\",\n    # if full path is https://api.xxxxxxxxx.com/posts then resourcePath would be /posts\n    \\\"resourcePath\\\": \\\"/path/123\\\",\n    \\\"params\\\":{\n        \\\"body\\\": $util.toJson($ctx.args),\n        \\\"headers\\\":{\n            \\\"Content-Type\\\": \\\"application/json\\\",\n            \\\"Authorization\\\": \\\"$ctx.request.headers.Authorization\\\"\n        }\n    }\n  }\", \"ResponseMappingTemplate\": \"\n    ## Raise a GraphQL field error in case of a datasource invocation error\n    #if($ctx.error)\n      $util.error($ctx.error.message, $ctx.error.type)\n    #end\n    ## if the response status code is not 200, then return an error. Else return the body **\n    #if($ctx.result.statusCode == 200)\n        ## If response is 200, return the body.\n        $ctx.result.body\n    #else\n        ## If response is not 200, append the response to error block.\n        $utils.appendError($ctx.result.body, \\\"$ctx.result.statusCode\\\")\n    #end\n  \"}, \"DependsOn\": [\"Apids0DB53FEA\", \"ApiSchema510EECD7\"]}, \"CustomerTable260DCC08\": {\"Type\": \"AWS::DynamoDB::Table\", \"Properties\": {\"KeySchema\": [{\"AttributeName\": \"id\", \"KeyType\": \"HASH\"}], \"AttributeDefinitions\": [{\"AttributeName\": \"id\", \"AttributeType\": \"S\"}], \"BillingMode\": \"PAY_PER_REQUEST\"}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"OrderTable416EB896\": {\"Type\": \"AWS::DynamoDB::Table\", \"Properties\": {\"KeySchema\": [{\"AttributeName\": \"customer\", \"KeyType\": \"HASH\"}, {\"AttributeName\": \"order\", \"KeyType\": \"RANGE\"}], \"AttributeDefinitions\": [{\"AttributeName\": \"customer\", \"AttributeType\": \"S\"}, {\"AttributeName\": \"order\", \"AttributeType\": \"S\"}], \"BillingMode\": \"PAY_PER_REQUEST\", \"GlobalSecondaryIndexes\": [{\"IndexName\": \"orderIndex\", \"KeySchema\": [{\"AttributeName\": \"order\", \"KeyType\": \"HASH\"}, {\"AttributeName\": \"customer\", \"KeyType\": \"RANGE\"}], \"Projection\": {\"ProjectionType\": \"ALL\"}}]}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"PaymentTableE140D25E\": {\"Type\": \"AWS::DynamoDB::Table\", \"Properties\": {\"KeySchema\": [{\"AttributeName\": \"id\", \"KeyType\": \"HASH\"}], \"AttributeDefinitions\": [{\"AttributeName\": \"id\", \"AttributeType\": \"S\"}], \"BillingMode\": \"PAY_PER_REQUEST\"}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import { join } from 'path';\nimport { UserPool } from 'aws-cdk-lib/aws-cognito';\nimport { AttributeType, BillingMode, Table } from 'aws-cdk-lib/aws-dynamodb';\nimport { App, RemovalPolicy, Stack } from 'aws-cdk-lib';\nimport {\n  AuthorizationType,\n  GraphqlApi,\n  KeyCondition,\n  MappingTemplate,\n  PrimaryKey,\n  SchemaFile,\n  Values,\n} from 'aws-cdk-lib/aws-appsync';\n\n/*\n * Creates an Appsync GraphQL API and with multiple tables.\n * Testing for importing, querying, and mutability.\n *\n * Stack verification steps:\n * Add to a table through appsync GraphQL API.\n * Read from a table through appsync API.\n *\n * -- aws appsync list-graphql-apis                 -- obtain apiId               --\n * -- aws appsync get-graphql-api --api-id [apiId]  -- obtain GraphQL endpoint    --\n * -- aws appsync list-api-keys --api-id [apiId]    -- obtain api key             --\n * -- bash verify.integ.graphql.sh [apiKey] [url]   -- shows query and mutation   --\n */\n\nconst app = new App();\nconst stack = new Stack(app, 'aws-appsync-integ');\n\nconst userPool = new UserPool(stack, 'Pool', {\n  userPoolName: 'myPool',\n});\n\nconst api = new GraphqlApi(stack, 'Api', {\n  name: 'demoapi',\n  schema: SchemaFile.fromAsset(join(__dirname, 'integ.graphql.graphql')),\n  authorizationConfig: {\n    defaultAuthorization: {\n      authorizationType: AuthorizationType.USER_POOL,\n      userPoolConfig: {\n        userPool,\n      },\n    },\n    additionalAuthorizationModes: [\n      {\n        authorizationType: AuthorizationType.API_KEY,\n      },\n    ],\n  },\n});\n\nconst noneDS = api.addNoneDataSource('none', { name: 'None' });\n\nnoneDS.createResolver('QuerygetServiceVersion', {\n  typeName: 'Query',\n  fieldName: 'getServiceVersion',\n  requestMappingTemplate: MappingTemplate.fromString(JSON.stringify({\n    version: '2017-02-28',\n  })),\n  responseMappingTemplate: MappingTemplate.fromString(JSON.stringify({\n    version: 'v1',\n  })),\n});\n\nconst customerTable = new Table(stack, 'CustomerTable', {\n  billingMode: BillingMode.PAY_PER_REQUEST,\n  partitionKey: {\n    name: 'id',\n    type: AttributeType.STRING,\n  },\n  removalPolicy: RemovalPolicy.DESTROY,\n});\nconst orderTable = new Table(stack, 'OrderTable', {\n  billingMode: BillingMode.PAY_PER_REQUEST,\n  partitionKey: {\n    name: 'customer',\n    type: AttributeType.STRING,\n  },\n  sortKey: {\n    name: 'order',\n    type: AttributeType.STRING,\n  },\n  removalPolicy: RemovalPolicy.DESTROY,\n});\norderTable.addGlobalSecondaryIndex({\n  indexName: 'orderIndex',\n  partitionKey: {\n    name: 'order',\n    type: AttributeType.STRING,\n  },\n  sortKey: {\n    name: 'customer',\n    type: AttributeType.STRING,\n  },\n});\n\nnew Table(stack, 'PaymentTable', {\n  billingMode: BillingMode.PAY_PER_REQUEST,\n  partitionKey: {\n    name: 'id',\n    type: AttributeType.STRING,\n  },\n  removalPolicy: RemovalPolicy.DESTROY,\n});\n\nconst paymentTable = Table.fromTableName(stack, 'ImportedPaymentTable', 'PaymentTable');\n\nconst customerDS = api.addDynamoDbDataSource('customerDs', customerTable, { name: 'Customer' });\nconst orderDS = api.addDynamoDbDataSource('orderDs', orderTable, { name: 'Order' });\nconst paymentDS = api.addDynamoDbDataSource('paymentDs', paymentTable, { name: 'Payment' });\n\ncustomerDS.createResolver('QueryGetCustomers', {\n  typeName: 'Query',\n  fieldName: 'getCustomers',\n  requestMappingTemplate: MappingTemplate.dynamoDbScanTable(),\n  responseMappingTemplate: MappingTemplate.dynamoDbResultList(),\n});\ncustomerDS.createResolver('QueryGetCustomer', {\n  typeName: 'Query',\n  fieldName: 'getCustomer',\n  requestMappingTemplate: MappingTemplate.dynamoDbGetItem('id', 'id'),\n  responseMappingTemplate: MappingTemplate.dynamoDbResultItem(),\n});\ncustomerDS.createResolver('QueryGetCusomtersNotConsistent', {\n  typeName: 'Query',\n  fieldName: 'getCustomersNotConsistent',\n  requestMappingTemplate: MappingTemplate.dynamoDbScanTable(false),\n  responseMappingTemplate: MappingTemplate.dynamoDbResultList(),\n});\ncustomerDS.createResolver('QueryGetCustomerNotConsistent', {\n  typeName: 'Query',\n  fieldName: 'getCustomerNotConsistent',\n  requestMappingTemplate: MappingTemplate.dynamoDbGetItem('id', 'id', false),\n  responseMappingTemplate: MappingTemplate.dynamoDbResultItem(),\n});\ncustomerDS.createResolver('QueryGetCustomersConsistent', {\n  typeName: 'Query',\n  fieldName: 'getCustomersConsistent',\n  requestMappingTemplate: MappingTemplate.dynamoDbScanTable(true),\n  responseMappingTemplate: MappingTemplate.dynamoDbResultList(),\n});\ncustomerDS.createResolver('QueryGetCustomerConsistent', {\n  typeName: 'Query',\n  fieldName: 'getCustomerConsistent',\n  requestMappingTemplate: MappingTemplate.dynamoDbGetItem('id', 'id', true),\n  responseMappingTemplate: MappingTemplate.dynamoDbResultItem(),\n});\ncustomerDS.createResolver('MutationAddCustomer', {\n  typeName: 'Mutation',\n  fieldName: 'addCustomer',\n  requestMappingTemplate: MappingTemplate.dynamoDbPutItem(PrimaryKey.partition('id').auto(), Values.projecting('customer')),\n  responseMappingTemplate: MappingTemplate.dynamoDbResultItem(),\n});\ncustomerDS.createResolver('MutationSaveCustomer', {\n  typeName: 'Mutation',\n  fieldName: 'saveCustomer',\n  requestMappingTemplate: MappingTemplate.dynamoDbPutItem(PrimaryKey.partition('id').is('id'), Values.projecting('customer')),\n  responseMappingTemplate: MappingTemplate.dynamoDbResultItem(),\n});\ncustomerDS.createResolver('MutationSaveCustomerWithFirstOrder', {\n  typeName: 'Mutation',\n  fieldName: 'saveCustomerWithFirstOrder',\n  requestMappingTemplate: MappingTemplate.dynamoDbPutItem(\n    PrimaryKey\n      .partition('order').auto()\n      .sort('customer').is('customer.id'),\n    Values\n      .projecting('order')\n      .attribute('referral').is('referral')),\n  responseMappingTemplate: MappingTemplate.dynamoDbResultItem(),\n});\ncustomerDS.createResolver('MutationRemoveCustomer', {\n  typeName: 'Mutation',\n  fieldName: 'removeCustomer',\n  requestMappingTemplate: MappingTemplate.dynamoDbDeleteItem('id', 'id'),\n  responseMappingTemplate: MappingTemplate.dynamoDbResultItem(),\n});\n\nconst ops = [\n  { suffix: 'Eq', op: KeyCondition.eq },\n  { suffix: 'Lt', op: KeyCondition.lt },\n  { suffix: 'Le', op: KeyCondition.le },\n  { suffix: 'Gt', op: KeyCondition.gt },\n  { suffix: 'Ge', op: KeyCondition.ge },\n];\nfor (const { suffix, op } of ops) {\n  orderDS.createResolver(`QueryGetCustomerOrders${suffix}`, {\n    typeName: 'Query',\n    fieldName: 'getCustomerOrders' + suffix,\n    requestMappingTemplate: MappingTemplate.dynamoDbQuery(op('customer', 'customer')),\n    responseMappingTemplate: MappingTemplate.dynamoDbResultList(),\n  });\n  orderDS.createResolver(`QueryGetOrderCustomers${suffix}`, {\n    typeName: 'Query',\n    fieldName: 'getOrderCustomers' + suffix,\n    requestMappingTemplate: MappingTemplate.dynamoDbQuery(op('order', 'order'), 'orderIndex'),\n    responseMappingTemplate: MappingTemplate.dynamoDbResultList(),\n  });\n}\nfor (const { suffix, op } of ops) {\n  orderDS.createResolver(`QueryGetCustomerOrdersNotConsistent${suffix}`, {\n    typeName: 'Query',\n    fieldName: 'getCustomerOrdersNotConsistent' + suffix,\n    requestMappingTemplate: MappingTemplate.dynamoDbQuery(op('customer', 'customer'), undefined, false),\n    responseMappingTemplate: MappingTemplate.dynamoDbResultList(),\n  });\n  orderDS.createResolver(`QueryGetOrderCustomersNotConsistent${suffix}`, {\n    typeName: 'Query',\n    fieldName: 'getOrderCustomersNotConsistent' + suffix,\n    requestMappingTemplate: MappingTemplate.dynamoDbQuery(op('order', 'order'), 'orderIndex', false),\n    responseMappingTemplate: MappingTemplate.dynamoDbResultList(),\n  });\n}\nfor (const { suffix, op } of ops) {\n  orderDS.createResolver(`QueryGetCustomerOrdersConsistent${suffix}`, {\n    typeName: 'Query',\n    fieldName: 'getCustomerOrdersConsistent' + suffix,\n    requestMappingTemplate: MappingTemplate.dynamoDbQuery(op('customer', 'customer'), undefined, true),\n    responseMappingTemplate: MappingTemplate.dynamoDbResultList(),\n  });\n  orderDS.createResolver(`QueryGetOrderCustomersConsistent${suffix}`, {\n    typeName: 'Query',\n    fieldName: 'getOrderCustomersConsistent' + suffix,\n    requestMappingTemplate: MappingTemplate.dynamoDbQuery(op('order', 'order'), 'orderIndex', true),\n    responseMappingTemplate: MappingTemplate.dynamoDbResultList(),\n  });\n}\norderDS.createResolver('QueryGetCustomerOrdersFilter', {\n  typeName: 'Query',\n  fieldName: 'getCustomerOrdersFilter',\n  requestMappingTemplate: MappingTemplate.dynamoDbQuery(\n    KeyCondition.eq('customer', 'customer').and(KeyCondition.beginsWith('order', 'order'))),\n  responseMappingTemplate: MappingTemplate.dynamoDbResultList(),\n});\norderDS.createResolver('QueryGetCustomerOrdersBetween', {\n  typeName: 'Query',\n  fieldName: 'getCustomerOrdersBetween',\n  requestMappingTemplate: MappingTemplate.dynamoDbQuery(\n    KeyCondition.eq('customer', 'customer').and(KeyCondition.between('order', 'order1', 'order2'))),\n  responseMappingTemplate: MappingTemplate.dynamoDbResultList(),\n});\norderDS.createResolver('QueryGetOrderCustomersFilter', {\n  typeName: 'Query',\n  fieldName: 'getOrderCustomersFilter',\n  requestMappingTemplate: MappingTemplate.dynamoDbQuery(\n    KeyCondition.eq('order', 'order').and(KeyCondition.beginsWith('customer', 'customer'))),\n  responseMappingTemplate: MappingTemplate.dynamoDbResultList(),\n});\norderDS.createResolver('QueryGetOrderCustomersBetween', {\n  typeName: 'Query',\n  fieldName: 'getOrderCustomersBetween',\n  requestMappingTemplate: MappingTemplate.dynamoDbQuery(\n    KeyCondition.eq('order', 'order').and(KeyCondition.between('customer', 'customer1', 'customer2')), 'orderIndex'),\n  responseMappingTemplate: MappingTemplate.dynamoDbResultList(),\n});\n\npaymentDS.createResolver('QueryGetPayment', {\n  typeName: 'Query',\n  fieldName: 'getPayment',\n  requestMappingTemplate: MappingTemplate.dynamoDbGetItem('id', 'id'),\n  responseMappingTemplate: MappingTemplate.dynamoDbResultItem(),\n});\npaymentDS.createResolver('QueryGetPaymentConsistent', {\n  typeName: 'Query',\n  fieldName: 'getPaymentConsistent',\n  requestMappingTemplate: MappingTemplate.dynamoDbGetItem('id', 'id', true),\n  responseMappingTemplate: MappingTemplate.dynamoDbResultItem(),\n});\npaymentDS.createResolver('MutationSavePayment', {\n  typeName: 'Mutation',\n  fieldName: 'savePayment',\n  requestMappingTemplate: MappingTemplate.dynamoDbPutItem(PrimaryKey.partition('id').auto(), Values.projecting('payment')),\n  responseMappingTemplate: MappingTemplate.dynamoDbResultItem(),\n});\n\nconst httpDS = api.addHttpDataSource('ds', 'https://aws.amazon.com/', { name: 'http' });\n\nhttpDS.createResolver('MutationDoPostOnAws', {\n  typeName: 'Mutation',\n  fieldName: 'doPostOnAws',\n  requestMappingTemplate: MappingTemplate.fromString(`{\n    \"version\": \"2018-05-29\",\n    \"method\": \"POST\",\n    # if full path is https://api.xxxxxxxxx.com/posts then resourcePath would be /posts\n    \"resourcePath\": \"/path/123\",\n    \"params\":{\n        \"body\": $util.toJson($ctx.args),\n        \"headers\":{\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": \"$ctx.request.headers.Authorization\"\n        }\n    }\n  }`),\n  responseMappingTemplate: MappingTemplate.fromString(`\n    ## Raise a GraphQL field error in case of a datasource invocation error\n    #if($ctx.error)\n      $util.error($ctx.error.message, $ctx.error.type)\n    #end\n    ## if the response status code is not 200, then return an error. Else return the body **\n    #if($ctx.result.statusCode == 200)\n        ## If response is 200, return the body.\n        $ctx.result.body\n    #else\n        ## If response is not 200, append the response to error block.\n        $utils.appendError($ctx.result.body, \"$ctx.result.statusCode\")\n    #end\n  `),\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"ApiF70053CD\": {\"Type\": \"AWS::AppSync::GraphQLApi\", \"Properties\": {\"AuthenticationType\": \"API_KEY\", \"Name\": \"Integ_Test_APIKey\"}}, \"ApiSchema510EECD7\": {\"Type\": \"AWS::AppSync::GraphQLSchema\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"Definition\": \"type test {\n  id: Int!\n  version: String!\n}\n\ntype Query {\n  getTests: [ test! ]\n}\n\ntype Mutation {\n  addTest(version: String!): test!\n}\"}}, \"ApiDefaultApiKeyF991C37B\": {\"Type\": \"AWS::AppSync::ApiKey\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}}, \"DependsOn\": [\"ApiSchema510EECD7\"]}, \"ApitestDataSourceServiceRoleACBC3F3D\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"appsync.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"ApitestDataSourceServiceRoleDefaultPolicy897CD912\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"dynamodb:BatchGetItem\", \"dynamodb:BatchWriteItem\", \"dynamodb:ConditionCheckItem\", \"dynamodb:DeleteItem\", \"dynamodb:DescribeTable\", \"dynamodb:GetItem\", \"dynamodb:GetRecords\", \"dynamodb:GetShardIterator\", \"dynamodb:PutItem\", \"dynamodb:Query\", \"dynamodb:Scan\", \"dynamodb:UpdateItem\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"TestTable5769773A\", \"Arn\"]}, {\"Ref\": \"AWS::NoValue\"}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"ApitestDataSourceServiceRoleDefaultPolicy897CD912\", \"Roles\": [{\"Ref\": \"ApitestDataSourceServiceRoleACBC3F3D\"}]}}, \"ApitestDataSource96AE54D5\": {\"Type\": \"AWS::AppSync::DataSource\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"Name\": \"testDataSource\", \"Type\": \"AMAZON_DYNAMODB\", \"DynamoDBConfig\": {\"AwsRegion\": {\"Ref\": \"AWS::Region\"}, \"TableName\": {\"Ref\": \"TestTable5769773A\"}}, \"ServiceRoleArn\": {\"Fn::GetAtt\": [\"ApitestDataSourceServiceRoleACBC3F3D\", \"Arn\"]}}}, \"ApiQueryGetTestsF8C40170\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"getTests\", \"TypeName\": \"Query\", \"DataSourceName\": \"testDataSource\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\\\"version\\\" : \\\"2017-02-28\\\", \\\"operation\\\" : \\\"Scan\\\", \\\"consistentRead\\\": false}\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result.items)\"}, \"DependsOn\": [\"ApiSchema510EECD7\", \"ApitestDataSource96AE54D5\"]}, \"ApiMutationAddTestBF148084\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"addTest\", \"TypeName\": \"Mutation\", \"DataSourceName\": \"testDataSource\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"\n      #set($input = $ctx.args.test)\n      \n      {\n        \\\"version\\\": \\\"2017-02-28\\\",\n        \\\"operation\\\": \\\"PutItem\\\",\n        \\\"key\\\" : {\n      \\\"id\\\" : $util.dynamodb.toDynamoDBJson($util.autoId())\n    },\n        \\\"attributeValues\\\": $util.dynamodb.toMapValuesJson($input)\n      }\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result)\"}, \"DependsOn\": [\"ApiSchema510EECD7\", \"ApitestDataSource96AE54D5\"]}, \"TestTable5769773A\": {\"Type\": \"AWS::DynamoDB::Table\", \"Properties\": {\"KeySchema\": [{\"AttributeName\": \"id\", \"KeyType\": \"HASH\"}], \"AttributeDefinitions\": [{\"AttributeName\": \"id\", \"AttributeType\": \"S\"}], \"BillingMode\": \"PAY_PER_REQUEST\"}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import { join } from 'path';\nimport { AttributeType, BillingMode, Table } from 'aws-cdk-lib/aws-dynamodb';\nimport { App, RemovalPolicy, Stack } from 'aws-cdk-lib';\nimport { AuthorizationType, GraphqlApi, MappingTemplate, PrimaryKey, SchemaFile, Values } from 'aws-cdk-lib/aws-appsync';\n\n/*\n * Creates an Appsync GraphQL API with API_KEY authorization.\n * Testing for API_KEY Authorization.\n *\n * Stack verification steps:\n * Deploy stack, get api-key and endpoint.\n * Check if authorization occurs with empty get.\n *\n * -- bash verify.integ.auth-apikey.sh --start                      -- deploy stack               --\n * -- aws appsync list-graphql-apis                                 -- obtain api id && endpoint  --\n * -- aws appsync list-api-keys --api-id [API ID]                   -- obtain api key             --\n * -- bash verify.integ.auth-apikey.sh --check [APIKEY] [ENDPOINT]  -- check if fails/success     --\n * -- bash verify.integ.auth-apikey.sh --clean                      -- clean dependencies/stack   --\n */\n\nconst app = new App();\nconst stack = new Stack(app, 'aws-appsync-integ');\n\nconst api = new GraphqlApi(stack, 'Api', {\n  name: 'Integ_Test_APIKey',\n  schema: SchemaFile.fromAsset(join(__dirname, 'appsync.auth.graphql')),\n  authorizationConfig: {\n    defaultAuthorization: {\n      authorizationType: AuthorizationType.API_KEY,\n      apiKeyConfig: {\n        // Rely on default expiration date provided by the API so we have a deterministic snapshot\n        expires: undefined,\n      },\n    },\n  },\n});\n\nconst testTable = new Table(stack, 'TestTable', {\n  billingMode: BillingMode.PAY_PER_REQUEST,\n  partitionKey: {\n    name: 'id',\n    type: AttributeType.STRING,\n  },\n  removalPolicy: RemovalPolicy.DESTROY,\n});\n\nconst testDS = api.addDynamoDbDataSource('testDataSource', testTable);\n\ntestDS.createResolver('QueryGetTests', {\n  typeName: 'Query',\n  fieldName: 'getTests',\n  requestMappingTemplate: MappingTemplate.dynamoDbScanTable(),\n  responseMappingTemplate: MappingTemplate.dynamoDbResultList(),\n});\n\ntestDS.createResolver('MutationAddTest', {\n  typeName: 'Mutation',\n  fieldName: 'addTest',\n  requestMappingTemplate: MappingTemplate.dynamoDbPutItem(PrimaryKey.partition('id').auto(), Values.projecting('test')),\n  responseMappingTemplate: MappingTemplate.dynamoDbResultItem(),\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"PoolD3F588B8\": {\"Type\": \"AWS::Cognito::UserPool\", \"Properties\": {\"AccountRecoverySetting\": {\"RecoveryMechanisms\": [{\"Name\": \"verified_phone_number\", \"Priority\": 1}, {\"Name\": \"verified_email\", \"Priority\": 2}]}, \"AdminCreateUserConfig\": {\"AllowAdminCreateUserOnly\": true}, \"EmailVerificationMessage\": \"The verification code to your new account is {####}\", \"EmailVerificationSubject\": \"Verify your new account\", \"SmsVerificationMessage\": \"The verification code to your new account is {####}\", \"UserPoolName\": \"myPool\", \"VerificationMessageTemplate\": {\"DefaultEmailOption\": \"CONFIRM_WITH_CODE\", \"EmailMessage\": \"The verification code to your new account is {####}\", \"EmailSubject\": \"Verify your new account\", \"SmsMessage\": \"The verification code to your new account is {####}\"}}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"ApiF70053CD\": {\"Type\": \"AWS::AppSync::GraphQLApi\", \"Properties\": {\"AuthenticationType\": \"AMAZON_COGNITO_USER_POOLS\", \"Name\": \"Integ_Test_IAM\", \"AdditionalAuthenticationProviders\": [{\"AuthenticationType\": \"AWS_IAM\"}], \"UserPoolConfig\": {\"AwsRegion\": {\"Ref\": \"AWS::Region\"}, \"DefaultAction\": \"ALLOW\", \"UserPoolId\": {\"Ref\": \"PoolD3F588B8\"}}}}, \"ApiSchema510EECD7\": {\"Type\": \"AWS::AppSync::GraphQLSchema\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"Definition\": \"type test @aws_iam {\n  id: String!\n  version: String!\n}\n\ntype Query {\n  getTest(id: String!): test\n  getTests: [ test! ]\n    @aws_iam \n}\n\ninput TestInput {\n  version: String!\n}\n\ntype Mutation {\n  addTest(input: TestInput!): test\n    @aws_iam\n}\n\"}}, \"ApidsServiceRoleADC7D124\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"appsync.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"ApidsServiceRoleDefaultPolicyE5E18D6D\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"dynamodb:BatchGetItem\", \"dynamodb:BatchWriteItem\", \"dynamodb:ConditionCheckItem\", \"dynamodb:DeleteItem\", \"dynamodb:DescribeTable\", \"dynamodb:GetItem\", \"dynamodb:GetRecords\", \"dynamodb:GetShardIterator\", \"dynamodb:PutItem\", \"dynamodb:Query\", \"dynamodb:Scan\", \"dynamodb:UpdateItem\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"TestTable5769773A\", \"Arn\"]}, {\"Ref\": \"AWS::NoValue\"}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"ApidsServiceRoleDefaultPolicyE5E18D6D\", \"Roles\": [{\"Ref\": \"ApidsServiceRoleADC7D124\"}]}}, \"Apids0DB53FEA\": {\"Type\": \"AWS::AppSync::DataSource\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"Name\": \"testDataSource\", \"Type\": \"AMAZON_DYNAMODB\", \"DynamoDBConfig\": {\"AwsRegion\": {\"Ref\": \"AWS::Region\"}, \"TableName\": {\"Ref\": \"TestTable5769773A\"}}, \"ServiceRoleArn\": {\"Fn::GetAtt\": [\"ApidsServiceRoleADC7D124\", \"Arn\"]}}}, \"ApiQueryGetTest0BEAD0F2\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"getTest\", \"TypeName\": \"Query\", \"DataSourceName\": \"testDataSource\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\\\"version\\\": \\\"2017-02-28\\\", \\\"operation\\\": \\\"GetItem\\\", \\\"consistentRead\\\": false, \\\"key\\\": {\\\"id\\\": $util.dynamodb.toDynamoDBJson($ctx.args.id)}}\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result)\"}, \"DependsOn\": [\"Apids0DB53FEA\", \"ApiSchema510EECD7\"]}, \"ApiQueryGetTestsF8C40170\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"getTests\", \"TypeName\": \"Query\", \"DataSourceName\": \"testDataSource\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\\\"version\\\" : \\\"2017-02-28\\\", \\\"operation\\\" : \\\"Scan\\\", \\\"consistentRead\\\": false}\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result.items)\"}, \"DependsOn\": [\"Apids0DB53FEA\", \"ApiSchema510EECD7\"]}, \"ApiMutationAddTestBF148084\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"FieldName\": \"addTest\", \"TypeName\": \"Mutation\", \"DataSourceName\": \"testDataSource\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"\n      #set($input = $ctx.args.test)\n      \n      {\n        \\\"version\\\": \\\"2017-02-28\\\",\n        \\\"operation\\\": \\\"PutItem\\\",\n        \\\"key\\\" : {\n      \\\"id\\\" : $util.dynamodb.toDynamoDBJson($util.autoId())\n    },\n        \\\"attributeValues\\\": $util.dynamodb.toMapValuesJson($input)\n      }\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result)\"}, \"DependsOn\": [\"Apids0DB53FEA\", \"ApiSchema510EECD7\"]}, \"TestTable5769773A\": {\"Type\": \"AWS::DynamoDB::Table\", \"Properties\": {\"KeySchema\": [{\"AttributeName\": \"id\", \"KeyType\": \"HASH\"}], \"AttributeDefinitions\": [{\"AttributeName\": \"id\", \"AttributeType\": \"S\"}], \"BillingMode\": \"PAY_PER_REQUEST\"}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"LambdaIAM687B49AF\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda\"}}], \"Version\": \"2012-10-17\"}}}, \"LambdaIAMDefaultPolicy96DEA124\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"appsync:graphql\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":appsync:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":apis/\", {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"/types/Query/fields/getTests\"]]}}, {\"Action\": \"appsync:GraphQL\", \"Effect\": \"Allow\", \"Resource\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":appsync:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":apis/\", {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"/types/Mutation/fields/addTest\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":appsync:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":apis/\", {\"Fn::GetAtt\": [\"ApiF70053CD\", \"ApiId\"]}, \"/types/test/*\"]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"LambdaIAMDefaultPolicy96DEA124\", \"Roles\": [{\"Ref\": \"LambdaIAM687B49AF\"}]}}, \"testQuery6695AADE\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"f38244b9028d22d4e265a5b466bdba928d93b5a4ac2b4bbf583309b3f027f044.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"LambdaIAM687B49AF\", \"Arn\"]}, \"Environment\": {\"Variables\": {\"APPSYNC_ENDPOINT\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"GraphQLUrl\"]}}}, \"Handler\": \"iam-query.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"LambdaIAMDefaultPolicy96DEA124\", \"LambdaIAM687B49AF\"]}, \"testFailServiceRole9FF22F85\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"testFail33CE01D1\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"f38244b9028d22d4e265a5b466bdba928d93b5a4ac2b4bbf583309b3f027f044.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"testFailServiceRole9FF22F85\", \"Arn\"]}, \"Environment\": {\"Variables\": {\"APPSYNC_ENDPOINT\": {\"Fn::GetAtt\": [\"ApiF70053CD\", \"GraphQLUrl\"]}}}, \"Handler\": \"iam-query.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"testFailServiceRole9FF22F85\"]}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import { join } from 'path';\nimport { UserPool } from 'aws-cdk-lib/aws-cognito';\nimport { AttributeType, BillingMode, Table } from 'aws-cdk-lib/aws-dynamodb';\nimport { Role, ServicePrincipal } from 'aws-cdk-lib/aws-iam';\nimport { Code, Function, Runtime } from 'aws-cdk-lib/aws-lambda';\nimport { App, RemovalPolicy, Stack } from 'aws-cdk-lib';\nimport {\n  AuthorizationType,\n  GraphqlApi,\n  MappingTemplate,\n  PrimaryKey,\n  UserPoolDefaultAction,\n  Values,\n  IamResource,\n  SchemaFile,\n} from 'aws-cdk-lib/aws-appsync';\n\n/*\n * Creates an Appsync GraphQL API and Lambda with IAM Roles.\n * Testing for IAM Auth and grantFullAccess.\n *\n * Stack verification steps:\n * Install dependencies and deploy integration test. Invoke Lambda\n * function with different permissions to test policies.\n *\n * -- bash verify.integ.graphql-iam.sh --start             -- get dependencies/deploy    --\n * -- aws lambda list-functions                            -- obtain testFail/testQuery  --\n * -- aws lambda invoke /dev/stdout --function-name [FAIL] -- fails beacuse no IAM Role` --\n * -- aws lambda invoke /dev/stdout --function-name [Query]-- succeeds with empty get  ` --\n * -- bash verify.integ.graphql-iam.sh --clean             -- clean dependencies/deploy  --\n */\n\nconst app = new App();\nconst stack = new Stack(app, 'aws-appsync-integ');\nconst userPool = new UserPool(stack, 'Pool', {\n  userPoolName: 'myPool',\n});\n\nconst api = new GraphqlApi(stack, 'Api', {\n  name: 'Integ_Test_IAM',\n  schema: SchemaFile.fromAsset(join(__dirname, 'integ.graphql-iam.graphql')),\n  authorizationConfig: {\n    defaultAuthorization: {\n      authorizationType: AuthorizationType.USER_POOL,\n      userPoolConfig: {\n        userPool,\n        defaultAction: UserPoolDefaultAction.ALLOW,\n      },\n    },\n    additionalAuthorizationModes: [\n      {\n        authorizationType: AuthorizationType.IAM,\n      },\n    ],\n  },\n});\n\nconst testTable = new Table(stack, 'TestTable', {\n  billingMode: BillingMode.PAY_PER_REQUEST,\n  partitionKey: {\n    name: 'id',\n    type: AttributeType.STRING,\n  },\n  removalPolicy: RemovalPolicy.DESTROY,\n});\n\nconst testDS = api.addDynamoDbDataSource('ds', testTable, { name: 'testDataSource' });\n\ntestDS.createResolver('QueryGetTest', {\n  typeName: 'Query',\n  fieldName: 'getTest',\n  requestMappingTemplate: MappingTemplate.dynamoDbGetItem('id', 'id'),\n  responseMappingTemplate: MappingTemplate.dynamoDbResultItem(),\n});\n\ntestDS.createResolver('QueryGetTests', {\n  typeName: 'Query',\n  fieldName: 'getTests',\n  requestMappingTemplate: MappingTemplate.dynamoDbScanTable(),\n  responseMappingTemplate: MappingTemplate.dynamoDbResultList(),\n});\n\ntestDS.createResolver('MutationAddTest', {\n  typeName: 'Mutation',\n  fieldName: 'addTest',\n  requestMappingTemplate: MappingTemplate.dynamoDbPutItem(PrimaryKey.partition('id').auto(), Values.projecting('test')),\n  responseMappingTemplate: MappingTemplate.dynamoDbResultItem(),\n});\n\nconst lambdaIAM = new Role(stack, 'LambdaIAM', { assumedBy: new ServicePrincipal('lambda') });\n\napi.grant(lambdaIAM, IamResource.custom('types/Query/fields/getTests'), 'appsync:graphql');\napi.grant(lambdaIAM, IamResource.ofType('test'), 'appsync:GraphQL');\napi.grantMutation(lambdaIAM, 'addTest');\n\nnew Function(stack, 'testQuery', {\n  code: Code.fromAsset(join(__dirname, 'verify/iam-query')),\n  handler: 'iam-query.handler',\n  runtime: Runtime.NODEJS_14_X,\n  environment: { APPSYNC_ENDPOINT: api.graphqlUrl },\n  role: lambdaIAM,\n});\nnew Function(stack, 'testFail', {\n  code: Code.fromAsset(join(__dirname, 'verify/iam-query')),\n  handler: 'iam-query.handler',\n  runtime: Runtime.NODEJS_14_X,\n  environment: { APPSYNC_ENDPOINT: api.graphqlUrl },\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"User00B015A1\": {\"Type\": \"AWS::IAM::User\"}, \"Domain66AC69E0\": {\"Type\": \"AWS::Elasticsearch::Domain\", \"Properties\": {\"AdvancedSecurityOptions\": {\"Enabled\": true, \"InternalUserDatabaseEnabled\": false, \"MasterUserOptions\": {\"MasterUserARN\": {\"Fn::GetAtt\": [\"User00B015A1\", \"Arn\"]}}}, \"CognitoOptions\": {\"Enabled\": false}, \"DomainEndpointOptions\": {\"EnforceHTTPS\": true, \"TLSSecurityPolicy\": \"Policy-Min-TLS-1-0-2019-07\"}, \"EBSOptions\": {\"EBSEnabled\": true, \"VolumeSize\": 10, \"VolumeType\": \"gp2\"}, \"ElasticsearchClusterConfig\": {\"DedicatedMasterEnabled\": false, \"InstanceCount\": 1, \"InstanceType\": \"r5.large.elasticsearch\", \"ZoneAwarenessEnabled\": false}, \"ElasticsearchVersion\": \"7.1\", \"EncryptionAtRestOptions\": {\"Enabled\": true}, \"LogPublishingOptions\": {}, \"NodeToNodeEncryptionOptions\": {\"Enabled\": true}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"apiC8550315\": {\"Type\": \"AWS::AppSync::GraphQLApi\", \"Properties\": {\"AuthenticationType\": \"API_KEY\", \"Name\": \"api\"}}, \"apiSchema0EA92056\": {\"Type\": \"AWS::AppSync::GraphQLSchema\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"apiC8550315\", \"ApiId\"]}, \"Definition\": \"type test {\n  version: String!\n}\ntype Query {\n  getTests: [test]!\n}\ntype Mutation {\n  addTest(version: String!): test\n}\n\"}}, \"apiDefaultApiKey6AB8D7C4\": {\"Type\": \"AWS::AppSync::ApiKey\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"apiC8550315\", \"ApiId\"]}}, \"DependsOn\": [\"apiSchema0EA92056\"]}, \"apidsServiceRoleBDB08107\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"appsync.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"apidsServiceRoleDefaultPolicy5634EFD0\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"es:ESHttpDelete\", \"es:ESHttpGet\", \"es:ESHttpHead\", \"es:ESHttpPatch\", \"es:ESHttpPost\", \"es:ESHttpPut\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"Domain66AC69E0\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"Domain66AC69E0\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"apidsServiceRoleDefaultPolicy5634EFD0\", \"Roles\": [{\"Ref\": \"apidsServiceRoleBDB08107\"}]}}, \"apids4328272F\": {\"Type\": \"AWS::AppSync::DataSource\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"apiC8550315\", \"ApiId\"]}, \"Name\": \"ds\", \"Type\": \"AMAZON_ELASTICSEARCH\", \"ElasticsearchConfig\": {\"AwsRegion\": {\"Ref\": \"AWS::Region\"}, \"Endpoint\": {\"Fn::Join\": [\"\", [\"https://\", {\"Fn::GetAtt\": [\"Domain66AC69E0\", \"DomainEndpoint\"]}]]}}, \"ServiceRoleArn\": {\"Fn::GetAtt\": [\"apidsServiceRoleBDB08107\", \"Arn\"]}}}, \"apiQueryGetTests5F79F353\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"apiC8550315\", \"ApiId\"]}, \"FieldName\": \"getTests\", \"TypeName\": \"Query\", \"DataSourceName\": \"ds\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\\\"version\\\":\\\"2017-02-28\\\",\\\"operation\\\":\\\"GET\\\",\\\"path\\\":\\\"/id/post/_search\\\",\\\"params\\\":{\\\"headers\\\":{},\\\"queryString\\\":{},\\\"body\\\":{\\\"from\\\":0,\\\"size\\\":50}}}\", \"ResponseMappingTemplate\": \"{\\\"version\\\":\\\"2017-02-28\\\",\\\"operation\\\":\\\"GET\\\",\\\"path\\\":\\\"/id/post/_search\\\",\\\"params\\\":{\\\"headers\\\":{},\\\"queryString\\\":{},\\\"body\\\":{\\\"from\\\":0,\\\"size\\\":50,\\\"query\\\":{\\\"term\\\":{\\\"author\\\":\\\"$util.toJson($context.arguments.author)\\\"}}}}}\"}, \"DependsOn\": [\"apids4328272F\", \"apiSchema0EA92056\"]}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as path from 'path';\nimport * as es from 'aws-cdk-lib/aws-elasticsearch';\nimport { User } from 'aws-cdk-lib/aws-iam';\nimport * as cdk from 'aws-cdk-lib';\nimport * as appsync from 'aws-cdk-lib/aws-appsync';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'appsync-elasticsearch');\nconst user = new User(stack, 'User');\nconst domain = new es.Domain(stack, 'Domain', {\n  version: es.ElasticsearchVersion.V7_1,\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n  fineGrainedAccessControl: {\n    masterUserArn: user.userArn,\n  },\n  encryptionAtRest: {\n    enabled: true,\n  },\n  nodeToNodeEncryption: true,\n  enforceHttps: true,\n});\n\nconst api = new appsync.GraphqlApi(stack, 'api', {\n  name: 'api',\n  schema: appsync.SchemaFile.fromAsset(path.join(__dirname, 'appsync.test.graphql')),\n});\n\nconst ds = api.addElasticsearchDataSource('ds', domain);\n\nds.createResolver('QueryGetTests', {\n  typeName: 'Query',\n  fieldName: 'getTests',\n  requestMappingTemplate: appsync.MappingTemplate.fromString(JSON.stringify({\n    version: '2017-02-28',\n    operation: 'GET',\n    path: '/id/post/_search',\n    params: {\n      headers: {},\n      queryString: {},\n      body: {\n        from: 0,\n        size: 50,\n      },\n    },\n  })),\n  responseMappingTemplate: appsync.MappingTemplate.fromString(JSON.stringify({\n    version: '2017-02-28',\n    operation: 'GET',\n    path: '/id/post/_search',\n    params: {\n      headers: {},\n      queryString: {},\n      body: {\n        from: 0,\n        size: 50,\n        query: {\n          term: {\n            author: '$util.toJson($context.arguments.author)',\n          },\n        },\n      },\n    },\n  })),\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"LambdaAPID6A5A92B\": {\"Type\": \"AWS::AppSync::GraphQLApi\", \"Properties\": {\"AuthenticationType\": \"API_KEY\", \"Name\": \"LambdaAPI\"}}, \"LambdaAPISchemaCC5CA3D2\": {\"Type\": \"AWS::AppSync::GraphQLSchema\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"LambdaAPID6A5A92B\", \"ApiId\"]}, \"Definition\": \"schema {\n    query: Query\n    mutation: Mutation\n}\n\ntype Query {\n    getPost(id:ID!): Post\n    allPosts: [Post]\n}\n\ntype Mutation {\n    addPost(id: ID!, author: String!, title: String, content: String, url: String): Post!\n}\n\ntype Post {\n    id: ID!\n    author: String!\n    title: String\n    content: String\n    url: String\n    ups: Int\n    downs: Int\n    relatedPosts: [Post]\n}\"}}, \"LambdaAPIDefaultApiKey15F6897D\": {\"Type\": \"AWS::AppSync::ApiKey\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"LambdaAPID6A5A92B\", \"ApiId\"]}}, \"DependsOn\": [\"LambdaAPISchemaCC5CA3D2\"]}, \"LambdaAPILambdaDSServiceRole21CACDF8\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"appsync.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"LambdaAPILambdaDSServiceRoleDefaultPolicyFB1B9CE8\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"lambda:InvokeFunction\", \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"funcC3A0C2E2\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"funcC3A0C2E2\", \"Arn\"]}, \":*\"]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"LambdaAPILambdaDSServiceRoleDefaultPolicyFB1B9CE8\", \"Roles\": [{\"Ref\": \"LambdaAPILambdaDSServiceRole21CACDF8\"}]}}, \"LambdaAPILambdaDSFD6DF39B\": {\"Type\": \"AWS::AppSync::DataSource\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"LambdaAPID6A5A92B\", \"ApiId\"]}, \"Name\": \"LambdaDS\", \"Type\": \"AWS_LAMBDA\", \"LambdaConfig\": {\"LambdaFunctionArn\": {\"Fn::GetAtt\": [\"funcC3A0C2E2\", \"Arn\"]}}, \"ServiceRoleArn\": {\"Fn::GetAtt\": [\"LambdaAPILambdaDSServiceRole21CACDF8\", \"Arn\"]}}}, \"LambdaAPILambdaDSQuerygetPostResolver12F6EC71\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"LambdaAPID6A5A92B\", \"ApiId\"]}, \"FieldName\": \"getPost\", \"TypeName\": \"Query\", \"DataSourceName\": \"LambdaDS\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\\\"version\\\": \\\"2017-02-28\\\", \\\"operation\\\": \\\"Invoke\\\", \\\"payload\\\": { \\\"field\\\": \\\"getPost\\\", \\\"arguments\\\": $utils.toJson($context.arguments)}}\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result)\"}, \"DependsOn\": [\"LambdaAPILambdaDSFD6DF39B\", \"LambdaAPISchemaCC5CA3D2\"]}, \"LambdaAPILambdaDSQueryallPostsResolver8247596A\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"LambdaAPID6A5A92B\", \"ApiId\"]}, \"FieldName\": \"allPosts\", \"TypeName\": \"Query\", \"DataSourceName\": \"LambdaDS\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\\\"version\\\": \\\"2017-02-28\\\", \\\"operation\\\": \\\"Invoke\\\", \\\"payload\\\": { \\\"field\\\": \\\"allPosts\\\"}}\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result)\"}, \"DependsOn\": [\"LambdaAPILambdaDSFD6DF39B\", \"LambdaAPISchemaCC5CA3D2\"]}, \"LambdaAPILambdaDSMutationaddPostResolverDACB9777\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"LambdaAPID6A5A92B\", \"ApiId\"]}, \"FieldName\": \"addPost\", \"TypeName\": \"Mutation\", \"DataSourceName\": \"LambdaDS\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\\\"version\\\": \\\"2017-02-28\\\", \\\"operation\\\": \\\"Invoke\\\", \\\"payload\\\": { \\\"field\\\": \\\"addPost\\\", \\\"arguments\\\": $utils.toJson($context.arguments)}}\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result)\"}, \"DependsOn\": [\"LambdaAPILambdaDSFD6DF39B\", \"LambdaAPISchemaCC5CA3D2\"]}, \"LambdaAPILambdaDSPostrelatedPostsResolverDE1B941A\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"LambdaAPID6A5A92B\", \"ApiId\"]}, \"FieldName\": \"relatedPosts\", \"TypeName\": \"Post\", \"DataSourceName\": \"LambdaDS\", \"Kind\": \"UNIT\", \"RequestMappingTemplate\": \"{\\\"version\\\": \\\"2017-02-28\\\", \\\"operation\\\": \\\"BatchInvoke\\\", \\\"payload\\\": { \\\"field\\\": \\\"relatedPosts\\\", \\\"source\\\": $utils.toJson($context.source)}}\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result)\"}, \"DependsOn\": [\"LambdaAPILambdaDSFD6DF39B\", \"LambdaAPISchemaCC5CA3D2\"]}, \"funcServiceRoleA96CCB44\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"funcC3A0C2E2\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Ref\": \"AssetParameters8deae95d7935a4885bfc15a9af9fa85591ad93f3353790f242fca60881a6ec73S3Bucket096530A6\"}, \"S3Key\": {\"Fn::Join\": [\"\", [{\"Fn::Select\": [0, {\"Fn::Split\": [\"||\", {\"Ref\": \"AssetParameters8deae95d7935a4885bfc15a9af9fa85591ad93f3353790f242fca60881a6ec73S3VersionKeyCF8C25D4\"}]}]}, {\"Fn::Select\": [1, {\"Fn::Split\": [\"||\", {\"Ref\": \"AssetParameters8deae95d7935a4885bfc15a9af9fa85591ad93f3353790f242fca60881a6ec73S3VersionKeyCF8C25D4\"}]}]}]]}}, \"Role\": {\"Fn::GetAtt\": [\"funcServiceRoleA96CCB44\", \"Arn\"]}, \"Handler\": \"lambda-tutorial.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"funcServiceRoleA96CCB44\"]}}, \"Parameters\": {\"AssetParameters8deae95d7935a4885bfc15a9af9fa85591ad93f3353790f242fca60881a6ec73S3Bucket096530A6\": {\"Type\": \"String\", \"Description\": \"S3 bucket for asset \\\"8deae95d7935a4885bfc15a9af9fa85591ad93f3353790f242fca60881a6ec73\\\"\"}, \"AssetParameters8deae95d7935a4885bfc15a9af9fa85591ad93f3353790f242fca60881a6ec73S3VersionKeyCF8C25D4\": {\"Type\": \"String\", \"Description\": \"S3 key for asset version \\\"8deae95d7935a4885bfc15a9af9fa85591ad93f3353790f242fca60881a6ec73\\\"\"}, \"AssetParameters8deae95d7935a4885bfc15a9af9fa85591ad93f3353790f242fca60881a6ec73ArtifactHash60312028\": {\"Type\": \"String\", \"Description\": \"Artifact hash for asset \\\"8deae95d7935a4885bfc15a9af9fa85591ad93f3353790f242fca60881a6ec73\\\"\"}}}", "completion": "/// !cdk-integ *\n\nimport * as path from 'path';\nimport * as lambda from 'aws-cdk-lib/aws-lambda';\nimport * as cdk from 'aws-cdk-lib';\nimport * as appsync from 'aws-cdk-lib/aws-appsync';\n\n/*\n * Creates an Appsync GraphQL API and schema in a code-first approach.\n *\n * Stack verification steps:\n * Deploy stack, get api key and endpoinScalarType. Check if schema connects to data source.\n *\n * -- bash verify.integ.appsync-lambda.sh --start                 -- start                    --\n * -- aws appsync list-graphql-apis                               -- obtain apiId & endpoint  --\n * -- aws appsync list-api-keys --api-id [apiId]                  -- obtain api key           --\n * -- bash verify.integ.appsync-lambda.sh --check [apiKey] [url]  -- check if success         --\n * -- bash verify.integ.appsync-lambda.sh --clean                 -- clean                    --\n */\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'stack');\n\nconst api = new appsync.GraphqlApi(stack, 'LambdaAPI', {\n  name: 'LambdaAPI',\n  schema: appsync.SchemaFile.fromAsset(path.join(__dirname, 'appsync.lambda.graphql')),\n});\n\nconst func = new lambda.Function(stack, 'func', {\n  code: lambda.Code.fromAsset(path.join(__dirname, 'verify/lambda-tutorial')),\n  handler: 'lambda-tutorial.handler',\n  runtime: lambda.Runtime.NODEJS_14_X,\n});\n\nconst lambdaDS = api.addLambdaDataSource('LambdaDS', func);\n\nconst requestPayload = (field: string, { withArgs = false, withSource = false }) => {\n  const _field = `\"field\": \"${field}\"`;\n  const _args = '\"arguments\": $utils.toJson($context.arguments)';\n  const _source = '\"source\": $utils.toJson($context.source)';\n\n  const _payload = [_field];\n  if (withArgs) _payload.push(_args);\n  if (withSource) _payload.push(_source);\n\n  return _payload.reduce((acc, v) => `${acc} ${v},`, '{').slice(0, -1) + '}';\n};\nconst responseMappingTemplate = appsync.MappingTemplate.lambdaResult();\n\nlambdaDS.createResolver('QueryGetPost', {\n  typeName: 'Query',\n  fieldName: 'getPost',\n  requestMappingTemplate: appsync.MappingTemplate.lambdaRequest(requestPayload('getPost', { withArgs: true })),\n  responseMappingTemplate,\n});\n\nlambdaDS.createResolver('QueryAllPosts', {\n  typeName: 'Query',\n  fieldName: 'allPosts',\n  requestMappingTemplate: appsync.MappingTemplate.lambdaRequest(requestPayload('allPosts', {})),\n  responseMappingTemplate,\n});\n\nlambdaDS.createResolver('MutationAddPost', {\n  typeName: 'Mutation',\n  fieldName: 'addPost',\n  requestMappingTemplate: appsync.MappingTemplate.lambdaRequest(requestPayload('addPost', { withArgs: true })),\n  responseMappingTemplate,\n});\n\nlambdaDS.createResolver('PostRelatedPosts', {\n  typeName: 'Post',\n  fieldName: 'relatedPosts',\n  requestMappingTemplate: appsync.MappingTemplate.lambdaRequest(requestPayload('relatedPosts', { withSource: true }), 'BatchInvoke'),\n  responseMappingTemplate,\n});\n\nlambdaDS.createResolver('PostRelatedPostsMaxBatchSize', {\n  typeName: 'Post',\n  fieldName: 'relatedPostsMaxBatchSize',\n  requestMappingTemplate: appsync.MappingTemplate.lambdaRequest(requestPayload('relatedPostsMaxBatchSize', { withSource: true }), 'BatchInvoke'),\n  responseMappingTemplate,\n  maxBatchSize: 2,\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"FServiceRole3AC82EE1\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"FC4345940\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"exports.handler = async function handler(event) {\n    console.log('event:', JSON.stringify(event, undefined, 2));\n    return { event };\n}\"}, \"Role\": {\"Fn::GetAtt\": [\"FServiceRole3AC82EE1\", \"Arn\"]}, \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"FServiceRole3AC82EE1\"]}, \"FAllowInvokelambdaeventsourcesnsT85539BB11B51A88E\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"FC4345940\", \"Arn\"]}, \"Principal\": \"sns.amazonaws.com\", \"SourceArn\": {\"Ref\": \"TD925BC7E\"}}}, \"FTA788EE87\": {\"Type\": \"AWS::SNS::Subscription\", \"Properties\": {\"Protocol\": \"lambda\", \"TopicArn\": {\"Ref\": \"TD925BC7E\"}, \"Endpoint\": {\"Fn::GetAtt\": [\"FC4345940\", \"Arn\"]}}}, \"TD925BC7E\": {\"Type\": \"AWS::SNS::Topic\"}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as sns from 'aws-cdk-lib/aws-sns';\nimport * as cdk from 'aws-cdk-lib';\nimport { TestFunction } from './test-function';\nimport { SnsEventSource } from 'aws-cdk-lib/aws-lambda-event-sources';\n\nclass SqsEventSourceTest extends cdk.Stack {\n  constructor(scope: cdk.App, id: string) {\n    super(scope, id);\n\n    const fn = new TestFunction(this, 'F');\n    const topic = new sns.Topic(this, 'T');\n\n    fn.addEventSource(new SnsEventSource(topic));\n  }\n}\n\nconst app = new cdk.App();\nnew SqsEventSourceTest(app, 'lambda-event-source-sns');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"FServiceRole3AC82EE1\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"FServiceRoleDefaultPolicy17A19BFA\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"kinesis:DescribeStream\", \"kinesis:DescribeStreamConsumer\", \"kinesis:DescribeStreamSummary\", \"kinesis:GetRecords\", \"kinesis:GetShardIterator\", \"kinesis:ListShards\", \"kinesis:ListStreams\", \"kinesis:SubscribeToShard\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"Q63C6E3AB\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"FServiceRoleDefaultPolicy17A19BFA\", \"Roles\": [{\"Ref\": \"FServiceRole3AC82EE1\"}]}}, \"FC4345940\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"exports.handler = async function handler(event) {\n    console.log('event:', JSON.stringify(event, undefined, 2));\n    return { event };\n}\"}, \"Role\": {\"Fn::GetAtt\": [\"FServiceRole3AC82EE1\", \"Arn\"]}, \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"FServiceRoleDefaultPolicy17A19BFA\", \"FServiceRole3AC82EE1\"]}, \"FKinesisEventSourcelambdaeventsourcekinesisQ645CE7DB2D6BCCF5\": {\"Type\": \"AWS::Lambda::EventSourceMapping\", \"Properties\": {\"FunctionName\": {\"Ref\": \"FC4345940\"}, \"BatchSize\": 100, \"EventSourceArn\": {\"Fn::GetAtt\": [\"Q63C6E3AB\", \"Arn\"]}, \"StartingPosition\": \"TRIM_HORIZON\", \"TumblingWindowInSeconds\": 60}}, \"Q63C6E3AB\": {\"Type\": \"AWS::Kinesis::Stream\", \"Properties\": {\"RetentionPeriodHours\": 24, \"ShardCount\": 1, \"StreamEncryption\": {\"Fn::If\": [\"AwsCdkKinesisEncryptedStreamsUnsupportedRegions\", {\"Ref\": \"AWS::NoValue\"}, {\"EncryptionType\": \"KMS\", \"KeyId\": \"alias/aws/kinesis\"}]}}}}, \"Conditions\": {\"AwsCdkKinesisEncryptedStreamsUnsupportedRegions\": {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-northwest-1\"]}]}}, \"Outputs\": {\"OutputEventSourceMappingArn\": {\"Value\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":lambda:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":event-source-mapping:\", {\"Ref\": \"FKinesisEventSourcelambdaeventsourcekinesisQ645CE7DB2D6BCCF5\"}]]}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as kinesis from 'aws-cdk-lib/aws-kinesis';\nimport * as lambda from 'aws-cdk-lib/aws-lambda';\nimport * as cdk from 'aws-cdk-lib';\nimport { TestFunction } from './test-function';\nimport { KinesisEventSource } from 'aws-cdk-lib/aws-lambda-event-sources';\n\nclass KinesisEventSourceTest extends cdk.Stack {\n  constructor(scope: cdk.App, id: string) {\n    super(scope, id);\n\n    const fn = new TestFunction(this, 'F');\n    const stream = new kinesis.Stream(this, 'Q');\n    const eventSource = new KinesisEventSource(stream, {\n      startingPosition: lambda.StartingPosition.TRIM_HORIZON,\n      tumblingWindow: cdk.Duration.seconds(60),\n    });\n\n    fn.addEventSource(eventSource);\n\n    new cdk.CfnOutput(this, 'OutputEventSourceMappingArn', { value: eventSource.eventSourceMappingArn });\n  }\n}\n\nconst app = new cdk.App();\nnew KinesisEventSourceTest(app, 'lambda-event-source-kinesis');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"FServiceRole3AC82EE1\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"FC4345940\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"exports.handler = async function handler(event) {\n    console.log('event:', JSON.stringify(event, undefined, 2));\n    return { event };\n}\"}, \"Role\": {\"Fn::GetAtt\": [\"FServiceRole3AC82EE1\", \"Arn\"]}, \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"FServiceRole3AC82EE1\"]}, \"B08E7C7AF\": {\"Type\": \"AWS::S3::Bucket\", \"Properties\": {\"Tags\": [{\"Key\": \"aws-cdk:auto-delete-objects\", \"Value\": \"true\"}]}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"BPolicy3F02723E\": {\"Type\": \"AWS::S3::BucketPolicy\", \"Properties\": {\"Bucket\": {\"Ref\": \"B08E7C7AF\"}, \"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::GetAtt\": [\"CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092\", \"Arn\"]}}, \"Resource\": [{\"Fn::GetAtt\": [\"B08E7C7AF\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"B08E7C7AF\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}}}, \"BAutoDeleteObjectsCustomResource6224D839\": {\"Type\": \"Custom::S3AutoDeleteObjects\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F\", \"Arn\"]}, \"BucketName\": {\"Ref\": \"B08E7C7AF\"}}, \"DependsOn\": [\"BPolicy3F02723E\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"BNotificationsEB8DA980\": {\"Type\": \"Custom::S3BucketNotifications\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691\", \"Arn\"]}, \"BucketName\": {\"Ref\": \"B08E7C7AF\"}, \"NotificationConfiguration\": {\"LambdaFunctionConfigurations\": [{\"Events\": [\"s3:ObjectCreated:*\"], \"Filter\": {\"Key\": {\"FilterRules\": [{\"Name\": \"prefix\", \"Value\": \"subdir/\"}]}}, \"LambdaFunctionArn\": {\"Fn::GetAtt\": [\"FC4345940\", \"Arn\"]}}]}, \"Managed\": true}, \"DependsOn\": [\"BAllowBucketNotificationsTolambdaeventsources3F741608059EF9F709\"]}, \"BAllowBucketNotificationsTolambdaeventsources3F741608059EF9F709\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"FC4345940\", \"Arn\"]}, \"Principal\": \"s3.amazonaws.com\", \"SourceAccount\": {\"Ref\": \"AWS::AccountId\"}, \"SourceArn\": {\"Fn::GetAtt\": [\"B08E7C7AF\", \"Arn\"]}}}, \"CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Version\": \"2012-10-17\", \"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}]}, \"ManagedPolicyArns\": [{\"Fn::Sub\": \"arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"}]}}, \"CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"2575608c9455922c199396dd056f7479bb172f5c6068cd093f6d061160f48cee.zip\"}, \"Timeout\": 900, \"MemorySize\": 128, \"Handler\": \"index.handler\", \"Role\": {\"Fn::GetAtt\": [\"CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092\", \"Arn\"]}, \"Runtime\": \"nodejs16.x\", \"Description\": {\"Fn::Join\": [\"\", [\"Lambda function for auto-deleting objects in \", {\"Ref\": \"B08E7C7AF\"}, \" S3 bucket.\"]]}}, \"DependsOn\": [\"CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092\"]}, \"BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"s3:PutBucketNotification\", \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36\", \"Roles\": [{\"Ref\": \"BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC\"}]}}, \"BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Description\": \"AWS CloudFormation handler for \\\"Custom::S3BucketNotifications\\\" resources (@aws-cdk/aws-s3)\", \"Code\": {\"ZipFile\": \"import boto3  # type: ignore\nimport json\nimport logging\nimport urllib.request\n\ns3 = boto3.client(\\\"s3\\\")\n\nEVENTBRIDGE_CONFIGURATION = 'EventBridgeConfiguration'\n\nCONFIGURATION_TYPES = [\\\"TopicConfigurations\\\", \\\"QueueConfigurations\\\", \\\"LambdaFunctionConfigurations\\\"]\n\ndef handler(event: dict, context):\n  response_status = \\\"SUCCESS\\\"\n  error_message = \\\"\\\"\n  try:\n    props = event[\\\"ResourceProperties\\\"]\n    bucket = props[\\\"BucketName\\\"]\n    notification_configuration = props[\\\"NotificationConfiguration\\\"]\n    request_type = event[\\\"RequestType\\\"]\n    managed = props.get('Managed', 'true').lower() == 'true'\n    stack_id = event['StackId']\n\n    if managed:\n      config = handle_managed(request_type, notification_configuration)\n    else:\n      config = handle_unmanaged(bucket, stack_id, request_type, notification_configuration)\n\n    put_bucket_notification_configuration(bucket, config)\n  except Exception as e:\n    logging.exception(\\\"Failed to put bucket notification configuration\\\")\n    response_status = \\\"FAILED\\\"\n    error_message = f\\\"Error: {str(e)}. \\\"\n  finally:\n    submit_response(event, context, response_status, error_message)\n\ndef handle_managed(request_type, notification_configuration):\n  if request_type == 'Delete':\n    return {}\n  return notification_configuration\n\ndef handle_unmanaged(bucket, stack_id, request_type, notification_configuration):\n  external_notifications = find_external_notifications(bucket, stack_id)\n\n  if request_type == 'Delete':\n    return external_notifications\n\n  def with_id(notification):\n    notification['Id'] = f\\\"{stack_id}-{hash(json.dumps(notification, sort_keys=True))}\\\"\n    return notification\n\n  notifications = {}\n  for t in CONFIGURATION_TYPES:\n    external = external_notifications.get(t, [])\n    incoming = [with_id(n) for n in notification_configuration.get(t, [])]\n    notifications[t] = external + incoming\n\n  if EVENTBRIDGE_CONFIGURATION in notification_configuration:\n    notifications[EVENTBRIDGE_CONFIGURATION] = notification_configuration[EVENTBRIDGE_CONFIGURATION]\n  elif EVENTBRIDGE_CONFIGURATION in external_notifications:\n    notifications[EVENTBRIDGE_CONFIGURATION] = external_notifications[EVENTBRIDGE_CONFIGURATION]\n\n  return notifications\n\ndef find_external_notifications(bucket, stack_id):\n  existing_notifications = get_bucket_notification_configuration(bucket)\n  external_notifications = {}\n  for t in CONFIGURATION_TYPES:\n    external_notifications[t] = [n for n in existing_notifications.get(t, []) if not n['Id'].startswith(f\\\"{stack_id}-\\\")]\n\n  if EVENTBRIDGE_CONFIGURATION in existing_notifications:\n    external_notifications[EVENTBRIDGE_CONFIGURATION] = existing_notifications[EVENTBRIDGE_CONFIGURATION]\n\n  return external_notifications\n\ndef get_bucket_notification_configuration(bucket):\n  return s3.get_bucket_notification_configuration(Bucket=bucket)\n\ndef put_bucket_notification_configuration(bucket, notification_configuration):\n  s3.put_bucket_notification_configuration(Bucket=bucket, NotificationConfiguration=notification_configuration)\n\ndef submit_response(event: dict, context, response_status: str, error_message: str):\n  response_body = json.dumps(\n    {\n      \\\"Status\\\": response_status,\n      \\\"Reason\\\": f\\\"{error_message}See the details in CloudWatch Log Stream: {context.log_stream_name}\\\",\n      \\\"PhysicalResourceId\\\": event.get(\\\"PhysicalResourceId\\\") or event[\\\"LogicalResourceId\\\"],\n      \\\"StackId\\\": event[\\\"StackId\\\"],\n      \\\"RequestId\\\": event[\\\"RequestId\\\"],\n      \\\"LogicalResourceId\\\": event[\\\"LogicalResourceId\\\"],\n      \\\"NoEcho\\\": False,\n    }\n  ).encode(\\\"utf-8\\\")\n  headers = {\\\"content-type\\\": \\\"\\\", \\\"content-length\\\": str(len(response_body))}\n  try:\n    req = urllib.request.Request(url=event[\\\"ResponseURL\\\"], headers=headers, data=response_body, method=\\\"PUT\\\")\n    with urllib.request.urlopen(req) as response:\n      print(response.read().decode(\\\"utf-8\\\"))\n    print(\\\"Status code: \\\" + response.reason)\n  except Exception as e:\n      print(\\\"send(..) failed executing request.urlopen(..): \\\" + str(e))\n\"}, \"Handler\": \"index.handler\", \"Role\": {\"Fn::GetAtt\": [\"BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC\", \"Arn\"]}, \"Runtime\": \"python3.9\", \"Timeout\": 300}, \"DependsOn\": [\"BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36\", \"BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC\"]}}, \"Mappings\": {\"DefaultCrNodeVersionMap\": {\"af-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-east-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-3\": {\"value\": \"nodejs16.x\"}, \"ap-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-south-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-3\": {\"value\": \"nodejs16.x\"}, \"ca-central-1\": {\"value\": \"nodejs16.x\"}, \"cn-north-1\": {\"value\": \"nodejs16.x\"}, \"cn-northwest-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-2\": {\"value\": \"nodejs16.x\"}, \"eu-north-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-1\": {\"value\": \"nodejs16.x\"}, \"eu-west-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-3\": {\"value\": \"nodejs16.x\"}, \"me-central-1\": {\"value\": \"nodejs16.x\"}, \"me-south-1\": {\"value\": \"nodejs16.x\"}, \"sa-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-2\": {\"value\": \"nodejs16.x\"}, \"us-gov-east-1\": {\"value\": \"nodejs16.x\"}, \"us-gov-west-1\": {\"value\": \"nodejs16.x\"}, \"us-iso-east-1\": {\"value\": \"nodejs14.x\"}, \"us-iso-west-1\": {\"value\": \"nodejs14.x\"}, \"us-isob-east-1\": {\"value\": \"nodejs14.x\"}, \"us-west-1\": {\"value\": \"nodejs16.x\"}, \"us-west-2\": {\"value\": \"nodejs16.x\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as s3 from 'aws-cdk-lib/aws-s3';\nimport * as cdk from 'aws-cdk-lib';\nimport { TestFunction } from './test-function';\nimport { S3EventSource } from 'aws-cdk-lib/aws-lambda-event-sources';\n\nclass S3EventSourceTest extends cdk.Stack {\n  constructor(scope: cdk.App, id: string) {\n    super(scope, id);\n\n    const fn = new TestFunction(this, 'F');\n    const bucket = new s3.Bucket(this, 'B', {\n      removalPolicy: cdk.RemovalPolicy.DESTROY,\n      autoDeleteObjects: true,\n    });\n\n    fn.addEventSource(new S3EventSource(bucket, {\n      events: [s3.EventType.OBJECT_CREATED],\n      filters: [{ prefix: 'subdir/' }],\n    }));\n  }\n}\n\nconst app = new cdk.App();\nnew S3EventSourceTest(app, 'lambda-event-source-s3');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"FServiceRole3AC82EE1\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"FServiceRoleDefaultPolicy17A19BFA\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"sqs:GetQueueAttributes\", \"sqs:GetQueueUrl\", \"sqs:SendMessage\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"Q63C6E3AB\", \"Arn\"]}}, {\"Action\": [\"kinesis:DescribeStream\", \"kinesis:DescribeStreamConsumer\", \"kinesis:DescribeStreamSummary\", \"kinesis:GetRecords\", \"kinesis:GetShardIterator\", \"kinesis:ListShards\", \"kinesis:ListStreams\", \"kinesis:SubscribeToShard\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"S509448A1\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"FServiceRoleDefaultPolicy17A19BFA\", \"Roles\": [{\"Ref\": \"FServiceRole3AC82EE1\"}]}}, \"FC4345940\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"exports.handler = async function handler(event) {\n    // eslint-disable-next-line no-console\n    console.log('event:', JSON.stringify(event, undefined, 2));\n    throw new Error();\n}\"}, \"Role\": {\"Fn::GetAtt\": [\"FServiceRole3AC82EE1\", \"Arn\"]}, \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"FServiceRoleDefaultPolicy17A19BFA\", \"FServiceRole3AC82EE1\"]}, \"FKinesisEventSourcelambdaeventsourcekinesiswithdlqSD357FCB87EEA8CB4\": {\"Type\": \"AWS::Lambda::EventSourceMapping\", \"Properties\": {\"FunctionName\": {\"Ref\": \"FC4345940\"}, \"BatchSize\": 100, \"DestinationConfig\": {\"OnFailure\": {\"Destination\": {\"Fn::GetAtt\": [\"Q63C6E3AB\", \"Arn\"]}}}, \"EventSourceArn\": {\"Fn::GetAtt\": [\"S509448A1\", \"Arn\"]}, \"MaximumRetryAttempts\": 0, \"StartingPosition\": \"TRIM_HORIZON\"}}, \"S509448A1\": {\"Type\": \"AWS::Kinesis::Stream\", \"Properties\": {\"RetentionPeriodHours\": 24, \"ShardCount\": 1, \"StreamEncryption\": {\"Fn::If\": [\"AwsCdkKinesisEncryptedStreamsUnsupportedRegions\", {\"Ref\": \"AWS::NoValue\"}, {\"EncryptionType\": \"KMS\", \"KeyId\": \"alias/aws/kinesis\"}]}}}, \"Q63C6E3AB\": {\"Type\": \"AWS::SQS::Queue\", \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}}, \"Outputs\": {\"FunctionArn\": {\"Value\": {\"Fn::GetAtt\": [\"FC4345940\", \"Arn\"]}}, \"InputKinesisStreamName\": {\"Value\": {\"Ref\": \"S509448A1\"}}, \"DlqSqsQueueUrl\": {\"Value\": {\"Ref\": \"Q63C6E3AB\"}}}, \"Conditions\": {\"AwsCdkKinesisEncryptedStreamsUnsupportedRegions\": {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-northwest-1\"]}]}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as kinesis from 'aws-cdk-lib/aws-kinesis';\nimport * as lambda from 'aws-cdk-lib/aws-lambda';\nimport * as sqs from 'aws-cdk-lib/aws-sqs';\nimport { App, CfnOutput, Stack } from 'aws-cdk-lib';\nimport { KinesisEventSource, SqsDlq } from 'aws-cdk-lib/aws-lambda-event-sources';\n\n/*\n * Stack verification steps:\n * * aws kinesis put-record --stream-name <value of stack output: InputKinesisStreamName> --partition-key 123 --data testdata\n * * aws sqs receive-message --queue-url <value of stack output: DlqSqsQueueUrl> --max-number-of-messages 1 --query 'Messages[0].Body'\n * The last command should return a string that contains the Lambda function ARN in it.\n */\n\nasync function handler(event: any) {\n  // eslint-disable-next-line no-console\n  console.log('event:', JSON.stringify(event, undefined, 2));\n  throw new Error();\n}\n\nclass KinesisWithDLQTest extends Stack {\n  constructor(scope: App, id: string) {\n    super(scope, id);\n\n    const fn = new lambda.Function(this, 'F', {\n      runtime: lambda.Runtime.NODEJS_14_X,\n      handler: 'index.handler',\n      code: lambda.Code.fromInline(`exports.handler = ${handler.toString()}`),\n    });\n    new CfnOutput(this, 'FunctionArn', { value: fn.functionArn });\n\n    const stream = new kinesis.Stream(this, 'S');\n    new CfnOutput(this, 'InputKinesisStreamName', { value: stream.streamName });\n\n    const dlq = new sqs.Queue(this, 'Q');\n    new CfnOutput(this, 'DlqSqsQueueUrl', { value: dlq.queueUrl });\n\n    fn.addEventSource(new KinesisEventSource(stream, {\n      startingPosition: lambda.StartingPosition.TRIM_HORIZON,\n      onFailure: new SqsDlq(dlq),\n      retryAttempts: 0,\n    }));\n  }\n}\n\nconst app = new App();\nnew KinesisWithDLQTest(app, 'lambda-event-source-kinesis-with-dlq');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"FServiceRole3AC82EE1\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"FServiceRoleDefaultPolicy17A19BFA\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"sqs:ChangeMessageVisibility\", \"sqs:DeleteMessage\", \"sqs:GetQueueAttributes\", \"sqs:GetQueueUrl\", \"sqs:ReceiveMessage\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"Q63C6E3AB\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"FServiceRoleDefaultPolicy17A19BFA\", \"Roles\": [{\"Ref\": \"FServiceRole3AC82EE1\"}]}}, \"FC4345940\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"exports.handler = async function handler(event) {\n    console.log('event:', JSON.stringify(event, undefined, 2));\n    return { event };\n}\"}, \"Role\": {\"Fn::GetAtt\": [\"FServiceRole3AC82EE1\", \"Arn\"]}, \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"FServiceRoleDefaultPolicy17A19BFA\", \"FServiceRole3AC82EE1\"]}, \"FSqsEventSourcesqseventsourcemaxconcurrencyQ1268C091130BF341\": {\"Type\": \"AWS::Lambda::EventSourceMapping\", \"Properties\": {\"FunctionName\": {\"Ref\": \"FC4345940\"}, \"BatchSize\": 5, \"EventSourceArn\": {\"Fn::GetAtt\": [\"Q63C6E3AB\", \"Arn\"]}, \"ScalingConfig\": {\"MaximumConcurrency\": 5}}}, \"Q63C6E3AB\": {\"Type\": \"AWS::SQS::Queue\", \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as sqs from 'aws-cdk-lib/aws-sqs';\nimport * as cdk from 'aws-cdk-lib';\nimport { IntegTest } from '@aws-cdk/integ-tests-alpha';\nimport { TestFunction } from './test-function';\nimport { SqsEventSource } from 'aws-cdk-lib/aws-lambda-event-sources';\n\nclass SqsEventSourceTest extends cdk.Stack {\n  constructor(scope: cdk.App, id: string) {\n    super(scope, id);\n\n    const fn = new TestFunction(this, 'F');\n    const queue = new sqs.Queue(this, 'Q');\n\n    fn.addEventSource(new SqsEventSource(queue, {\n      batchSize: 5,\n      maxConcurrency: 5,\n    }));\n  }\n}\n\nconst app = new cdk.App();\nconst stack = new SqsEventSourceTest(app, 'sqs-event-source-max-concurrency');\n\nnew IntegTest(app, 'sqs-max-concurrency-integ-test', {\n  testCases: [stack],\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"FServiceRole3AC82EE1\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"FServiceRoleDefaultPolicy17A19BFA\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"sqs:ChangeMessageVisibility\", \"sqs:DeleteMessage\", \"sqs:GetQueueAttributes\", \"sqs:GetQueueUrl\", \"sqs:ReceiveMessage\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"Q63C6E3AB\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"FServiceRoleDefaultPolicy17A19BFA\", \"Roles\": [{\"Ref\": \"FServiceRole3AC82EE1\"}]}}, \"FC4345940\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"exports.handler = async function handler(event) {\n    console.log('event:', JSON.stringify(event, undefined, 2));\n    return { event };\n}\"}, \"Role\": {\"Fn::GetAtt\": [\"FServiceRole3AC82EE1\", \"Arn\"]}, \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"FServiceRoleDefaultPolicy17A19BFA\", \"FServiceRole3AC82EE1\"]}, \"FSqsEventSourcelambdaeventsourcesqsQ67DE9201754EC819\": {\"Type\": \"AWS::Lambda::EventSourceMapping\", \"Properties\": {\"FunctionName\": {\"Ref\": \"FC4345940\"}, \"BatchSize\": 5, \"EventSourceArn\": {\"Fn::GetAtt\": [\"Q63C6E3AB\", \"Arn\"]}}}, \"Q63C6E3AB\": {\"Type\": \"AWS::SQS::Queue\", \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}}, \"Outputs\": {\"OutputEventSourceMappingArn\": {\"Value\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":lambda:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":event-source-mapping:\", {\"Ref\": \"FSqsEventSourcelambdaeventsourcesqsQ67DE9201754EC819\"}]]}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as sqs from 'aws-cdk-lib/aws-sqs';\nimport * as cdk from 'aws-cdk-lib';\nimport { TestFunction } from './test-function';\nimport { SqsEventSource } from 'aws-cdk-lib/aws-lambda-event-sources';\n\nclass SqsEventSourceTest extends cdk.Stack {\n  constructor(scope: cdk.App, id: string) {\n    super(scope, id);\n\n    const fn = new TestFunction(this, 'F');\n    const queue = new sqs.Queue(this, 'Q');\n    const eventSource = new SqsEventSource(queue, {\n      batchSize: 5,\n    });\n\n    fn.addEventSource(eventSource);\n\n    new cdk.CfnOutput(this, 'OutputEventSourceMappingArn', { value: eventSource.eventSourceMappingArn });\n  }\n}\n\nconst app = new cdk.App();\nnew SqsEventSourceTest(app, 'lambda-event-source-sqs');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"FServiceRole3AC82EE1\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"FServiceRoleDefaultPolicy17A19BFA\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"dynamodb:ListStreams\", \"Effect\": \"Allow\", \"Resource\": \"*\"}, {\"Action\": [\"dynamodb:DescribeStream\", \"dynamodb:GetRecords\", \"dynamodb:GetShardIterator\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"TD925BC7E\", \"StreamArn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"FServiceRoleDefaultPolicy17A19BFA\", \"Roles\": [{\"Ref\": \"FServiceRole3AC82EE1\"}]}}, \"FC4345940\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"exports.handler = async function handler(event) {\n    console.log('event:', JSON.stringify(event, undefined, 2));\n    return { event };\n}\"}, \"Role\": {\"Fn::GetAtt\": [\"FServiceRole3AC82EE1\", \"Arn\"]}, \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"FServiceRoleDefaultPolicy17A19BFA\", \"FServiceRole3AC82EE1\"]}, \"FDynamoDBEventSourcelambdaeventsourcedynamodbT7967476AE652DA48\": {\"Type\": \"AWS::Lambda::EventSourceMapping\", \"Properties\": {\"FunctionName\": {\"Ref\": \"FC4345940\"}, \"BatchSize\": 5, \"EventSourceArn\": {\"Fn::GetAtt\": [\"TD925BC7E\", \"StreamArn\"]}, \"StartingPosition\": \"TRIM_HORIZON\", \"TumblingWindowInSeconds\": 60}}, \"TD925BC7E\": {\"Type\": \"AWS::DynamoDB::Table\", \"Properties\": {\"KeySchema\": [{\"AttributeName\": \"id\", \"KeyType\": \"HASH\"}], \"AttributeDefinitions\": [{\"AttributeName\": \"id\", \"AttributeType\": \"S\"}], \"ProvisionedThroughput\": {\"ReadCapacityUnits\": 5, \"WriteCapacityUnits\": 5}, \"StreamSpecification\": {\"StreamViewType\": \"NEW_IMAGE\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}}, \"Outputs\": {\"OutputEventSourceMappingArn\": {\"Value\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":lambda:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":event-source-mapping:\", {\"Ref\": \"FDynamoDBEventSourcelambdaeventsourcedynamodbT7967476AE652DA48\"}]]}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as dynamodb from 'aws-cdk-lib/aws-dynamodb';\nimport * as lambda from 'aws-cdk-lib/aws-lambda';\nimport * as cdk from 'aws-cdk-lib';\nimport { TestFunction } from './test-function';\nimport { DynamoEventSource } from 'aws-cdk-lib/aws-lambda-event-sources';\n\nclass DynamoEventSourceTest extends cdk.Stack {\n  constructor(scope: cdk.App, id: string) {\n    super(scope, id);\n\n    const fn = new TestFunction(this, 'F');\n    const queue = new dynamodb.Table(this, 'T', {\n      partitionKey: {\n        name: 'id',\n        type: dynamodb.AttributeType.STRING,\n      },\n      stream: dynamodb.StreamViewType.NEW_IMAGE,\n      removalPolicy: cdk.RemovalPolicy.DESTROY,\n    });\n    const eventSource = new DynamoEventSource(queue, {\n      batchSize: 5,\n      startingPosition: lambda.StartingPosition.TRIM_HORIZON,\n      tumblingWindow: cdk.Duration.seconds(60),\n    });\n\n    fn.addEventSource(eventSource);\n\n    new cdk.CfnOutput(this, 'OutputEventSourceMappingArn', { value: eventSource.eventSourceMappingArn });\n  }\n}\n\nconst app = new cdk.App();\nnew DynamoEventSourceTest(app, 'lambda-event-source-dynamodb');\napp.synth();\n"}
{ "prompt": "{\"Transform\": \"AWS::Serverless-2016-10-31\", \"Resources\": {\"VPCB9E5F0B4\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-docdb-cluster-rotation/VPC\"}]}}, \"VPCPublicSubnet1SubnetB4246D30\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-docdb-cluster-rotation/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableFEE4B781\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-docdb-cluster-rotation/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableAssociation0B0896DC\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}}}, \"VPCPublicSubnet1DefaultRoute91CEF279\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet1EIP6AD938E8\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-docdb-cluster-rotation/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1NATGatewayE0556630\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet1EIP6AD938E8\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-docdb-cluster-rotation/VPC/PublicSubnet1\"}]}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\"]}, \"VPCPublicSubnet2Subnet74179F39\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-docdb-cluster-rotation/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTable6F1A15F1\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-docdb-cluster-rotation/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTableAssociation5A808732\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}}}, \"VPCPublicSubnet2DefaultRouteB7481BBA\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet2EIP4947BC00\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-docdb-cluster-rotation/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2NATGateway3C070193\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet2EIP4947BC00\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-docdb-cluster-rotation/VPC/PublicSubnet2\"}]}, \"DependsOn\": [\"VPCPublicSubnet2DefaultRouteB7481BBA\", \"VPCPublicSubnet2RouteTableAssociation5A808732\"]}, \"VPCPrivateSubnet1Subnet8BCA10E0\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-docdb-cluster-rotation/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableBE8A6027\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-docdb-cluster-rotation/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableAssociation347902D1\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}}}, \"VPCPrivateSubnet1DefaultRouteAE1D6490\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet1NATGatewayE0556630\"}}}, \"VPCPrivateSubnet2SubnetCFCDAA7A\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-docdb-cluster-rotation/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTable0A19E10E\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-docdb-cluster-rotation/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTableAssociation0C73D413\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}}}, \"VPCPrivateSubnet2DefaultRouteF4F5CFD2\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet2NATGateway3C070193\"}}}, \"VPCIGWB7E252D3\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-docdb-cluster-rotation/VPC\"}]}}, \"VPCVPCGW99B986DC\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"InternetGatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}}, \"DatabaseSubnets56F17B9A\": {\"Type\": \"AWS::DocDB::DBSubnetGroup\", \"Properties\": {\"DBSubnetGroupDescription\": \"Subnets for Database database\", \"SubnetIds\": [{\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}, {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}]}}, \"DatabaseSecurityGroup5C91FDCB\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"DocumentDB security group\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"DatabaseSecurityGroupfromawscdkdocdbclusterrotationDatabaseRotationSingleUserSecurityGroupBF39D224IndirectPortE14845D7\": {\"Type\": \"AWS::EC2::SecurityGroupIngress\", \"Properties\": {\"IpProtocol\": \"tcp\", \"Description\": \"from awscdkdocdbclusterrotationDatabaseRotationSingleUserSecurityGroupBF39D224:{IndirectPort}\", \"FromPort\": {\"Fn::GetAtt\": [\"DatabaseB269D8BB\", \"Port\"]}, \"GroupId\": {\"Fn::GetAtt\": [\"DatabaseSecurityGroup5C91FDCB\", \"GroupId\"]}, \"SourceSecurityGroupId\": {\"Fn::GetAtt\": [\"DatabaseRotationSingleUserSecurityGroupAC6E0E73\", \"GroupId\"]}, \"ToPort\": {\"Fn::GetAtt\": [\"DatabaseB269D8BB\", \"Port\"]}}}, \"DatabaseSecret3B817195\": {\"Type\": \"AWS::SecretsManager::Secret\", \"Properties\": {\"Description\": {\"Fn::Join\": [\"\", [\"Generated by the CDK for stack: \", {\"Ref\": \"AWS::StackName\"}]]}, \"GenerateSecretString\": {\"ExcludeCharacters\": \"\\\"@/\", \"GenerateStringKey\": \"password\", \"PasswordLength\": 41, \"SecretStringTemplate\": \"{\\\"username\\\":\\\"docdb\\\"}\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"DatabaseSecretAttachmentE5D1B020\": {\"Type\": \"AWS::SecretsManager::SecretTargetAttachment\", \"Properties\": {\"SecretId\": {\"Ref\": \"DatabaseSecret3B817195\"}, \"TargetId\": {\"Ref\": \"DatabaseB269D8BB\"}, \"TargetType\": \"AWS::DocDB::DBCluster\"}}, \"DatabaseSecretAttachmentRotationScheduleA4E9F034\": {\"Type\": \"AWS::SecretsManager::RotationSchedule\", \"Properties\": {\"SecretId\": {\"Ref\": \"DatabaseSecretAttachmentE5D1B020\"}, \"RotationLambdaARN\": {\"Fn::GetAtt\": [\"DatabaseRotationSingleUser65F55654\", \"Outputs.RotationLambdaARN\"]}, \"RotationRules\": {\"AutomaticallyAfterDays\": 30}}}, \"DatabaseSecretPolicyEE73D3F8\": {\"Type\": \"AWS::SecretsManager::ResourcePolicy\", \"Properties\": {\"ResourcePolicy\": {\"Statement\": [{\"Action\": \"secretsmanager:DeleteSecret\", \"Effect\": \"Deny\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}, \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"SecretId\": {\"Ref\": \"DatabaseSecret3B817195\"}}}, \"DatabaseB269D8BB\": {\"Type\": \"AWS::DocDB::DBCluster\", \"Properties\": {\"DBSubnetGroupName\": {\"Ref\": \"DatabaseSubnets56F17B9A\"}, \"MasterUsername\": {\"Fn::Join\": [\"\", [\"{{resolve:secretsmanager:\", {\"Ref\": \"DatabaseSecret3B817195\"}, \":SecretString:username::}}\"]]}, \"MasterUserPassword\": {\"Fn::Join\": [\"\", [\"{{resolve:secretsmanager:\", {\"Ref\": \"DatabaseSecret3B817195\"}, \":SecretString:password::}}\"]]}, \"StorageEncrypted\": true, \"VpcSecurityGroupIds\": [{\"Fn::GetAtt\": [\"DatabaseSecurityGroup5C91FDCB\", \"GroupId\"]}]}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"DatabaseInstance1844F58FD\": {\"Type\": \"AWS::DocDB::DBInstance\", \"Properties\": {\"DBClusterIdentifier\": {\"Ref\": \"DatabaseB269D8BB\"}, \"DBInstanceClass\": \"db.r5.large\"}, \"DependsOn\": [\"VPCPrivateSubnet1DefaultRouteAE1D6490\", \"VPCPrivateSubnet1RouteTableAssociation347902D1\", \"VPCPrivateSubnet2DefaultRouteF4F5CFD2\", \"VPCPrivateSubnet2RouteTableAssociation0C73D413\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"DatabaseRotationSingleUserSecurityGroupAC6E0E73\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"aws-cdk-docdb-cluster-rotation/Database/RotationSingleUser/SecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}}, \"DatabaseRotationSingleUser65F55654\": {\"Type\": \"AWS::Serverless::Application\", \"Properties\": {\"Location\": {\"ApplicationId\": {\"Fn::FindInMap\": [\"DatabaseRotationSingleUserSARMapping9AEB3E55\", {\"Ref\": \"AWS::Partition\"}, \"applicationId\"]}, \"SemanticVersion\": {\"Fn::FindInMap\": [\"DatabaseRotationSingleUserSARMapping9AEB3E55\", {\"Ref\": \"AWS::Partition\"}, \"semanticVersion\"]}}, \"Parameters\": {\"endpoint\": {\"Fn::Join\": [\"\", [\"https://secretsmanager.\", {\"Ref\": \"AWS::Region\"}, \".\", {\"Ref\": \"AWS::URLSuffix\"}]]}, \"functionName\": \"awscdkdocdbclusterrotationDatabaseRotationSingleUser7DAE65BE\", \"vpcSubnetIds\": {\"Fn::Join\": [\"\", [{\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}, \",\", {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}]]}, \"vpcSecurityGroupIds\": {\"Fn::GetAtt\": [\"DatabaseRotationSingleUserSecurityGroupAC6E0E73\", \"GroupId\"]}, \"excludeCharacters\": \"\\\"@/\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}}, \"Mappings\": {\"DatabaseRotationSingleUserSARMapping9AEB3E55\": {\"aws\": {\"applicationId\": \"arn:aws:serverlessrepo:us-east-1:297356227824:applications/SecretsManagerMongoDBRotationSingleUser\", \"semanticVersion\": \"1.1.225\"}, \"aws-cn\": {\"applicationId\": \"arn:aws-cn:serverlessrepo:cn-north-1:193023089310:applications/SecretsManagerMongoDBRotationSingleUser\", \"semanticVersion\": \"1.1.37\"}, \"aws-us-gov\": {\"applicationId\": \"arn:aws-us-gov:serverlessrepo:us-gov-west-1:023102451235:applications/SecretsManagerMongoDBRotationSingleUser\", \"semanticVersion\": \"1.1.93\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as cdk from 'aws-cdk-lib';\nimport * as docdb from 'aws-cdk-lib/aws-docdb';\n\n/*\n * Stack verification steps:\n * * aws secretsmanager describe-secret --secret-id <deployed secret arn>\n * * aws lambda get-function --function-name <lambda arn from \"RotationLambdaARN\" in previous output\n *   * verify the lambda has the tag \"serverlessrepo:applicationId\" with the value\n *     \"arn:aws:serverlessrepo:us-east-1:297356227824:applications/SecretsManagerMongoDBRotationSingleUser\"\n */\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'aws-cdk-docdb-cluster-rotation');\n\nconst vpc = new ec2.Vpc(stack, 'VPC', { restrictDefaultSecurityGroup: false });\n\n/// !show\nconst cluster = new docdb.DatabaseCluster(stack, 'Database', {\n  masterUser: {\n    username: 'docdb',\n  },\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.R5, ec2.InstanceSize.LARGE),\n  vpc,\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\n\ncluster.addRotationSingleUser();\n/// !hide\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"VPCB9E5F0B4\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-docdb-integ/VPC\"}]}}, \"VPCPublicSubnet1SubnetB4246D30\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-docdb-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableFEE4B781\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-docdb-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableAssociation0B0896DC\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}}}, \"VPCPublicSubnet1DefaultRoute91CEF279\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet1EIP6AD938E8\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-docdb-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1NATGatewayE0556630\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet1EIP6AD938E8\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-docdb-integ/VPC/PublicSubnet1\"}]}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\"]}, \"VPCPublicSubnet2Subnet74179F39\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-docdb-integ/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTable6F1A15F1\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-docdb-integ/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTableAssociation5A808732\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}}}, \"VPCPublicSubnet2DefaultRouteB7481BBA\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet2EIP4947BC00\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-docdb-integ/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2NATGateway3C070193\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet2EIP4947BC00\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-docdb-integ/VPC/PublicSubnet2\"}]}, \"DependsOn\": [\"VPCPublicSubnet2DefaultRouteB7481BBA\", \"VPCPublicSubnet2RouteTableAssociation5A808732\"]}, \"VPCPrivateSubnet1Subnet8BCA10E0\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-docdb-integ/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableBE8A6027\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-docdb-integ/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableAssociation347902D1\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}}}, \"VPCPrivateSubnet1DefaultRouteAE1D6490\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet1NATGatewayE0556630\"}}}, \"VPCPrivateSubnet2SubnetCFCDAA7A\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-docdb-integ/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTable0A19E10E\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-docdb-integ/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTableAssociation0C73D413\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}}}, \"VPCPrivateSubnet2DefaultRouteF4F5CFD2\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet2NATGateway3C070193\"}}}, \"VPCIGWB7E252D3\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-docdb-integ/VPC\"}]}}, \"VPCVPCGW99B986DC\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"InternetGatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}}, \"ParamsA8366201\": {\"Type\": \"AWS::DocDB::DBClusterParameterGroup\", \"Properties\": {\"Description\": \"A nice parameter group\", \"Family\": \"docdb3.6\", \"Parameters\": {\"audit_logs\": \"disabled\", \"tls\": \"enabled\", \"ttl_monitor\": \"enabled\"}}}, \"DbSecurity381C2C15\": {\"Type\": \"AWS::KMS::Key\", \"Properties\": {\"KeyPolicy\": {\"Statement\": [{\"Action\": \"kms:*\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}, \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"DatabaseSubnets56F17B9A\": {\"Type\": \"AWS::DocDB::DBSubnetGroup\", \"Properties\": {\"DBSubnetGroupDescription\": \"Subnets for Database database\", \"SubnetIds\": [{\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}, {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}]}}, \"DatabaseSecurityGroup5C91FDCB\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"DocumentDB security group\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"DatabaseSecurityGroupfrom00000IndirectPortF24F2E03\": {\"Type\": \"AWS::EC2::SecurityGroupIngress\", \"Properties\": {\"IpProtocol\": \"tcp\", \"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Open to the world\", \"FromPort\": {\"Fn::GetAtt\": [\"DatabaseB269D8BB\", \"Port\"]}, \"GroupId\": {\"Fn::GetAtt\": [\"DatabaseSecurityGroup5C91FDCB\", \"GroupId\"]}, \"ToPort\": {\"Fn::GetAtt\": [\"DatabaseB269D8BB\", \"Port\"]}}}, \"DatabaseB269D8BB\": {\"Type\": \"AWS::DocDB::DBCluster\", \"Properties\": {\"DBClusterParameterGroupName\": {\"Ref\": \"ParamsA8366201\"}, \"DBSubnetGroupName\": {\"Ref\": \"DatabaseSubnets56F17B9A\"}, \"EngineVersion\": \"3.6.0\", \"KmsKeyId\": {\"Fn::GetAtt\": [\"DbSecurity381C2C15\", \"Arn\"]}, \"MasterUsername\": \"docdb\", \"MasterUserPassword\": \"7959866cacc02c2d243ecfe177464fe6\", \"StorageEncrypted\": true, \"VpcSecurityGroupIds\": [{\"Fn::GetAtt\": [\"DatabaseSecurityGroup5C91FDCB\", \"GroupId\"]}]}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"DatabaseInstance1844F58FD\": {\"Type\": \"AWS::DocDB::DBInstance\", \"Properties\": {\"DBClusterIdentifier\": {\"Ref\": \"DatabaseB269D8BB\"}, \"DBInstanceClass\": \"db.r5.large\", \"EnablePerformanceInsights\": true}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\", \"VPCPublicSubnet2DefaultRouteB7481BBA\", \"VPCPublicSubnet2RouteTableAssociation5A808732\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as kms from 'aws-cdk-lib/aws-kms';\nimport * as cdk from 'aws-cdk-lib';\nimport * as constructs from 'constructs';\nimport { DatabaseCluster, ClusterParameterGroup } from 'aws-cdk-lib/aws-docdb';\n\n/*\n * Stack verification steps:\n * * aws docdb describe-db-clusters --db-cluster-identifier <deployed db cluster identifier>\n */\n\nclass TestStack extends cdk.Stack {\n  constructor(scope: constructs.Construct, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n\n    const vpc = new ec2.Vpc(this, 'VPC', { maxAzs: 2, restrictDefaultSecurityGroup: false });\n\n    const params = new ClusterParameterGroup(this, 'Params', {\n      family: 'docdb3.6',\n      description: 'A nice parameter group',\n      parameters: {\n        audit_logs: 'disabled',\n        tls: 'enabled',\n        ttl_monitor: 'enabled',\n      },\n    });\n\n    const kmsKey = new kms.Key(this, 'DbSecurity', {\n      removalPolicy: cdk.RemovalPolicy.DESTROY,\n    });\n\n    const cluster = new DatabaseCluster(this, 'Database', {\n      engineVersion: '3.6.0',\n      masterUser: {\n        username: 'docdb',\n        password: cdk.SecretValue.unsafePlainText('7959866cacc02c2d243ecfe177464fe6'),\n      },\n      instanceType: ec2.InstanceType.of(ec2.InstanceClass.R5, ec2.InstanceSize.LARGE),\n      vpcSubnets: { subnetType: ec2.SubnetType.PUBLIC },\n      vpc,\n      parameterGroup: params,\n      kmsKey,\n      removalPolicy: cdk.RemovalPolicy.DESTROY,\n      enablePerformanceInsights: true,\n    });\n\n    cluster.connections.allowDefaultPortFromAnyIpv4('Open to the world');\n  }\n}\n\nconst app = new cdk.App();\n\nnew TestStack(app, 'aws-cdk-docdb-integ');\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyKey6AB29FA6\": {\"Type\": \"AWS::KMS::Key\", \"Properties\": {\"KeyPolicy\": {\"Statement\": [{\"Action\": \"kms:*\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}, \"Resource\": \"*\"}, {\"Action\": \"kms:encrypt\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Ref\": \"AWS::AccountId\"}}, \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"MyKeyAlias1B45D9DA\": {\"Type\": \"AWS::KMS::Alias\", \"Properties\": {\"AliasName\": \"alias/bar\", \"TargetKeyId\": {\"Fn::GetAtt\": [\"MyKey6AB29FA6\", \"Arn\"]}}}, \"AsymmetricKey26BBC514\": {\"Type\": \"AWS::KMS::Key\", \"Properties\": {\"KeyPolicy\": {\"Statement\": [{\"Action\": \"kms:*\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}, \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"KeySpec\": \"ECC_NIST_P256\", \"KeyUsage\": \"SIGN_VERIFY\"}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as iam from 'aws-cdk-lib/aws-iam';\nimport { App, RemovalPolicy, Stack } from 'aws-cdk-lib';\nimport { Key, KeySpec, KeyUsage } from 'aws-cdk-lib/aws-kms';\n\nconst app = new App();\n\nconst stack = new Stack(app, 'aws-cdk-kms-1');\n\nconst key = new Key(stack, 'MyKey', { removalPolicy: RemovalPolicy.DESTROY });\n\nkey.addToResourcePolicy(new iam.PolicyStatement({\n  resources: ['*'],\n  actions: ['kms:encrypt'],\n  principals: [new iam.ArnPrincipal(stack.account)],\n}));\n\nkey.addAlias('alias/bar');\n\nnew Key(stack, 'AsymmetricKey', {\n  keySpec: KeySpec.ECC_NIST_P256,\n  keyUsage: KeyUsage.SIGN_VERIFY,\n  removalPolicy: RemovalPolicy.DESTROY,\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"Bucket83908E77\": {\"Type\": \"AWS::S3::Bucket\", \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"BucketNotifications8F2E257D\": {\"Type\": \"Custom::S3BucketNotifications\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691\", \"Arn\"]}, \"BucketName\": {\"Ref\": \"Bucket83908E77\"}, \"NotificationConfiguration\": {\"TopicConfigurations\": [{\"Events\": [\"s3:ObjectCreated:Put\"], \"TopicArn\": {\"Ref\": \"TopicBFC7AF6E\"}}, {\"Events\": [\"s3:ObjectRemoved:*\"], \"Filter\": {\"Key\": {\"FilterRules\": [{\"Name\": \"prefix\", \"Value\": \"home/myusername/\"}]}}, \"TopicArn\": {\"Ref\": \"Topic3DEAE47A7\"}}]}, \"Managed\": true}, \"DependsOn\": [\"TopicPolicyA1747468\", \"TopicBFC7AF6E\", \"Topic3Policy49BDDFBD\", \"Topic3DEAE47A7\"]}, \"TopicBFC7AF6E\": {\"Type\": \"AWS::SNS::Topic\"}, \"TopicPolicyA1747468\": {\"Type\": \"AWS::SNS::TopicPolicy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"sns:Publish\", \"Condition\": {\"ArnLike\": {\"aws:SourceArn\": {\"Fn::GetAtt\": [\"Bucket83908E77\", \"Arn\"]}}}, \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"s3.amazonaws.com\"}, \"Resource\": {\"Ref\": \"TopicBFC7AF6E\"}, \"Sid\": \"0\"}], \"Version\": \"2012-10-17\"}, \"Topics\": [{\"Ref\": \"TopicBFC7AF6E\"}]}}, \"Topic3DEAE47A7\": {\"Type\": \"AWS::SNS::Topic\"}, \"Topic3Policy49BDDFBD\": {\"Type\": \"AWS::SNS::TopicPolicy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"sns:Publish\", \"Condition\": {\"ArnLike\": {\"aws:SourceArn\": {\"Fn::GetAtt\": [\"Bucket83908E77\", \"Arn\"]}}}, \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"s3.amazonaws.com\"}, \"Resource\": {\"Ref\": \"Topic3DEAE47A7\"}, \"Sid\": \"0\"}, {\"Action\": \"sns:Publish\", \"Condition\": {\"ArnLike\": {\"aws:SourceArn\": {\"Fn::GetAtt\": [\"Bucket25524B414\", \"Arn\"]}}}, \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"s3.amazonaws.com\"}, \"Resource\": {\"Ref\": \"Topic3DEAE47A7\"}, \"Sid\": \"1\"}, {\"Action\": \"sns:Publish\", \"Condition\": {\"ArnLike\": {\"aws:SourceArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":s3:::\", {\"Ref\": \"Bucket3CFB7F7D7\"}]]}}}, \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"s3.amazonaws.com\"}, \"Resource\": {\"Ref\": \"Topic3DEAE47A7\"}, \"Sid\": \"2\"}], \"Version\": \"2012-10-17\"}, \"Topics\": [{\"Ref\": \"Topic3DEAE47A7\"}]}}, \"BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:GetBucketNotification\", \"s3:PutBucketNotification\"], \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36\", \"Roles\": [{\"Ref\": \"BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC\"}]}}, \"BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Description\": \"AWS CloudFormation handler for \\\"Custom::S3BucketNotifications\\\" resources (@aws-cdk/aws-s3)\", \"Code\": {\"ZipFile\": \"import boto3  # type: ignore\nimport json\nimport logging\nimport urllib.request\n\ns3 = boto3.client(\\\"s3\\\")\n\nEVENTBRIDGE_CONFIGURATION = 'EventBridgeConfiguration'\n\nCONFIGURATION_TYPES = [\\\"TopicConfigurations\\\", \\\"QueueConfigurations\\\", \\\"LambdaFunctionConfigurations\\\"]\n\ndef handler(event: dict, context):\n  response_status = \\\"SUCCESS\\\"\n  error_message = \\\"\\\"\n  try:\n    props = event[\\\"ResourceProperties\\\"]\n    bucket = props[\\\"BucketName\\\"]\n    notification_configuration = props[\\\"NotificationConfiguration\\\"]\n    request_type = event[\\\"RequestType\\\"]\n    managed = props.get('Managed', 'true').lower() == 'true'\n    stack_id = event['StackId']\n\n    if managed:\n      config = handle_managed(request_type, notification_configuration)\n    else:\n      config = handle_unmanaged(bucket, stack_id, request_type, notification_configuration)\n\n    put_bucket_notification_configuration(bucket, config)\n  except Exception as e:\n    logging.exception(\\\"Failed to put bucket notification configuration\\\")\n    response_status = \\\"FAILED\\\"\n    error_message = f\\\"Error: {str(e)}. \\\"\n  finally:\n    submit_response(event, context, response_status, error_message)\n\ndef handle_managed(request_type, notification_configuration):\n  if request_type == 'Delete':\n    return {}\n  return notification_configuration\n\ndef handle_unmanaged(bucket, stack_id, request_type, notification_configuration):\n  external_notifications = find_external_notifications(bucket, stack_id)\n\n  if request_type == 'Delete':\n    return external_notifications\n\n  def with_id(notification):\n    notification['Id'] = f\\\"{stack_id}-{hash(json.dumps(notification, sort_keys=True))}\\\"\n    return notification\n\n  notifications = {}\n  for t in CONFIGURATION_TYPES:\n    external = external_notifications.get(t, [])\n    incoming = [with_id(n) for n in notification_configuration.get(t, [])]\n    notifications[t] = external + incoming\n\n  if EVENTBRIDGE_CONFIGURATION in notification_configuration:\n    notifications[EVENTBRIDGE_CONFIGURATION] = notification_configuration[EVENTBRIDGE_CONFIGURATION]\n  elif EVENTBRIDGE_CONFIGURATION in external_notifications:\n    notifications[EVENTBRIDGE_CONFIGURATION] = external_notifications[EVENTBRIDGE_CONFIGURATION]\n\n  return notifications\n\ndef find_external_notifications(bucket, stack_id):\n  existing_notifications = get_bucket_notification_configuration(bucket)\n  external_notifications = {}\n  for t in CONFIGURATION_TYPES:\n    external_notifications[t] = [n for n in existing_notifications.get(t, []) if not n['Id'].startswith(f\\\"{stack_id}-\\\")]\n\n  if EVENTBRIDGE_CONFIGURATION in existing_notifications:\n    external_notifications[EVENTBRIDGE_CONFIGURATION] = existing_notifications[EVENTBRIDGE_CONFIGURATION]\n\n  return external_notifications\n\ndef get_bucket_notification_configuration(bucket):\n  return s3.get_bucket_notification_configuration(Bucket=bucket)\n\ndef put_bucket_notification_configuration(bucket, notification_configuration):\n  s3.put_bucket_notification_configuration(Bucket=bucket, NotificationConfiguration=notification_configuration)\n\ndef submit_response(event: dict, context, response_status: str, error_message: str):\n  response_body = json.dumps(\n    {\n      \\\"Status\\\": response_status,\n      \\\"Reason\\\": f\\\"{error_message}See the details in CloudWatch Log Stream: {context.log_stream_name}\\\",\n      \\\"PhysicalResourceId\\\": event.get(\\\"PhysicalResourceId\\\") or event[\\\"LogicalResourceId\\\"],\n      \\\"StackId\\\": event[\\\"StackId\\\"],\n      \\\"RequestId\\\": event[\\\"RequestId\\\"],\n      \\\"LogicalResourceId\\\": event[\\\"LogicalResourceId\\\"],\n      \\\"NoEcho\\\": False,\n    }\n  ).encode(\\\"utf-8\\\")\n  headers = {\\\"content-type\\\": \\\"\\\", \\\"content-length\\\": str(len(response_body))}\n  try:\n    req = urllib.request.Request(url=event[\\\"ResponseURL\\\"], headers=headers, data=response_body, method=\\\"PUT\\\")\n    with urllib.request.urlopen(req) as response:\n      print(response.read().decode(\\\"utf-8\\\"))\n    print(\\\"Status code: \\\" + response.reason)\n  except Exception as e:\n      print(\\\"send(..) failed executing request.urlopen(..): \\\" + str(e))\n\"}, \"Handler\": \"index.handler\", \"Role\": {\"Fn::GetAtt\": [\"BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC\", \"Arn\"]}, \"Runtime\": \"python3.9\", \"Timeout\": 300}, \"DependsOn\": [\"BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36\", \"BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC\"]}, \"Bucket25524B414\": {\"Type\": \"AWS::S3::Bucket\", \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"Bucket2NotificationsD9BA2A77\": {\"Type\": \"Custom::S3BucketNotifications\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691\", \"Arn\"]}, \"BucketName\": {\"Ref\": \"Bucket25524B414\"}, \"NotificationConfiguration\": {\"TopicConfigurations\": [{\"Events\": [\"s3:ObjectRemoved:*\"], \"Filter\": {\"Key\": {\"FilterRules\": [{\"Name\": \"prefix\", \"Value\": \"foo\"}, {\"Name\": \"suffix\", \"Value\": \"foo/bar\"}]}}, \"TopicArn\": {\"Ref\": \"Topic3DEAE47A7\"}}]}, \"Managed\": true}, \"DependsOn\": [\"Topic3Policy49BDDFBD\", \"Topic3DEAE47A7\"]}, \"Bucket3CFB7F7D7\": {\"Type\": \"AWS::S3::Bucket\", \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"Bucket3ImportedNotificationsB1625F39\": {\"Type\": \"Custom::S3BucketNotifications\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691\", \"Arn\"]}, \"BucketName\": {\"Ref\": \"Bucket3CFB7F7D7\"}, \"NotificationConfiguration\": {\"TopicConfigurations\": [{\"Events\": [\"s3:ObjectCreated:Copy\"], \"TopicArn\": {\"Ref\": \"Topic3DEAE47A7\"}}]}, \"Managed\": false}, \"DependsOn\": [\"Topic3Policy49BDDFBD\", \"Topic3DEAE47A7\"]}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as s3 from 'aws-cdk-lib/aws-s3';\nimport * as sns from 'aws-cdk-lib/aws-sns';\nimport * as cdk from 'aws-cdk-lib';\nimport * as s3n from 'aws-cdk-lib/aws-s3-notifications';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'test-3');\n\nconst bucket = new s3.Bucket(stack, 'Bucket', {\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\nconst topic = new sns.Topic(stack, 'Topic');\nconst topic3 = new sns.Topic(stack, 'Topic3');\n\nbucket.addEventNotification(s3.EventType.OBJECT_CREATED_PUT, new s3n.SnsDestination(topic));\nbucket.addEventNotification(s3.EventType.OBJECT_REMOVED, new s3n.SnsDestination(topic3), { prefix: 'home/myusername/' });\n\nconst bucket2 = new s3.Bucket(stack, 'Bucket2', {\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\nbucket2.addObjectRemovedNotification(new s3n.SnsDestination(topic3), { prefix: 'foo' }, { suffix: 'foo/bar' });\n\nconst bucket3 = new s3.Bucket(stack, 'Bucket3', {\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\n\nconst importedBucket3 = s3.Bucket.fromBucketName(stack, 'Bucket3Imported', bucket3.bucketName);\nimportedBucket3.addEventNotification(s3.EventType.OBJECT_CREATED_COPY, new s3n.SnsDestination(topic3));\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"HostedZoneDB99F866\": {\"Type\": \"AWS::Route53::HostedZone\", \"Properties\": {\"Name\": \"cdk-integ.com.\"}}, \"WWW9F8609DA\": {\"Type\": \"AWS::Route53::RecordSet\", \"Properties\": {\"Name\": \"www.cdk-integ.com.\", \"Type\": \"A\", \"HostedZoneId\": {\"Ref\": \"HostedZoneDB99F866\"}, \"ResourceRecords\": [\"1.2.3.4\"], \"TTL\": \"1800\"}}, \"Alias325C5727\": {\"Type\": \"AWS::Route53::RecordSet\", \"Properties\": {\"Name\": \"cdk-integ.com.\", \"Type\": \"A\", \"AliasTarget\": {\"DNSName\": {\"Ref\": \"WWW9F8609DA\"}, \"HostedZoneId\": {\"Ref\": \"HostedZoneDB99F866\"}}, \"HostedZoneId\": {\"Ref\": \"HostedZoneDB99F866\"}}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "#!/usr/bin/env node\nimport * as route53 from 'aws-cdk-lib/aws-route53';\nimport { App, Stack } from 'aws-cdk-lib';\nimport { Construct } from 'constructs';\nimport * as targets from 'aws-cdk-lib/aws-route53-targets';\n\nclass TestStack extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    const zone = new route53.PublicHostedZone(this, 'HostedZone', {\n      zoneName: 'cdk-integ.com',\n    });\n\n    const www = new route53.ARecord(this, 'WWW', {\n      zone,\n      recordName: 'www.cdk-integ.com',\n      target: route53.RecordTarget.fromIpAddresses('1.2.3.4'),\n    });\n\n    new route53.ARecord(this, 'Alias', {\n      zone,\n      target: route53.RecordTarget.fromAlias(new targets.Route53RecordTarget(www)),\n    });\n  }\n}\n\nconst app = new App();\nnew TestStack(app, 'aws-cdk-r53-record-alias-target-integ');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"VPCB9E5F0B4\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC\"}]}}, \"VPCPublicSubnet1SubnetB4246D30\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableFEE4B781\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableAssociation0B0896DC\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}}}, \"VPCPublicSubnet1DefaultRoute91CEF279\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet1EIP6AD938E8\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1NATGatewayE0556630\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet1EIP6AD938E8\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC/PublicSubnet1\"}]}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\"]}, \"VPCPublicSubnet2Subnet74179F39\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTable6F1A15F1\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTableAssociation5A808732\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}}}, \"VPCPublicSubnet2DefaultRouteB7481BBA\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet2EIP4947BC00\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2NATGateway3C070193\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet2EIP4947BC00\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC/PublicSubnet2\"}]}, \"DependsOn\": [\"VPCPublicSubnet2DefaultRouteB7481BBA\", \"VPCPublicSubnet2RouteTableAssociation5A808732\"]}, \"VPCPrivateSubnet1Subnet8BCA10E0\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableBE8A6027\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableAssociation347902D1\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}}}, \"VPCPrivateSubnet1DefaultRouteAE1D6490\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet1NATGatewayE0556630\"}}}, \"VPCPrivateSubnet2SubnetCFCDAA7A\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTable0A19E10E\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTableAssociation0C73D413\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}}}, \"VPCPrivateSubnet2DefaultRouteF4F5CFD2\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet2NATGateway3C070193\"}}}, \"VPCIGWB7E252D3\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-elbv2-integ/VPC\"}]}}, \"VPCVPCGW99B986DC\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"InternetGatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}}, \"LB8A12904C\": {\"Type\": \"AWS::ElasticLoadBalancingV2::LoadBalancer\", \"Properties\": {\"LoadBalancerAttributes\": [{\"Key\": \"deletion_protection.enabled\", \"Value\": \"false\"}], \"Scheme\": \"internet-facing\", \"SecurityGroups\": [{\"Fn::GetAtt\": [\"LBSecurityGroup8A41EA2B\", \"GroupId\"]}], \"Subnets\": [{\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}, {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}], \"Type\": \"application\"}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\", \"VPCPublicSubnet2DefaultRouteB7481BBA\", \"VPCPublicSubnet2RouteTableAssociation5A808732\"]}, \"LBSecurityGroup8A41EA2B\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"Automatically created Security Group for ELB awscdkelbv2integLB9950B1E4\", \"SecurityGroupEgress\": [{\"CidrIp\": \"255.255.255.255/32\", \"Description\": \"Disallow all traffic\", \"FromPort\": 252, \"IpProtocol\": \"icmp\", \"ToPort\": 86}], \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}}, \"HostedZoneDB99F866\": {\"Type\": \"AWS::Route53::HostedZone\", \"Properties\": {\"Name\": \"test.public.\"}}, \"HostedZoneAlias40D2E006\": {\"Type\": \"AWS::Route53::RecordSet\", \"Properties\": {\"Name\": \"_foo.test.public.\", \"Type\": \"A\", \"AliasTarget\": {\"DNSName\": {\"Fn::Join\": [\"\", [\"dualstack.\", {\"Fn::GetAtt\": [\"LB8A12904C\", \"DNSName\"]}]]}, \"HostedZoneId\": {\"Fn::GetAtt\": [\"LB8A12904C\", \"CanonicalHostedZoneID\"]}}, \"HostedZoneId\": {\"Ref\": \"HostedZoneDB99F866\"}}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "#!/usr/bin/env node\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as elbv2 from 'aws-cdk-lib/aws-elasticloadbalancingv2';\nimport * as route53 from 'aws-cdk-lib/aws-route53';\nimport * as cdk from 'aws-cdk-lib';\nimport * as targets from 'aws-cdk-lib/aws-route53-targets';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'aws-cdk-elbv2-integ');\n\nconst vpc = new ec2.Vpc(stack, 'VPC', {\n  maxAzs: 2,\n  restrictDefaultSecurityGroup: false,\n});\n\nconst lb = new elbv2.ApplicationLoadBalancer(stack, 'LB', {\n  vpc,\n  internetFacing: true,\n});\n\nconst zone = new route53.PublicHostedZone(stack, 'HostedZone', { zoneName: 'test.public' });\n\nnew route53.ARecord(zone, 'Alias', {\n  zone,\n  recordName: '_foo',\n  target: route53.RecordTarget.fromAlias(new targets.LoadBalancerTarget(lb)),\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"Accelerator8EB0B6B1\": {\"Type\": \"AWS::GlobalAccelerator::Accelerator\", \"Properties\": {\"Name\": \"aws-cdk-globalaccelerator-integ\", \"Enabled\": true}}, \"HostedZoneDB99F866\": {\"Type\": \"AWS::Route53::HostedZone\", \"Properties\": {\"Name\": \"test.public.\"}}, \"LocalGlobalAcceleratorAlias18B4A87A\": {\"Type\": \"AWS::Route53::RecordSet\", \"Properties\": {\"Name\": \"test-local.test.public.\", \"Type\": \"A\", \"AliasTarget\": {\"DNSName\": {\"Fn::GetAtt\": [\"Accelerator8EB0B6B1\", \"DnsName\"]}, \"HostedZoneId\": \"Z2BJ6XQ5FK7U4H\"}, \"Comment\": \"Alias to the locally created Global Accelerator\", \"HostedZoneId\": {\"Ref\": \"HostedZoneDB99F866\"}}}, \"ExistingGlobalAcceleratorAlias7ACF888C\": {\"Type\": \"AWS::Route53::RecordSet\", \"Properties\": {\"Name\": \"test-existing.test.public.\", \"Type\": \"A\", \"AliasTarget\": {\"DNSName\": \"someexisting.awsglobalaccelerator.com\", \"HostedZoneId\": \"Z2BJ6XQ5FK7U4H\"}, \"Comment\": \"Alias to the an existing Global Accelerator\", \"HostedZoneId\": {\"Ref\": \"HostedZoneDB99F866\"}}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "#!/usr/bin/env node\nimport * as globalaccelerator from 'aws-cdk-lib/aws-globalaccelerator';\nimport * as route53 from 'aws-cdk-lib/aws-route53';\nimport * as cdk from 'aws-cdk-lib';\nimport * as targets from 'aws-cdk-lib/aws-route53-targets';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'aws-cdk-globalaccelerator-integ');\n\nlet accelerator = new globalaccelerator.Accelerator(stack, 'Accelerator', {\n  acceleratorName: `${stack.stackName}`,\n  enabled: true,\n});\n\nconst zone = new route53.PublicHostedZone(stack, 'HostedZone', { zoneName: 'test.public' });\n\nnew route53.ARecord(stack, 'LocalGlobalAcceleratorAlias', {\n  comment: 'Alias to the locally created Global Accelerator',\n  target: route53.RecordTarget.fromAlias(new targets.GlobalAcceleratorTarget(accelerator)),\n  recordName: 'test-local',\n  zone,\n});\n\nnew route53.ARecord(stack, 'ExistingGlobalAcceleratorAlias', {\n  comment: 'Alias to the an existing Global Accelerator',\n  target: route53.RecordTarget.fromAlias(new targets.GlobalAcceleratorDomainTarget('someexisting.awsglobalaccelerator.com')),\n  recordName: 'test-existing',\n  zone,\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"VPCB9E5F0B4\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-interface-vpc-endpoint/VPC\"}]}}, \"VPCPublicSubnet1SubnetB4246D30\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-interface-vpc-endpoint/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableFEE4B781\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-interface-vpc-endpoint/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableAssociation0B0896DC\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}}}, \"VPCPublicSubnet1DefaultRoute91CEF279\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet1EIP6AD938E8\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-interface-vpc-endpoint/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1NATGatewayE0556630\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet1EIP6AD938E8\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-interface-vpc-endpoint/VPC/PublicSubnet1\"}]}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\"]}, \"VPCPublicSubnet2Subnet74179F39\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-interface-vpc-endpoint/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTable6F1A15F1\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-interface-vpc-endpoint/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTableAssociation5A808732\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}}}, \"VPCPublicSubnet2DefaultRouteB7481BBA\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet2EIP4947BC00\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-interface-vpc-endpoint/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2NATGateway3C070193\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet2EIP4947BC00\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-interface-vpc-endpoint/VPC/PublicSubnet2\"}]}, \"DependsOn\": [\"VPCPublicSubnet2DefaultRouteB7481BBA\", \"VPCPublicSubnet2RouteTableAssociation5A808732\"]}, \"VPCPrivateSubnet1Subnet8BCA10E0\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-interface-vpc-endpoint/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableBE8A6027\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-interface-vpc-endpoint/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableAssociation347902D1\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}}}, \"VPCPrivateSubnet1DefaultRouteAE1D6490\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet1NATGatewayE0556630\"}}}, \"VPCPrivateSubnet2SubnetCFCDAA7A\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-interface-vpc-endpoint/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTable0A19E10E\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-interface-vpc-endpoint/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTableAssociation0C73D413\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}}}, \"VPCPrivateSubnet2DefaultRouteF4F5CFD2\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet2NATGateway3C070193\"}}}, \"VPCIGWB7E252D3\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-interface-vpc-endpoint/VPC\"}]}}, \"VPCVPCGW99B986DC\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"InternetGatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}}, \"InterfaceEndpointSecurityGroup4F1CBAD1\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"aws-cdk-interface-vpc-endpoint/InterfaceEndpoint/SecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"SecurityGroupIngress\": [{\"CidrIp\": {\"Fn::GetAtt\": [\"VPCB9E5F0B4\", \"CidrBlock\"]}, \"Description\": {\"Fn::Join\": [\"\", [\"from \", {\"Fn::GetAtt\": [\"VPCB9E5F0B4\", \"CidrBlock\"]}, \":80\"]]}, \"FromPort\": 80, \"IpProtocol\": \"tcp\", \"ToPort\": 80}], \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}}, \"InterfaceEndpoint12DE6E71\": {\"Type\": \"AWS::EC2::VPCEndpoint\", \"Properties\": {\"ServiceName\": \"com.amazonaws.us-west-2.sms\", \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"PrivateDnsEnabled\": false, \"SecurityGroupIds\": [{\"Fn::GetAtt\": [\"InterfaceEndpointSecurityGroup4F1CBAD1\", \"GroupId\"]}], \"SubnetIds\": [{\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}, {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}], \"VpcEndpointType\": \"Interface\"}}, \"PrivateZone27242E85\": {\"Type\": \"AWS::Route53::HostedZone\", \"Properties\": {\"Name\": \"test.aws.cdk.com.\", \"VPCs\": [{\"VPCId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"VPCRegion\": \"us-west-2\"}]}}, \"AliasEndpointRecord40E9201F\": {\"Type\": \"AWS::Route53::RecordSet\", \"Properties\": {\"Name\": \"foo.test.aws.cdk.com.\", \"Type\": \"A\", \"AliasTarget\": {\"DNSName\": {\"Fn::Select\": [1, {\"Fn::Split\": [\":\", {\"Fn::Select\": [0, {\"Fn::GetAtt\": [\"InterfaceEndpoint12DE6E71\", \"DnsEntries\"]}]}]}]}, \"HostedZoneId\": {\"Fn::Select\": [0, {\"Fn::Split\": [\":\", {\"Fn::Select\": [0, {\"Fn::GetAtt\": [\"InterfaceEndpoint12DE6E71\", \"DnsEntries\"]}]}]}]}}, \"HostedZoneId\": {\"Ref\": \"PrivateZone27242E85\"}}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as route53 from 'aws-cdk-lib/aws-route53';\nimport * as cdk from 'aws-cdk-lib';\nimport * as targets from 'aws-cdk-lib/aws-route53-targets';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'aws-cdk-interface-vpc-endpoint', {\n  env: {\n    region: 'us-west-2',\n  },\n});\n\nconst vpc = new ec2.Vpc(stack, 'VPC', { restrictDefaultSecurityGroup: false });\n\nconst interfaceVpcEndpoint = new ec2.InterfaceVpcEndpoint(stack, 'InterfaceEndpoint', {\n  vpc,\n  service: {\n    name: 'com.amazonaws.us-west-2.sms',\n    port: 80,\n  },\n  privateDnsEnabled: false,\n  subnets: {\n    subnetType: ec2.SubnetType.PRIVATE_WITH_EGRESS,\n  },\n});\nconst zone = new route53.PrivateHostedZone(stack, 'PrivateZone', {\n  vpc,\n  zoneName: 'test.aws.cdk.com',\n});\n\nnew route53.ARecord(stack, 'AliasEndpointRecord', {\n  zone,\n  recordName: 'foo',\n  target: route53.RecordTarget.fromAlias(new targets.InterfaceVpcEndpointTarget(interfaceVpcEndpoint)),\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"HostedZoneDB99F866\": {\"Type\": \"AWS::Route53::HostedZone\", \"Properties\": {\"Name\": \"test.public.\"}}, \"HostedZoneAlias40D2E006\": {\"Type\": \"AWS::Route53::RecordSet\", \"Properties\": {\"Name\": \"_foo.test.public.\", \"Type\": \"A\", \"AliasTarget\": {\"DNSName\": {\"Fn::GetAtt\": [\"MyDistributionCFDistributionDE147309\", \"DomainName\"]}, \"HostedZoneId\": {\"Fn::FindInMap\": [\"AWSCloudFrontPartitionHostedZoneIdMap\", {\"Ref\": \"AWS::Partition\"}, \"zoneId\"]}}, \"HostedZoneId\": {\"Ref\": \"HostedZoneDB99F866\"}}}, \"Bucket83908E77\": {\"Type\": \"AWS::S3::Bucket\", \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"MyDistributionCFDistributionDE147309\": {\"Type\": \"AWS::CloudFront::Distribution\", \"Properties\": {\"DistributionConfig\": {\"DefaultCacheBehavior\": {\"AllowedMethods\": [\"GET\", \"HEAD\"], \"CachedMethods\": [\"GET\", \"HEAD\"], \"Compress\": true, \"ForwardedValues\": {\"Cookies\": {\"Forward\": \"none\"}, \"QueryString\": false}, \"TargetOriginId\": \"origin1\", \"ViewerProtocolPolicy\": \"redirect-to-https\"}, \"DefaultRootObject\": \"index.html\", \"Enabled\": true, \"HttpVersion\": \"http2\", \"IPV6Enabled\": true, \"Origins\": [{\"ConnectionAttempts\": 3, \"ConnectionTimeout\": 10, \"DomainName\": {\"Fn::GetAtt\": [\"Bucket83908E77\", \"RegionalDomainName\"]}, \"Id\": \"origin1\", \"S3OriginConfig\": {}}], \"PriceClass\": \"PriceClass_100\", \"ViewerCertificate\": {\"CloudFrontDefaultCertificate\": true}}}}}, \"Mappings\": {\"AWSCloudFrontPartitionHostedZoneIdMap\": {\"aws\": {\"zoneId\": \"Z2FDTNDATAQYW2\"}, \"aws-cn\": {\"zoneId\": \"Z3RFFRIM2A3IF5\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as cloudfront from 'aws-cdk-lib/aws-cloudfront';\nimport * as route53 from 'aws-cdk-lib/aws-route53';\nimport * as s3 from 'aws-cdk-lib/aws-s3';\nimport * as cdk from 'aws-cdk-lib';\nimport * as targets from 'aws-cdk-lib/aws-route53-targets';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'aws-cdk-cloudfront');\n\nconst zone = new route53.PublicHostedZone(stack, 'HostedZone', { zoneName: 'test.public' });\n\nconst sourceBucket = new s3.Bucket(stack, 'Bucket', {\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\n\nconst distribution = new cloudfront.CloudFrontWebDistribution(stack, 'MyDistribution', {\n  originConfigs: [\n    {\n      s3OriginSource: {\n        s3BucketSource: sourceBucket,\n      },\n      behaviors: [{ isDefaultBehavior: true }],\n    },\n  ],\n});\n\nnew route53.ARecord(zone, 'Alias', {\n  zone,\n  recordName: '_foo',\n  target: route53.RecordTarget.fromAlias(new targets.CloudFrontTarget(distribution)),\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"CustomReflectCustomResourceProviderRoleB4B29AEC\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Version\": \"2012-10-17\", \"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}]}, \"ManagedPolicyArns\": [{\"Fn::Sub\": \"arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"}]}}, \"CustomReflectCustomResourceProviderHandler2E189D0B\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"94be4e33263da312b2e3d038a855c4b46686a35cc3188e9736010642b8a9078a.zip\"}, \"Timeout\": 900, \"MemorySize\": 128, \"Handler\": \"__entrypoint__.handler\", \"Role\": {\"Fn::GetAtt\": [\"CustomReflectCustomResourceProviderRoleB4B29AEC\", \"Arn\"]}, \"Runtime\": \"nodejs14.x\", \"Description\": \"veni vidi vici\"}, \"DependsOn\": [\"CustomReflectCustomResourceProviderRoleB4B29AEC\"]}, \"MyResource\": {\"Type\": \"Custom::Reflect\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"CustomReflectCustomResourceProviderHandler2E189D0B\", \"Arn\"]}, \"physicalResourceId\": \"MyPhysicalReflectBack\", \"attributes\": {\"Attribute1\": \"foo\", \"Attribute2\": 1234}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"MyLengthyTypeResource\": {\"Type\": \"Custom::Given_Resource_Type_Is_Exactly_Sixty_Characters_Long\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"CustomReflectCustomResourceProviderHandler2E189D0B\", \"Arn\"]}, \"physicalResourceId\": \"MyPhysicalLengthyType\"}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}}, \"Outputs\": {\"Ref\": {\"Value\": {\"Ref\": \"MyResource\"}}, \"GetAttAttribute1\": {\"Value\": {\"Fn::GetAtt\": [\"MyResource\", \"Attribute1\"]}}, \"GetAttAttribute2\": {\"Value\": {\"Fn::GetAtt\": [\"MyResource\", \"Attribute2\"]}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "/*\n * Stack verification steps:\n * - Deploy with `--no-clean`\n * - Verify that the CloudFormation stack outputs have the following values:\n *   - Ref: \"MyPhysicalReflectBack\"\n *   - GetAtt.Attribute1: \"foo\"\n *   - GetAtt.Attribute2: 1234\n */\nimport { App, CfnOutput, CustomResource, CustomResourceProvider, CustomResourceProviderRuntime, Stack, Token } from 'aws-cdk-lib';\nimport { Construct } from 'constructs';\n\n/* eslint-disable @aws-cdk/no-core-construct */\n\nclass TestStack extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    const resourceType = 'Custom::Reflect';\n    const lengthyResourceType = 'Custom::Given_Resource_Type_Is_Exactly_Sixty_Characters_Long';\n\n    const serviceToken = CustomResourceProvider.getOrCreate(this, resourceType, {\n      codeDirectory: `${__dirname}/core-custom-resource-provider-fixture`,\n      runtime: CustomResourceProviderRuntime.NODEJS_14_X,\n      description: 'veni vidi vici',\n    });\n\n    const cr = new CustomResource(this, 'MyResource', {\n      resourceType,\n      serviceToken,\n      properties: {\n        physicalResourceId: 'MyPhysicalReflectBack',\n        attributes: {\n          Attribute1: 'foo',\n          Attribute2: 1234,\n        },\n      },\n    });\n\n    new CustomResource(this, 'MyLengthyTypeResource', {\n      resourceType: lengthyResourceType,\n      serviceToken,\n      properties: {\n        physicalResourceId: 'MyPhysicalLengthyType',\n      },\n    });\n\n    new CfnOutput(this, 'Ref', { value: cr.ref });\n    new CfnOutput(this, 'GetAtt.Attribute1', { value: Token.asString(cr.getAtt('Attribute1')) });\n    new CfnOutput(this, 'GetAtt.Attribute2', { value: Token.asString(cr.getAtt('Attribute2')) });\n  }\n}\n\nconst app = new App();\nnew TestStack(app, 'custom-resource-test');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"Bucket83908E77\": {\"Type\": \"AWS::S3::Bucket\", \"Properties\": {\"Tags\": [{\"Key\": \"aws-cdk:auto-delete-objects\", \"Value\": \"true\"}]}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"BucketPolicyE9A3008A\": {\"Type\": \"AWS::S3::BucketPolicy\", \"Properties\": {\"Bucket\": {\"Ref\": \"Bucket83908E77\"}, \"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::GetAtt\": [\"CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092\", \"Arn\"]}}, \"Resource\": [{\"Fn::GetAtt\": [\"Bucket83908E77\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"Bucket83908E77\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}}}, \"BucketAutoDeleteObjectsCustomResourceBAFD23C2\": {\"Type\": \"Custom::S3AutoDeleteObjects\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F\", \"Arn\"]}, \"BucketName\": {\"Ref\": \"Bucket83908E77\"}}, \"DependsOn\": [\"BucketPolicyE9A3008A\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Version\": \"2012-10-17\", \"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}]}, \"ManagedPolicyArns\": [{\"Fn::Sub\": \"arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"}]}}, \"CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"2575608c9455922c199396dd056f7479bb172f5c6068cd093f6d061160f48cee.zip\"}, \"Timeout\": 900, \"MemorySize\": 128, \"Handler\": \"index.handler\", \"Role\": {\"Fn::GetAtt\": [\"CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092\", \"Arn\"]}, \"Runtime\": \"nodejs16.x\", \"Description\": {\"Fn::Join\": [\"\", [\"Lambda function for auto-deleting objects in \", {\"Ref\": \"Bucket83908E77\"}, \" S3 bucket.\"]]}}, \"DependsOn\": [\"CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092\"]}, \"TopicBFC7AF6E\": {\"Type\": \"AWS::SNS::Topic\"}, \"TopicPolicyA1747468\": {\"Type\": \"AWS::SNS::TopicPolicy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"sns:Publish\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"cloudtrail.amazonaws.com\"}, \"Resource\": {\"Ref\": \"TopicBFC7AF6E\"}, \"Sid\": \"0\"}], \"Version\": \"2012-10-17\"}, \"Topics\": [{\"Ref\": \"TopicBFC7AF6E\"}]}}, \"LambdaFunctionServiceRoleC555A460\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"LambdaFunctionBF21E41F\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"exports.handler = {}\"}, \"Role\": {\"Fn::GetAtt\": [\"LambdaFunctionServiceRoleC555A460\", \"Arn\"]}, \"Handler\": \"hello.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"LambdaFunctionServiceRoleC555A460\"]}, \"TrailS30071F172\": {\"Type\": \"AWS::S3::Bucket\", \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"TrailS3PolicyE42170FE\": {\"Type\": \"AWS::S3::BucketPolicy\", \"Properties\": {\"Bucket\": {\"Ref\": \"TrailS30071F172\"}, \"PolicyDocument\": {\"Statement\": [{\"Action\": \"s3:*\", \"Condition\": {\"Bool\": {\"aws:SecureTransport\": \"false\"}}, \"Effect\": \"Deny\", \"Principal\": {\"AWS\": \"*\"}, \"Resource\": [{\"Fn::GetAtt\": [\"TrailS30071F172\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"TrailS30071F172\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": \"s3:GetBucketAcl\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"cloudtrail.amazonaws.com\"}, \"Resource\": {\"Fn::GetAtt\": [\"TrailS30071F172\", \"Arn\"]}}, {\"Action\": \"s3:PutObject\", \"Condition\": {\"StringEquals\": {\"s3:x-amz-acl\": \"bucket-owner-full-control\"}}, \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"cloudtrail.amazonaws.com\"}, \"Resource\": {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"TrailS30071F172\", \"Arn\"]}, \"/AWSLogs/\", {\"Ref\": \"AWS::AccountId\"}, \"/*\"]]}}], \"Version\": \"2012-10-17\"}}}, \"Trail022F0CF2\": {\"Type\": \"AWS::CloudTrail::Trail\", \"Properties\": {\"IsLogging\": true, \"S3BucketName\": {\"Ref\": \"TrailS30071F172\"}, \"EnableLogFileValidation\": true, \"EventSelectors\": [{\"DataResources\": [{\"Type\": \"AWS::Lambda::Function\", \"Values\": [{\"Fn::GetAtt\": [\"LambdaFunctionBF21E41F\", \"Arn\"]}]}]}, {\"DataResources\": [{\"Type\": \"AWS::S3::Object\", \"Values\": [{\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"Bucket83908E77\", \"Arn\"]}, \"/\"]]}]}]}], \"IncludeGlobalServiceEvents\": true, \"IsMultiRegionTrail\": true, \"SnsTopicName\": {\"Fn::GetAtt\": [\"TopicBFC7AF6E\", \"TopicName\"]}}, \"DependsOn\": [\"TrailS3PolicyE42170FE\"]}}, \"Mappings\": {\"DefaultCrNodeVersionMap\": {\"af-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-east-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-3\": {\"value\": \"nodejs16.x\"}, \"ap-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-south-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-3\": {\"value\": \"nodejs16.x\"}, \"ca-central-1\": {\"value\": \"nodejs16.x\"}, \"cn-north-1\": {\"value\": \"nodejs16.x\"}, \"cn-northwest-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-2\": {\"value\": \"nodejs16.x\"}, \"eu-north-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-1\": {\"value\": \"nodejs16.x\"}, \"eu-west-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-3\": {\"value\": \"nodejs16.x\"}, \"me-central-1\": {\"value\": \"nodejs16.x\"}, \"me-south-1\": {\"value\": \"nodejs16.x\"}, \"sa-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-2\": {\"value\": \"nodejs16.x\"}, \"us-gov-east-1\": {\"value\": \"nodejs16.x\"}, \"us-gov-west-1\": {\"value\": \"nodejs16.x\"}, \"us-iso-east-1\": {\"value\": \"nodejs14.x\"}, \"us-iso-west-1\": {\"value\": \"nodejs14.x\"}, \"us-isob-east-1\": {\"value\": \"nodejs14.x\"}, \"us-west-1\": {\"value\": \"nodejs16.x\"}, \"us-west-2\": {\"value\": \"nodejs16.x\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as lambda from 'aws-cdk-lib/aws-lambda';\nimport * as s3 from 'aws-cdk-lib/aws-s3';\nimport * as sns from 'aws-cdk-lib/aws-sns';\nimport * as cdk from 'aws-cdk-lib';\nimport * as cloudtrail from 'aws-cdk-lib/aws-cloudtrail';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'integ-cloudtrail');\n\nconst bucket = new s3.Bucket(stack, 'Bucket', {\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n  autoDeleteObjects: true,\n});\nconst topic = new sns.Topic(stack, 'Topic');\nconst lambdaFunction = new lambda.Function(stack, 'LambdaFunction', {\n  runtime: lambda.Runtime.NODEJS_14_X,\n  handler: 'hello.handler',\n  code: lambda.Code.fromInline('exports.handler = {}'),\n});\n\nconst trail = new cloudtrail.Trail(stack, 'Trail', {\n  snsTopic: topic,\n});\ntrail.addLambdaEventSelector([lambdaFunction]);\ntrail.addS3EventSelector([{ bucket }]);\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"Bucket83908E77\": {\"Type\": \"AWS::S3::Bucket\", \"Properties\": {\"Tags\": [{\"Key\": \"aws-cdk:auto-delete-objects\", \"Value\": \"true\"}]}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"BucketPolicyE9A3008A\": {\"Type\": \"AWS::S3::BucketPolicy\", \"Properties\": {\"Bucket\": {\"Ref\": \"Bucket83908E77\"}, \"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::GetAtt\": [\"CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092\", \"Arn\"]}}, \"Resource\": [{\"Fn::GetAtt\": [\"Bucket83908E77\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"Bucket83908E77\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}}}, \"BucketAutoDeleteObjectsCustomResourceBAFD23C2\": {\"Type\": \"Custom::S3AutoDeleteObjects\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F\", \"Arn\"]}, \"BucketName\": {\"Ref\": \"Bucket83908E77\"}}, \"DependsOn\": [\"BucketPolicyE9A3008A\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Version\": \"2012-10-17\", \"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}]}, \"ManagedPolicyArns\": [{\"Fn::Sub\": \"arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"}]}}, \"CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"2575608c9455922c199396dd056f7479bb172f5c6068cd093f6d061160f48cee.zip\"}, \"Timeout\": 900, \"MemorySize\": 128, \"Handler\": \"index.handler\", \"Role\": {\"Fn::GetAtt\": [\"CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092\", \"Arn\"]}, \"Runtime\": \"nodejs16.x\", \"Description\": {\"Fn::Join\": [\"\", [\"Lambda function for auto-deleting objects in \", {\"Ref\": \"Bucket83908E77\"}, \" S3 bucket.\"]]}}, \"DependsOn\": [\"CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092\"]}, \"LambdaFunctionServiceRoleC555A460\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"LambdaFunctionBF21E41F\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"exports.handler = {}\"}, \"Role\": {\"Fn::GetAtt\": [\"LambdaFunctionServiceRoleC555A460\", \"Arn\"]}, \"Handler\": \"hello.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"LambdaFunctionServiceRoleC555A460\"]}, \"S3486F821D\": {\"Type\": \"AWS::S3::Bucket\", \"Properties\": {\"Tags\": [{\"Key\": \"aws-cdk:auto-delete-objects\", \"Value\": \"true\"}]}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"S3Policy2E4AA1D6\": {\"Type\": \"AWS::S3::BucketPolicy\", \"Properties\": {\"Bucket\": {\"Ref\": \"S3486F821D\"}, \"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::GetAtt\": [\"CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092\", \"Arn\"]}}, \"Resource\": [{\"Fn::GetAtt\": [\"S3486F821D\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"S3486F821D\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": \"s3:GetBucketAcl\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"cloudtrail.amazonaws.com\"}, \"Resource\": {\"Fn::GetAtt\": [\"S3486F821D\", \"Arn\"]}}, {\"Action\": \"s3:PutObject\", \"Condition\": {\"StringEquals\": {\"s3:x-amz-acl\": \"bucket-owner-full-control\"}}, \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"cloudtrail.amazonaws.com\"}, \"Resource\": {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"S3486F821D\", \"Arn\"]}, \"/AWSLogs/\", {\"Ref\": \"AWS::AccountId\"}, \"/*\"]]}}], \"Version\": \"2012-10-17\"}}}, \"S3AutoDeleteObjectsCustomResource5A4102C9\": {\"Type\": \"Custom::S3AutoDeleteObjects\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F\", \"Arn\"]}, \"BucketName\": {\"Ref\": \"S3486F821D\"}}, \"DependsOn\": [\"S3Policy2E4AA1D6\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"Trail022F0CF2\": {\"Type\": \"AWS::CloudTrail::Trail\", \"Properties\": {\"IsLogging\": true, \"S3BucketName\": {\"Ref\": \"S3486F821D\"}, \"EnableLogFileValidation\": true, \"EventSelectors\": [{\"DataResources\": [{\"Type\": \"AWS::Lambda::Function\", \"Values\": [{\"Fn::GetAtt\": [\"LambdaFunctionBF21E41F\", \"Arn\"]}]}]}, {\"DataResources\": [{\"Type\": \"AWS::S3::Object\", \"Values\": [{\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"Bucket83908E77\", \"Arn\"]}, \"/\"]]}]}]}], \"IncludeGlobalServiceEvents\": true, \"IsMultiRegionTrail\": true}, \"DependsOn\": [\"S3Policy2E4AA1D6\"]}}, \"Mappings\": {\"DefaultCrNodeVersionMap\": {\"af-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-east-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-3\": {\"value\": \"nodejs16.x\"}, \"ap-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-south-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-3\": {\"value\": \"nodejs16.x\"}, \"ca-central-1\": {\"value\": \"nodejs16.x\"}, \"cn-north-1\": {\"value\": \"nodejs16.x\"}, \"cn-northwest-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-2\": {\"value\": \"nodejs16.x\"}, \"eu-north-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-1\": {\"value\": \"nodejs16.x\"}, \"eu-west-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-3\": {\"value\": \"nodejs16.x\"}, \"me-central-1\": {\"value\": \"nodejs16.x\"}, \"me-south-1\": {\"value\": \"nodejs16.x\"}, \"sa-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-2\": {\"value\": \"nodejs16.x\"}, \"us-gov-east-1\": {\"value\": \"nodejs16.x\"}, \"us-gov-west-1\": {\"value\": \"nodejs16.x\"}, \"us-iso-east-1\": {\"value\": \"nodejs14.x\"}, \"us-iso-west-1\": {\"value\": \"nodejs14.x\"}, \"us-isob-east-1\": {\"value\": \"nodejs14.x\"}, \"us-west-1\": {\"value\": \"nodejs16.x\"}, \"us-west-2\": {\"value\": \"nodejs16.x\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as iam from 'aws-cdk-lib/aws-iam';\nimport * as lambda from 'aws-cdk-lib/aws-lambda';\nimport * as s3 from 'aws-cdk-lib/aws-s3';\nimport * as cdk from 'aws-cdk-lib';\n\nimport * as cloudtrail from 'aws-cdk-lib/aws-cloudtrail';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'integ-cloudtrail');\n\nconst bucket = new s3.Bucket(stack, 'Bucket', {\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n  autoDeleteObjects: true,\n});\nconst lambdaFunction = new lambda.Function(stack, 'LambdaFunction', {\n  runtime: lambda.Runtime.NODEJS_14_X,\n  handler: 'hello.handler',\n  code: lambda.Code.fromInline('exports.handler = {}'),\n});\n\n// using exctecy the same code as inside the cloudtrail class to produce the supplied bucket and policy\nconst cloudTrailPrincipal = new iam.ServicePrincipal('cloudtrail.amazonaws.com');\n\nconst Trailbucket = new s3.Bucket(stack, 'S3', {\n  encryption: s3.BucketEncryption.UNENCRYPTED,\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n  autoDeleteObjects: true,\n});\n\nTrailbucket.addToResourcePolicy(new iam.PolicyStatement({\n  resources: [Trailbucket.bucketArn],\n  actions: ['s3:GetBucketAcl'],\n  principals: [cloudTrailPrincipal],\n}));\n\nTrailbucket.addToResourcePolicy(new iam.PolicyStatement({\n  resources: [Trailbucket.arnForObjects(`AWSLogs/${cdk.Stack.of(stack).account}/*`)],\n  actions: ['s3:PutObject'],\n  principals: [cloudTrailPrincipal],\n  conditions: {\n    StringEquals: { 's3:x-amz-acl': 'bucket-owner-full-control' },\n  },\n}));\n\nconst trail = new cloudtrail.Trail(stack, 'Trail', { bucket: Trailbucket });\n\ntrail.addLambdaEventSelector([lambdaFunction]);\ntrail.addS3EventSelector([{ bucket }]);\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"VPCB9E5F0B4\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-vpc-endpoint-dns-integ/VPC\"}]}}, \"VPCPublicSubnet1SubnetB4246D30\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-vpc-endpoint-dns-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableFEE4B781\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-vpc-endpoint-dns-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableAssociation0B0896DC\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}}}, \"VPCPublicSubnet1DefaultRoute91CEF279\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet1EIP6AD938E8\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-vpc-endpoint-dns-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1NATGatewayE0556630\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet1EIP6AD938E8\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-vpc-endpoint-dns-integ/VPC/PublicSubnet1\"}]}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\"]}, \"VPCPublicSubnet2Subnet74179F39\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-vpc-endpoint-dns-integ/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTable6F1A15F1\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-vpc-endpoint-dns-integ/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTableAssociation5A808732\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}}}, \"VPCPublicSubnet2DefaultRouteB7481BBA\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet2EIP4947BC00\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-vpc-endpoint-dns-integ/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2NATGateway3C070193\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet2EIP4947BC00\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-vpc-endpoint-dns-integ/VPC/PublicSubnet2\"}]}, \"DependsOn\": [\"VPCPublicSubnet2DefaultRouteB7481BBA\", \"VPCPublicSubnet2RouteTableAssociation5A808732\"]}, \"VPCPrivateSubnet1Subnet8BCA10E0\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-vpc-endpoint-dns-integ/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableBE8A6027\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-vpc-endpoint-dns-integ/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableAssociation347902D1\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}}}, \"VPCPrivateSubnet1DefaultRouteAE1D6490\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet1NATGatewayE0556630\"}}}, \"VPCPrivateSubnet2SubnetCFCDAA7A\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-vpc-endpoint-dns-integ/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTable0A19E10E\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-vpc-endpoint-dns-integ/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTableAssociation0C73D413\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}}}, \"VPCPrivateSubnet2DefaultRouteF4F5CFD2\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet2NATGateway3C070193\"}}}, \"VPCIGWB7E252D3\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-vpc-endpoint-dns-integ/VPC\"}]}}, \"VPCVPCGW99B986DC\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"InternetGatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}}, \"mylb\": {\"Type\": \"AWS::ElasticLoadBalancingV2::LoadBalancer\", \"Properties\": {\"Type\": \"network\", \"Name\": \"mylb\", \"Scheme\": \"internal\", \"Subnets\": [{\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}]}}, \"VPCES3AE7D565\": {\"Type\": \"AWS::EC2::VPCEndpointService\", \"Properties\": {\"AcceptanceRequired\": true, \"NetworkLoadBalancerArns\": [{\"Ref\": \"mylb\"}]}}, \"PHZ45BE903D\": {\"Type\": \"AWS::Route53::HostedZone\", \"Properties\": {\"Name\": \"aws-cdk.dev.\"}}, \"EndpointDomainEnableDnsDACBF5A6\": {\"Type\": \"Custom::AWS\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"AWS679f53fac002430cb0da5b7982bd22872D164C4C\", \"Arn\"]}, \"Create\": {\"Fn::Join\": [\"\", [\"{\\\"service\\\":\\\"EC2\\\",\\\"action\\\":\\\"modifyVpcEndpointServiceConfiguration\\\",\\\"parameters\\\":{\\\"ServiceId\\\":\\\"\", {\"Ref\": \"VPCES3AE7D565\"}, \"\\\",\\\"PrivateDnsName\\\":\\\"my-stuff.aws-cdk.dev\\\"},\\\"physicalResourceId\\\":{\\\"id\\\":\\\"awscdkvpcendpointdnsintegVPCES2D7BC258\\\"}}\"]]}, \"Update\": {\"Fn::Join\": [\"\", [\"{\\\"service\\\":\\\"EC2\\\",\\\"action\\\":\\\"modifyVpcEndpointServiceConfiguration\\\",\\\"parameters\\\":{\\\"ServiceId\\\":\\\"\", {\"Ref\": \"VPCES3AE7D565\"}, \"\\\",\\\"PrivateDnsName\\\":\\\"my-stuff.aws-cdk.dev\\\"},\\\"physicalResourceId\\\":{\\\"id\\\":\\\"awscdkvpcendpointdnsintegVPCES2D7BC258\\\"}}\"]]}, \"Delete\": {\"Fn::Join\": [\"\", [\"{\\\"service\\\":\\\"EC2\\\",\\\"action\\\":\\\"modifyVpcEndpointServiceConfiguration\\\",\\\"parameters\\\":{\\\"ServiceId\\\":\\\"\", {\"Ref\": \"VPCES3AE7D565\"}, \"\\\",\\\"RemovePrivateDnsName\\\":true}}\"]]}, \"InstallLatestAwsSdk\": false}, \"DependsOn\": [\"EndpointDomainEnableDnsCustomResourcePolicy5E6DE7EB\", \"VPCES3AE7D565\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"EndpointDomainEnableDnsCustomResourcePolicy5E6DE7EB\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"ec2:ModifyVpcEndpointServiceConfiguration\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\":\", [\"arn\", {\"Ref\": \"AWS::Partition\"}, \"ec2\", {\"Ref\": \"AWS::Region\"}, {\"Ref\": \"AWS::AccountId\"}, {\"Fn::Join\": [\"/\", [\"vpc-endpoint-service\", {\"Ref\": \"VPCES3AE7D565\"}]]}]]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"EndpointDomainEnableDnsCustomResourcePolicy5E6DE7EB\", \"Roles\": [{\"Ref\": \"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\"}]}, \"DependsOn\": [\"VPCES3AE7D565\"]}, \"EndpointDomainGetNames9E697ED2\": {\"Type\": \"Custom::AWS\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"AWS679f53fac002430cb0da5b7982bd22872D164C4C\", \"Arn\"]}, \"Create\": {\"Fn::Join\": [\"\", [\"{\\\"service\\\":\\\"EC2\\\",\\\"action\\\":\\\"describeVpcEndpointServiceConfigurations\\\",\\\"parameters\\\":{\\\"ServiceIds\\\":[\\\"\", {\"Ref\": \"VPCES3AE7D565\"}, \"\\\"]},\\\"physicalResourceId\\\":{\\\"id\\\":\\\"0b26ca4969ad06c279e229b1b55b9bc2\\\"}}\"]]}, \"Update\": {\"Fn::Join\": [\"\", [\"{\\\"service\\\":\\\"EC2\\\",\\\"action\\\":\\\"describeVpcEndpointServiceConfigurations\\\",\\\"parameters\\\":{\\\"ServiceIds\\\":[\\\"\", {\"Ref\": \"VPCES3AE7D565\"}, \"\\\"]},\\\"physicalResourceId\\\":{\\\"id\\\":\\\"0b26ca4969ad06c279e229b1b55b9bc2\\\"}}\"]]}, \"InstallLatestAwsSdk\": false}, \"DependsOn\": [\"EndpointDomainEnableDnsCustomResourcePolicy5E6DE7EB\", \"EndpointDomainEnableDnsDACBF5A6\", \"EndpointDomainGetNamesCustomResourcePolicy141775B1\", \"VPCES3AE7D565\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"EndpointDomainGetNamesCustomResourcePolicy141775B1\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"ec2:DescribeVpcEndpointServiceConfigurations\", \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"EndpointDomainGetNamesCustomResourcePolicy141775B1\", \"Roles\": [{\"Ref\": \"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\"}]}, \"DependsOn\": [\"EndpointDomainEnableDnsCustomResourcePolicy5E6DE7EB\", \"EndpointDomainEnableDnsDACBF5A6\", \"VPCES3AE7D565\"]}, \"EndpointDomainDnsVerificationRecord66623BDA\": {\"Type\": \"AWS::Route53::RecordSet\", \"Properties\": {\"Name\": {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"EndpointDomainGetNames9E697ED2\", \"ServiceConfigurations.0.PrivateDnsNameConfiguration.Name\"]}, \".aws-cdk.dev.\"]]}, \"Type\": \"TXT\", \"HostedZoneId\": {\"Ref\": \"PHZ45BE903D\"}, \"ResourceRecords\": [{\"Fn::Join\": [\"\", [\"\\\"\", {\"Fn::GetAtt\": [\"EndpointDomainGetNames9E697ED2\", \"ServiceConfigurations.0.PrivateDnsNameConfiguration.Value\"]}, \"\\\"\"]]}], \"TTL\": \"1800\"}, \"DependsOn\": [\"VPCES3AE7D565\"]}, \"EndpointDomainStartVerification05E2F7A3\": {\"Type\": \"Custom::AWS\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"AWS679f53fac002430cb0da5b7982bd22872D164C4C\", \"Arn\"]}, \"Create\": {\"Fn::Join\": [\"\", [\"{\\\"service\\\":\\\"EC2\\\",\\\"action\\\":\\\"startVpcEndpointServicePrivateDnsVerification\\\",\\\"parameters\\\":{\\\"ServiceId\\\":\\\"\", {\"Ref\": \"VPCES3AE7D565\"}, \"\\\"},\\\"physicalResourceId\\\":{\\\"id\\\":\\\"\", {\"Fn::Join\": [\":\", [{\"Fn::GetAtt\": [\"EndpointDomainGetNames9E697ED2\", \"ServiceConfigurations.0.PrivateDnsNameConfiguration.Name\"]}, {\"Fn::GetAtt\": [\"EndpointDomainGetNames9E697ED2\", \"ServiceConfigurations.0.PrivateDnsNameConfiguration.Value\"]}]]}, \"\\\"}}\"]]}, \"Update\": {\"Fn::Join\": [\"\", [\"{\\\"service\\\":\\\"EC2\\\",\\\"action\\\":\\\"startVpcEndpointServicePrivateDnsVerification\\\",\\\"parameters\\\":{\\\"ServiceId\\\":\\\"\", {\"Ref\": \"VPCES3AE7D565\"}, \"\\\"},\\\"physicalResourceId\\\":{\\\"id\\\":\\\"\", {\"Fn::Join\": [\":\", [{\"Fn::GetAtt\": [\"EndpointDomainGetNames9E697ED2\", \"ServiceConfigurations.0.PrivateDnsNameConfiguration.Name\"]}, {\"Fn::GetAtt\": [\"EndpointDomainGetNames9E697ED2\", \"ServiceConfigurations.0.PrivateDnsNameConfiguration.Value\"]}]]}, \"\\\"}}\"]]}, \"InstallLatestAwsSdk\": false}, \"DependsOn\": [\"EndpointDomainDnsVerificationRecord66623BDA\", \"EndpointDomainStartVerificationCustomResourcePolicyD2BAC9A6\", \"VPCES3AE7D565\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"EndpointDomainStartVerificationCustomResourcePolicyD2BAC9A6\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"ec2:StartVpcEndpointServicePrivateDnsVerification\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\":\", [\"arn\", {\"Ref\": \"AWS::Partition\"}, \"ec2\", {\"Ref\": \"AWS::Region\"}, {\"Ref\": \"AWS::AccountId\"}, {\"Fn::Join\": [\"/\", [\"vpc-endpoint-service\", {\"Ref\": \"VPCES3AE7D565\"}]]}]]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"EndpointDomainStartVerificationCustomResourcePolicyD2BAC9A6\", \"Roles\": [{\"Ref\": \"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\"}]}, \"DependsOn\": [\"EndpointDomainDnsVerificationRecord66623BDA\", \"VPCES3AE7D565\"]}, \"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}}, \"AWS679f53fac002430cb0da5b7982bd22872D164C4C\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"5009f77d2e9161f4799d4facb1cb8859134a40234014484b4911e924c169c9cb.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\", \"Arn\"]}, \"Handler\": \"index.handler\", \"Runtime\": {\"Fn::FindInMap\": [\"DefaultCrNodeVersionMap\", {\"Ref\": \"AWS::Region\"}, \"value\"]}, \"Timeout\": 120}, \"DependsOn\": [\"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\"]}}, \"Mappings\": {\"DefaultCrNodeVersionMap\": {\"af-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-east-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-3\": {\"value\": \"nodejs16.x\"}, \"ap-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-south-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-3\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-4\": {\"value\": \"nodejs16.x\"}, \"ca-central-1\": {\"value\": \"nodejs16.x\"}, \"cn-north-1\": {\"value\": \"nodejs16.x\"}, \"cn-northwest-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-2\": {\"value\": \"nodejs16.x\"}, \"eu-north-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-1\": {\"value\": \"nodejs16.x\"}, \"eu-west-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-3\": {\"value\": \"nodejs16.x\"}, \"me-central-1\": {\"value\": \"nodejs16.x\"}, \"me-south-1\": {\"value\": \"nodejs16.x\"}, \"sa-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-2\": {\"value\": \"nodejs16.x\"}, \"us-gov-east-1\": {\"value\": \"nodejs16.x\"}, \"us-gov-west-1\": {\"value\": \"nodejs16.x\"}, \"us-iso-east-1\": {\"value\": \"nodejs14.x\"}, \"us-iso-west-1\": {\"value\": \"nodejs14.x\"}, \"us-isob-east-1\": {\"value\": \"nodejs14.x\"}, \"us-west-1\": {\"value\": \"nodejs16.x\"}, \"us-west-2\": {\"value\": \"nodejs16.x\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as cdk from 'aws-cdk-lib';\nimport { Construct } from 'constructs';\nimport { PublicHostedZone, VpcEndpointServiceDomainName } from 'aws-cdk-lib/aws-route53';\n\n/**\n * A load balancer that can host a VPC Endpoint Service.\n *\n * Why do this instead of using the NetworkLoadBalancer construct? aws-route53\n * cannot depend on aws-elasticloadbalancingv2 because aws-elasticloadbalancingv2\n * already takes a dependency on aws-route53.\n */\nclass DummyEndpointLoadBalancer implements ec2.IVpcEndpointServiceLoadBalancer {\n  /**\n   * The ARN of the load balancer that hosts the VPC Endpoint Service\n   */\n  public readonly loadBalancerArn: string;\n  constructor(scope: Construct, id: string, vpc: ec2.Vpc) {\n    const lb = new cdk.CfnResource(scope, id, {\n      type: 'AWS::ElasticLoadBalancingV2::LoadBalancer',\n      properties: {\n        Type: 'network',\n        Name: 'mylb',\n        Scheme: 'internal',\n        Subnets: [vpc.privateSubnets[0].subnetId],\n      },\n    });\n    this.loadBalancerArn = lb.ref;\n  }\n}\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'aws-cdk-vpc-endpoint-dns-integ');\nconst vpc = new ec2.Vpc(stack, 'VPC', { restrictDefaultSecurityGroup: false });\nconst nlb = new DummyEndpointLoadBalancer(stack, 'mylb', vpc);\nconst vpces = new ec2.VpcEndpointService(stack, 'VPCES', {\n  vpcEndpointServiceLoadBalancers: [nlb],\n});\nconst zone = new PublicHostedZone(stack, 'PHZ', {\n  zoneName: 'aws-cdk.dev',\n});\nnew VpcEndpointServiceDomainName(stack, 'EndpointDomain', {\n  endpointService: vpces,\n  domainName: 'my-stuff.aws-cdk.dev',\n  publicHostedZone: zone,\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"HostedZoneDB99F866\": {\"Type\": \"AWS::Route53::HostedZone\", \"Properties\": {\"Name\": \"cdk.dev.\"}}, \"ExistingRecord8E2B2167\": {\"Type\": \"AWS::Route53::RecordSet\", \"Properties\": {\"Name\": \"integ.cdk.dev.\", \"Type\": \"A\", \"HostedZoneId\": {\"Ref\": \"HostedZoneDB99F866\"}, \"ResourceRecords\": [\"1.2.3.4\"], \"TTL\": \"1800\"}}, \"NewRecordB9E8EE35\": {\"Type\": \"AWS::Route53::RecordSet\", \"Properties\": {\"Name\": \"integ.cdk.dev.\", \"Type\": \"A\", \"HostedZoneId\": {\"Ref\": \"HostedZoneDB99F866\"}, \"ResourceRecords\": [\"5.6.7.8\"], \"TTL\": \"7200\"}, \"DependsOn\": [\"ExistingRecord8E2B2167\", \"NewRecordDeleteExistingRecordSetCustomResource3CF98631\"]}, \"NewRecordDeleteExistingRecordSetCustomResource3CF98631\": {\"Type\": \"Custom::DeleteExistingRecordSet\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"CustomDeleteExistingRecordSetCustomResourceProviderHandlerAD00231E\", \"Arn\"]}, \"HostedZoneId\": {\"Ref\": \"HostedZoneDB99F866\"}, \"RecordName\": \"integ.cdk.dev.\", \"RecordType\": \"A\"}, \"DependsOn\": [\"ExistingRecord8E2B2167\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"CustomDeleteExistingRecordSetCustomResourceProviderRole03A7ED08\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Version\": \"2012-10-17\", \"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}]}, \"ManagedPolicyArns\": [{\"Fn::Sub\": \"arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"}], \"Policies\": [{\"PolicyName\": \"Inline\", \"PolicyDocument\": {\"Version\": \"2012-10-17\", \"Statement\": [{\"Effect\": \"Allow\", \"Action\": \"route53:GetChange\", \"Resource\": \"*\"}, {\"Effect\": \"Allow\", \"Action\": \"route53:ListResourceRecordSets\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":route53:::hostedzone/\", {\"Ref\": \"HostedZoneDB99F866\"}]]}}, {\"Effect\": \"Allow\", \"Action\": \"route53:ChangeResourceRecordSets\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":route53:::hostedzone/\", {\"Ref\": \"HostedZoneDB99F866\"}]]}, \"Condition\": {\"ForAllValues:StringEquals\": {\"route53:ChangeResourceRecordSetsRecordTypes\": [\"A\"], \"route53:ChangeResourceRecordSetsActions\": [\"DELETE\"]}}}]}}]}}, \"CustomDeleteExistingRecordSetCustomResourceProviderHandlerAD00231E\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"93d4963306216a9c4bf68e6d8b69958040b1812029cb78b74b9a2189b274e66a.zip\"}, \"Timeout\": 900, \"MemorySize\": 128, \"Handler\": \"__entrypoint__.handler\", \"Role\": {\"Fn::GetAtt\": [\"CustomDeleteExistingRecordSetCustomResourceProviderRole03A7ED08\", \"Arn\"]}, \"Runtime\": \"nodejs16.x\"}, \"DependsOn\": [\"CustomDeleteExistingRecordSetCustomResourceProviderRole03A7ED08\"]}}, \"Mappings\": {\"DefaultCrNodeVersionMap\": {\"af-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-east-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-3\": {\"value\": \"nodejs16.x\"}, \"ap-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-south-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-3\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-4\": {\"value\": \"nodejs16.x\"}, \"ca-central-1\": {\"value\": \"nodejs16.x\"}, \"cn-north-1\": {\"value\": \"nodejs16.x\"}, \"cn-northwest-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-2\": {\"value\": \"nodejs16.x\"}, \"eu-north-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-1\": {\"value\": \"nodejs16.x\"}, \"eu-west-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-3\": {\"value\": \"nodejs16.x\"}, \"me-central-1\": {\"value\": \"nodejs16.x\"}, \"me-south-1\": {\"value\": \"nodejs16.x\"}, \"sa-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-2\": {\"value\": \"nodejs16.x\"}, \"us-gov-east-1\": {\"value\": \"nodejs16.x\"}, \"us-gov-west-1\": {\"value\": \"nodejs16.x\"}, \"us-iso-east-1\": {\"value\": \"nodejs14.x\"}, \"us-iso-west-1\": {\"value\": \"nodejs14.x\"}, \"us-isob-east-1\": {\"value\": \"nodejs14.x\"}, \"us-west-1\": {\"value\": \"nodejs16.x\"}, \"us-west-2\": {\"value\": \"nodejs16.x\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import { App, Duration, Stack, StackProps } from 'aws-cdk-lib';\nimport { Construct } from 'constructs';\nimport * as route53 from 'aws-cdk-lib/aws-route53';\n\nclass TestStack extends Stack {\n  constructor(scope: Construct, id: string, props?: StackProps) {\n    super(scope, id, props);\n\n    const hostedZone = new route53.PublicHostedZone(this, 'HostedZone', {\n      zoneName: 'cdk.dev',\n    });\n\n    // Simulate existing record\n    const existingRecord = new route53.ARecord(this, 'ExistingRecord', {\n      target: route53.RecordTarget.fromIpAddresses('1.2.3.4'),\n      zone: hostedZone,\n      recordName: 'integ',\n    });\n\n    const newRecord = new route53.ARecord(this, 'NewRecord', {\n      target: route53.RecordTarget.fromIpAddresses('5.6.7.8'),\n      ttl: Duration.hours(2),\n      zone: hostedZone,\n      recordName: 'integ',\n      deleteExisting: true,\n    });\n    newRecord.node.addDependency(existingRecord);\n  }\n}\n\nconst app = new App();\nnew TestStack(app, 'cdk-route53-integ-delete-existing-record-set');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"ParentHostedZoneC2BD86E1\": {\"Type\": \"AWS::Route53::HostedZone\", \"Properties\": {\"Name\": \"myzone.com.\"}}, \"ParentHostedZoneCrossAccountZoneDelegationRole95B1C36E\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}, \"Policies\": [{\"PolicyDocument\": {\"Statement\": [{\"Action\": \"route53:ChangeResourceRecordSets\", \"Condition\": {\"ForAllValues:StringEquals\": {\"route53:ChangeResourceRecordSetsRecordTypes\": [\"NS\"], \"route53:ChangeResourceRecordSetsActions\": [\"UPSERT\", \"DELETE\"]}}, \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":route53:::hostedzone/\", {\"Ref\": \"ParentHostedZoneC2BD86E1\"}]]}}, {\"Action\": \"route53:ListHostedZonesByName\", \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"delegation\"}]}}, \"ChildHostedZoneWithZoneId729259E6\": {\"Type\": \"AWS::Route53::HostedZone\", \"Properties\": {\"Name\": \"sub.myzone.com.\"}}, \"DelegationWithZoneIdcrossaccountzonedelegationhandlerrolePolicyawscdkroute53crossaccountintegDelegationWithZoneIdcrossaccountzonedelegationhandlerrole5AE6C47314C14718\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"ParentHostedZoneCrossAccountZoneDelegationRole95B1C36E\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"Policyawscdkroute53crossaccountintegDelegationWithZoneIdcrossaccountzonedelegationhandlerrole5AE6C473\", \"Roles\": [{\"Fn::Select\": [1, {\"Fn::Split\": [\"/\", {\"Fn::Select\": [5, {\"Fn::Split\": [\":\", {\"Fn::GetAtt\": [\"CustomCrossAccountZoneDelegationCustomResourceProviderRoleED64687B\", \"Arn\"]}]}]}]}]}]}}, \"DelegationWithZoneIdCrossAccountZoneDelegationCustomResourceFFD766E7\": {\"Type\": \"Custom::CrossAccountZoneDelegation\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"CustomCrossAccountZoneDelegationCustomResourceProviderHandler44A84265\", \"Arn\"]}, \"AssumeRoleArn\": {\"Fn::GetAtt\": [\"ParentHostedZoneCrossAccountZoneDelegationRole95B1C36E\", \"Arn\"]}, \"ParentZoneId\": {\"Ref\": \"ParentHostedZoneC2BD86E1\"}, \"DelegatedZoneName\": \"sub.myzone.com\", \"DelegatedZoneNameServers\": {\"Fn::GetAtt\": [\"ChildHostedZoneWithZoneId729259E6\", \"NameServers\"]}, \"TTL\": 172800}, \"DependsOn\": [\"DelegationWithZoneIdcrossaccountzonedelegationhandlerrolePolicyawscdkroute53crossaccountintegDelegationWithZoneIdcrossaccountzonedelegationhandlerrole5AE6C47314C14718\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}, \"CustomCrossAccountZoneDelegationCustomResourceProviderRoleED64687B\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Version\": \"2012-10-17\", \"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}]}, \"ManagedPolicyArns\": [{\"Fn::Sub\": \"arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"}]}}, \"CustomCrossAccountZoneDelegationCustomResourceProviderHandler44A84265\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"ab0afc2f801b8ac11473bad4d9f22578919d8959b5f1bcd21b05c4ac895dbcab.zip\"}, \"Timeout\": 900, \"MemorySize\": 128, \"Handler\": \"__entrypoint__.handler\", \"Role\": {\"Fn::GetAtt\": [\"CustomCrossAccountZoneDelegationCustomResourceProviderRoleED64687B\", \"Arn\"]}, \"Runtime\": \"nodejs16.x\"}, \"DependsOn\": [\"CustomCrossAccountZoneDelegationCustomResourceProviderRoleED64687B\"]}, \"ChildHostedZoneWithZoneNameBC2C15F6\": {\"Type\": \"AWS::Route53::HostedZone\", \"Properties\": {\"Name\": \"anothersub.myzone.com.\"}}, \"DelegationWithZoneNamecrossaccountzonedelegationhandlerrolePolicyawscdkroute53crossaccountintegDelegationWithZoneNamecrossaccountzonedelegationhandlerroleC28807823206B47A\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"ParentHostedZoneCrossAccountZoneDelegationRole95B1C36E\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"Policyawscdkroute53crossaccountintegDelegationWithZoneNamecrossaccountzonedelegationhandlerroleC2880782\", \"Roles\": [{\"Fn::Select\": [1, {\"Fn::Split\": [\"/\", {\"Fn::Select\": [5, {\"Fn::Split\": [\":\", {\"Fn::GetAtt\": [\"CustomCrossAccountZoneDelegationCustomResourceProviderRoleED64687B\", \"Arn\"]}]}]}]}]}]}}, \"DelegationWithZoneNameCrossAccountZoneDelegationCustomResourceA1A1C94A\": {\"Type\": \"Custom::CrossAccountZoneDelegation\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"CustomCrossAccountZoneDelegationCustomResourceProviderHandler44A84265\", \"Arn\"]}, \"AssumeRoleArn\": {\"Fn::GetAtt\": [\"ParentHostedZoneCrossAccountZoneDelegationRole95B1C36E\", \"Arn\"]}, \"ParentZoneName\": \"myzone.com\", \"DelegatedZoneName\": \"anothersub.myzone.com\", \"DelegatedZoneNameServers\": {\"Fn::GetAtt\": [\"ChildHostedZoneWithZoneNameBC2C15F6\", \"NameServers\"]}, \"TTL\": 172800}, \"DependsOn\": [\"DelegationWithZoneNamecrossaccountzonedelegationhandlerrolePolicyawscdkroute53crossaccountintegDelegationWithZoneNamecrossaccountzonedelegationhandlerroleC28807823206B47A\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\"}}, \"Mappings\": {\"DefaultCrNodeVersionMap\": {\"af-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-east-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-3\": {\"value\": \"nodejs16.x\"}, \"ap-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-south-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-3\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-4\": {\"value\": \"nodejs16.x\"}, \"ca-central-1\": {\"value\": \"nodejs16.x\"}, \"cn-north-1\": {\"value\": \"nodejs16.x\"}, \"cn-northwest-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-2\": {\"value\": \"nodejs16.x\"}, \"eu-north-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-1\": {\"value\": \"nodejs16.x\"}, \"eu-west-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-3\": {\"value\": \"nodejs16.x\"}, \"me-central-1\": {\"value\": \"nodejs16.x\"}, \"me-south-1\": {\"value\": \"nodejs16.x\"}, \"sa-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-2\": {\"value\": \"nodejs16.x\"}, \"us-gov-east-1\": {\"value\": \"nodejs16.x\"}, \"us-gov-west-1\": {\"value\": \"nodejs16.x\"}, \"us-iso-east-1\": {\"value\": \"nodejs14.x\"}, \"us-iso-west-1\": {\"value\": \"nodejs14.x\"}, \"us-isob-east-1\": {\"value\": \"nodejs14.x\"}, \"us-west-1\": {\"value\": \"nodejs16.x\"}, \"us-west-2\": {\"value\": \"nodejs16.x\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as iam from 'aws-cdk-lib/aws-iam';\nimport * as cdk from 'aws-cdk-lib';\nimport { PublicHostedZone, CrossAccountZoneDelegationRecord } from 'aws-cdk-lib/aws-route53';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'aws-cdk-route53-cross-account-integ');\n\nconst parentZone = new PublicHostedZone(stack, 'ParentHostedZone', {\n  zoneName: 'myzone.com',\n  crossAccountZoneDelegationPrincipal: new iam.AccountPrincipal(cdk.Aws.ACCOUNT_ID),\n});\n\n// with zoneId\nconst childZoneWithZoneId = new PublicHostedZone(stack, 'ChildHostedZoneWithZoneId', {\n  zoneName: 'sub.myzone.com',\n});\nnew CrossAccountZoneDelegationRecord(stack, 'DelegationWithZoneId', {\n  delegatedZone: childZoneWithZoneId,\n  parentHostedZoneId: parentZone.hostedZoneId,\n  delegationRole: parentZone.crossAccountZoneDelegationRole!,\n});\n\n// with zoneName\nconst childZoneWithZoneName = new PublicHostedZone(stack, 'ChildHostedZoneWithZoneName', {\n  zoneName: 'anothersub.myzone.com',\n});\nnew CrossAccountZoneDelegationRecord(stack, 'DelegationWithZoneName', {\n  delegatedZone: childZoneWithZoneName,\n  parentHostedZoneName: 'myzone.com',\n  delegationRole: parentZone.crossAccountZoneDelegationRole!,\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"VPCB9E5F0B4\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-route53-integ/VPC\"}]}}, \"VPCPublicSubnet1SubnetB4246D30\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/17\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-route53-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableFEE4B781\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-route53-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableAssociation0B0896DC\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}}}, \"VPCPublicSubnet1DefaultRoute91CEF279\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet1EIP6AD938E8\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-route53-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1NATGatewayE0556630\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet1EIP6AD938E8\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-route53-integ/VPC/PublicSubnet1\"}]}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\"]}, \"VPCPrivateSubnet1Subnet8BCA10E0\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/17\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-route53-integ/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableBE8A6027\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-route53-integ/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableAssociation347902D1\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}}}, \"VPCPrivateSubnet1DefaultRouteAE1D6490\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet1NATGatewayE0556630\"}}}, \"VPCIGWB7E252D3\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-route53-integ/VPC\"}]}}, \"VPCVPCGW99B986DC\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"InternetGatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}}, \"PrivateZone27242E85\": {\"Type\": \"AWS::Route53::HostedZone\", \"Properties\": {\"Name\": \"cdk.local.\", \"VPCs\": [{\"VPCId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"VPCRegion\": {\"Ref\": \"AWS::Region\"}}]}}, \"PrivateZoneTXT83BB83CE\": {\"Type\": \"AWS::Route53::RecordSet\", \"Properties\": {\"Name\": \"_foo.cdk.local.\", \"Type\": \"TXT\", \"HostedZoneId\": {\"Ref\": \"PrivateZone27242E85\"}, \"ResourceRecords\": [\"\\\"Bar!\\\"\", \"\\\"Baz?\\\"\"], \"TTL\": \"60\"}}, \"PublicZone2E1C4E34\": {\"Type\": \"AWS::Route53::HostedZone\", \"Properties\": {\"Name\": \"cdk.test.\"}}, \"PublicZonecdktestsubcdktest83558650\": {\"Type\": \"AWS::Route53::RecordSet\", \"Properties\": {\"Name\": \"sub.cdk.test.\", \"Type\": \"NS\", \"HostedZoneId\": {\"Ref\": \"PublicZone2E1C4E34\"}, \"ResourceRecords\": {\"Fn::GetAtt\": [\"PublicSubZoneDBD26A0A\", \"NameServers\"]}, \"TTL\": \"172800\"}}, \"PublicSubZoneDBD26A0A\": {\"Type\": \"AWS::Route53::HostedZone\", \"Properties\": {\"Name\": \"sub.cdk.test.\"}}, \"PublicZoneWithDotAE1455DD\": {\"Type\": \"AWS::Route53::HostedZone\", \"Properties\": {\"Name\": \"cdk.test\"}}, \"CNAMEC70A2D52\": {\"Type\": \"AWS::Route53::RecordSet\", \"Properties\": {\"Name\": \"www.cdk.local.\", \"Type\": \"CNAME\", \"HostedZoneId\": {\"Ref\": \"PrivateZone27242E85\"}, \"ResourceRecords\": [\"server\"], \"TTL\": \"1800\"}}, \"ACCC8ACD5\": {\"Type\": \"AWS::Route53::RecordSet\", \"Properties\": {\"Name\": \"test.cdk.local.\", \"Type\": \"A\", \"HostedZoneId\": {\"Ref\": \"PrivateZone27242E85\"}, \"ResourceRecords\": [\"1.2.3.4\", \"5.6.7.8\"], \"TTL\": \"1800\"}}, \"CaaAmazon40DF725F\": {\"Type\": \"AWS::Route53::RecordSet\", \"Properties\": {\"Name\": \"cdk.test.\", \"Type\": \"CAA\", \"HostedZoneId\": {\"Ref\": \"PublicZone2E1C4E34\"}, \"ResourceRecords\": [\"0 issue \\\"amazon.com\\\"\"], \"TTL\": \"1800\"}}, \"TXT0D5C5ACF\": {\"Type\": \"AWS::Route53::RecordSet\", \"Properties\": {\"Name\": \"cdk.test.\", \"Type\": \"TXT\", \"HostedZoneId\": {\"Ref\": \"PublicZone2E1C4E34\"}, \"ResourceRecords\": [\"\\\"this is a very long stringthis is a very long stringthis is a very long stringthis is a very long stringthis is a very long stringthis is a very long stringthis is a very long stringthis is a very long stringthis is a very long stringthis is a very long s\\\"\\\"tring\\\"\"], \"TTL\": \"1800\"}}}, \"Outputs\": {\"PrivateZoneId\": {\"Value\": {\"Ref\": \"PrivateZone27242E85\"}}, \"PublicZoneId\": {\"Value\": {\"Ref\": \"PublicZone2E1C4E34\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as cdk from 'aws-cdk-lib';\nimport { ARecord, CaaAmazonRecord, CnameRecord, PrivateHostedZone, PublicHostedZone, RecordTarget, TxtRecord } from 'aws-cdk-lib/aws-route53';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'aws-cdk-route53-integ');\n\nconst vpc = new ec2.Vpc(stack, 'VPC', { maxAzs: 1, restrictDefaultSecurityGroup: false });\n\nconst privateZone = new PrivateHostedZone(stack, 'PrivateZone', {\n  zoneName: 'cdk.local', vpc,\n});\n\nconst publicZone = new PublicHostedZone(stack, 'PublicZone', {\n  zoneName: 'cdk.test',\n});\nconst publicSubZone = new PublicHostedZone(stack, 'PublicSubZone', {\n  zoneName: 'sub.cdk.test',\n});\npublicZone.addDelegation(publicSubZone);\n\nnew PublicHostedZone(stack, 'PublicZoneWithDot', {\n  zoneName: 'cdk.test',\n  addTrailingDot: false,\n});\n\nnew TxtRecord(privateZone, 'TXT', {\n  zone: privateZone,\n  recordName: '_foo',\n  values: [\n    'Bar!',\n    'Baz?',\n  ],\n  ttl: cdk.Duration.minutes(1),\n});\n\nnew CnameRecord(stack, 'CNAME', {\n  zone: privateZone,\n  recordName: 'www',\n  domainName: 'server',\n});\n\nnew ARecord(stack, 'A', {\n  zone: privateZone,\n  recordName: 'test',\n  target: RecordTarget.fromIpAddresses('1.2.3.4', '5.6.7.8'),\n});\n\nnew CaaAmazonRecord(stack, 'CaaAmazon', {\n  zone: publicZone,\n});\n\nnew TxtRecord(stack, 'TXT', {\n  zone: publicZone,\n  values: [\n    'this is a very long string'.repeat(10),\n  ],\n});\n\nnew cdk.CfnOutput(stack, 'PrivateZoneId', { value: privateZone.hostedZoneId });\nnew cdk.CfnOutput(stack, 'PublicZoneId', { value: publicZone.hostedZoneId });\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"CustomKey1E6D0D07\": {\"Type\": \"AWS::KMS::Key\", \"Properties\": {\"KeyPolicy\": {\"Statement\": [{\"Action\": \"kms:*\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}, \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\"}, \"MyTopic86869434\": {\"Type\": \"AWS::SNS::Topic\", \"Properties\": {\"DisplayName\": \"fooDisplayName\", \"KmsMasterKeyId\": {\"Fn::GetAtt\": [\"CustomKey1E6D0D07\", \"Arn\"]}, \"TopicName\": \"fooTopic\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import { Key } from 'aws-cdk-lib/aws-kms';\nimport { App, Stack, StackProps } from 'aws-cdk-lib';\nimport { Topic } from 'aws-cdk-lib/aws-sns';\n\nclass SNSInteg extends Stack {\n  constructor(scope: App, id: string, props?: StackProps) {\n    super(scope, id, props);\n\n    const key = new Key(this, 'CustomKey');\n\n    new Topic(this, 'MyTopic', {\n      topicName: 'fooTopic',\n      displayName: 'fooDisplayName',\n      masterKey: key,\n    });\n  }\n}\n\nconst app = new App();\n\nnew SNSInteg(app, 'SNSInteg');\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyTopic86869434\": {\"Type\": \"AWS::SNS::Topic\", \"Properties\": {\"ContentBasedDeduplication\": true, \"DisplayName\": \"fooDisplayName\", \"FifoTopic\": true, \"TopicName\": \"fooTopic.fifo\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import { App, Stack, StackProps } from 'aws-cdk-lib';\nimport { Topic } from 'aws-cdk-lib/aws-sns';\n\nclass SNSFifoInteg extends Stack {\n  constructor(scope: App, id: string, props?: StackProps) {\n    super(scope, id, props);\n\n    new Topic(this, 'MyTopic', {\n      topicName: 'fooTopic',\n      displayName: 'fooDisplayName',\n      contentBasedDeduplication: true,\n      fifo: true,\n    });\n  }\n}\n\nconst app = new App();\n\nnew SNSFifoInteg(app, 'SNSFifoInteg');\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"VPCB9E5F0B4\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC\"}]}}, \"VPCPublicSubnet1SubnetB4246D30\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableFEE4B781\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableAssociation0B0896DC\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}}}, \"VPCPublicSubnet1DefaultRoute91CEF279\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet1EIP6AD938E8\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1NATGatewayE0556630\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet1EIP6AD938E8\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC/PublicSubnet1\"}]}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\"]}, \"VPCPublicSubnet2Subnet74179F39\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTable6F1A15F1\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTableAssociation5A808732\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}}}, \"VPCPublicSubnet2DefaultRouteB7481BBA\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet2EIP4947BC00\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2NATGateway3C070193\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet2EIP4947BC00\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC/PublicSubnet2\"}]}, \"DependsOn\": [\"VPCPublicSubnet2DefaultRouteB7481BBA\", \"VPCPublicSubnet2RouteTableAssociation5A808732\"]}, \"VPCPrivateSubnet1Subnet8BCA10E0\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableBE8A6027\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableAssociation347902D1\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}}}, \"VPCPrivateSubnet1DefaultRouteAE1D6490\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet1NATGatewayE0556630\"}}}, \"VPCPrivateSubnet2SubnetCFCDAA7A\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTable0A19E10E\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTableAssociation0C73D413\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}}}, \"VPCPrivateSubnet2DefaultRouteF4F5CFD2\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet2NATGateway3C070193\"}}}, \"VPCIGWB7E252D3\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC\"}]}}, \"VPCVPCGW99B986DC\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"InternetGatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}}, \"FleetInstanceSecurityGroupA8C3D7AD\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"aws-cdk-autoscaling-integ/Fleet/InstanceSecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/Fleet\"}], \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}}, \"FleetInstanceRoleA605DB82\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"ec2.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/Fleet\"}]}}, \"FleetInstanceProfileC6192A66\": {\"Type\": \"AWS::IAM::InstanceProfile\", \"Properties\": {\"Roles\": [{\"Ref\": \"FleetInstanceRoleA605DB82\"}]}}, \"FleetLaunchConfig59F79D36\": {\"Type\": \"AWS::AutoScaling::LaunchConfiguration\", \"Properties\": {\"ImageId\": {\"Ref\": \"SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter\"}, \"InstanceType\": \"t2.micro\", \"IamInstanceProfile\": {\"Ref\": \"FleetInstanceProfileC6192A66\"}, \"SecurityGroups\": [{\"Fn::GetAtt\": [\"FleetInstanceSecurityGroupA8C3D7AD\", \"GroupId\"]}], \"SpotPrice\": \"0.20\", \"UserData\": {\"Fn::Base64\": \"#!/bin/bash\"}}, \"DependsOn\": [\"FleetInstanceRoleA605DB82\"]}, \"FleetASG3971DFE5\": {\"Type\": \"AWS::AutoScaling::AutoScalingGroup\", \"Properties\": {\"MaxSize\": \"1\", \"MinSize\": \"1\", \"LaunchConfigurationName\": {\"Ref\": \"FleetLaunchConfig59F79D36\"}, \"Tags\": [{\"Key\": \"Name\", \"PropagateAtLaunch\": true, \"Value\": \"aws-cdk-autoscaling-integ/Fleet\"}], \"VPCZoneIdentifier\": [{\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}, {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}]}, \"UpdatePolicy\": {\"AutoScalingScheduledAction\": {\"IgnoreUnmodifiedGroupSizeProperties\": true}}}}, \"Parameters\": {\"SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter\": {\"Type\": \"AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>\", \"Default\": \"/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2\"}, \"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "#!/usr/bin/env node\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as cdk from 'aws-cdk-lib';\nimport * as autoscaling from 'aws-cdk-lib/aws-autoscaling';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'aws-cdk-autoscaling-integ');\n\nconst vpc = new ec2.Vpc(stack, 'VPC', {\n  maxAzs: 2,\n  restrictDefaultSecurityGroup: false,\n});\n\nnew autoscaling.AutoScalingGroup(stack, 'Fleet', {\n  vpc,\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.BURSTABLE2, ec2.InstanceSize.MICRO),\n  machineImage: new ec2.AmazonLinuxImage({ generation: ec2.AmazonLinuxGeneration.AMAZON_LINUX_2 }),\n  spotPrice: '0.20',\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"VPCB9E5F0B4\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-asg-integ/VPC\"}]}}, \"VPCPublicSubnet1SubnetB4246D30\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-asg-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableFEE4B781\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-asg-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableAssociation0B0896DC\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}}}, \"VPCPublicSubnet1DefaultRoute91CEF279\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet1EIP6AD938E8\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-asg-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1NATGatewayE0556630\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet1EIP6AD938E8\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-asg-integ/VPC/PublicSubnet1\"}]}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\"]}, \"VPCPublicSubnet2Subnet74179F39\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-asg-integ/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTable6F1A15F1\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-asg-integ/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTableAssociation5A808732\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}}}, \"VPCPublicSubnet2DefaultRouteB7481BBA\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet2EIP4947BC00\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-asg-integ/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2NATGateway3C070193\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet2EIP4947BC00\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-asg-integ/VPC/PublicSubnet2\"}]}, \"DependsOn\": [\"VPCPublicSubnet2DefaultRouteB7481BBA\", \"VPCPublicSubnet2RouteTableAssociation5A808732\"]}, \"VPCPrivateSubnet1Subnet8BCA10E0\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-asg-integ/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableBE8A6027\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-asg-integ/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableAssociation347902D1\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}}}, \"VPCPrivateSubnet1DefaultRouteAE1D6490\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet1NATGatewayE0556630\"}}}, \"VPCPrivateSubnet2SubnetCFCDAA7A\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-asg-integ/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTable0A19E10E\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-asg-integ/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTableAssociation0C73D413\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}}}, \"VPCPrivateSubnet2DefaultRouteF4F5CFD2\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet2NATGateway3C070193\"}}}, \"VPCIGWB7E252D3\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-asg-integ/VPC\"}]}}, \"VPCVPCGW99B986DC\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"InternetGatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}}, \"FleetInstanceSecurityGroupA8C3D7AD\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"aws-cdk-asg-integ/Fleet/InstanceSecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-asg-integ/Fleet\"}], \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}}, \"FleetInstanceSecurityGroupfromawscdkasgintegLBSecurityGroup33FBF9CC8076F0C574\": {\"Type\": \"AWS::EC2::SecurityGroupIngress\", \"Properties\": {\"IpProtocol\": \"tcp\", \"Description\": \"Port 80 LB to fleet\", \"FromPort\": 80, \"GroupId\": {\"Fn::GetAtt\": [\"FleetInstanceSecurityGroupA8C3D7AD\", \"GroupId\"]}, \"SourceSecurityGroupId\": {\"Fn::GetAtt\": [\"LBSecurityGroup8A41EA2B\", \"GroupId\"]}, \"ToPort\": 80}}, \"FleetInstanceRoleA605DB82\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"ec2.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-asg-integ/Fleet\"}]}}, \"FleetInstanceProfileC6192A66\": {\"Type\": \"AWS::IAM::InstanceProfile\", \"Properties\": {\"Roles\": [{\"Ref\": \"FleetInstanceRoleA605DB82\"}]}}, \"FleetLaunchConfig59F79D36\": {\"Type\": \"AWS::AutoScaling::LaunchConfiguration\", \"Properties\": {\"ImageId\": {\"Ref\": \"SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter\"}, \"InstanceType\": \"t2.micro\", \"IamInstanceProfile\": {\"Ref\": \"FleetInstanceProfileC6192A66\"}, \"SecurityGroups\": [{\"Fn::GetAtt\": [\"FleetInstanceSecurityGroupA8C3D7AD\", \"GroupId\"]}], \"UserData\": {\"Fn::Base64\": \"#!/bin/bash\"}}, \"DependsOn\": [\"FleetInstanceRoleA605DB82\"]}, \"FleetASG3971DFE5\": {\"Type\": \"AWS::AutoScaling::AutoScalingGroup\", \"Properties\": {\"MaxSize\": \"1\", \"MinSize\": \"1\", \"LaunchConfigurationName\": {\"Ref\": \"FleetLaunchConfig59F79D36\"}, \"LoadBalancerNames\": [{\"Ref\": \"LB8A12904C\"}], \"Tags\": [{\"Key\": \"Name\", \"PropagateAtLaunch\": true, \"Value\": \"aws-cdk-asg-integ/Fleet\"}], \"VPCZoneIdentifier\": [{\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}, {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}]}, \"UpdatePolicy\": {\"AutoScalingScheduledAction\": {\"IgnoreUnmodifiedGroupSizeProperties\": true}}}, \"LBSecurityGroup8A41EA2B\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"aws-cdk-asg-integ/LB/SecurityGroup\", \"SecurityGroupIngress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Default rule allow on 80\", \"FromPort\": 80, \"IpProtocol\": \"tcp\", \"ToPort\": 80}], \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}}, \"LBSecurityGrouptoawscdkasgintegFleetInstanceSecurityGroup3CA66C0C808D3B5C07\": {\"Type\": \"AWS::EC2::SecurityGroupEgress\", \"Properties\": {\"GroupId\": {\"Fn::GetAtt\": [\"LBSecurityGroup8A41EA2B\", \"GroupId\"]}, \"IpProtocol\": \"tcp\", \"Description\": \"Port 80 LB to fleet\", \"DestinationSecurityGroupId\": {\"Fn::GetAtt\": [\"FleetInstanceSecurityGroupA8C3D7AD\", \"GroupId\"]}, \"FromPort\": 80, \"ToPort\": 80}}, \"LB8A12904C\": {\"Type\": \"AWS::ElasticLoadBalancing::LoadBalancer\", \"Properties\": {\"Listeners\": [{\"InstancePort\": \"80\", \"InstanceProtocol\": \"http\", \"LoadBalancerPort\": \"80\", \"Protocol\": \"http\"}], \"CrossZone\": true, \"HealthCheck\": {\"HealthyThreshold\": \"2\", \"Interval\": \"30\", \"Target\": \"HTTP:80/\", \"Timeout\": \"5\", \"UnhealthyThreshold\": \"5\"}, \"Scheme\": \"internet-facing\", \"SecurityGroups\": [{\"Fn::GetAtt\": [\"LBSecurityGroup8A41EA2B\", \"GroupId\"]}], \"Subnets\": [{\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}, {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}]}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\", \"VPCPublicSubnet2DefaultRouteB7481BBA\", \"VPCPublicSubnet2RouteTableAssociation5A808732\"]}}, \"Parameters\": {\"SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter\": {\"Type\": \"AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>\", \"Default\": \"/aws/service/ami-amazon-linux-latest/amzn-ami-hvm-x86_64-gp2\"}, \"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "#!/usr/bin/env node\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as elb from 'aws-cdk-lib/aws-elasticloadbalancing';\nimport * as cdk from 'aws-cdk-lib';\nimport * as autoscaling from 'aws-cdk-lib/aws-autoscaling';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'aws-cdk-asg-integ');\n\nconst vpc = new ec2.Vpc(stack, 'VPC', {\n  maxAzs: 3,\n  restrictDefaultSecurityGroup: false,\n});\n\nconst asg = new autoscaling.AutoScalingGroup(stack, 'Fleet', {\n  vpc,\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.BURSTABLE2, ec2.InstanceSize.MICRO),\n  machineImage: new ec2.AmazonLinuxImage(),\n});\n\nconst lb = new elb.LoadBalancer(stack, 'LB', {\n  vpc,\n  internetFacing: true,\n  healthCheck: {\n    port: 80,\n  },\n});\n\nlb.addTarget(asg);\nlb.addListener({ externalPort: 80 });\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"VPCB9E5F0B4\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-iam-external-role/VPC\"}]}}, \"VPCPublicSubnet1SubnetB4246D30\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"integ-iam-external-role/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableFEE4B781\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-iam-external-role/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableAssociation0B0896DC\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}}}, \"VPCPublicSubnet1DefaultRoute91CEF279\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet1EIP6AD938E8\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-iam-external-role/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1NATGatewayE0556630\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet1EIP6AD938E8\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-iam-external-role/VPC/PublicSubnet1\"}]}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\"]}, \"VPCPublicSubnet2Subnet74179F39\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"integ-iam-external-role/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTable6F1A15F1\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-iam-external-role/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTableAssociation5A808732\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}}}, \"VPCPublicSubnet2DefaultRouteB7481BBA\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet2EIP4947BC00\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-iam-external-role/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2NATGateway3C070193\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet2EIP4947BC00\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-iam-external-role/VPC/PublicSubnet2\"}]}, \"DependsOn\": [\"VPCPublicSubnet2DefaultRouteB7481BBA\", \"VPCPublicSubnet2RouteTableAssociation5A808732\"]}, \"VPCPrivateSubnet1Subnet8BCA10E0\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"integ-iam-external-role/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableBE8A6027\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-iam-external-role/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableAssociation347902D1\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}}}, \"VPCPrivateSubnet1DefaultRouteAE1D6490\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet1NATGatewayE0556630\"}}}, \"VPCPrivateSubnet2SubnetCFCDAA7A\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"integ-iam-external-role/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTable0A19E10E\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-iam-external-role/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTableAssociation0C73D413\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}}}, \"VPCPrivateSubnet2DefaultRouteF4F5CFD2\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet2NATGateway3C070193\"}}}, \"VPCIGWB7E252D3\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-iam-external-role/VPC\"}]}}, \"VPCVPCGW99B986DC\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"InternetGatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}}, \"Role1ABCC5F0\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"ec2.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"ASGInstanceSecurityGroup0525485D\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"integ-iam-external-role/ASG/InstanceSecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-iam-external-role/ASG\"}], \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}}, \"ASGInstanceProfile0A2834D7\": {\"Type\": \"AWS::IAM::InstanceProfile\", \"Properties\": {\"Roles\": [{\"Ref\": \"Role1ABCC5F0\"}]}}, \"ASGLaunchConfigC00AF12B\": {\"Type\": \"AWS::AutoScaling::LaunchConfiguration\", \"Properties\": {\"ImageId\": {\"Ref\": \"SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter\"}, \"InstanceType\": \"t2.micro\", \"IamInstanceProfile\": {\"Ref\": \"ASGInstanceProfile0A2834D7\"}, \"SecurityGroups\": [{\"Fn::GetAtt\": [\"ASGInstanceSecurityGroup0525485D\", \"GroupId\"]}], \"UserData\": {\"Fn::Base64\": \"#!/bin/bash\"}}, \"DependsOn\": [\"Role1ABCC5F0\"]}, \"ASG46ED3070\": {\"Type\": \"AWS::AutoScaling::AutoScalingGroup\", \"Properties\": {\"MaxSize\": \"1\", \"MinSize\": \"1\", \"LaunchConfigurationName\": {\"Ref\": \"ASGLaunchConfigC00AF12B\"}, \"Tags\": [{\"Key\": \"Name\", \"PropagateAtLaunch\": true, \"Value\": \"integ-iam-external-role/ASG\"}], \"VPCZoneIdentifier\": [{\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}, {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}]}, \"UpdatePolicy\": {\"AutoScalingScheduledAction\": {\"IgnoreUnmodifiedGroupSizeProperties\": true}}}}, \"Parameters\": {\"SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter\": {\"Type\": \"AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>\", \"Default\": \"/aws/service/ami-amazon-linux-latest/amzn-ami-hvm-x86_64-gp2\"}, \"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as iam from 'aws-cdk-lib/aws-iam';\nimport * as cdk from 'aws-cdk-lib';\nimport * as asg from 'aws-cdk-lib/aws-autoscaling';\n\nclass TestStack extends cdk.Stack {\n  constructor(scope: cdk.App, id: string) {\n    super(scope, id);\n\n    const vpc = new ec2.Vpc(this, 'VPC', { restrictDefaultSecurityGroup: false });\n    const role = new iam.Role(this, 'Role', {\n      assumedBy: new iam.ServicePrincipal('ec2.amazonaws.com'),\n    });\n\n    new asg.AutoScalingGroup(this, 'ASG', {\n      instanceType: ec2.InstanceType.of(ec2.InstanceClass.T2, ec2.InstanceSize.MICRO),\n      vpc,\n      machineImage: new ec2.AmazonLinuxImage(),\n      role,\n    });\n  }\n}\n\nconst app = new cdk.App();\n\nnew TestStack(app, 'integ-iam-external-role');\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"VPCB9E5F0B4\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC\"}]}}, \"VPCPublicSubnet1SubnetB4246D30\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableFEE4B781\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableAssociation0B0896DC\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}}}, \"VPCPublicSubnet1DefaultRoute91CEF279\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet1EIP6AD938E8\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1NATGatewayE0556630\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet1EIP6AD938E8\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC/PublicSubnet1\"}]}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\"]}, \"VPCPublicSubnet2Subnet74179F39\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTable6F1A15F1\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTableAssociation5A808732\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}}}, \"VPCPublicSubnet2DefaultRouteB7481BBA\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet2EIP4947BC00\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2NATGateway3C070193\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet2EIP4947BC00\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC/PublicSubnet2\"}]}, \"DependsOn\": [\"VPCPublicSubnet2DefaultRouteB7481BBA\", \"VPCPublicSubnet2RouteTableAssociation5A808732\"]}, \"VPCPrivateSubnet1Subnet8BCA10E0\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableBE8A6027\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableAssociation347902D1\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}}}, \"VPCPrivateSubnet1DefaultRouteAE1D6490\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet1NATGatewayE0556630\"}}}, \"VPCPrivateSubnet2SubnetCFCDAA7A\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTable0A19E10E\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTableAssociation0C73D413\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}}}, \"VPCPrivateSubnet2DefaultRouteF4F5CFD2\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet2NATGateway3C070193\"}}}, \"VPCIGWB7E252D3\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC\"}]}}, \"VPCVPCGW99B986DC\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"InternetGatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}}, \"FleetInstanceSecurityGroupA8C3D7AD\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"aws-cdk-autoscaling-integ/Fleet/InstanceSecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/Fleet\"}], \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}}, \"FleetInstanceRoleA605DB82\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"ec2.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/Fleet\"}]}}, \"FleetInstanceProfileC6192A66\": {\"Type\": \"AWS::IAM::InstanceProfile\", \"Properties\": {\"Roles\": [{\"Ref\": \"FleetInstanceRoleA605DB82\"}]}}, \"FleetLaunchConfig59F79D36\": {\"Type\": \"AWS::AutoScaling::LaunchConfiguration\", \"Properties\": {\"ImageId\": {\"Ref\": \"SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter\"}, \"InstanceType\": \"t2.micro\", \"IamInstanceProfile\": {\"Ref\": \"FleetInstanceProfileC6192A66\"}, \"SecurityGroups\": [{\"Fn::GetAtt\": [\"FleetInstanceSecurityGroupA8C3D7AD\", \"GroupId\"]}], \"UserData\": {\"Fn::Base64\": \"#!/bin/bash\"}}, \"DependsOn\": [\"FleetInstanceRoleA605DB82\"]}, \"FleetASG3971DFE5\": {\"Type\": \"AWS::AutoScaling::AutoScalingGroup\", \"Properties\": {\"MaxSize\": \"1\", \"MinSize\": \"1\", \"AutoScalingGroupName\": \"ASG\", \"LaunchConfigurationName\": {\"Ref\": \"FleetLaunchConfig59F79D36\"}, \"Tags\": [{\"Key\": \"Name\", \"PropagateAtLaunch\": true, \"Value\": \"aws-cdk-autoscaling-integ/Fleet\"}], \"VPCZoneIdentifier\": [{\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}, {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}]}, \"UpdatePolicy\": {\"AutoScalingScheduledAction\": {\"IgnoreUnmodifiedGroupSizeProperties\": true}}}, \"FleetWarmPoolB57F9BC1\": {\"Type\": \"AWS::AutoScaling::WarmPool\", \"Properties\": {\"AutoScalingGroupName\": {\"Ref\": \"FleetASG3971DFE5\"}}}}, \"Parameters\": {\"SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter\": {\"Type\": \"AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>\", \"Default\": \"/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2\"}, \"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "#!/usr/bin/env node\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as cdk from 'aws-cdk-lib';\nimport * as autoscaling from 'aws-cdk-lib/aws-autoscaling';\n\n/**\n * Stack verification steps:\n *\n * -- aws autoscaling describe-warm-pool --auto-scaling-group-name ASG has 0 and 'Stopped' as MinSize and PoolState, respectively.\n */\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'aws-cdk-autoscaling-integ');\n\nconst vpc = new ec2.Vpc(stack, 'VPC', {\n  maxAzs: 2,\n  restrictDefaultSecurityGroup: false,\n});\n\nconst asg = new autoscaling.AutoScalingGroup(stack, 'Fleet', {\n  vpc,\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.BURSTABLE2, ec2.InstanceSize.MICRO),\n  machineImage: new ec2.AmazonLinuxImage({ generation: ec2.AmazonLinuxGeneration.AMAZON_LINUX_2 }),\n  autoScalingGroupName: 'ASG',\n});\n\nasg.addWarmPool();\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"myVpcAuto1A4B61E2\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-role-target-hook/myVpcAuto\"}]}}, \"myVpcAutoPublicSubnet1Subnet3516098F\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"myVpcAuto1A4B61E2\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"integ-role-target-hook/myVpcAuto/PublicSubnet1\"}]}}, \"myVpcAutoPublicSubnet1RouteTable3D618310\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"myVpcAuto1A4B61E2\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-role-target-hook/myVpcAuto/PublicSubnet1\"}]}}, \"myVpcAutoPublicSubnet1RouteTableAssociationB3A6EFAC\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"myVpcAutoPublicSubnet1RouteTable3D618310\"}, \"SubnetId\": {\"Ref\": \"myVpcAutoPublicSubnet1Subnet3516098F\"}}}, \"myVpcAutoPublicSubnet1DefaultRoute2791173D\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"myVpcAutoPublicSubnet1RouteTable3D618310\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"myVpcAutoIGW08055396\"}}, \"DependsOn\": [\"myVpcAutoVPCGWEC42CD12\"]}, \"myVpcAutoPublicSubnet1EIP15D99CAF\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-role-target-hook/myVpcAuto/PublicSubnet1\"}]}}, \"myVpcAutoPublicSubnet1NATGatewayF3EA78A2\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"myVpcAutoPublicSubnet1Subnet3516098F\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"myVpcAutoPublicSubnet1EIP15D99CAF\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-role-target-hook/myVpcAuto/PublicSubnet1\"}]}, \"DependsOn\": [\"myVpcAutoPublicSubnet1DefaultRoute2791173D\", \"myVpcAutoPublicSubnet1RouteTableAssociationB3A6EFAC\"]}, \"myVpcAutoPublicSubnet2Subnet297C7839\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"myVpcAuto1A4B61E2\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"integ-role-target-hook/myVpcAuto/PublicSubnet2\"}]}}, \"myVpcAutoPublicSubnet2RouteTable17ECF2AC\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"myVpcAuto1A4B61E2\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-role-target-hook/myVpcAuto/PublicSubnet2\"}]}}, \"myVpcAutoPublicSubnet2RouteTableAssociationE21B7B6C\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"myVpcAutoPublicSubnet2RouteTable17ECF2AC\"}, \"SubnetId\": {\"Ref\": \"myVpcAutoPublicSubnet2Subnet297C7839\"}}}, \"myVpcAutoPublicSubnet2DefaultRouteE9454F16\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"myVpcAutoPublicSubnet2RouteTable17ECF2AC\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"myVpcAutoIGW08055396\"}}, \"DependsOn\": [\"myVpcAutoVPCGWEC42CD12\"]}, \"myVpcAutoPublicSubnet2EIPA484FACE\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-role-target-hook/myVpcAuto/PublicSubnet2\"}]}}, \"myVpcAutoPublicSubnet2NATGatewayF670624F\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"myVpcAutoPublicSubnet2Subnet297C7839\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"myVpcAutoPublicSubnet2EIPA484FACE\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-role-target-hook/myVpcAuto/PublicSubnet2\"}]}, \"DependsOn\": [\"myVpcAutoPublicSubnet2DefaultRouteE9454F16\", \"myVpcAutoPublicSubnet2RouteTableAssociationE21B7B6C\"]}, \"myVpcAutoPrivateSubnet1SubnetCF0D49B2\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"myVpcAuto1A4B61E2\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"integ-role-target-hook/myVpcAuto/PrivateSubnet1\"}]}}, \"myVpcAutoPrivateSubnet1RouteTableDC61148B\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"myVpcAuto1A4B61E2\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-role-target-hook/myVpcAuto/PrivateSubnet1\"}]}}, \"myVpcAutoPrivateSubnet1RouteTableAssociation9848EFFB\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"myVpcAutoPrivateSubnet1RouteTableDC61148B\"}, \"SubnetId\": {\"Ref\": \"myVpcAutoPrivateSubnet1SubnetCF0D49B2\"}}}, \"myVpcAutoPrivateSubnet1DefaultRouteF007F5E7\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"myVpcAutoPrivateSubnet1RouteTableDC61148B\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"myVpcAutoPublicSubnet1NATGatewayF3EA78A2\"}}}, \"myVpcAutoPrivateSubnet2Subnet592674AC\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"myVpcAuto1A4B61E2\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"integ-role-target-hook/myVpcAuto/PrivateSubnet2\"}]}}, \"myVpcAutoPrivateSubnet2RouteTableE10F6006\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"myVpcAuto1A4B61E2\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-role-target-hook/myVpcAuto/PrivateSubnet2\"}]}}, \"myVpcAutoPrivateSubnet2RouteTableAssociation05CC4CEB\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"myVpcAutoPrivateSubnet2RouteTableE10F6006\"}, \"SubnetId\": {\"Ref\": \"myVpcAutoPrivateSubnet2Subnet592674AC\"}}}, \"myVpcAutoPrivateSubnet2DefaultRouteDA295DF0\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"myVpcAutoPrivateSubnet2RouteTableE10F6006\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"myVpcAutoPublicSubnet2NATGatewayF670624F\"}}}, \"myVpcAutoIGW08055396\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-role-target-hook/myVpcAuto\"}]}}, \"myVpcAutoVPCGWEC42CD12\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"myVpcAuto1A4B61E2\"}, \"InternetGatewayId\": {\"Ref\": \"myVpcAutoIGW08055396\"}}}, \"MyRoleF48FFE04\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"autoscaling.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"MyRoleDefaultPolicyA36BE1DD\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"sns:Publish\", \"Effect\": \"Allow\", \"Resource\": {\"Ref\": \"topic2A4FB547F\"}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyRoleDefaultPolicyA36BE1DD\", \"Roles\": [{\"Ref\": \"MyRoleF48FFE04\"}]}}, \"topic69831491\": {\"Type\": \"AWS::SNS::Topic\"}, \"topic2A4FB547F\": {\"Type\": \"AWS::SNS::Topic\"}, \"ASGInstanceSecurityGroup0525485D\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"integ-role-target-hook/ASG/InstanceSecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-role-target-hook/ASG\"}], \"VpcId\": {\"Ref\": \"myVpcAuto1A4B61E2\"}}}, \"ASGInstanceRoleE263A41B\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"ec2.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"integ-role-target-hook/ASG\"}]}}, \"ASGInstanceProfile0A2834D7\": {\"Type\": \"AWS::IAM::InstanceProfile\", \"Properties\": {\"Roles\": [{\"Ref\": \"ASGInstanceRoleE263A41B\"}]}}, \"ASGLaunchConfigC00AF12B\": {\"Type\": \"AWS::AutoScaling::LaunchConfiguration\", \"Properties\": {\"ImageId\": {\"Ref\": \"SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter\"}, \"InstanceType\": \"t2.micro\", \"IamInstanceProfile\": {\"Ref\": \"ASGInstanceProfile0A2834D7\"}, \"SecurityGroups\": [{\"Fn::GetAtt\": [\"ASGInstanceSecurityGroup0525485D\", \"GroupId\"]}], \"UserData\": {\"Fn::Base64\": \"#!/bin/bash\"}}, \"DependsOn\": [\"ASGInstanceRoleE263A41B\"]}, \"ASG46ED3070\": {\"Type\": \"AWS::AutoScaling::AutoScalingGroup\", \"Properties\": {\"MaxSize\": \"1\", \"MinSize\": \"1\", \"HealthCheckType\": \"EC2\", \"LaunchConfigurationName\": {\"Ref\": \"ASGLaunchConfigC00AF12B\"}, \"Tags\": [{\"Key\": \"Name\", \"PropagateAtLaunch\": true, \"Value\": \"integ-role-target-hook/ASG\"}], \"VPCZoneIdentifier\": [{\"Ref\": \"myVpcAutoPrivateSubnet1SubnetCF0D49B2\"}, {\"Ref\": \"myVpcAutoPrivateSubnet2Subnet592674AC\"}]}, \"UpdatePolicy\": {\"AutoScalingScheduledAction\": {\"IgnoreUnmodifiedGroupSizeProperties\": true}}}, \"LCHookNoRoleNoTarget1144AD75\": {\"Type\": \"AWS::AutoScaling::LifecycleHook\", \"Properties\": {\"AutoScalingGroupName\": {\"Ref\": \"ASG46ED3070\"}, \"LifecycleTransition\": \"autoscaling:EC2_INSTANCE_TERMINATING\"}}, \"LCHookNoRoleTargetRole35B4344D\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"autoscaling.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}}, \"LCHookNoRoleTargetRoleDefaultPolicyFE681941\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"sns:Publish\", \"Effect\": \"Allow\", \"Resource\": {\"Ref\": \"topic69831491\"}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"LCHookNoRoleTargetRoleDefaultPolicyFE681941\", \"Roles\": [{\"Ref\": \"LCHookNoRoleTargetRole35B4344D\"}]}}, \"LCHookNoRoleTarget4EF682CF\": {\"Type\": \"AWS::AutoScaling::LifecycleHook\", \"Properties\": {\"AutoScalingGroupName\": {\"Ref\": \"ASG46ED3070\"}, \"LifecycleTransition\": \"autoscaling:EC2_INSTANCE_TERMINATING\", \"NotificationTargetARN\": {\"Ref\": \"topic69831491\"}, \"RoleARN\": {\"Fn::GetAtt\": [\"LCHookNoRoleTargetRole35B4344D\", \"Arn\"]}}, \"DependsOn\": [\"LCHookNoRoleTargetRoleDefaultPolicyFE681941\", \"LCHookNoRoleTargetRole35B4344D\"]}, \"LCHookRoleTarget0ADB20B8\": {\"Type\": \"AWS::AutoScaling::LifecycleHook\", \"Properties\": {\"AutoScalingGroupName\": {\"Ref\": \"ASG46ED3070\"}, \"LifecycleTransition\": \"autoscaling:EC2_INSTANCE_TERMINATING\", \"NotificationTargetARN\": {\"Ref\": \"topic2A4FB547F\"}, \"RoleARN\": {\"Fn::GetAtt\": [\"MyRoleF48FFE04\", \"Arn\"]}}, \"DependsOn\": [\"MyRoleDefaultPolicyA36BE1DD\", \"MyRoleF48FFE04\"]}}, \"Parameters\": {\"SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter\": {\"Type\": \"AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>\", \"Default\": \"/aws/service/ami-amazon-linux-latest/amzn-ami-hvm-x86_64-gp2\"}, \"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as iam from 'aws-cdk-lib/aws-iam';\nimport * as sns from 'aws-cdk-lib/aws-sns';\nimport * as cdk from 'aws-cdk-lib';\nimport * as constructs from 'constructs';\nimport * as autoscaling from 'aws-cdk-lib/aws-autoscaling';\n\nexport class FakeNotificationTarget implements autoscaling.ILifecycleHookTarget {\n  constructor(private readonly topic: sns.ITopic) {\n  }\n\n  private createRole(scope: constructs.Construct, _role?: iam.IRole) {\n    let role = _role;\n    if (!role) {\n      role = new iam.Role(scope, 'Role', {\n        assumedBy: new iam.ServicePrincipal('autoscaling.amazonaws.com'),\n      });\n    }\n\n    return role;\n  }\n\n  public bind(_scope: constructs.Construct, options: autoscaling.BindHookTargetOptions): autoscaling.LifecycleHookTargetConfig {\n    const role = this.createRole(options.lifecycleHook, options.role);\n    this.topic.grantPublish(role);\n\n    return {\n      notificationTargetArn: this.topic.topicArn,\n      createdRole: role,\n    };\n  }\n}\n\nexport class TestStack extends cdk.Stack {\n  constructor(scope: cdk.App, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n\n    let vpc = new ec2.Vpc(this, 'myVpcAuto', { restrictDefaultSecurityGroup: false });\n    const myrole = new iam.Role(this, 'MyRole', {\n      assumedBy: new iam.ServicePrincipal('autoscaling.amazonaws.com'),\n    });\n    const topic = new sns.Topic(this, 'topic', {});\n    const topic2 = new sns.Topic(this, 'topic2', {});\n\n    const asg = new autoscaling.AutoScalingGroup(this, 'ASG', {\n      vpc,\n      instanceType: ec2.InstanceType.of(ec2.InstanceClass.BURSTABLE2, ec2.InstanceSize.MICRO),\n      machineImage: new ec2.AmazonLinuxImage(), // get the latest Amazon Linux image\n      healthCheck: autoscaling.HealthCheck.ec2(),\n    });\n\n    // no role or notificationTarget\n    new autoscaling.LifecycleHook(this, 'LCHookNoRoleNoTarget', {\n      autoScalingGroup: asg,\n      lifecycleTransition: autoscaling.LifecycleTransition.INSTANCE_TERMINATING,\n    });\n\n    // no role with notificationTarget\n    new autoscaling.LifecycleHook(this, 'LCHookNoRoleTarget', {\n      notificationTarget: new FakeNotificationTarget(topic),\n      autoScalingGroup: asg,\n      lifecycleTransition: autoscaling.LifecycleTransition.INSTANCE_TERMINATING,\n    });\n\n    // role with target\n    new autoscaling.LifecycleHook(this, 'LCHookRoleTarget', {\n      notificationTarget: new FakeNotificationTarget(topic2),\n      role: myrole,\n      autoScalingGroup: asg,\n      lifecycleTransition: autoscaling.LifecycleTransition.INSTANCE_TERMINATING,\n    });\n  }\n}\n\nconst app = new cdk.App();\n\nnew TestStack(app, 'integ-role-target-hook');\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MainLT4FC09097\": {\"Type\": \"AWS::EC2::LaunchTemplate\", \"Properties\": {\"LaunchTemplateData\": {\"ImageId\": {\"Ref\": \"SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter\"}, \"InstanceType\": \"t3.micro\", \"TagSpecifications\": [{\"ResourceType\": \"instance\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-asg-integ/MainLT\"}]}, {\"ResourceType\": \"volume\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-asg-integ/MainLT\"}]}], \"UserData\": {\"Fn::Base64\": \"#!/bin/bash\"}}, \"TagSpecifications\": [{\"ResourceType\": \"launch-template\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-asg-integ/MainLT\"}]}]}}, \"T4gLT8FF7D308\": {\"Type\": \"AWS::EC2::LaunchTemplate\", \"Properties\": {\"LaunchTemplateData\": {\"ImageId\": {\"Ref\": \"SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmarm64gp2C96584B6F00A464EAD1953AFF4B05118Parameter\"}, \"InstanceType\": \"t4g.micro\", \"TagSpecifications\": [{\"ResourceType\": \"instance\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-asg-integ/T4gLT\"}]}, {\"ResourceType\": \"volume\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-asg-integ/T4gLT\"}]}], \"UserData\": {\"Fn::Base64\": \"#!/bin/bash\"}}, \"TagSpecifications\": [{\"ResourceType\": \"launch-template\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-asg-integ/T4gLT\"}]}]}}, \"VPCB9E5F0B4\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-asg-integ/VPC\"}]}}, \"VPCPublicSubnet1SubnetB4246D30\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-asg-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableFEE4B781\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-asg-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableAssociation0B0896DC\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}}}, \"VPCPublicSubnet1DefaultRoute91CEF279\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet1EIP6AD938E8\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-asg-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1NATGatewayE0556630\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet1EIP6AD938E8\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-asg-integ/VPC/PublicSubnet1\"}]}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\"]}, \"VPCPublicSubnet2Subnet74179F39\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-asg-integ/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTable6F1A15F1\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-asg-integ/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTableAssociation5A808732\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}}}, \"VPCPublicSubnet2DefaultRouteB7481BBA\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet2EIP4947BC00\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-asg-integ/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2NATGateway3C070193\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet2EIP4947BC00\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-asg-integ/VPC/PublicSubnet2\"}]}, \"DependsOn\": [\"VPCPublicSubnet2DefaultRouteB7481BBA\", \"VPCPublicSubnet2RouteTableAssociation5A808732\"]}, \"VPCPrivateSubnet1Subnet8BCA10E0\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-asg-integ/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableBE8A6027\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-asg-integ/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableAssociation347902D1\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}}}, \"VPCPrivateSubnet1DefaultRouteAE1D6490\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet1NATGatewayE0556630\"}}}, \"VPCPrivateSubnet2SubnetCFCDAA7A\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-asg-integ/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTable0A19E10E\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-asg-integ/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTableAssociation0C73D413\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}}}, \"VPCPrivateSubnet2DefaultRouteF4F5CFD2\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet2NATGateway3C070193\"}}}, \"VPCIGWB7E252D3\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-asg-integ/VPC\"}]}}, \"VPCVPCGW99B986DC\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"InternetGatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}}, \"AsgFromLTASG089B7C3A\": {\"Type\": \"AWS::AutoScaling::AutoScalingGroup\", \"Properties\": {\"MaxSize\": \"10\", \"MinSize\": \"0\", \"DesiredCapacity\": \"5\", \"LaunchTemplate\": {\"LaunchTemplateId\": {\"Ref\": \"MainLT4FC09097\"}, \"Version\": {\"Fn::GetAtt\": [\"MainLT4FC09097\", \"LatestVersionNumber\"]}}, \"VPCZoneIdentifier\": [{\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}, {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}]}, \"UpdatePolicy\": {\"AutoScalingScheduledAction\": {\"IgnoreUnmodifiedGroupSizeProperties\": true}}}, \"AsgWithDefaultInstanceWarmupASG7A481C66\": {\"Type\": \"AWS::AutoScaling::AutoScalingGroup\", \"Properties\": {\"MaxSize\": \"1\", \"MinSize\": \"1\", \"DefaultInstanceWarmup\": 5, \"LaunchTemplate\": {\"LaunchTemplateId\": {\"Ref\": \"MainLT4FC09097\"}, \"Version\": {\"Fn::GetAtt\": [\"MainLT4FC09097\", \"LatestVersionNumber\"]}}, \"VPCZoneIdentifier\": [{\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}, {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}]}, \"UpdatePolicy\": {\"AutoScalingScheduledAction\": {\"IgnoreUnmodifiedGroupSizeProperties\": true}}}, \"AsgFromMipASG9EFCE2FC\": {\"Type\": \"AWS::AutoScaling::AutoScalingGroup\", \"Properties\": {\"MaxSize\": \"10\", \"MinSize\": \"0\", \"DesiredCapacity\": \"5\", \"MixedInstancesPolicy\": {\"InstancesDistribution\": {\"OnDemandPercentageAboveBaseCapacity\": 50}, \"LaunchTemplate\": {\"LaunchTemplateSpecification\": {\"LaunchTemplateId\": {\"Ref\": \"MainLT4FC09097\"}, \"Version\": {\"Fn::GetAtt\": [\"MainLT4FC09097\", \"LatestVersionNumber\"]}}, \"Overrides\": [{\"InstanceType\": \"t3.micro\"}, {\"InstanceType\": \"t3a.micro\"}, {\"InstanceType\": \"t4g.micro\", \"LaunchTemplateSpecification\": {\"LaunchTemplateId\": {\"Ref\": \"T4gLT8FF7D308\"}, \"Version\": {\"Fn::GetAtt\": [\"T4gLT8FF7D308\", \"LatestVersionNumber\"]}}}]}}, \"VPCZoneIdentifier\": [{\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}, {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}]}, \"UpdatePolicy\": {\"AutoScalingScheduledAction\": {\"IgnoreUnmodifiedGroupSizeProperties\": true}}}, \"AsgFromMipWithoutDistributionASG4BF292F9\": {\"Type\": \"AWS::AutoScaling::AutoScalingGroup\", \"Properties\": {\"MaxSize\": \"10\", \"MinSize\": \"0\", \"DesiredCapacity\": \"5\", \"MixedInstancesPolicy\": {\"LaunchTemplate\": {\"LaunchTemplateSpecification\": {\"LaunchTemplateId\": {\"Ref\": \"MainLT4FC09097\"}, \"Version\": {\"Fn::GetAtt\": [\"MainLT4FC09097\", \"LatestVersionNumber\"]}}, \"Overrides\": [{\"InstanceType\": \"t3.micro\"}, {\"InstanceType\": \"t3a.micro\"}, {\"InstanceType\": \"t4g.micro\", \"LaunchTemplateSpecification\": {\"LaunchTemplateId\": {\"Ref\": \"T4gLT8FF7D308\"}, \"Version\": {\"Fn::GetAtt\": [\"T4gLT8FF7D308\", \"LatestVersionNumber\"]}}}]}}, \"VPCZoneIdentifier\": [{\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}, {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}]}, \"UpdatePolicy\": {\"AutoScalingScheduledAction\": {\"IgnoreUnmodifiedGroupSizeProperties\": true}}}, \"AsgWithGp3BlockdeviceInstanceSecurityGroup54D76206\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"aws-cdk-asg-integ/AsgWithGp3Blockdevice/InstanceSecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-asg-integ/AsgWithGp3Blockdevice\"}], \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}}, \"AsgWithGp3BlockdeviceInstanceRoleF52FB39B\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"ec2.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-asg-integ/AsgWithGp3Blockdevice\"}]}}, \"AsgWithGp3BlockdeviceInstanceProfile2FC414A5\": {\"Type\": \"AWS::IAM::InstanceProfile\", \"Properties\": {\"Roles\": [{\"Ref\": \"AsgWithGp3BlockdeviceInstanceRoleF52FB39B\"}]}}, \"AsgWithGp3BlockdeviceLaunchConfig24411F5E\": {\"Type\": \"AWS::AutoScaling::LaunchConfiguration\", \"Properties\": {\"ImageId\": {\"Ref\": \"SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter\"}, \"InstanceType\": \"t3.micro\", \"BlockDeviceMappings\": [{\"DeviceName\": \"ebs\", \"Ebs\": {\"DeleteOnTermination\": true, \"Encrypted\": true, \"Throughput\": 125, \"VolumeSize\": 15, \"VolumeType\": \"gp3\"}}], \"IamInstanceProfile\": {\"Ref\": \"AsgWithGp3BlockdeviceInstanceProfile2FC414A5\"}, \"SecurityGroups\": [{\"Fn::GetAtt\": [\"AsgWithGp3BlockdeviceInstanceSecurityGroup54D76206\", \"GroupId\"]}], \"UserData\": {\"Fn::Base64\": \"#!/bin/bash\"}}, \"DependsOn\": [\"AsgWithGp3BlockdeviceInstanceRoleF52FB39B\"]}, \"AsgWithGp3BlockdeviceASGE82AA487\": {\"Type\": \"AWS::AutoScaling::AutoScalingGroup\", \"Properties\": {\"MaxSize\": \"10\", \"MinSize\": \"0\", \"DesiredCapacity\": \"5\", \"LaunchConfigurationName\": {\"Ref\": \"AsgWithGp3BlockdeviceLaunchConfig24411F5E\"}, \"Tags\": [{\"Key\": \"Name\", \"PropagateAtLaunch\": true, \"Value\": \"aws-cdk-asg-integ/AsgWithGp3Blockdevice\"}], \"VPCZoneIdentifier\": [{\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}, {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}]}, \"UpdatePolicy\": {\"AutoScalingScheduledAction\": {\"IgnoreUnmodifiedGroupSizeProperties\": true}}}}, \"Parameters\": {\"SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter\": {\"Type\": \"AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>\", \"Default\": \"/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2\"}, \"SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmarm64gp2C96584B6F00A464EAD1953AFF4B05118Parameter\": {\"Type\": \"AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>\", \"Default\": \"/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-arm64-gp2\"}, \"SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter\": {\"Type\": \"AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>\", \"Default\": \"/aws/service/ami-amazon-linux-latest/amzn-ami-hvm-x86_64-gp2\"}, \"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "#!/usr/bin/env node\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as cdk from 'aws-cdk-lib';\nimport * as autoscaling from 'aws-cdk-lib/aws-autoscaling';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'aws-cdk-asg-integ');\n\nconst lt = new ec2.LaunchTemplate(stack, 'MainLT', {\n  instanceType: new ec2.InstanceType('t3.micro'),\n  machineImage: new ec2.AmazonLinuxImage({\n    generation: ec2.AmazonLinuxGeneration.AMAZON_LINUX_2,\n    cpuType: ec2.AmazonLinuxCpuType.X86_64,\n  }),\n});\n\nconst ltOverrideT4g = new ec2.LaunchTemplate(stack, 'T4gLT', {\n  instanceType: new ec2.InstanceType('t4g.micro'),\n  machineImage: new ec2.AmazonLinuxImage({\n    generation: ec2.AmazonLinuxGeneration.AMAZON_LINUX_2,\n    cpuType: ec2.AmazonLinuxCpuType.ARM_64,\n  }),\n});\n\nconst vpc = new ec2.Vpc(stack, 'VPC', {\n  restrictDefaultSecurityGroup: false,\n  maxAzs: 2,\n});\n\nnew autoscaling.AutoScalingGroup(stack, 'AsgFromLT', {\n  vpc,\n  launchTemplate: lt,\n  minCapacity: 0,\n  maxCapacity: 10,\n  desiredCapacity: 5,\n});\n\nnew autoscaling.AutoScalingGroup(stack, 'AsgWithDefaultInstanceWarmup', {\n  vpc,\n  launchTemplate: lt,\n  defaultInstanceWarmup: cdk.Duration.seconds(5),\n});\n\nnew autoscaling.AutoScalingGroup(stack, 'AsgFromMip', {\n  vpc,\n  mixedInstancesPolicy: {\n    instancesDistribution: {\n      onDemandPercentageAboveBaseCapacity: 50,\n    },\n    launchTemplate: lt,\n    launchTemplateOverrides: [\n      { instanceType: new ec2.InstanceType('t3.micro') },\n      { instanceType: new ec2.InstanceType('t3a.micro') },\n      { instanceType: new ec2.InstanceType('t4g.micro'), launchTemplate: ltOverrideT4g },\n    ],\n  },\n  minCapacity: 0,\n  maxCapacity: 10,\n  desiredCapacity: 5,\n});\n\nnew autoscaling.AutoScalingGroup(stack, 'AsgFromMipWithoutDistribution', {\n  vpc,\n  mixedInstancesPolicy: {\n    launchTemplate: lt,\n    launchTemplateOverrides: [\n      { instanceType: new ec2.InstanceType('t3.micro') },\n      { instanceType: new ec2.InstanceType('t3a.micro') },\n      { instanceType: new ec2.InstanceType('t4g.micro'), launchTemplate: ltOverrideT4g },\n    ],\n  },\n  minCapacity: 0,\n  maxCapacity: 10,\n  desiredCapacity: 5,\n});\n\nnew autoscaling.AutoScalingGroup(stack, 'AsgWithGp3Blockdevice', {\n  minCapacity: 0,\n  maxCapacity: 10,\n  desiredCapacity: 5,\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.T3, ec2.InstanceSize.MICRO),\n  machineImage: new ec2.AmazonLinuxImage(),\n  blockDevices: [{\n    deviceName: 'ebs',\n    mappingEnabled: true,\n    volume: autoscaling.BlockDeviceVolume.ebs(15, {\n      deleteOnTermination: true,\n      encrypted: true,\n      volumeType: autoscaling.EbsDeviceVolumeType.GP3,\n      throughput: 125,\n    }),\n  }],\n  vpc,\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"VPCB9E5F0B4\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC\"}]}}, \"VPCPublicSubnet1SubnetB4246D30\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableFEE4B781\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableAssociation0B0896DC\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}}}, \"VPCPublicSubnet1DefaultRoute91CEF279\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet1EIP6AD938E8\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1NATGatewayE0556630\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet1EIP6AD938E8\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC/PublicSubnet1\"}]}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\"]}, \"VPCPublicSubnet2Subnet74179F39\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTable6F1A15F1\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTableAssociation5A808732\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}}}, \"VPCPublicSubnet2DefaultRouteB7481BBA\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet2EIP4947BC00\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2NATGateway3C070193\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet2EIP4947BC00\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC/PublicSubnet2\"}]}, \"DependsOn\": [\"VPCPublicSubnet2DefaultRouteB7481BBA\", \"VPCPublicSubnet2RouteTableAssociation5A808732\"]}, \"VPCPrivateSubnet1Subnet8BCA10E0\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableBE8A6027\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableAssociation347902D1\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}}}, \"VPCPrivateSubnet1DefaultRouteAE1D6490\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet1NATGatewayE0556630\"}}}, \"VPCPrivateSubnet2SubnetCFCDAA7A\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTable0A19E10E\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTableAssociation0C73D413\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}}}, \"VPCPrivateSubnet2DefaultRouteF4F5CFD2\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet2NATGateway3C070193\"}}}, \"VPCIGWB7E252D3\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC\"}]}}, \"VPCVPCGW99B986DC\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"InternetGatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}}, \"FleetInstanceSecurityGroupA8C3D7AD\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"aws-cdk-autoscaling-integ/Fleet/InstanceSecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/Fleet\"}], \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}}, \"FleetInstanceRoleA605DB82\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"ec2.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/Fleet\"}]}}, \"FleetInstanceProfileC6192A66\": {\"Type\": \"AWS::IAM::InstanceProfile\", \"Properties\": {\"Roles\": [{\"Ref\": \"FleetInstanceRoleA605DB82\"}]}}, \"FleetLaunchConfig59F79D36\": {\"Type\": \"AWS::AutoScaling::LaunchConfiguration\", \"Properties\": {\"ImageId\": {\"Ref\": \"SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter\"}, \"InstanceType\": \"t2.micro\", \"IamInstanceProfile\": {\"Ref\": \"FleetInstanceProfileC6192A66\"}, \"SecurityGroups\": [{\"Fn::GetAtt\": [\"FleetInstanceSecurityGroupA8C3D7AD\", \"GroupId\"]}], \"UserData\": {\"Fn::Base64\": \"#!/bin/bash\"}}, \"DependsOn\": [\"FleetInstanceRoleA605DB82\"]}, \"FleetASG3971DFE5\": {\"Type\": \"AWS::AutoScaling::AutoScalingGroup\", \"Properties\": {\"MaxSize\": \"1\", \"MinSize\": \"1\", \"LaunchConfigurationName\": {\"Ref\": \"FleetLaunchConfig59F79D36\"}, \"Tags\": [{\"Key\": \"Name\", \"PropagateAtLaunch\": true, \"Value\": \"aws-cdk-autoscaling-integ/Fleet\"}], \"VPCZoneIdentifier\": [{\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}, {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}]}, \"UpdatePolicy\": {\"AutoScalingScheduledAction\": {\"IgnoreUnmodifiedGroupSizeProperties\": true}}}, \"FleetScheduledActionScaleUpInTheMorning87C49254\": {\"Type\": \"AWS::AutoScaling::ScheduledAction\", \"Properties\": {\"AutoScalingGroupName\": {\"Ref\": \"FleetASG3971DFE5\"}, \"MinSize\": 5, \"Recurrence\": \"0 8 * * *\"}}, \"FleetScheduledActionScaleDownAtNight11A03803\": {\"Type\": \"AWS::AutoScaling::ScheduledAction\", \"Properties\": {\"AutoScalingGroupName\": {\"Ref\": \"FleetASG3971DFE5\"}, \"MaxSize\": 2, \"Recurrence\": \"0 20 * * *\"}}, \"FleetScalingPolicyKeepCPUReasonable89F05216\": {\"Type\": \"AWS::AutoScaling::ScalingPolicy\", \"Properties\": {\"AutoScalingGroupName\": {\"Ref\": \"FleetASG3971DFE5\"}, \"PolicyType\": \"TargetTrackingScaling\", \"TargetTrackingConfiguration\": {\"PredefinedMetricSpecification\": {\"PredefinedMetricType\": \"ASGAverageCPUUtilization\"}, \"TargetValue\": 50}}}}, \"Parameters\": {\"SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter\": {\"Type\": \"AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>\", \"Default\": \"/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2\"}, \"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "#!/usr/bin/env node\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as cdk from 'aws-cdk-lib';\nimport * as autoscaling from 'aws-cdk-lib/aws-autoscaling';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'aws-cdk-autoscaling-integ');\n\nconst vpc = new ec2.Vpc(stack, 'VPC', {\n  maxAzs: 2,\n  restrictDefaultSecurityGroup: false,\n});\n\nconst asg = new autoscaling.AutoScalingGroup(stack, 'Fleet', {\n  vpc,\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.BURSTABLE2, ec2.InstanceSize.MICRO),\n  machineImage: new ec2.AmazonLinuxImage({ generation: ec2.AmazonLinuxGeneration.AMAZON_LINUX_2 }),\n});\n\nasg.scaleOnSchedule('ScaleUpInTheMorning', {\n  schedule: autoscaling.Schedule.cron({ hour: '8', minute: '0' }),\n  minCapacity: 5,\n});\n\nasg.scaleOnSchedule('ScaleDownAtNight', {\n  schedule: autoscaling.Schedule.cron({ hour: '20', minute: '0' }),\n  maxCapacity: 2,\n});\n\nasg.scaleOnCpuUtilization('KeepCPUReasonable', {\n  targetUtilizationPercent: 50,\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"VPCB9E5F0B4\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC\"}]}}, \"VPCPublicSubnet1SubnetB4246D30\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableFEE4B781\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1RouteTableAssociation0B0896DC\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}}}, \"VPCPublicSubnet1DefaultRoute91CEF279\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet1EIP6AD938E8\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC/PublicSubnet1\"}]}}, \"VPCPublicSubnet1NATGatewayE0556630\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet1EIP6AD938E8\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC/PublicSubnet1\"}]}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\"]}, \"VPCPublicSubnet2Subnet74179F39\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTable6F1A15F1\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2RouteTableAssociation5A808732\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}}}, \"VPCPublicSubnet2DefaultRouteB7481BBA\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"]}, \"VPCPublicSubnet2EIP4947BC00\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC/PublicSubnet2\"}]}}, \"VPCPublicSubnet2NATGateway3C070193\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet2EIP4947BC00\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC/PublicSubnet2\"}]}, \"DependsOn\": [\"VPCPublicSubnet2DefaultRouteB7481BBA\", \"VPCPublicSubnet2RouteTableAssociation5A808732\"]}, \"VPCPrivateSubnet1Subnet8BCA10E0\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableBE8A6027\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC/PrivateSubnet1\"}]}}, \"VPCPrivateSubnet1RouteTableAssociation347902D1\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}}}, \"VPCPrivateSubnet1DefaultRouteAE1D6490\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet1NATGatewayE0556630\"}}}, \"VPCPrivateSubnet2SubnetCFCDAA7A\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTable0A19E10E\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC/PrivateSubnet2\"}]}}, \"VPCPrivateSubnet2RouteTableAssociation0C73D413\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}}}, \"VPCPrivateSubnet2DefaultRouteF4F5CFD2\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet2NATGateway3C070193\"}}}, \"VPCIGWB7E252D3\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/VPC\"}]}}, \"VPCVPCGW99B986DC\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"InternetGatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}}, \"FleetInstanceSecurityGroupA8C3D7AD\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"aws-cdk-autoscaling-integ/Fleet/InstanceSecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/Fleet\"}], \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}}, \"FleetInstanceRoleA605DB82\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"ec2.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-cdk-autoscaling-integ/Fleet\"}]}}, \"FleetInstanceProfileC6192A66\": {\"Type\": \"AWS::IAM::InstanceProfile\", \"Properties\": {\"Roles\": [{\"Ref\": \"FleetInstanceRoleA605DB82\"}]}}, \"FleetLaunchConfig59F79D36\": {\"Type\": \"AWS::AutoScaling::LaunchConfiguration\", \"Properties\": {\"ImageId\": {\"Ref\": \"SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter\"}, \"InstanceType\": \"t2.micro\", \"IamInstanceProfile\": {\"Ref\": \"FleetInstanceProfileC6192A66\"}, \"SecurityGroups\": [{\"Fn::GetAtt\": [\"FleetInstanceSecurityGroupA8C3D7AD\", \"GroupId\"]}], \"UserData\": {\"Fn::Base64\": \"#!/bin/bash\"}}, \"DependsOn\": [\"FleetInstanceRoleA605DB82\"]}, \"FleetASG3971DFE5\": {\"Type\": \"AWS::AutoScaling::AutoScalingGroup\", \"Properties\": {\"MaxSize\": \"1\", \"MinSize\": \"1\", \"LaunchConfigurationName\": {\"Ref\": \"FleetLaunchConfig59F79D36\"}, \"MaxInstanceLifetime\": 604800, \"Tags\": [{\"Key\": \"Name\", \"PropagateAtLaunch\": true, \"Value\": \"aws-cdk-autoscaling-integ/Fleet\"}], \"VPCZoneIdentifier\": [{\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}, {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}]}, \"UpdatePolicy\": {\"AutoScalingScheduledAction\": {\"IgnoreUnmodifiedGroupSizeProperties\": true}}}}, \"Parameters\": {\"SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter\": {\"Type\": \"AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>\", \"Default\": \"/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2\"}, \"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "#!/usr/bin/env node\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as cdk from 'aws-cdk-lib';\nimport * as autoscaling from 'aws-cdk-lib/aws-autoscaling';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'aws-cdk-autoscaling-integ');\n\nconst vpc = new ec2.Vpc(stack, 'VPC', {\n  maxAzs: 2,\n  restrictDefaultSecurityGroup: false,\n});\n\nnew autoscaling.AutoScalingGroup(stack, 'Fleet', {\n  vpc,\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.BURSTABLE2, ec2.InstanceSize.MICRO),\n  machineImage: new ec2.AmazonLinuxImage({ generation: ec2.AmazonLinuxGeneration.AMAZON_LINUX_2 }),\n  maxInstanceLifetime: cdk.Duration.days(7),\n});\n\napp.synth();\n"}
