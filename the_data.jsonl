{ "prompt": "{\"Resources\": {\"testapp\": {\"Type\": \"AWS::Amplify::App\", \"Properties\": {\"Name\": \"your-amplify-console-app-name\", \"OauthToken\": \"<your-gitHub-oauth-token>\", \"Repository\": \"https://github.com/<the-rest-of-the-repository-url>\"}, \"Metadata\": {\"aws:cdk:path\": \"AmplifyConsoleApp/test-app\"}}, \"MasterBranch\": {\"Type\": \"AWS::Amplify::Branch\", \"Properties\": {\"AppId\": {\"Fn::GetAtt\": [\"testapp\", \"AppId\"]}, \"BranchName\": \"master\"}, \"Metadata\": {\"aws:cdk:path\": \"AmplifyConsoleApp/MasterBranch\"}}, \"CDKMetadata\": {\"Type\": \"AWS::CDK::Metadata\", \"Properties\": {\"Analytics\": \"v2:deflate64:H4sIAAAAAAAA/yWMSw6DIBQAz+IenpVN2ao3sAdoKGB8fh4EsE1juLsYVzOZxQiQT3hU6he5Ngtf8QPHKym9sJLeavMrjn84+pFa71lBFxTpKV862Oj2oO3lvSODCR1lRs5YmGP9bSSI8p4jIg87JdwsDDdPWe6goXcAAAA=\"}, \"Metadata\": {\"aws:cdk:path\": \"AmplifyConsoleApp/CDKMetadata/Default\"}, \"Condition\": \"CDKMetadataAvailable\"}}, \"Conditions\": {\"CDKMetadataAvailable\": {\"Fn::Or\": [{\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"af-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ca-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-northwest-1\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-3\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"me-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"sa-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-2\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-2\"]}]}]}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import cdk = require('aws-cdk-lib');\nimport { CfnApp, CfnBranch } from 'aws-cdk-lib/aws-amplify';\nimport { Construct } from 'constructs';\n\nexport class AmplifyConsoleAppCdkStack extends cdk.Stack {\n  constructor(scope: Construct, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n\n    const amplifyApp = new CfnApp(this, 'test-app', {\n      name: 'your-amplify-console-app-name',\n      repository: 'https://github.com/<the-rest-of-the-repository-url>',\n      oauthToken: '<your-gitHub-oauth-token>'\n    });\n\n    new CfnBranch(this, 'MasterBranch', {\n      appId: amplifyApp.attrAppId,\n      branchName: 'master' // you can put any branch here (careful, it will listen to changes on this branch)\n    });\n  }\n}\n\nconst app = new cdk.App();\nnew AmplifyConsoleAppCdkStack(app, 'AmplifyConsoleApp');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"items07D08F4B\": {\"Type\": \"AWS::DynamoDB::Table\", \"Properties\": {\"KeySchema\": [{\"AttributeName\": \"itemId\", \"KeyType\": \"HASH\"}], \"AttributeDefinitions\": [{\"AttributeName\": \"itemId\", \"AttributeType\": \"S\"}], \"ProvisionedThroughput\": {\"ReadCapacityUnits\": 5, \"WriteCapacityUnits\": 5}, \"TableName\": \"items\"}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\", \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/items/Resource\"}}, \"getOneItemFunctionServiceRoleCFD54796\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/getOneItemFunction/ServiceRole/Resource\"}}, \"getOneItemFunctionServiceRoleDefaultPolicy6B743AA8\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"dynamodb:BatchGetItem\", \"dynamodb:GetRecords\", \"dynamodb:GetShardIterator\", \"dynamodb:Query\", \"dynamodb:GetItem\", \"dynamodb:Scan\", \"dynamodb:ConditionCheckItem\", \"dynamodb:BatchWriteItem\", \"dynamodb:PutItem\", \"dynamodb:UpdateItem\", \"dynamodb:DeleteItem\", \"dynamodb:DescribeTable\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"items07D08F4B\", \"Arn\"]}, {\"Ref\": \"AWS::NoValue\"}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"getOneItemFunctionServiceRoleDefaultPolicy6B743AA8\", \"Roles\": [{\"Ref\": \"getOneItemFunctionServiceRoleCFD54796\"}]}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/getOneItemFunction/ServiceRole/DefaultPolicy/Resource\"}}, \"getOneItemFunctionE3257B22\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"f306e46d63e74e566462d9ae03f3f272fe9cbefa3f43560bc9324aaa16b8d50a.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"getOneItemFunctionServiceRoleCFD54796\", \"Arn\"]}, \"Environment\": {\"Variables\": {\"PRIMARY_KEY\": \"itemId\", \"TABLE_NAME\": {\"Ref\": \"items07D08F4B\"}, \"AWS_NODEJS_CONNECTION_REUSE_ENABLED\": \"1\"}}, \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"getOneItemFunctionServiceRoleDefaultPolicy6B743AA8\", \"getOneItemFunctionServiceRoleCFD54796\"], \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/getOneItemFunction/Resource\", \"aws:asset:path\": \"asset.f306e46d63e74e566462d9ae03f3f272fe9cbefa3f43560bc9324aaa16b8d50a\", \"aws:asset:is-bundled\": true, \"aws:asset:property\": \"Code\"}}, \"getAllItemsFunctionServiceRoleCC084440\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/getAllItemsFunction/ServiceRole/Resource\"}}, \"getAllItemsFunctionServiceRoleDefaultPolicyF069C759\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"dynamodb:BatchGetItem\", \"dynamodb:GetRecords\", \"dynamodb:GetShardIterator\", \"dynamodb:Query\", \"dynamodb:GetItem\", \"dynamodb:Scan\", \"dynamodb:ConditionCheckItem\", \"dynamodb:BatchWriteItem\", \"dynamodb:PutItem\", \"dynamodb:UpdateItem\", \"dynamodb:DeleteItem\", \"dynamodb:DescribeTable\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"items07D08F4B\", \"Arn\"]}, {\"Ref\": \"AWS::NoValue\"}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"getAllItemsFunctionServiceRoleDefaultPolicyF069C759\", \"Roles\": [{\"Ref\": \"getAllItemsFunctionServiceRoleCC084440\"}]}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/getAllItemsFunction/ServiceRole/DefaultPolicy/Resource\"}}, \"getAllItemsFunction0B7A913E\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"bdb83feec283e88f139462170cbec0c71751da0e02c70480fee0497e4aa076b3.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"getAllItemsFunctionServiceRoleCC084440\", \"Arn\"]}, \"Environment\": {\"Variables\": {\"PRIMARY_KEY\": \"itemId\", \"TABLE_NAME\": {\"Ref\": \"items07D08F4B\"}, \"AWS_NODEJS_CONNECTION_REUSE_ENABLED\": \"1\"}}, \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"getAllItemsFunctionServiceRoleDefaultPolicyF069C759\", \"getAllItemsFunctionServiceRoleCC084440\"], \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/getAllItemsFunction/Resource\", \"aws:asset:path\": \"asset.bdb83feec283e88f139462170cbec0c71751da0e02c70480fee0497e4aa076b3\", \"aws:asset:is-bundled\": true, \"aws:asset:property\": \"Code\"}}, \"createItemFunctionServiceRole1BBF2178\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/createItemFunction/ServiceRole/Resource\"}}, \"createItemFunctionServiceRoleDefaultPolicy8FAF1611\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"dynamodb:BatchGetItem\", \"dynamodb:GetRecords\", \"dynamodb:GetShardIterator\", \"dynamodb:Query\", \"dynamodb:GetItem\", \"dynamodb:Scan\", \"dynamodb:ConditionCheckItem\", \"dynamodb:BatchWriteItem\", \"dynamodb:PutItem\", \"dynamodb:UpdateItem\", \"dynamodb:DeleteItem\", \"dynamodb:DescribeTable\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"items07D08F4B\", \"Arn\"]}, {\"Ref\": \"AWS::NoValue\"}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"createItemFunctionServiceRoleDefaultPolicy8FAF1611\", \"Roles\": [{\"Ref\": \"createItemFunctionServiceRole1BBF2178\"}]}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/createItemFunction/ServiceRole/DefaultPolicy/Resource\"}}, \"createItemFunction8D47E48A\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"b490f51ae61d99f0e7295a6e7c206ec5fd8ed76752588c0c5c06fc2d2c289bf0.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"createItemFunctionServiceRole1BBF2178\", \"Arn\"]}, \"Environment\": {\"Variables\": {\"PRIMARY_KEY\": \"itemId\", \"TABLE_NAME\": {\"Ref\": \"items07D08F4B\"}, \"AWS_NODEJS_CONNECTION_REUSE_ENABLED\": \"1\"}}, \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"createItemFunctionServiceRoleDefaultPolicy8FAF1611\", \"createItemFunctionServiceRole1BBF2178\"], \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/createItemFunction/Resource\", \"aws:asset:path\": \"asset.b490f51ae61d99f0e7295a6e7c206ec5fd8ed76752588c0c5c06fc2d2c289bf0\", \"aws:asset:is-bundled\": true, \"aws:asset:property\": \"Code\"}}, \"updateItemFunctionServiceRole40035396\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/updateItemFunction/ServiceRole/Resource\"}}, \"updateItemFunctionServiceRoleDefaultPolicy6A793729\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"dynamodb:BatchGetItem\", \"dynamodb:GetRecords\", \"dynamodb:GetShardIterator\", \"dynamodb:Query\", \"dynamodb:GetItem\", \"dynamodb:Scan\", \"dynamodb:ConditionCheckItem\", \"dynamodb:BatchWriteItem\", \"dynamodb:PutItem\", \"dynamodb:UpdateItem\", \"dynamodb:DeleteItem\", \"dynamodb:DescribeTable\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"items07D08F4B\", \"Arn\"]}, {\"Ref\": \"AWS::NoValue\"}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"updateItemFunctionServiceRoleDefaultPolicy6A793729\", \"Roles\": [{\"Ref\": \"updateItemFunctionServiceRole40035396\"}]}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/updateItemFunction/ServiceRole/DefaultPolicy/Resource\"}}, \"updateItemFunction59415205\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"68b5bea6784e91f3991c78953c3d18325d296d971284fad2a282e712f9a1867b.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"updateItemFunctionServiceRole40035396\", \"Arn\"]}, \"Environment\": {\"Variables\": {\"PRIMARY_KEY\": \"itemId\", \"TABLE_NAME\": {\"Ref\": \"items07D08F4B\"}, \"AWS_NODEJS_CONNECTION_REUSE_ENABLED\": \"1\"}}, \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"updateItemFunctionServiceRoleDefaultPolicy6A793729\", \"updateItemFunctionServiceRole40035396\"], \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/updateItemFunction/Resource\", \"aws:asset:path\": \"asset.68b5bea6784e91f3991c78953c3d18325d296d971284fad2a282e712f9a1867b\", \"aws:asset:is-bundled\": true, \"aws:asset:property\": \"Code\"}}, \"deleteItemFunctionServiceRole5C201FCC\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/deleteItemFunction/ServiceRole/Resource\"}}, \"deleteItemFunctionServiceRoleDefaultPolicyDCE46F14\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"dynamodb:BatchGetItem\", \"dynamodb:GetRecords\", \"dynamodb:GetShardIterator\", \"dynamodb:Query\", \"dynamodb:GetItem\", \"dynamodb:Scan\", \"dynamodb:ConditionCheckItem\", \"dynamodb:BatchWriteItem\", \"dynamodb:PutItem\", \"dynamodb:UpdateItem\", \"dynamodb:DeleteItem\", \"dynamodb:DescribeTable\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"items07D08F4B\", \"Arn\"]}, {\"Ref\": \"AWS::NoValue\"}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"deleteItemFunctionServiceRoleDefaultPolicyDCE46F14\", \"Roles\": [{\"Ref\": \"deleteItemFunctionServiceRole5C201FCC\"}]}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/deleteItemFunction/ServiceRole/DefaultPolicy/Resource\"}}, \"deleteItemFunction2918B1B0\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"d56eb17a2c05c570bf5878bad90dbe1fa174e21c70c13d5763d149ce36405410.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"deleteItemFunctionServiceRole5C201FCC\", \"Arn\"]}, \"Environment\": {\"Variables\": {\"PRIMARY_KEY\": \"itemId\", \"TABLE_NAME\": {\"Ref\": \"items07D08F4B\"}, \"AWS_NODEJS_CONNECTION_REUSE_ENABLED\": \"1\"}}, \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"deleteItemFunctionServiceRoleDefaultPolicyDCE46F14\", \"deleteItemFunctionServiceRole5C201FCC\"], \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/deleteItemFunction/Resource\", \"aws:asset:path\": \"asset.d56eb17a2c05c570bf5878bad90dbe1fa174e21c70c13d5763d149ce36405410\", \"aws:asset:is-bundled\": true, \"aws:asset:property\": \"Code\"}}, \"itemsApi28111E1C\": {\"Type\": \"AWS::ApiGateway::RestApi\", \"Properties\": {\"Name\": \"Items Service\"}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/itemsApi/Resource\"}}, \"itemsApiCloudWatchRoleB5C7B431\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"apigateway.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs\"]]}]}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\", \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/itemsApi/CloudWatchRole/Resource\"}}, \"itemsApiAccount591BF3E1\": {\"Type\": \"AWS::ApiGateway::Account\", \"Properties\": {\"CloudWatchRoleArn\": {\"Fn::GetAtt\": [\"itemsApiCloudWatchRoleB5C7B431\", \"Arn\"]}}, \"DependsOn\": [\"itemsApi28111E1C\"], \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\", \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/itemsApi/Account\"}}, \"itemsApiDeploymentFEC31BD04feb54db86e2f8eed94e1b28001143ce\": {\"Type\": \"AWS::ApiGateway::Deployment\", \"Properties\": {\"RestApiId\": {\"Ref\": \"itemsApi28111E1C\"}, \"Description\": \"Automatically created by the RestApi construct\"}, \"DependsOn\": [\"itemsApiitemsidDELETE21550005\", \"itemsApiitemsidGET38A333A8\", \"itemsApiitemsidOPTIONS62BD91D0\", \"itemsApiitemsidPATCH0548CB6A\", \"itemsApiitemsidA29927C2\", \"itemsApiitemsGET59B0F78A\", \"itemsApiitemsOPTIONSB46B4D53\", \"itemsApiitemsPOSTDD3E83D0\", \"itemsApiitems9015DBED\"], \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/itemsApi/Deployment/Resource\"}}, \"itemsApiDeploymentStageprodE77B897D\": {\"Type\": \"AWS::ApiGateway::Stage\", \"Properties\": {\"RestApiId\": {\"Ref\": \"itemsApi28111E1C\"}, \"DeploymentId\": {\"Ref\": \"itemsApiDeploymentFEC31BD04feb54db86e2f8eed94e1b28001143ce\"}, \"StageName\": \"prod\"}, \"DependsOn\": [\"itemsApiAccount591BF3E1\"], \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/itemsApi/DeploymentStage.prod/Resource\"}}, \"itemsApiitems9015DBED\": {\"Type\": \"AWS::ApiGateway::Resource\", \"Properties\": {\"ParentId\": {\"Fn::GetAtt\": [\"itemsApi28111E1C\", \"RootResourceId\"]}, \"PathPart\": \"items\", \"RestApiId\": {\"Ref\": \"itemsApi28111E1C\"}}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/Resource\"}}, \"itemsApiitemsGETApiPermissionApiLambdaCrudDynamoDBExampleitemsApiC8514132GETitems2A648972\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"getAllItemsFunction0B7A913E\", \"Arn\"]}, \"Principal\": \"apigateway.amazonaws.com\", \"SourceArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":execute-api:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":\", {\"Ref\": \"itemsApi28111E1C\"}, \"/\", {\"Ref\": \"itemsApiDeploymentStageprodE77B897D\"}, \"/GET/items\"]]}}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/GET/ApiPermission.ApiLambdaCrudDynamoDBExampleitemsApiC8514132.GET..items\"}}, \"itemsApiitemsGETApiPermissionTestApiLambdaCrudDynamoDBExampleitemsApiC8514132GETitemsF4364FB2\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"getAllItemsFunction0B7A913E\", \"Arn\"]}, \"Principal\": \"apigateway.amazonaws.com\", \"SourceArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":execute-api:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":\", {\"Ref\": \"itemsApi28111E1C\"}, \"/test-invoke-stage/GET/items\"]]}}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/GET/ApiPermission.Test.ApiLambdaCrudDynamoDBExampleitemsApiC8514132.GET..items\"}}, \"itemsApiitemsGET59B0F78A\": {\"Type\": \"AWS::ApiGateway::Method\", \"Properties\": {\"HttpMethod\": \"GET\", \"ResourceId\": {\"Ref\": \"itemsApiitems9015DBED\"}, \"RestApiId\": {\"Ref\": \"itemsApi28111E1C\"}, \"AuthorizationType\": \"NONE\", \"Integration\": {\"IntegrationHttpMethod\": \"POST\", \"Type\": \"AWS_PROXY\", \"Uri\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":apigateway:\", {\"Ref\": \"AWS::Region\"}, \":lambda:path/2015-03-31/functions/\", {\"Fn::GetAtt\": [\"getAllItemsFunction0B7A913E\", \"Arn\"]}, \"/invocations\"]]}}}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/GET/Resource\"}}, \"itemsApiitemsPOSTApiPermissionApiLambdaCrudDynamoDBExampleitemsApiC8514132POSTitems7DA2B753\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"createItemFunction8D47E48A\", \"Arn\"]}, \"Principal\": \"apigateway.amazonaws.com\", \"SourceArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":execute-api:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":\", {\"Ref\": \"itemsApi28111E1C\"}, \"/\", {\"Ref\": \"itemsApiDeploymentStageprodE77B897D\"}, \"/POST/items\"]]}}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/POST/ApiPermission.ApiLambdaCrudDynamoDBExampleitemsApiC8514132.POST..items\"}}, \"itemsApiitemsPOSTApiPermissionTestApiLambdaCrudDynamoDBExampleitemsApiC8514132POSTitemsAE25CBB6\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"createItemFunction8D47E48A\", \"Arn\"]}, \"Principal\": \"apigateway.amazonaws.com\", \"SourceArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":execute-api:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":\", {\"Ref\": \"itemsApi28111E1C\"}, \"/test-invoke-stage/POST/items\"]]}}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/POST/ApiPermission.Test.ApiLambdaCrudDynamoDBExampleitemsApiC8514132.POST..items\"}}, \"itemsApiitemsPOSTDD3E83D0\": {\"Type\": \"AWS::ApiGateway::Method\", \"Properties\": {\"HttpMethod\": \"POST\", \"ResourceId\": {\"Ref\": \"itemsApiitems9015DBED\"}, \"RestApiId\": {\"Ref\": \"itemsApi28111E1C\"}, \"AuthorizationType\": \"NONE\", \"Integration\": {\"IntegrationHttpMethod\": \"POST\", \"Type\": \"AWS_PROXY\", \"Uri\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":apigateway:\", {\"Ref\": \"AWS::Region\"}, \":lambda:path/2015-03-31/functions/\", {\"Fn::GetAtt\": [\"createItemFunction8D47E48A\", \"Arn\"]}, \"/invocations\"]]}}}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/POST/Resource\"}}, \"itemsApiitemsOPTIONSB46B4D53\": {\"Type\": \"AWS::ApiGateway::Method\", \"Properties\": {\"HttpMethod\": \"OPTIONS\", \"ResourceId\": {\"Ref\": \"itemsApiitems9015DBED\"}, \"RestApiId\": {\"Ref\": \"itemsApi28111E1C\"}, \"AuthorizationType\": \"NONE\", \"Integration\": {\"IntegrationResponses\": [{\"ResponseParameters\": {\"method.response.header.Access-Control-Allow-Headers\": \"'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'\", \"method.response.header.Access-Control-Allow-Origin\": \"'*'\", \"method.response.header.Access-Control-Allow-Credentials\": \"'false'\", \"method.response.header.Access-Control-Allow-Methods\": \"'OPTIONS,GET,PUT,POST,DELETE'\"}, \"StatusCode\": \"200\"}], \"PassthroughBehavior\": \"NEVER\", \"RequestTemplates\": {\"application/json\": \"{\\\"statusCode\\\": 200}\"}, \"Type\": \"MOCK\"}, \"MethodResponses\": [{\"ResponseParameters\": {\"method.response.header.Access-Control-Allow-Headers\": true, \"method.response.header.Access-Control-Allow-Methods\": true, \"method.response.header.Access-Control-Allow-Credentials\": true, \"method.response.header.Access-Control-Allow-Origin\": true}, \"StatusCode\": \"200\"}]}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/OPTIONS/Resource\"}}, \"itemsApiitemsidA29927C2\": {\"Type\": \"AWS::ApiGateway::Resource\", \"Properties\": {\"ParentId\": {\"Ref\": \"itemsApiitems9015DBED\"}, \"PathPart\": \"{id}\", \"RestApiId\": {\"Ref\": \"itemsApi28111E1C\"}}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/{id}/Resource\"}}, \"itemsApiitemsidGETApiPermissionApiLambdaCrudDynamoDBExampleitemsApiC8514132GETitemsid6D54AF22\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"getOneItemFunctionE3257B22\", \"Arn\"]}, \"Principal\": \"apigateway.amazonaws.com\", \"SourceArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":execute-api:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":\", {\"Ref\": \"itemsApi28111E1C\"}, \"/\", {\"Ref\": \"itemsApiDeploymentStageprodE77B897D\"}, \"/GET/items/*\"]]}}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/{id}/GET/ApiPermission.ApiLambdaCrudDynamoDBExampleitemsApiC8514132.GET..items.{id}\"}}, \"itemsApiitemsidGETApiPermissionTestApiLambdaCrudDynamoDBExampleitemsApiC8514132GETitemsidCA08693A\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"getOneItemFunctionE3257B22\", \"Arn\"]}, \"Principal\": \"apigateway.amazonaws.com\", \"SourceArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":execute-api:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":\", {\"Ref\": \"itemsApi28111E1C\"}, \"/test-invoke-stage/GET/items/*\"]]}}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/{id}/GET/ApiPermission.Test.ApiLambdaCrudDynamoDBExampleitemsApiC8514132.GET..items.{id}\"}}, \"itemsApiitemsidGET38A333A8\": {\"Type\": \"AWS::ApiGateway::Method\", \"Properties\": {\"HttpMethod\": \"GET\", \"ResourceId\": {\"Ref\": \"itemsApiitemsidA29927C2\"}, \"RestApiId\": {\"Ref\": \"itemsApi28111E1C\"}, \"AuthorizationType\": \"NONE\", \"Integration\": {\"IntegrationHttpMethod\": \"POST\", \"Type\": \"AWS_PROXY\", \"Uri\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":apigateway:\", {\"Ref\": \"AWS::Region\"}, \":lambda:path/2015-03-31/functions/\", {\"Fn::GetAtt\": [\"getOneItemFunctionE3257B22\", \"Arn\"]}, \"/invocations\"]]}}}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/{id}/GET/Resource\"}}, \"itemsApiitemsidPATCHApiPermissionApiLambdaCrudDynamoDBExampleitemsApiC8514132PATCHitemsidEE9531C0\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"updateItemFunction59415205\", \"Arn\"]}, \"Principal\": \"apigateway.amazonaws.com\", \"SourceArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":execute-api:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":\", {\"Ref\": \"itemsApi28111E1C\"}, \"/\", {\"Ref\": \"itemsApiDeploymentStageprodE77B897D\"}, \"/PATCH/items/*\"]]}}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/{id}/PATCH/ApiPermission.ApiLambdaCrudDynamoDBExampleitemsApiC8514132.PATCH..items.{id}\"}}, \"itemsApiitemsidPATCHApiPermissionTestApiLambdaCrudDynamoDBExampleitemsApiC8514132PATCHitemsid513A5711\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"updateItemFunction59415205\", \"Arn\"]}, \"Principal\": \"apigateway.amazonaws.com\", \"SourceArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":execute-api:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":\", {\"Ref\": \"itemsApi28111E1C\"}, \"/test-invoke-stage/PATCH/items/*\"]]}}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/{id}/PATCH/ApiPermission.Test.ApiLambdaCrudDynamoDBExampleitemsApiC8514132.PATCH..items.{id}\"}}, \"itemsApiitemsidPATCH0548CB6A\": {\"Type\": \"AWS::ApiGateway::Method\", \"Properties\": {\"HttpMethod\": \"PATCH\", \"ResourceId\": {\"Ref\": \"itemsApiitemsidA29927C2\"}, \"RestApiId\": {\"Ref\": \"itemsApi28111E1C\"}, \"AuthorizationType\": \"NONE\", \"Integration\": {\"IntegrationHttpMethod\": \"POST\", \"Type\": \"AWS_PROXY\", \"Uri\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":apigateway:\", {\"Ref\": \"AWS::Region\"}, \":lambda:path/2015-03-31/functions/\", {\"Fn::GetAtt\": [\"updateItemFunction59415205\", \"Arn\"]}, \"/invocations\"]]}}}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/{id}/PATCH/Resource\"}}, \"itemsApiitemsidDELETEApiPermissionApiLambdaCrudDynamoDBExampleitemsApiC8514132DELETEitemsid056EB521\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"deleteItemFunction2918B1B0\", \"Arn\"]}, \"Principal\": \"apigateway.amazonaws.com\", \"SourceArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":execute-api:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":\", {\"Ref\": \"itemsApi28111E1C\"}, \"/\", {\"Ref\": \"itemsApiDeploymentStageprodE77B897D\"}, \"/DELETE/items/*\"]]}}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/{id}/DELETE/ApiPermission.ApiLambdaCrudDynamoDBExampleitemsApiC8514132.DELETE..items.{id}\"}}, \"itemsApiitemsidDELETEApiPermissionTestApiLambdaCrudDynamoDBExampleitemsApiC8514132DELETEitemsid4C18D4E2\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"deleteItemFunction2918B1B0\", \"Arn\"]}, \"Principal\": \"apigateway.amazonaws.com\", \"SourceArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":execute-api:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":\", {\"Ref\": \"itemsApi28111E1C\"}, \"/test-invoke-stage/DELETE/items/*\"]]}}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/{id}/DELETE/ApiPermission.Test.ApiLambdaCrudDynamoDBExampleitemsApiC8514132.DELETE..items.{id}\"}}, \"itemsApiitemsidDELETE21550005\": {\"Type\": \"AWS::ApiGateway::Method\", \"Properties\": {\"HttpMethod\": \"DELETE\", \"ResourceId\": {\"Ref\": \"itemsApiitemsidA29927C2\"}, \"RestApiId\": {\"Ref\": \"itemsApi28111E1C\"}, \"AuthorizationType\": \"NONE\", \"Integration\": {\"IntegrationHttpMethod\": \"POST\", \"Type\": \"AWS_PROXY\", \"Uri\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":apigateway:\", {\"Ref\": \"AWS::Region\"}, \":lambda:path/2015-03-31/functions/\", {\"Fn::GetAtt\": [\"deleteItemFunction2918B1B0\", \"Arn\"]}, \"/invocations\"]]}}}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/{id}/DELETE/Resource\"}}, \"itemsApiitemsidOPTIONS62BD91D0\": {\"Type\": \"AWS::ApiGateway::Method\", \"Properties\": {\"HttpMethod\": \"OPTIONS\", \"ResourceId\": {\"Ref\": \"itemsApiitemsidA29927C2\"}, \"RestApiId\": {\"Ref\": \"itemsApi28111E1C\"}, \"AuthorizationType\": \"NONE\", \"Integration\": {\"IntegrationResponses\": [{\"ResponseParameters\": {\"method.response.header.Access-Control-Allow-Headers\": \"'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'\", \"method.response.header.Access-Control-Allow-Origin\": \"'*'\", \"method.response.header.Access-Control-Allow-Credentials\": \"'false'\", \"method.response.header.Access-Control-Allow-Methods\": \"'OPTIONS,GET,PUT,POST,DELETE'\"}, \"StatusCode\": \"200\"}], \"PassthroughBehavior\": \"NEVER\", \"RequestTemplates\": {\"application/json\": \"{\\\"statusCode\\\": 200}\"}, \"Type\": \"MOCK\"}, \"MethodResponses\": [{\"ResponseParameters\": {\"method.response.header.Access-Control-Allow-Headers\": true, \"method.response.header.Access-Control-Allow-Methods\": true, \"method.response.header.Access-Control-Allow-Credentials\": true, \"method.response.header.Access-Control-Allow-Origin\": true}, \"StatusCode\": \"200\"}]}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/{id}/OPTIONS/Resource\"}}, \"CDKMetadata\": {\"Type\": \"AWS::CDK::Metadata\", \"Properties\": {\"Analytics\": \"v2:deflate64:H4sIAAAAAAAA/1VRy1LDMAz8Fu6OgXKg17QMNx5TuGcUWxQlsZ2JbTqZTP4d2S4UTtrd0a4keyO39/LmCk6+UrqvBmrl8hZA9YKlZtGzBeM0i+/QDij2HzaDVQxgWg2NdRo7L59zeYxWBXJWEBi5HFwx5PrqBlJzogWtwt814D0GL+tUmMtdVD2GHXg8x8uFDb+pyYyTIe+ZrQJGOkLAE8w8C32oR8rjLrBWykUbxAOOg5sNMmT1D+NLj3nHAtjq4qQwb/BDzpkFP2H4dDpJBa3rpS+fkYLIHlPHSwxjDP/sjPfOagr5gPR2svPXX7dbueFP6DxRNfHCZFAeSv0G5CEmZaABAAA=\"}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/CDKMetadata/Default\"}, \"Condition\": \"CDKMetadataAvailable\"}}, \"Outputs\": {\"itemsApiEndpoint8392E274\": {\"Value\": {\"Fn::Join\": [\"\", [\"https://\", {\"Ref\": \"itemsApi28111E1C\"}, \".execute-api.\", {\"Ref\": \"AWS::Region\"}, \".\", {\"Ref\": \"AWS::URLSuffix\"}, \"/\", {\"Ref\": \"itemsApiDeploymentStageprodE77B897D\"}, \"/\"]]}}}, \"Conditions\": {\"CDKMetadataAvailable\": {\"Fn::Or\": [{\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"af-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ca-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-northwest-1\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-3\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"me-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"sa-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-2\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-2\"]}]}]}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import { IResource, LambdaIntegration, MockIntegration, PassthroughBehavior, RestApi } from 'aws-cdk-lib/aws-apigateway';\nimport { AttributeType, Table } from 'aws-cdk-lib/aws-dynamodb';\nimport { Runtime } from 'aws-cdk-lib/aws-lambda';\nimport { App, Stack, RemovalPolicy } from 'aws-cdk-lib';\nimport { NodejsFunction, NodejsFunctionProps } from 'aws-cdk-lib/aws-lambda-nodejs';\nimport { join } from 'path'\n\nexport class ApiLambdaCrudDynamoDBStack extends Stack {\n  constructor(app: App, id: string) {\n    super(app, id);\n\n    const dynamoTable = new Table(this, 'items', {\n      partitionKey: {\n        name: 'itemId',\n        type: AttributeType.STRING\n      },\n      tableName: 'items',\n\n      /**\n       *  The default removal policy is RETAIN, which means that cdk destroy will not attempt to delete\n       * the new table, and it will remain in your account until manually deleted. By setting the policy to\n       * DESTROY, cdk destroy will delete the table (even if it has data in it)\n       */\n      removalPolicy: RemovalPolicy.DESTROY, // NOT recommended for production code\n    });\n\n    const nodeJsFunctionProps: NodejsFunctionProps = {\n      bundling: {\n        externalModules: [\n          'aws-sdk', // Use the 'aws-sdk' available in the Lambda runtime\n        ],\n      },\n      depsLockFilePath: join(__dirname, 'lambdas', 'package-lock.json'),\n      environment: {\n        PRIMARY_KEY: 'itemId',\n        TABLE_NAME: dynamoTable.tableName,\n      },\n      runtime: Runtime.NODEJS_14_X,\n    }\n\n    // Create a Lambda function for each of the CRUD operations\n    const getOneLambda = new NodejsFunction(this, 'getOneItemFunction', {\n      entry: join(__dirname, 'lambdas', 'get-one.ts'),\n      ...nodeJsFunctionProps,\n    });\n    const getAllLambda = new NodejsFunction(this, 'getAllItemsFunction', {\n      entry: join(__dirname, 'lambdas', 'get-all.ts'),\n      ...nodeJsFunctionProps,\n    });\n    const createOneLambda = new NodejsFunction(this, 'createItemFunction', {\n      entry: join(__dirname, 'lambdas', 'create.ts'),\n      ...nodeJsFunctionProps,\n    });\n    const updateOneLambda = new NodejsFunction(this, 'updateItemFunction', {\n      entry: join(__dirname, 'lambdas', 'update-one.ts'),\n      ...nodeJsFunctionProps,\n    });\n    const deleteOneLambda = new NodejsFunction(this, 'deleteItemFunction', {\n      entry: join(__dirname, 'lambdas', 'delete-one.ts'),\n      ...nodeJsFunctionProps,\n    });\n\n    // Grant the Lambda function read access to the DynamoDB table\n    dynamoTable.grantReadWriteData(getAllLambda);\n    dynamoTable.grantReadWriteData(getOneLambda);\n    dynamoTable.grantReadWriteData(createOneLambda);\n    dynamoTable.grantReadWriteData(updateOneLambda);\n    dynamoTable.grantReadWriteData(deleteOneLambda);\n\n    // Integrate the Lambda functions with the API Gateway resource\n    const getAllIntegration = new LambdaIntegration(getAllLambda);\n    const createOneIntegration = new LambdaIntegration(createOneLambda);\n    const getOneIntegration = new LambdaIntegration(getOneLambda);\n    const updateOneIntegration = new LambdaIntegration(updateOneLambda);\n    const deleteOneIntegration = new LambdaIntegration(deleteOneLambda);\n\n\n    // Create an API Gateway resource for each of the CRUD operations\n    const api = new RestApi(this, 'itemsApi', {\n      restApiName: 'Items Service'\n      // In case you want to manage binary types, uncomment the following\n      // binaryMediaTypes: [\"*/*\"],\n    });\n\n    const items = api.root.addResource('items');\n    items.addMethod('GET', getAllIntegration);\n    items.addMethod('POST', createOneIntegration);\n    addCorsOptions(items);\n\n    const singleItem = items.addResource('{id}');\n    singleItem.addMethod('GET', getOneIntegration);\n    singleItem.addMethod('PATCH', updateOneIntegration);\n    singleItem.addMethod('DELETE', deleteOneIntegration);\n    addCorsOptions(singleItem);\n  }\n}\n\nexport function addCorsOptions(apiResource: IResource) {\n  apiResource.addMethod('OPTIONS', new MockIntegration({\n    // In case you want to use binary media types, uncomment the following line\n    // contentHandling: ContentHandling.CONVERT_TO_TEXT,\n    integrationResponses: [{\n      statusCode: '200',\n      responseParameters: {\n        'method.response.header.Access-Control-Allow-Headers': \"'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'\",\n        'method.response.header.Access-Control-Allow-Origin': \"'*'\",\n        'method.response.header.Access-Control-Allow-Credentials': \"'false'\",\n        'method.response.header.Access-Control-Allow-Methods': \"'OPTIONS,GET,PUT,POST,DELETE'\",\n      },\n    }],\n    // In case you want to use binary media types, comment out the following line\n    passthroughBehavior: PassthroughBehavior.NEVER,\n    requestTemplates: {\n      \"application/json\": \"{\\\"statusCode\\\": 200}\"\n    },\n  }), {\n    methodResponses: [{\n      statusCode: '200',\n      responseParameters: {\n        'method.response.header.Access-Control-Allow-Headers': true,\n        'method.response.header.Access-Control-Allow-Methods': true,\n        'method.response.header.Access-Control-Allow-Credentials': true,\n        'method.response.header.Access-Control-Allow-Origin': true,\n      },\n    }]\n  })\n}\n\nconst app = new App();\nnew ApiLambdaCrudDynamoDBStack(app, 'ApiLambdaCrudDynamoDBExample');\napp.synth();\n"}
