{ "prompt": "{\"Resources\": {\"testapp\": {\"Type\": \"AWS::Amplify::App\", \"Properties\": {\"Name\": \"your-amplify-console-app-name\", \"OauthToken\": \"<your-gitHub-oauth-token>\", \"Repository\": \"https://github.com/<the-rest-of-the-repository-url>\"}, \"Metadata\": {\"aws:cdk:path\": \"AmplifyConsoleApp/test-app\"}}, \"MasterBranch\": {\"Type\": \"AWS::Amplify::Branch\", \"Properties\": {\"AppId\": {\"Fn::GetAtt\": [\"testapp\", \"AppId\"]}, \"BranchName\": \"master\"}, \"Metadata\": {\"aws:cdk:path\": \"AmplifyConsoleApp/MasterBranch\"}}, \"CDKMetadata\": {\"Type\": \"AWS::CDK::Metadata\", \"Properties\": {\"Analytics\": \"v2:deflate64:H4sIAAAAAAAA/yWMSw6DIBQAz+IenpVN2ao3sAdoKGB8fh4EsE1juLsYVzOZxQiQT3hU6he5Ngtf8QPHKym9sJLeavMrjn84+pFa71lBFxTpKV862Oj2oO3lvSODCR1lRs5YmGP9bSSI8p4jIg87JdwsDDdPWe6goXcAAAA=\"}, \"Metadata\": {\"aws:cdk:path\": \"AmplifyConsoleApp/CDKMetadata/Default\"}, \"Condition\": \"CDKMetadataAvailable\"}}, \"Conditions\": {\"CDKMetadataAvailable\": {\"Fn::Or\": [{\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"af-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ca-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-northwest-1\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-3\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"me-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"sa-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-2\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-2\"]}]}]}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import cdk = require('aws-cdk-lib');\nimport { CfnApp, CfnBranch } from 'aws-cdk-lib/aws-amplify';\nimport { Construct } from 'constructs';\n\nexport class AmplifyConsoleAppCdkStack extends cdk.Stack {\n  constructor(scope: Construct, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n\n    const amplifyApp = new CfnApp(this, 'test-app', {\n      name: 'your-amplify-console-app-name',\n      repository: 'https://github.com/<the-rest-of-the-repository-url>',\n      oauthToken: '<your-gitHub-oauth-token>'\n    });\n\n    new CfnBranch(this, 'MasterBranch', {\n      appId: amplifyApp.attrAppId,\n      branchName: 'master' // you can put any branch here (careful, it will listen to changes on this branch)\n    });\n  }\n}\n\nconst app = new cdk.App();\nnew AmplifyConsoleAppCdkStack(app, 'AmplifyConsoleApp');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"items07D08F4B\": {\"Type\": \"AWS::DynamoDB::Table\", \"Properties\": {\"KeySchema\": [{\"AttributeName\": \"itemId\", \"KeyType\": \"HASH\"}], \"AttributeDefinitions\": [{\"AttributeName\": \"itemId\", \"AttributeType\": \"S\"}], \"ProvisionedThroughput\": {\"ReadCapacityUnits\": 5, \"WriteCapacityUnits\": 5}, \"TableName\": \"items\"}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\", \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/items/Resource\"}}, \"getOneItemFunctionServiceRoleCFD54796\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/getOneItemFunction/ServiceRole/Resource\"}}, \"getOneItemFunctionServiceRoleDefaultPolicy6B743AA8\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"dynamodb:BatchGetItem\", \"dynamodb:GetRecords\", \"dynamodb:GetShardIterator\", \"dynamodb:Query\", \"dynamodb:GetItem\", \"dynamodb:Scan\", \"dynamodb:ConditionCheckItem\", \"dynamodb:BatchWriteItem\", \"dynamodb:PutItem\", \"dynamodb:UpdateItem\", \"dynamodb:DeleteItem\", \"dynamodb:DescribeTable\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"items07D08F4B\", \"Arn\"]}, {\"Ref\": \"AWS::NoValue\"}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"getOneItemFunctionServiceRoleDefaultPolicy6B743AA8\", \"Roles\": [{\"Ref\": \"getOneItemFunctionServiceRoleCFD54796\"}]}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/getOneItemFunction/ServiceRole/DefaultPolicy/Resource\"}}, \"getOneItemFunctionE3257B22\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"f306e46d63e74e566462d9ae03f3f272fe9cbefa3f43560bc9324aaa16b8d50a.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"getOneItemFunctionServiceRoleCFD54796\", \"Arn\"]}, \"Environment\": {\"Variables\": {\"PRIMARY_KEY\": \"itemId\", \"TABLE_NAME\": {\"Ref\": \"items07D08F4B\"}, \"AWS_NODEJS_CONNECTION_REUSE_ENABLED\": \"1\"}}, \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"getOneItemFunctionServiceRoleDefaultPolicy6B743AA8\", \"getOneItemFunctionServiceRoleCFD54796\"], \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/getOneItemFunction/Resource\", \"aws:asset:path\": \"asset.f306e46d63e74e566462d9ae03f3f272fe9cbefa3f43560bc9324aaa16b8d50a\", \"aws:asset:is-bundled\": true, \"aws:asset:property\": \"Code\"}}, \"getAllItemsFunctionServiceRoleCC084440\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/getAllItemsFunction/ServiceRole/Resource\"}}, \"getAllItemsFunctionServiceRoleDefaultPolicyF069C759\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"dynamodb:BatchGetItem\", \"dynamodb:GetRecords\", \"dynamodb:GetShardIterator\", \"dynamodb:Query\", \"dynamodb:GetItem\", \"dynamodb:Scan\", \"dynamodb:ConditionCheckItem\", \"dynamodb:BatchWriteItem\", \"dynamodb:PutItem\", \"dynamodb:UpdateItem\", \"dynamodb:DeleteItem\", \"dynamodb:DescribeTable\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"items07D08F4B\", \"Arn\"]}, {\"Ref\": \"AWS::NoValue\"}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"getAllItemsFunctionServiceRoleDefaultPolicyF069C759\", \"Roles\": [{\"Ref\": \"getAllItemsFunctionServiceRoleCC084440\"}]}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/getAllItemsFunction/ServiceRole/DefaultPolicy/Resource\"}}, \"getAllItemsFunction0B7A913E\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"bdb83feec283e88f139462170cbec0c71751da0e02c70480fee0497e4aa076b3.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"getAllItemsFunctionServiceRoleCC084440\", \"Arn\"]}, \"Environment\": {\"Variables\": {\"PRIMARY_KEY\": \"itemId\", \"TABLE_NAME\": {\"Ref\": \"items07D08F4B\"}, \"AWS_NODEJS_CONNECTION_REUSE_ENABLED\": \"1\"}}, \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"getAllItemsFunctionServiceRoleDefaultPolicyF069C759\", \"getAllItemsFunctionServiceRoleCC084440\"], \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/getAllItemsFunction/Resource\", \"aws:asset:path\": \"asset.bdb83feec283e88f139462170cbec0c71751da0e02c70480fee0497e4aa076b3\", \"aws:asset:is-bundled\": true, \"aws:asset:property\": \"Code\"}}, \"createItemFunctionServiceRole1BBF2178\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/createItemFunction/ServiceRole/Resource\"}}, \"createItemFunctionServiceRoleDefaultPolicy8FAF1611\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"dynamodb:BatchGetItem\", \"dynamodb:GetRecords\", \"dynamodb:GetShardIterator\", \"dynamodb:Query\", \"dynamodb:GetItem\", \"dynamodb:Scan\", \"dynamodb:ConditionCheckItem\", \"dynamodb:BatchWriteItem\", \"dynamodb:PutItem\", \"dynamodb:UpdateItem\", \"dynamodb:DeleteItem\", \"dynamodb:DescribeTable\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"items07D08F4B\", \"Arn\"]}, {\"Ref\": \"AWS::NoValue\"}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"createItemFunctionServiceRoleDefaultPolicy8FAF1611\", \"Roles\": [{\"Ref\": \"createItemFunctionServiceRole1BBF2178\"}]}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/createItemFunction/ServiceRole/DefaultPolicy/Resource\"}}, \"createItemFunction8D47E48A\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"b490f51ae61d99f0e7295a6e7c206ec5fd8ed76752588c0c5c06fc2d2c289bf0.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"createItemFunctionServiceRole1BBF2178\", \"Arn\"]}, \"Environment\": {\"Variables\": {\"PRIMARY_KEY\": \"itemId\", \"TABLE_NAME\": {\"Ref\": \"items07D08F4B\"}, \"AWS_NODEJS_CONNECTION_REUSE_ENABLED\": \"1\"}}, \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"createItemFunctionServiceRoleDefaultPolicy8FAF1611\", \"createItemFunctionServiceRole1BBF2178\"], \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/createItemFunction/Resource\", \"aws:asset:path\": \"asset.b490f51ae61d99f0e7295a6e7c206ec5fd8ed76752588c0c5c06fc2d2c289bf0\", \"aws:asset:is-bundled\": true, \"aws:asset:property\": \"Code\"}}, \"updateItemFunctionServiceRole40035396\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/updateItemFunction/ServiceRole/Resource\"}}, \"updateItemFunctionServiceRoleDefaultPolicy6A793729\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"dynamodb:BatchGetItem\", \"dynamodb:GetRecords\", \"dynamodb:GetShardIterator\", \"dynamodb:Query\", \"dynamodb:GetItem\", \"dynamodb:Scan\", \"dynamodb:ConditionCheckItem\", \"dynamodb:BatchWriteItem\", \"dynamodb:PutItem\", \"dynamodb:UpdateItem\", \"dynamodb:DeleteItem\", \"dynamodb:DescribeTable\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"items07D08F4B\", \"Arn\"]}, {\"Ref\": \"AWS::NoValue\"}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"updateItemFunctionServiceRoleDefaultPolicy6A793729\", \"Roles\": [{\"Ref\": \"updateItemFunctionServiceRole40035396\"}]}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/updateItemFunction/ServiceRole/DefaultPolicy/Resource\"}}, \"updateItemFunction59415205\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"68b5bea6784e91f3991c78953c3d18325d296d971284fad2a282e712f9a1867b.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"updateItemFunctionServiceRole40035396\", \"Arn\"]}, \"Environment\": {\"Variables\": {\"PRIMARY_KEY\": \"itemId\", \"TABLE_NAME\": {\"Ref\": \"items07D08F4B\"}, \"AWS_NODEJS_CONNECTION_REUSE_ENABLED\": \"1\"}}, \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"updateItemFunctionServiceRoleDefaultPolicy6A793729\", \"updateItemFunctionServiceRole40035396\"], \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/updateItemFunction/Resource\", \"aws:asset:path\": \"asset.68b5bea6784e91f3991c78953c3d18325d296d971284fad2a282e712f9a1867b\", \"aws:asset:is-bundled\": true, \"aws:asset:property\": \"Code\"}}, \"deleteItemFunctionServiceRole5C201FCC\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/deleteItemFunction/ServiceRole/Resource\"}}, \"deleteItemFunctionServiceRoleDefaultPolicyDCE46F14\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"dynamodb:BatchGetItem\", \"dynamodb:GetRecords\", \"dynamodb:GetShardIterator\", \"dynamodb:Query\", \"dynamodb:GetItem\", \"dynamodb:Scan\", \"dynamodb:ConditionCheckItem\", \"dynamodb:BatchWriteItem\", \"dynamodb:PutItem\", \"dynamodb:UpdateItem\", \"dynamodb:DeleteItem\", \"dynamodb:DescribeTable\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"items07D08F4B\", \"Arn\"]}, {\"Ref\": \"AWS::NoValue\"}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"deleteItemFunctionServiceRoleDefaultPolicyDCE46F14\", \"Roles\": [{\"Ref\": \"deleteItemFunctionServiceRole5C201FCC\"}]}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/deleteItemFunction/ServiceRole/DefaultPolicy/Resource\"}}, \"deleteItemFunction2918B1B0\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"d56eb17a2c05c570bf5878bad90dbe1fa174e21c70c13d5763d149ce36405410.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"deleteItemFunctionServiceRole5C201FCC\", \"Arn\"]}, \"Environment\": {\"Variables\": {\"PRIMARY_KEY\": \"itemId\", \"TABLE_NAME\": {\"Ref\": \"items07D08F4B\"}, \"AWS_NODEJS_CONNECTION_REUSE_ENABLED\": \"1\"}}, \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\"}, \"DependsOn\": [\"deleteItemFunctionServiceRoleDefaultPolicyDCE46F14\", \"deleteItemFunctionServiceRole5C201FCC\"], \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/deleteItemFunction/Resource\", \"aws:asset:path\": \"asset.d56eb17a2c05c570bf5878bad90dbe1fa174e21c70c13d5763d149ce36405410\", \"aws:asset:is-bundled\": true, \"aws:asset:property\": \"Code\"}}, \"itemsApi28111E1C\": {\"Type\": \"AWS::ApiGateway::RestApi\", \"Properties\": {\"Name\": \"Items Service\"}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/itemsApi/Resource\"}}, \"itemsApiCloudWatchRoleB5C7B431\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"apigateway.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs\"]]}]}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\", \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/itemsApi/CloudWatchRole/Resource\"}}, \"itemsApiAccount591BF3E1\": {\"Type\": \"AWS::ApiGateway::Account\", \"Properties\": {\"CloudWatchRoleArn\": {\"Fn::GetAtt\": [\"itemsApiCloudWatchRoleB5C7B431\", \"Arn\"]}}, \"DependsOn\": [\"itemsApi28111E1C\"], \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\", \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/itemsApi/Account\"}}, \"itemsApiDeploymentFEC31BD04feb54db86e2f8eed94e1b28001143ce\": {\"Type\": \"AWS::ApiGateway::Deployment\", \"Properties\": {\"RestApiId\": {\"Ref\": \"itemsApi28111E1C\"}, \"Description\": \"Automatically created by the RestApi construct\"}, \"DependsOn\": [\"itemsApiitemsidDELETE21550005\", \"itemsApiitemsidGET38A333A8\", \"itemsApiitemsidOPTIONS62BD91D0\", \"itemsApiitemsidPATCH0548CB6A\", \"itemsApiitemsidA29927C2\", \"itemsApiitemsGET59B0F78A\", \"itemsApiitemsOPTIONSB46B4D53\", \"itemsApiitemsPOSTDD3E83D0\", \"itemsApiitems9015DBED\"], \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/itemsApi/Deployment/Resource\"}}, \"itemsApiDeploymentStageprodE77B897D\": {\"Type\": \"AWS::ApiGateway::Stage\", \"Properties\": {\"RestApiId\": {\"Ref\": \"itemsApi28111E1C\"}, \"DeploymentId\": {\"Ref\": \"itemsApiDeploymentFEC31BD04feb54db86e2f8eed94e1b28001143ce\"}, \"StageName\": \"prod\"}, \"DependsOn\": [\"itemsApiAccount591BF3E1\"], \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/itemsApi/DeploymentStage.prod/Resource\"}}, \"itemsApiitems9015DBED\": {\"Type\": \"AWS::ApiGateway::Resource\", \"Properties\": {\"ParentId\": {\"Fn::GetAtt\": [\"itemsApi28111E1C\", \"RootResourceId\"]}, \"PathPart\": \"items\", \"RestApiId\": {\"Ref\": \"itemsApi28111E1C\"}}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/Resource\"}}, \"itemsApiitemsGETApiPermissionApiLambdaCrudDynamoDBExampleitemsApiC8514132GETitems2A648972\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"getAllItemsFunction0B7A913E\", \"Arn\"]}, \"Principal\": \"apigateway.amazonaws.com\", \"SourceArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":execute-api:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":\", {\"Ref\": \"itemsApi28111E1C\"}, \"/\", {\"Ref\": \"itemsApiDeploymentStageprodE77B897D\"}, \"/GET/items\"]]}}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/GET/ApiPermission.ApiLambdaCrudDynamoDBExampleitemsApiC8514132.GET..items\"}}, \"itemsApiitemsGETApiPermissionTestApiLambdaCrudDynamoDBExampleitemsApiC8514132GETitemsF4364FB2\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"getAllItemsFunction0B7A913E\", \"Arn\"]}, \"Principal\": \"apigateway.amazonaws.com\", \"SourceArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":execute-api:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":\", {\"Ref\": \"itemsApi28111E1C\"}, \"/test-invoke-stage/GET/items\"]]}}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/GET/ApiPermission.Test.ApiLambdaCrudDynamoDBExampleitemsApiC8514132.GET..items\"}}, \"itemsApiitemsGET59B0F78A\": {\"Type\": \"AWS::ApiGateway::Method\", \"Properties\": {\"HttpMethod\": \"GET\", \"ResourceId\": {\"Ref\": \"itemsApiitems9015DBED\"}, \"RestApiId\": {\"Ref\": \"itemsApi28111E1C\"}, \"AuthorizationType\": \"NONE\", \"Integration\": {\"IntegrationHttpMethod\": \"POST\", \"Type\": \"AWS_PROXY\", \"Uri\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":apigateway:\", {\"Ref\": \"AWS::Region\"}, \":lambda:path/2015-03-31/functions/\", {\"Fn::GetAtt\": [\"getAllItemsFunction0B7A913E\", \"Arn\"]}, \"/invocations\"]]}}}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/GET/Resource\"}}, \"itemsApiitemsPOSTApiPermissionApiLambdaCrudDynamoDBExampleitemsApiC8514132POSTitems7DA2B753\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"createItemFunction8D47E48A\", \"Arn\"]}, \"Principal\": \"apigateway.amazonaws.com\", \"SourceArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":execute-api:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":\", {\"Ref\": \"itemsApi28111E1C\"}, \"/\", {\"Ref\": \"itemsApiDeploymentStageprodE77B897D\"}, \"/POST/items\"]]}}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/POST/ApiPermission.ApiLambdaCrudDynamoDBExampleitemsApiC8514132.POST..items\"}}, \"itemsApiitemsPOSTApiPermissionTestApiLambdaCrudDynamoDBExampleitemsApiC8514132POSTitemsAE25CBB6\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"createItemFunction8D47E48A\", \"Arn\"]}, \"Principal\": \"apigateway.amazonaws.com\", \"SourceArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":execute-api:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":\", {\"Ref\": \"itemsApi28111E1C\"}, \"/test-invoke-stage/POST/items\"]]}}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/POST/ApiPermission.Test.ApiLambdaCrudDynamoDBExampleitemsApiC8514132.POST..items\"}}, \"itemsApiitemsPOSTDD3E83D0\": {\"Type\": \"AWS::ApiGateway::Method\", \"Properties\": {\"HttpMethod\": \"POST\", \"ResourceId\": {\"Ref\": \"itemsApiitems9015DBED\"}, \"RestApiId\": {\"Ref\": \"itemsApi28111E1C\"}, \"AuthorizationType\": \"NONE\", \"Integration\": {\"IntegrationHttpMethod\": \"POST\", \"Type\": \"AWS_PROXY\", \"Uri\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":apigateway:\", {\"Ref\": \"AWS::Region\"}, \":lambda:path/2015-03-31/functions/\", {\"Fn::GetAtt\": [\"createItemFunction8D47E48A\", \"Arn\"]}, \"/invocations\"]]}}}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/POST/Resource\"}}, \"itemsApiitemsOPTIONSB46B4D53\": {\"Type\": \"AWS::ApiGateway::Method\", \"Properties\": {\"HttpMethod\": \"OPTIONS\", \"ResourceId\": {\"Ref\": \"itemsApiitems9015DBED\"}, \"RestApiId\": {\"Ref\": \"itemsApi28111E1C\"}, \"AuthorizationType\": \"NONE\", \"Integration\": {\"IntegrationResponses\": [{\"ResponseParameters\": {\"method.response.header.Access-Control-Allow-Headers\": \"'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'\", \"method.response.header.Access-Control-Allow-Origin\": \"'*'\", \"method.response.header.Access-Control-Allow-Credentials\": \"'false'\", \"method.response.header.Access-Control-Allow-Methods\": \"'OPTIONS,GET,PUT,POST,DELETE'\"}, \"StatusCode\": \"200\"}], \"PassthroughBehavior\": \"NEVER\", \"RequestTemplates\": {\"application/json\": \"{\\\"statusCode\\\": 200}\"}, \"Type\": \"MOCK\"}, \"MethodResponses\": [{\"ResponseParameters\": {\"method.response.header.Access-Control-Allow-Headers\": true, \"method.response.header.Access-Control-Allow-Methods\": true, \"method.response.header.Access-Control-Allow-Credentials\": true, \"method.response.header.Access-Control-Allow-Origin\": true}, \"StatusCode\": \"200\"}]}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/OPTIONS/Resource\"}}, \"itemsApiitemsidA29927C2\": {\"Type\": \"AWS::ApiGateway::Resource\", \"Properties\": {\"ParentId\": {\"Ref\": \"itemsApiitems9015DBED\"}, \"PathPart\": \"{id}\", \"RestApiId\": {\"Ref\": \"itemsApi28111E1C\"}}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/{id}/Resource\"}}, \"itemsApiitemsidGETApiPermissionApiLambdaCrudDynamoDBExampleitemsApiC8514132GETitemsid6D54AF22\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"getOneItemFunctionE3257B22\", \"Arn\"]}, \"Principal\": \"apigateway.amazonaws.com\", \"SourceArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":execute-api:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":\", {\"Ref\": \"itemsApi28111E1C\"}, \"/\", {\"Ref\": \"itemsApiDeploymentStageprodE77B897D\"}, \"/GET/items/*\"]]}}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/{id}/GET/ApiPermission.ApiLambdaCrudDynamoDBExampleitemsApiC8514132.GET..items.{id}\"}}, \"itemsApiitemsidGETApiPermissionTestApiLambdaCrudDynamoDBExampleitemsApiC8514132GETitemsidCA08693A\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"getOneItemFunctionE3257B22\", \"Arn\"]}, \"Principal\": \"apigateway.amazonaws.com\", \"SourceArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":execute-api:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":\", {\"Ref\": \"itemsApi28111E1C\"}, \"/test-invoke-stage/GET/items/*\"]]}}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/{id}/GET/ApiPermission.Test.ApiLambdaCrudDynamoDBExampleitemsApiC8514132.GET..items.{id}\"}}, \"itemsApiitemsidGET38A333A8\": {\"Type\": \"AWS::ApiGateway::Method\", \"Properties\": {\"HttpMethod\": \"GET\", \"ResourceId\": {\"Ref\": \"itemsApiitemsidA29927C2\"}, \"RestApiId\": {\"Ref\": \"itemsApi28111E1C\"}, \"AuthorizationType\": \"NONE\", \"Integration\": {\"IntegrationHttpMethod\": \"POST\", \"Type\": \"AWS_PROXY\", \"Uri\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":apigateway:\", {\"Ref\": \"AWS::Region\"}, \":lambda:path/2015-03-31/functions/\", {\"Fn::GetAtt\": [\"getOneItemFunctionE3257B22\", \"Arn\"]}, \"/invocations\"]]}}}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/{id}/GET/Resource\"}}, \"itemsApiitemsidPATCHApiPermissionApiLambdaCrudDynamoDBExampleitemsApiC8514132PATCHitemsidEE9531C0\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"updateItemFunction59415205\", \"Arn\"]}, \"Principal\": \"apigateway.amazonaws.com\", \"SourceArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":execute-api:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":\", {\"Ref\": \"itemsApi28111E1C\"}, \"/\", {\"Ref\": \"itemsApiDeploymentStageprodE77B897D\"}, \"/PATCH/items/*\"]]}}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/{id}/PATCH/ApiPermission.ApiLambdaCrudDynamoDBExampleitemsApiC8514132.PATCH..items.{id}\"}}, \"itemsApiitemsidPATCHApiPermissionTestApiLambdaCrudDynamoDBExampleitemsApiC8514132PATCHitemsid513A5711\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"updateItemFunction59415205\", \"Arn\"]}, \"Principal\": \"apigateway.amazonaws.com\", \"SourceArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":execute-api:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":\", {\"Ref\": \"itemsApi28111E1C\"}, \"/test-invoke-stage/PATCH/items/*\"]]}}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/{id}/PATCH/ApiPermission.Test.ApiLambdaCrudDynamoDBExampleitemsApiC8514132.PATCH..items.{id}\"}}, \"itemsApiitemsidPATCH0548CB6A\": {\"Type\": \"AWS::ApiGateway::Method\", \"Properties\": {\"HttpMethod\": \"PATCH\", \"ResourceId\": {\"Ref\": \"itemsApiitemsidA29927C2\"}, \"RestApiId\": {\"Ref\": \"itemsApi28111E1C\"}, \"AuthorizationType\": \"NONE\", \"Integration\": {\"IntegrationHttpMethod\": \"POST\", \"Type\": \"AWS_PROXY\", \"Uri\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":apigateway:\", {\"Ref\": \"AWS::Region\"}, \":lambda:path/2015-03-31/functions/\", {\"Fn::GetAtt\": [\"updateItemFunction59415205\", \"Arn\"]}, \"/invocations\"]]}}}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/{id}/PATCH/Resource\"}}, \"itemsApiitemsidDELETEApiPermissionApiLambdaCrudDynamoDBExampleitemsApiC8514132DELETEitemsid056EB521\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"deleteItemFunction2918B1B0\", \"Arn\"]}, \"Principal\": \"apigateway.amazonaws.com\", \"SourceArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":execute-api:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":\", {\"Ref\": \"itemsApi28111E1C\"}, \"/\", {\"Ref\": \"itemsApiDeploymentStageprodE77B897D\"}, \"/DELETE/items/*\"]]}}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/{id}/DELETE/ApiPermission.ApiLambdaCrudDynamoDBExampleitemsApiC8514132.DELETE..items.{id}\"}}, \"itemsApiitemsidDELETEApiPermissionTestApiLambdaCrudDynamoDBExampleitemsApiC8514132DELETEitemsid4C18D4E2\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"deleteItemFunction2918B1B0\", \"Arn\"]}, \"Principal\": \"apigateway.amazonaws.com\", \"SourceArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":execute-api:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":\", {\"Ref\": \"itemsApi28111E1C\"}, \"/test-invoke-stage/DELETE/items/*\"]]}}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/{id}/DELETE/ApiPermission.Test.ApiLambdaCrudDynamoDBExampleitemsApiC8514132.DELETE..items.{id}\"}}, \"itemsApiitemsidDELETE21550005\": {\"Type\": \"AWS::ApiGateway::Method\", \"Properties\": {\"HttpMethod\": \"DELETE\", \"ResourceId\": {\"Ref\": \"itemsApiitemsidA29927C2\"}, \"RestApiId\": {\"Ref\": \"itemsApi28111E1C\"}, \"AuthorizationType\": \"NONE\", \"Integration\": {\"IntegrationHttpMethod\": \"POST\", \"Type\": \"AWS_PROXY\", \"Uri\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":apigateway:\", {\"Ref\": \"AWS::Region\"}, \":lambda:path/2015-03-31/functions/\", {\"Fn::GetAtt\": [\"deleteItemFunction2918B1B0\", \"Arn\"]}, \"/invocations\"]]}}}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/{id}/DELETE/Resource\"}}, \"itemsApiitemsidOPTIONS62BD91D0\": {\"Type\": \"AWS::ApiGateway::Method\", \"Properties\": {\"HttpMethod\": \"OPTIONS\", \"ResourceId\": {\"Ref\": \"itemsApiitemsidA29927C2\"}, \"RestApiId\": {\"Ref\": \"itemsApi28111E1C\"}, \"AuthorizationType\": \"NONE\", \"Integration\": {\"IntegrationResponses\": [{\"ResponseParameters\": {\"method.response.header.Access-Control-Allow-Headers\": \"'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'\", \"method.response.header.Access-Control-Allow-Origin\": \"'*'\", \"method.response.header.Access-Control-Allow-Credentials\": \"'false'\", \"method.response.header.Access-Control-Allow-Methods\": \"'OPTIONS,GET,PUT,POST,DELETE'\"}, \"StatusCode\": \"200\"}], \"PassthroughBehavior\": \"NEVER\", \"RequestTemplates\": {\"application/json\": \"{\\\"statusCode\\\": 200}\"}, \"Type\": \"MOCK\"}, \"MethodResponses\": [{\"ResponseParameters\": {\"method.response.header.Access-Control-Allow-Headers\": true, \"method.response.header.Access-Control-Allow-Methods\": true, \"method.response.header.Access-Control-Allow-Credentials\": true, \"method.response.header.Access-Control-Allow-Origin\": true}, \"StatusCode\": \"200\"}]}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/itemsApi/Default/items/{id}/OPTIONS/Resource\"}}, \"CDKMetadata\": {\"Type\": \"AWS::CDK::Metadata\", \"Properties\": {\"Analytics\": \"v2:deflate64:H4sIAAAAAAAA/1VRy1LDMAz8Fu6OgXKg17QMNx5TuGcUWxQlsZ2JbTqZTP4d2S4UTtrd0a4keyO39/LmCk6+UrqvBmrl8hZA9YKlZtGzBeM0i+/QDij2HzaDVQxgWg2NdRo7L59zeYxWBXJWEBi5HFwx5PrqBlJzogWtwt814D0GL+tUmMtdVD2GHXg8x8uFDb+pyYyTIe+ZrQJGOkLAE8w8C32oR8rjLrBWykUbxAOOg5sNMmT1D+NLj3nHAtjq4qQwb/BDzpkFP2H4dDpJBa3rpS+fkYLIHlPHSwxjDP/sjPfOagr5gPR2svPXX7dbueFP6DxRNfHCZFAeSv0G5CEmZaABAAA=\"}, \"Metadata\": {\"aws:cdk:path\": \"ApiLambdaCrudDynamoDBExample/CDKMetadata/Default\"}, \"Condition\": \"CDKMetadataAvailable\"}}, \"Outputs\": {\"itemsApiEndpoint8392E274\": {\"Value\": {\"Fn::Join\": [\"\", [\"https://\", {\"Ref\": \"itemsApi28111E1C\"}, \".execute-api.\", {\"Ref\": \"AWS::Region\"}, \".\", {\"Ref\": \"AWS::URLSuffix\"}, \"/\", {\"Ref\": \"itemsApiDeploymentStageprodE77B897D\"}, \"/\"]]}}}, \"Conditions\": {\"CDKMetadataAvailable\": {\"Fn::Or\": [{\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"af-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ca-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-northwest-1\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-3\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"me-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"sa-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-2\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-2\"]}]}]}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import { IResource, LambdaIntegration, MockIntegration, PassthroughBehavior, RestApi } from 'aws-cdk-lib/aws-apigateway';\nimport { AttributeType, Table } from 'aws-cdk-lib/aws-dynamodb';\nimport { Runtime } from 'aws-cdk-lib/aws-lambda';\nimport { App, Stack, RemovalPolicy } from 'aws-cdk-lib';\nimport { NodejsFunction, NodejsFunctionProps } from 'aws-cdk-lib/aws-lambda-nodejs';\nimport { join } from 'path'\n\nexport class ApiLambdaCrudDynamoDBStack extends Stack {\n  constructor(app: App, id: string) {\n    super(app, id);\n\n    const dynamoTable = new Table(this, 'items', {\n      partitionKey: {\n        name: 'itemId',\n        type: AttributeType.STRING\n      },\n      tableName: 'items',\n\n      /**\n       *  The default removal policy is RETAIN, which means that cdk destroy will not attempt to delete\n       * the new table, and it will remain in your account until manually deleted. By setting the policy to\n       * DESTROY, cdk destroy will delete the table (even if it has data in it)\n       */\n      removalPolicy: RemovalPolicy.DESTROY, // NOT recommended for production code\n    });\n\n    const nodeJsFunctionProps: NodejsFunctionProps = {\n      bundling: {\n        externalModules: [\n          'aws-sdk', // Use the 'aws-sdk' available in the Lambda runtime\n        ],\n      },\n      depsLockFilePath: join(__dirname, 'lambdas', 'package-lock.json'),\n      environment: {\n        PRIMARY_KEY: 'itemId',\n        TABLE_NAME: dynamoTable.tableName,\n      },\n      runtime: Runtime.NODEJS_14_X,\n    }\n\n    // Create a Lambda function for each of the CRUD operations\n    const getOneLambda = new NodejsFunction(this, 'getOneItemFunction', {\n      entry: join(__dirname, 'lambdas', 'get-one.ts'),\n      ...nodeJsFunctionProps,\n    });\n    const getAllLambda = new NodejsFunction(this, 'getAllItemsFunction', {\n      entry: join(__dirname, 'lambdas', 'get-all.ts'),\n      ...nodeJsFunctionProps,\n    });\n    const createOneLambda = new NodejsFunction(this, 'createItemFunction', {\n      entry: join(__dirname, 'lambdas', 'create.ts'),\n      ...nodeJsFunctionProps,\n    });\n    const updateOneLambda = new NodejsFunction(this, 'updateItemFunction', {\n      entry: join(__dirname, 'lambdas', 'update-one.ts'),\n      ...nodeJsFunctionProps,\n    });\n    const deleteOneLambda = new NodejsFunction(this, 'deleteItemFunction', {\n      entry: join(__dirname, 'lambdas', 'delete-one.ts'),\n      ...nodeJsFunctionProps,\n    });\n\n    // Grant the Lambda function read access to the DynamoDB table\n    dynamoTable.grantReadWriteData(getAllLambda);\n    dynamoTable.grantReadWriteData(getOneLambda);\n    dynamoTable.grantReadWriteData(createOneLambda);\n    dynamoTable.grantReadWriteData(updateOneLambda);\n    dynamoTable.grantReadWriteData(deleteOneLambda);\n\n    // Integrate the Lambda functions with the API Gateway resource\n    const getAllIntegration = new LambdaIntegration(getAllLambda);\n    const createOneIntegration = new LambdaIntegration(createOneLambda);\n    const getOneIntegration = new LambdaIntegration(getOneLambda);\n    const updateOneIntegration = new LambdaIntegration(updateOneLambda);\n    const deleteOneIntegration = new LambdaIntegration(deleteOneLambda);\n\n\n    // Create an API Gateway resource for each of the CRUD operations\n    const api = new RestApi(this, 'itemsApi', {\n      restApiName: 'Items Service'\n      // In case you want to manage binary types, uncomment the following\n      // binaryMediaTypes: [\"*/*\"],\n    });\n\n    const items = api.root.addResource('items');\n    items.addMethod('GET', getAllIntegration);\n    items.addMethod('POST', createOneIntegration);\n    addCorsOptions(items);\n\n    const singleItem = items.addResource('{id}');\n    singleItem.addMethod('GET', getOneIntegration);\n    singleItem.addMethod('PATCH', updateOneIntegration);\n    singleItem.addMethod('DELETE', deleteOneIntegration);\n    addCorsOptions(singleItem);\n  }\n}\n\nexport function addCorsOptions(apiResource: IResource) {\n  apiResource.addMethod('OPTIONS', new MockIntegration({\n    // In case you want to use binary media types, uncomment the following line\n    // contentHandling: ContentHandling.CONVERT_TO_TEXT,\n    integrationResponses: [{\n      statusCode: '200',\n      responseParameters: {\n        'method.response.header.Access-Control-Allow-Headers': \"'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'\",\n        'method.response.header.Access-Control-Allow-Origin': \"'*'\",\n        'method.response.header.Access-Control-Allow-Credentials': \"'false'\",\n        'method.response.header.Access-Control-Allow-Methods': \"'OPTIONS,GET,PUT,POST,DELETE'\",\n      },\n    }],\n    // In case you want to use binary media types, comment out the following line\n    passthroughBehavior: PassthroughBehavior.NEVER,\n    requestTemplates: {\n      \"application/json\": \"{\\\"statusCode\\\": 200}\"\n    },\n  }), {\n    methodResponses: [{\n      statusCode: '200',\n      responseParameters: {\n        'method.response.header.Access-Control-Allow-Headers': true,\n        'method.response.header.Access-Control-Allow-Methods': true,\n        'method.response.header.Access-Control-Allow-Credentials': true,\n        'method.response.header.Access-Control-Allow-Origin': true,\n      },\n    }]\n  })\n}\n\nconst app = new App();\nnew ApiLambdaCrudDynamoDBStack(app, 'ApiLambdaCrudDynamoDBExample');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"chatappapi\": {\"Type\": \"AWS::ApiGatewayV2::Api\", \"Properties\": {\"Name\": \"ChatAppApi\", \"ProtocolType\": \"WEBSOCKET\", \"RouteSelectionExpression\": \"$request.body.action\"}, \"Metadata\": {\"aws:cdk:path\": \"chat-app/chat-app-api\"}}, \"chatappapitable5244EF8B\": {\"Type\": \"AWS::DynamoDB::Table\", \"Properties\": {\"KeySchema\": [{\"AttributeName\": \"connectionId\", \"KeyType\": \"HASH\"}], \"AttributeDefinitions\": [{\"AttributeName\": \"connectionId\", \"AttributeType\": \"S\"}], \"ProvisionedThroughput\": {\"ReadCapacityUnits\": 5, \"WriteCapacityUnits\": 5}, \"TableName\": \"simplechat_connections\"}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\", \"Metadata\": {\"aws:cdk:path\": \"chat-app/chat-app-api-table/Resource\"}}, \"connectlambdaServiceRole04DCF570\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}, \"Metadata\": {\"aws:cdk:path\": \"chat-app/connect-lambda/ServiceRole/Resource\"}}, \"connectlambdaServiceRoleDefaultPolicy53E94D8B\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"dynamodb:BatchGetItem\", \"dynamodb:GetRecords\", \"dynamodb:GetShardIterator\", \"dynamodb:Query\", \"dynamodb:GetItem\", \"dynamodb:Scan\", \"dynamodb:ConditionCheckItem\", \"dynamodb:BatchWriteItem\", \"dynamodb:PutItem\", \"dynamodb:UpdateItem\", \"dynamodb:DeleteItem\", \"dynamodb:DescribeTable\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"chatappapitable5244EF8B\", \"Arn\"]}, {\"Ref\": \"AWS::NoValue\"}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"connectlambdaServiceRoleDefaultPolicy53E94D8B\", \"Roles\": [{\"Ref\": \"connectlambdaServiceRole04DCF570\"}]}, \"Metadata\": {\"aws:cdk:path\": \"chat-app/connect-lambda/ServiceRole/DefaultPolicy/Resource\"}}, \"connectlambdaFFAE59F3\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"4c70ecf82751907274869efda9c32743b3cbefb07bb9b01413165b97e208838f.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"connectlambdaServiceRole04DCF570\", \"Arn\"]}, \"Environment\": {\"Variables\": {\"TABLE_NAME\": \"simplechat_connections\"}}, \"Handler\": \"app.handler\", \"MemorySize\": 256, \"Runtime\": \"nodejs12.x\", \"Timeout\": 300}, \"DependsOn\": [\"connectlambdaServiceRoleDefaultPolicy53E94D8B\", \"connectlambdaServiceRole04DCF570\"], \"Metadata\": {\"aws:cdk:path\": \"chat-app/connect-lambda/Resource\", \"aws:asset:path\": \"asset.4c70ecf82751907274869efda9c32743b3cbefb07bb9b01413165b97e208838f\", \"aws:asset:is-bundled\": false, \"aws:asset:property\": \"Code\"}}, \"disconnectlambdaServiceRole2779F08C\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}, \"Metadata\": {\"aws:cdk:path\": \"chat-app/disconnect-lambda/ServiceRole/Resource\"}}, \"disconnectlambdaServiceRoleDefaultPolicy03D2B807\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"dynamodb:BatchGetItem\", \"dynamodb:GetRecords\", \"dynamodb:GetShardIterator\", \"dynamodb:Query\", \"dynamodb:GetItem\", \"dynamodb:Scan\", \"dynamodb:ConditionCheckItem\", \"dynamodb:BatchWriteItem\", \"dynamodb:PutItem\", \"dynamodb:UpdateItem\", \"dynamodb:DeleteItem\", \"dynamodb:DescribeTable\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"chatappapitable5244EF8B\", \"Arn\"]}, {\"Ref\": \"AWS::NoValue\"}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"disconnectlambdaServiceRoleDefaultPolicy03D2B807\", \"Roles\": [{\"Ref\": \"disconnectlambdaServiceRole2779F08C\"}]}, \"Metadata\": {\"aws:cdk:path\": \"chat-app/disconnect-lambda/ServiceRole/DefaultPolicy/Resource\"}}, \"disconnectlambdaAC22A441\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"fa75e93c2c42df16706744915b3863ce0305bd4697cee8cd9a6c0dce78e9e092.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"disconnectlambdaServiceRole2779F08C\", \"Arn\"]}, \"Environment\": {\"Variables\": {\"TABLE_NAME\": \"simplechat_connections\"}}, \"Handler\": \"app.handler\", \"MemorySize\": 256, \"Runtime\": \"nodejs12.x\", \"Timeout\": 300}, \"DependsOn\": [\"disconnectlambdaServiceRoleDefaultPolicy03D2B807\", \"disconnectlambdaServiceRole2779F08C\"], \"Metadata\": {\"aws:cdk:path\": \"chat-app/disconnect-lambda/Resource\", \"aws:asset:path\": \"asset.fa75e93c2c42df16706744915b3863ce0305bd4697cee8cd9a6c0dce78e9e092\", \"aws:asset:is-bundled\": false, \"aws:asset:property\": \"Code\"}}, \"messagelambdaServiceRole544EC18A\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}, \"Metadata\": {\"aws:cdk:path\": \"chat-app/message-lambda/ServiceRole/Resource\"}}, \"messagelambdaServiceRoleDefaultPolicy76F57A7D\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"execute-api:ManageConnections\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:aws:execute-api:ap-southeast-2::\", {\"Ref\": \"chatappapi\"}, \"/*\"]]}}, {\"Action\": [\"dynamodb:BatchGetItem\", \"dynamodb:GetRecords\", \"dynamodb:GetShardIterator\", \"dynamodb:Query\", \"dynamodb:GetItem\", \"dynamodb:Scan\", \"dynamodb:ConditionCheckItem\", \"dynamodb:BatchWriteItem\", \"dynamodb:PutItem\", \"dynamodb:UpdateItem\", \"dynamodb:DeleteItem\", \"dynamodb:DescribeTable\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"chatappapitable5244EF8B\", \"Arn\"]}, {\"Ref\": \"AWS::NoValue\"}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"messagelambdaServiceRoleDefaultPolicy76F57A7D\", \"Roles\": [{\"Ref\": \"messagelambdaServiceRole544EC18A\"}]}, \"Metadata\": {\"aws:cdk:path\": \"chat-app/message-lambda/ServiceRole/DefaultPolicy/Resource\"}}, \"messagelambda16C1C2A3\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"bdbfe44e5ce9181d5b5518b821191bbeb1fccdf5e3aa6a5600328f83385e4ecb.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"messagelambdaServiceRole544EC18A\", \"Arn\"]}, \"Environment\": {\"Variables\": {\"TABLE_NAME\": \"simplechat_connections\"}}, \"Handler\": \"app.handler\", \"MemorySize\": 256, \"Runtime\": \"nodejs12.x\", \"Timeout\": 300}, \"DependsOn\": [\"messagelambdaServiceRoleDefaultPolicy76F57A7D\", \"messagelambdaServiceRole544EC18A\"], \"Metadata\": {\"aws:cdk:path\": \"chat-app/message-lambda/Resource\", \"aws:asset:path\": \"asset.bdbfe44e5ce9181d5b5518b821191bbeb1fccdf5e3aa6a5600328f83385e4ecb\", \"aws:asset:is-bundled\": false, \"aws:asset:property\": \"Code\"}}, \"chatappapiiamrole2977C2A3\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"apigateway.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}, \"Metadata\": {\"aws:cdk:path\": \"chat-app/chat-app-api-iam-role/Resource\"}}, \"chatappapiiamroleDefaultPolicy6238E5A8\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"lambda:InvokeFunction\", \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"connectlambdaFFAE59F3\", \"Arn\"]}, {\"Fn::GetAtt\": [\"disconnectlambdaAC22A441\", \"Arn\"]}, {\"Fn::GetAtt\": [\"messagelambda16C1C2A3\", \"Arn\"]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"chatappapiiamroleDefaultPolicy6238E5A8\", \"Roles\": [{\"Ref\": \"chatappapiiamrole2977C2A3\"}]}, \"Metadata\": {\"aws:cdk:path\": \"chat-app/chat-app-api-iam-role/DefaultPolicy/Resource\"}}, \"connectlambdaintegration\": {\"Type\": \"AWS::ApiGatewayV2::Integration\", \"Properties\": {\"ApiId\": {\"Ref\": \"chatappapi\"}, \"IntegrationType\": \"AWS_PROXY\", \"CredentialsArn\": {\"Fn::GetAtt\": [\"chatappapiiamrole2977C2A3\", \"Arn\"]}, \"IntegrationUri\": {\"Fn::Join\": [\"\", [\"arn:aws:apigateway:ap-southeast-2:lambda:path/2015-03-31/functions/\", {\"Fn::GetAtt\": [\"connectlambdaFFAE59F3\", \"Arn\"]}, \"/invocations\"]]}}, \"Metadata\": {\"aws:cdk:path\": \"chat-app/connect-lambda-integration\"}}, \"disconnectlambdaintegration\": {\"Type\": \"AWS::ApiGatewayV2::Integration\", \"Properties\": {\"ApiId\": {\"Ref\": \"chatappapi\"}, \"IntegrationType\": \"AWS_PROXY\", \"CredentialsArn\": {\"Fn::GetAtt\": [\"chatappapiiamrole2977C2A3\", \"Arn\"]}, \"IntegrationUri\": {\"Fn::Join\": [\"\", [\"arn:aws:apigateway:ap-southeast-2:lambda:path/2015-03-31/functions/\", {\"Fn::GetAtt\": [\"disconnectlambdaAC22A441\", \"Arn\"]}, \"/invocations\"]]}}, \"Metadata\": {\"aws:cdk:path\": \"chat-app/disconnect-lambda-integration\"}}, \"messagelambdaintegration\": {\"Type\": \"AWS::ApiGatewayV2::Integration\", \"Properties\": {\"ApiId\": {\"Ref\": \"chatappapi\"}, \"IntegrationType\": \"AWS_PROXY\", \"CredentialsArn\": {\"Fn::GetAtt\": [\"chatappapiiamrole2977C2A3\", \"Arn\"]}, \"IntegrationUri\": {\"Fn::Join\": [\"\", [\"arn:aws:apigateway:ap-southeast-2:lambda:path/2015-03-31/functions/\", {\"Fn::GetAtt\": [\"messagelambda16C1C2A3\", \"Arn\"]}, \"/invocations\"]]}}, \"Metadata\": {\"aws:cdk:path\": \"chat-app/message-lambda-integration\"}}, \"connectroute\": {\"Type\": \"AWS::ApiGatewayV2::Route\", \"Properties\": {\"ApiId\": {\"Ref\": \"chatappapi\"}, \"RouteKey\": \"$connect\", \"AuthorizationType\": \"NONE\", \"Target\": {\"Fn::Join\": [\"\", [\"integrations/\", {\"Ref\": \"connectlambdaintegration\"}]]}}, \"Metadata\": {\"aws:cdk:path\": \"chat-app/connect-route\"}}, \"disconnectroute\": {\"Type\": \"AWS::ApiGatewayV2::Route\", \"Properties\": {\"ApiId\": {\"Ref\": \"chatappapi\"}, \"RouteKey\": \"$disconnect\", \"AuthorizationType\": \"NONE\", \"Target\": {\"Fn::Join\": [\"\", [\"integrations/\", {\"Ref\": \"disconnectlambdaintegration\"}]]}}, \"Metadata\": {\"aws:cdk:path\": \"chat-app/disconnect-route\"}}, \"messageroute\": {\"Type\": \"AWS::ApiGatewayV2::Route\", \"Properties\": {\"ApiId\": {\"Ref\": \"chatappapi\"}, \"RouteKey\": \"sendmessage\", \"AuthorizationType\": \"NONE\", \"Target\": {\"Fn::Join\": [\"\", [\"integrations/\", {\"Ref\": \"messagelambdaintegration\"}]]}}, \"Metadata\": {\"aws:cdk:path\": \"chat-app/message-route\"}}, \"chatappapideployment\": {\"Type\": \"AWS::ApiGatewayV2::Deployment\", \"Properties\": {\"ApiId\": {\"Ref\": \"chatappapi\"}}, \"DependsOn\": [\"connectroute\", \"disconnectroute\", \"messageroute\"], \"Metadata\": {\"aws:cdk:path\": \"chat-app/chat-app-api-deployment\"}}, \"chatappapistage\": {\"Type\": \"AWS::ApiGatewayV2::Stage\", \"Properties\": {\"ApiId\": {\"Ref\": \"chatappapi\"}, \"StageName\": \"dev\", \"AutoDeploy\": true, \"DeploymentId\": {\"Ref\": \"chatappapideployment\"}}, \"Metadata\": {\"aws:cdk:path\": \"chat-app/chat-app-api-stage\"}}, \"CDKMetadata\": {\"Type\": \"AWS::CDK::Metadata\", \"Properties\": {\"Analytics\": \"v2:deflate64:H4sIAAAAAAAA/zWQvW7DMAyEn6W7zLbu0KxJigLdCid7QEuswVg/hiUlMAS/eyUZnu47UjoSbOHwCW8v+PSNVGOjuYd0CShHkUu3hBMPGOiJy6OFdP6zx4lFlh8baJgxsLPFdi4GKvBFk3aLIRuKy0EDrUItFo1TOfmKva7vKqxCo+kVQvqOVu5ZO6+C0UDq3Paj6q/TLJdiN1qF/7ih9xQ8HItkD6coRwon9HlAR97FWZKo3bIP26HG7Y3MZ2cVbyOtUwR3//p4P0Cb73L3zM0cbWBD0G36DzNPZrkzAQAA\"}, \"Metadata\": {\"aws:cdk:path\": \"chat-app/CDKMetadata/Default\"}, \"Condition\": \"CDKMetadataAvailable\"}}, \"Conditions\": {\"CDKMetadataAvailable\": {\"Fn::Or\": [{\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"af-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ca-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-northwest-1\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-3\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"me-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"sa-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-2\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-2\"]}]}]}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "#!/usr/bin/env node\nimport {AssetCode, Function, Runtime} from \"aws-cdk-lib/aws-lambda\";\nimport {CfnApi, CfnDeployment, CfnIntegration, CfnRoute, CfnStage} from \"aws-cdk-lib/aws-apigatewayv2\";\nimport {App, Duration, RemovalPolicy, Stack, StackProps} from 'aws-cdk-lib';\nimport {Effect, PolicyStatement, Role, ServicePrincipal} from \"aws-cdk-lib/aws-iam\";\nimport { AttributeType, Table } from \"aws-cdk-lib/aws-dynamodb\";\nimport { Construct } from 'constructs';\n\nimport config from './config.json';\n\nclass ChatAppStack extends Stack {\n    constructor(scope: Construct, id: string, props?: StackProps) {\n        super(scope, id, props);\n        const tableName = \"simplechat_connections\";\n\n        // initialise api\n        const name = id + \"-api\"\n        const api = new CfnApi(this, name, {\n            name: \"ChatAppApi\",\n            protocolType: \"WEBSOCKET\",\n            routeSelectionExpression: \"$request.body.action\",\n        });\n        const table = new Table(this, `${name}-table`, {\n            tableName: tableName,\n            partitionKey: {\n                name: \"connectionId\",\n                type: AttributeType.STRING,\n            },\n            readCapacity: 5,\n            writeCapacity: 5,\n            removalPolicy: RemovalPolicy.DESTROY\n        });\n\n        const connectFunc = new Function(this, 'connect-lambda', {\n            code: new AssetCode('./onconnect'),\n            handler: 'app.handler',\n            runtime: Runtime.NODEJS_12_X,\n            timeout: Duration.seconds(300),\n            memorySize: 256,\n            environment: {\n                \"TABLE_NAME\": tableName,\n            }\n        });\n\n        table.grantReadWriteData(connectFunc)\n\n        const disconnectFunc = new Function(this, 'disconnect-lambda', {\n            code: new AssetCode('./ondisconnect'),\n            handler: 'app.handler',\n            runtime: Runtime.NODEJS_12_X,\n            timeout: Duration.seconds(300),\n            memorySize: 256,\n            environment: {\n                \"TABLE_NAME\": tableName,\n            }\n        });\n\n        table.grantReadWriteData(disconnectFunc)\n\n        const messageFunc = new Function(this, 'message-lambda', {\n            code: new AssetCode('./sendmessage'),\n            handler: 'app.handler',\n            runtime: Runtime.NODEJS_12_X,\n            timeout: Duration.seconds(300),\n            memorySize: 256,\n            initialPolicy: [\n                new PolicyStatement({\n                    actions: [\n                        'execute-api:ManageConnections'\n                    ],\n                    resources: [\n                        \"arn:aws:execute-api:\" + config[\"region\"] + \":\" + config[\"account_id\"] + \":\" + api.ref + \"/*\"\n                    ],\n                    effect: Effect.ALLOW,\n                })\n            ],\n            environment: {\n                \"TABLE_NAME\": tableName,\n            }\n        });\n\n        table.grantReadWriteData(messageFunc)\n\n        // access role for the socket api to access the socket lambda\n        const policy = new PolicyStatement({\n            effect: Effect.ALLOW,\n            resources: [\n                connectFunc.functionArn,\n                disconnectFunc.functionArn,\n                messageFunc.functionArn\n            ],\n            actions: [\"lambda:InvokeFunction\"]\n        });\n\n        const role = new Role(this, `${name}-iam-role`, {\n            assumedBy: new ServicePrincipal(\"apigateway.amazonaws.com\")\n        });\n        role.addToPolicy(policy);\n\n        // lambda integration\n        const connectIntegration = new CfnIntegration(this, \"connect-lambda-integration\", {\n            apiId: api.ref,\n            integrationType: \"AWS_PROXY\",\n            integrationUri: \"arn:aws:apigateway:\" + config[\"region\"] + \":lambda:path/2015-03-31/functions/\" + connectFunc.functionArn + \"/invocations\",\n            credentialsArn: role.roleArn,\n        })\n        const disconnectIntegration = new CfnIntegration(this, \"disconnect-lambda-integration\", {\n            apiId: api.ref,\n            integrationType: \"AWS_PROXY\",\n            integrationUri: \"arn:aws:apigateway:\" + config[\"region\"] + \":lambda:path/2015-03-31/functions/\" + disconnectFunc.functionArn + \"/invocations\",\n            credentialsArn: role.roleArn\n        })\n        const messageIntegration = new CfnIntegration(this, \"message-lambda-integration\", {\n            apiId: api.ref,\n            integrationType: \"AWS_PROXY\",\n            integrationUri: \"arn:aws:apigateway:\" + config[\"region\"] + \":lambda:path/2015-03-31/functions/\" + messageFunc.functionArn + \"/invocations\",\n            credentialsArn: role.roleArn\n        })\n\n        const connectRoute = new CfnRoute(this, \"connect-route\", {\n            apiId: api.ref,\n            routeKey: \"$connect\",\n            authorizationType: \"NONE\",\n            target: \"integrations/\" + connectIntegration.ref,\n        });\n\n        const disconnectRoute = new CfnRoute(this, \"disconnect-route\", {\n            apiId: api.ref,\n            routeKey: \"$disconnect\",\n            authorizationType: \"NONE\",\n            target: \"integrations/\" + disconnectIntegration.ref,\n        });\n\n        const messageRoute = new CfnRoute(this, \"message-route\", {\n            apiId: api.ref,\n            routeKey: \"sendmessage\",\n            authorizationType: \"NONE\",\n            target: \"integrations/\" + messageIntegration.ref,\n        });\n\n        const deployment = new CfnDeployment(this, `${name}-deployment`, {\n            apiId: api.ref\n        });\n\n        new CfnStage(this, `${name}-stage`, {\n            apiId: api.ref,\n            autoDeploy: true,\n            deploymentId: deployment.ref,\n            stageName: \"dev\"\n        });\n\n        deployment.node.addDependency(connectRoute)\n        deployment.node.addDependency(disconnectRoute)\n        deployment.node.addDependency(messageRoute)\n    }\n}\nconst app = new App();\nnew ChatAppStack(app, `chat-app`);\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"VPCB9E5F0B4\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"LoadBalancerStack/VPC\"}]}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/VPC/Resource\"}}, \"VPCPublicSubnet1SubnetB4246D30\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"LoadBalancerStack/VPC/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/VPC/PublicSubnet1/Subnet\"}}, \"VPCPublicSubnet1RouteTableFEE4B781\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"LoadBalancerStack/VPC/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/VPC/PublicSubnet1/RouteTable\"}}, \"VPCPublicSubnet1RouteTableAssociation0B0896DC\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/VPC/PublicSubnet1/RouteTableAssociation\"}}, \"VPCPublicSubnet1DefaultRoute91CEF279\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"], \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/VPC/PublicSubnet1/DefaultRoute\"}}, \"VPCPublicSubnet1EIP6AD938E8\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"LoadBalancerStack/VPC/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/VPC/PublicSubnet1/EIP\"}}, \"VPCPublicSubnet1NATGatewayE0556630\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet1EIP6AD938E8\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"LoadBalancerStack/VPC/PublicSubnet1\"}]}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\"], \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/VPC/PublicSubnet1/NATGateway\"}}, \"VPCPublicSubnet2Subnet74179F39\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"LoadBalancerStack/VPC/PublicSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/VPC/PublicSubnet2/Subnet\"}}, \"VPCPublicSubnet2RouteTable6F1A15F1\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"LoadBalancerStack/VPC/PublicSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/VPC/PublicSubnet2/RouteTable\"}}, \"VPCPublicSubnet2RouteTableAssociation5A808732\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/VPC/PublicSubnet2/RouteTableAssociation\"}}, \"VPCPublicSubnet2DefaultRouteB7481BBA\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"], \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/VPC/PublicSubnet2/DefaultRoute\"}}, \"VPCPublicSubnet2EIP4947BC00\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"LoadBalancerStack/VPC/PublicSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/VPC/PublicSubnet2/EIP\"}}, \"VPCPublicSubnet2NATGateway3C070193\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet2EIP4947BC00\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"LoadBalancerStack/VPC/PublicSubnet2\"}]}, \"DependsOn\": [\"VPCPublicSubnet2DefaultRouteB7481BBA\", \"VPCPublicSubnet2RouteTableAssociation5A808732\"], \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/VPC/PublicSubnet2/NATGateway\"}}, \"VPCPrivateSubnet1Subnet8BCA10E0\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"LoadBalancerStack/VPC/PrivateSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/VPC/PrivateSubnet1/Subnet\"}}, \"VPCPrivateSubnet1RouteTableBE8A6027\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"LoadBalancerStack/VPC/PrivateSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/VPC/PrivateSubnet1/RouteTable\"}}, \"VPCPrivateSubnet1RouteTableAssociation347902D1\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/VPC/PrivateSubnet1/RouteTableAssociation\"}}, \"VPCPrivateSubnet1DefaultRouteAE1D6490\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet1NATGatewayE0556630\"}}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/VPC/PrivateSubnet1/DefaultRoute\"}}, \"VPCPrivateSubnet2SubnetCFCDAA7A\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"LoadBalancerStack/VPC/PrivateSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/VPC/PrivateSubnet2/Subnet\"}}, \"VPCPrivateSubnet2RouteTable0A19E10E\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"LoadBalancerStack/VPC/PrivateSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/VPC/PrivateSubnet2/RouteTable\"}}, \"VPCPrivateSubnet2RouteTableAssociation0C73D413\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/VPC/PrivateSubnet2/RouteTableAssociation\"}}, \"VPCPrivateSubnet2DefaultRouteF4F5CFD2\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet2NATGateway3C070193\"}}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/VPC/PrivateSubnet2/DefaultRoute\"}}, \"VPCIGWB7E252D3\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"LoadBalancerStack/VPC\"}]}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/VPC/IGW\"}}, \"VPCVPCGW99B986DC\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"InternetGatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/VPC/VPCGW\"}}, \"ASGInstanceSecurityGroup0525485D\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"LoadBalancerStack/ASG/InstanceSecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"Tags\": [{\"Key\": \"Name\", \"Value\": \"LoadBalancerStack/ASG\"}], \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/ASG/InstanceSecurityGroup/Resource\"}}, \"ASGInstanceSecurityGroupfromLoadBalancerStackLBSecurityGroupB71A4BA880C28BC1C3\": {\"Type\": \"AWS::EC2::SecurityGroupIngress\", \"Properties\": {\"IpProtocol\": \"tcp\", \"Description\": \"Load balancer to target\", \"FromPort\": 80, \"GroupId\": {\"Fn::GetAtt\": [\"ASGInstanceSecurityGroup0525485D\", \"GroupId\"]}, \"SourceSecurityGroupId\": {\"Fn::GetAtt\": [\"LBSecurityGroup8A41EA2B\", \"GroupId\"]}, \"ToPort\": 80}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/ASG/InstanceSecurityGroup/from LoadBalancerStackLBSecurityGroupB71A4BA8:80\"}}, \"ASGInstanceRoleE263A41B\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"ec2.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"LoadBalancerStack/ASG\"}]}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/ASG/InstanceRole/Resource\"}}, \"ASGInstanceProfile0A2834D7\": {\"Type\": \"AWS::IAM::InstanceProfile\", \"Properties\": {\"Roles\": [{\"Ref\": \"ASGInstanceRoleE263A41B\"}]}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/ASG/InstanceProfile\"}}, \"ASGLaunchConfigC00AF12B\": {\"Type\": \"AWS::AutoScaling::LaunchConfiguration\", \"Properties\": {\"ImageId\": {\"Ref\": \"SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter\"}, \"InstanceType\": \"t2.micro\", \"IamInstanceProfile\": {\"Ref\": \"ASGInstanceProfile0A2834D7\"}, \"SecurityGroups\": [{\"Fn::GetAtt\": [\"ASGInstanceSecurityGroup0525485D\", \"GroupId\"]}], \"UserData\": {\"Fn::Base64\": \"#!/bin/bash\"}}, \"DependsOn\": [\"ASGInstanceRoleE263A41B\"], \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/ASG/LaunchConfig\"}}, \"ASG46ED3070\": {\"Type\": \"AWS::AutoScaling::AutoScalingGroup\", \"Properties\": {\"MaxSize\": \"1\", \"MinSize\": \"1\", \"LaunchConfigurationName\": {\"Ref\": \"ASGLaunchConfigC00AF12B\"}, \"Tags\": [{\"Key\": \"Name\", \"PropagateAtLaunch\": true, \"Value\": \"LoadBalancerStack/ASG\"}], \"TargetGroupARNs\": [{\"Ref\": \"LBListenerTargetGroupF04FCF6D\"}], \"VPCZoneIdentifier\": [{\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}, {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}]}, \"UpdatePolicy\": {\"AutoScalingScheduledAction\": {\"IgnoreUnmodifiedGroupSizeProperties\": true}}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/ASG/ASG\"}}, \"ASGScalingPolicyAModestLoadC5714E5A\": {\"Type\": \"AWS::AutoScaling::ScalingPolicy\", \"Properties\": {\"AutoScalingGroupName\": {\"Ref\": \"ASG46ED3070\"}, \"PolicyType\": \"TargetTrackingScaling\", \"TargetTrackingConfiguration\": {\"PredefinedMetricSpecification\": {\"PredefinedMetricType\": \"ALBRequestCountPerTarget\", \"ResourceLabel\": {\"Fn::Join\": [\"\", [{\"Fn::Select\": [1, {\"Fn::Split\": [\"/\", {\"Ref\": \"LBListener49E825B4\"}]}]}, \"/\", {\"Fn::Select\": [2, {\"Fn::Split\": [\"/\", {\"Ref\": \"LBListener49E825B4\"}]}]}, \"/\", {\"Fn::Select\": [3, {\"Fn::Split\": [\"/\", {\"Ref\": \"LBListener49E825B4\"}]}]}, \"/\", {\"Fn::GetAtt\": [\"LBListenerTargetGroupF04FCF6D\", \"TargetGroupFullName\"]}]]}}, \"TargetValue\": 60}}, \"DependsOn\": [\"LBListener49E825B4\", \"LBListenerTargetGroupF04FCF6D\"], \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/ASG/ScalingPolicyAModestLoad/Resource\"}}, \"LB8A12904C\": {\"Type\": \"AWS::ElasticLoadBalancingV2::LoadBalancer\", \"Properties\": {\"LoadBalancerAttributes\": [{\"Key\": \"deletion_protection.enabled\", \"Value\": \"false\"}], \"Scheme\": \"internet-facing\", \"SecurityGroups\": [{\"Fn::GetAtt\": [\"LBSecurityGroup8A41EA2B\", \"GroupId\"]}], \"Subnets\": [{\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}, {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}], \"Type\": \"application\"}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\", \"VPCPublicSubnet2DefaultRouteB7481BBA\", \"VPCPublicSubnet2RouteTableAssociation5A808732\"], \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/LB/Resource\"}}, \"LBSecurityGroup8A41EA2B\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"Automatically created Security Group for ELB LoadBalancerStackLBBC778B9A\", \"SecurityGroupIngress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow from anyone on port 80\", \"FromPort\": 80, \"IpProtocol\": \"tcp\", \"ToPort\": 80}], \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/LB/SecurityGroup/Resource\"}}, \"LBSecurityGrouptoLoadBalancerStackASGInstanceSecurityGroupB0050A1780E09A2D36\": {\"Type\": \"AWS::EC2::SecurityGroupEgress\", \"Properties\": {\"GroupId\": {\"Fn::GetAtt\": [\"LBSecurityGroup8A41EA2B\", \"GroupId\"]}, \"IpProtocol\": \"tcp\", \"Description\": \"Load balancer to target\", \"DestinationSecurityGroupId\": {\"Fn::GetAtt\": [\"ASGInstanceSecurityGroup0525485D\", \"GroupId\"]}, \"FromPort\": 80, \"ToPort\": 80}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/LB/SecurityGroup/to LoadBalancerStackASGInstanceSecurityGroupB0050A17:80\"}}, \"LBListener49E825B4\": {\"Type\": \"AWS::ElasticLoadBalancingV2::Listener\", \"Properties\": {\"DefaultActions\": [{\"TargetGroupArn\": {\"Ref\": \"LBListenerTargetGroupF04FCF6D\"}, \"Type\": \"forward\"}], \"LoadBalancerArn\": {\"Ref\": \"LB8A12904C\"}, \"Port\": 80, \"Protocol\": \"HTTP\"}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/LB/Listener/Resource\"}}, \"LBListenerTargetGroupF04FCF6D\": {\"Type\": \"AWS::ElasticLoadBalancingV2::TargetGroup\", \"Properties\": {\"Port\": 80, \"Protocol\": \"HTTP\", \"TargetGroupAttributes\": [{\"Key\": \"stickiness.enabled\", \"Value\": \"false\"}], \"TargetType\": \"instance\", \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/LB/Listener/TargetGroup/Resource\"}}, \"CDKMetadata\": {\"Type\": \"AWS::CDK::Metadata\", \"Properties\": {\"Analytics\": \"v2:deflate64:H4sIAAAAAAAA/31SwWrDMAz9lt1db+tlvWaljEAZISm9DsVRU7eOHWy5pYT8+5ykTTIKO0l67/F4kr3kqw/+9gJXtxDFeaFkzpuMQJxZgH4aFEve7GvB1ge9T9Ys8bmSIvO5RuqwqUuNJ9xBrnDCJyxyzggJJI0exV2ziZOufAN9AeEVbiyx8hLayTjWhDb0D8GQ5D5FFLIeK9TEMhTeSrp9WePrPsO/QKxLi8494Zsebhl4Mk6AkrrkTRSGbBhGty14LY5row+y9HZc7Um6A1si7Wy4acDuVGLCGftd/gAtk1DxJjXDFR811o5AC0ysOUiFLUMFjqRQBoocVKCCwyW8VFTXwabPsg3cZ8+h7ePO57lOOkJ91zz6GT/EH7eejW3LUnTGW9GHTMBChTQ4zYlwokJ2Vi3TpkB+cq+X9xVfhm93clIurNckK+TpUH8BmQiCRJICAAA=\"}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/CDKMetadata/Default\"}, \"Condition\": \"CDKMetadataAvailable\"}}, \"Parameters\": {\"SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter\": {\"Type\": \"AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>\", \"Default\": \"/aws/service/ami-amazon-linux-latest/amzn-ami-hvm-x86_64-gp2\"}, \"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Conditions\": {\"CDKMetadataAvailable\": {\"Fn::Or\": [{\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"af-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ca-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-northwest-1\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-3\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"me-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"sa-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-2\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-2\"]}]}]}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "#!/usr/bin/env node\nimport autoscaling = require('aws-cdk-lib/aws-autoscaling');\nimport ec2 = require('aws-cdk-lib/aws-ec2');\nimport elbv2 = require('aws-cdk-lib/aws-elasticloadbalancingv2');\nimport cdk = require('aws-cdk-lib');\n\nclass LoadBalancerStack extends cdk.Stack {\n  constructor(app: cdk.App, id: string) {\n    super(app, id);\n\n    const vpc = new ec2.Vpc(this, 'VPC');\n\n    const asg = new autoscaling.AutoScalingGroup(this, 'ASG', {\n      vpc,\n      instanceType: ec2.InstanceType.of(ec2.InstanceClass.T2, ec2.InstanceSize.MICRO),\n      machineImage: new ec2.AmazonLinuxImage(),\n    });\n\n    const lb = new elbv2.ApplicationLoadBalancer(this, 'LB', {\n      vpc,\n      internetFacing: true\n    });\n\n    const listener = lb.addListener('Listener', {\n      port: 80,\n    });\n\n    listener.addTargets('Target', {\n      port: 80,\n      targets: [asg]\n    });\n\n    listener.connections.allowDefaultPortFromAnyIpv4('Open to the world');\n\n    asg.scaleOnRequestCount('AModestLoad', {\n      targetRequestsPerMinute: 60,\n    });\n  }\n}\n\nconst app = new cdk.App();\nnew LoadBalancerStack(app, 'LoadBalancerStack');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"ItemsApi\": {\"Type\": \"AWS::AppSync::GraphQLApi\", \"Properties\": {\"AuthenticationType\": \"API_KEY\", \"Name\": \"items-api\"}, \"Metadata\": {\"aws:cdk:path\": \"AppSyncGraphQLDynamoDBExample/ItemsApi\"}}, \"ItemsApiKey\": {\"Type\": \"AWS::AppSync::ApiKey\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ItemsApi\", \"ApiId\"]}}, \"Metadata\": {\"aws:cdk:path\": \"AppSyncGraphQLDynamoDBExample/ItemsApiKey\"}}, \"ItemsSchema\": {\"Type\": \"AWS::AppSync::GraphQLSchema\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ItemsApi\", \"ApiId\"]}, \"Definition\": \"type items {\n        itemsId: ID!\n        name: String\n      }\n      type Paginateditems {\n        items: [items!]!\n        nextToken: String\n      }\n      type Query {\n        all(limit: Int, nextToken: String): Paginateditems!\n        getOne(itemsId: ID!): items\n      }\n      type Mutation {\n        save(name: String!): items\n        delete(itemsId: ID!): items\n      }\n      type Schema {\n        query: Query\n        mutation: Mutation\n      }\"}, \"Metadata\": {\"aws:cdk:path\": \"AppSyncGraphQLDynamoDBExample/ItemsSchema\"}}, \"ItemsTable5AAC2C46\": {\"Type\": \"AWS::DynamoDB::Table\", \"Properties\": {\"KeySchema\": [{\"AttributeName\": \"itemsId\", \"KeyType\": \"HASH\"}], \"AttributeDefinitions\": [{\"AttributeName\": \"itemsId\", \"AttributeType\": \"S\"}], \"BillingMode\": \"PAY_PER_REQUEST\", \"StreamSpecification\": {\"StreamViewType\": \"NEW_IMAGE\"}, \"TableName\": \"items\"}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\", \"Metadata\": {\"aws:cdk:path\": \"AppSyncGraphQLDynamoDBExample/ItemsTable/Resource\"}}, \"ItemsDynamoDBRole7D2E3F6D\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"appsync.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/AmazonDynamoDBFullAccess\"]]}]}, \"Metadata\": {\"aws:cdk:path\": \"AppSyncGraphQLDynamoDBExample/ItemsDynamoDBRole/Resource\"}}, \"ItemsDataSource\": {\"Type\": \"AWS::AppSync::DataSource\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ItemsApi\", \"ApiId\"]}, \"Name\": \"ItemsDynamoDataSource\", \"Type\": \"AMAZON_DYNAMODB\", \"DynamoDBConfig\": {\"AwsRegion\": {\"Ref\": \"AWS::Region\"}, \"TableName\": {\"Ref\": \"ItemsTable5AAC2C46\"}}, \"ServiceRoleArn\": {\"Fn::GetAtt\": [\"ItemsDynamoDBRole7D2E3F6D\", \"Arn\"]}}, \"Metadata\": {\"aws:cdk:path\": \"AppSyncGraphQLDynamoDBExample/ItemsDataSource\"}}, \"GetOneQueryResolver\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ItemsApi\", \"ApiId\"]}, \"FieldName\": \"getOne\", \"TypeName\": \"Query\", \"DataSourceName\": \"ItemsDynamoDataSource\", \"RequestMappingTemplate\": \"{\n        \"version\": \"2017-02-28\",\n        \"operation\": \"GetItem\",\n        \"key\": {\n          \"itemsId\": $util.dynamodb.toDynamoDBJson($ctx.args.itemsId)\n        }\n      }\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result)\"}, \"DependsOn\": [\"ItemsSchema\"], \"Metadata\": {\"aws:cdk:path\": \"AppSyncGraphQLDynamoDBExample/GetOneQueryResolver\"}}, \"GetAllQueryResolver\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ItemsApi\", \"ApiId\"]}, \"FieldName\": \"all\", \"TypeName\": \"Query\", \"DataSourceName\": \"ItemsDynamoDataSource\", \"RequestMappingTemplate\": \"{\n        \"version\": \"2017-02-28\",\n        \"operation\": \"Scan\",\n        \"limit\": $util.defaultIfNull($ctx.args.limit, 20),\n        \"nextToken\": $util.toJson($util.defaultIfNullOrEmpty($ctx.args.nextToken, null))\n      }\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result)\"}, \"DependsOn\": [\"ItemsSchema\"], \"Metadata\": {\"aws:cdk:path\": \"AppSyncGraphQLDynamoDBExample/GetAllQueryResolver\"}}, \"SaveMutationResolver\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ItemsApi\", \"ApiId\"]}, \"FieldName\": \"save\", \"TypeName\": \"Mutation\", \"DataSourceName\": \"ItemsDynamoDataSource\", \"RequestMappingTemplate\": \"{\n        \"version\": \"2017-02-28\",\n        \"operation\": \"PutItem\",\n        \"key\": {\n          \"itemsId\": { \"S\": \"$util.autoId()\" }\n        },\n        \"attributeValues\": {\n          \"name\": $util.dynamodb.toDynamoDBJson($ctx.args.name)\n        }\n      }\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result)\"}, \"DependsOn\": [\"ItemsSchema\"], \"Metadata\": {\"aws:cdk:path\": \"AppSyncGraphQLDynamoDBExample/SaveMutationResolver\"}}, \"DeleteMutationResolver\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"ItemsApi\", \"ApiId\"]}, \"FieldName\": \"delete\", \"TypeName\": \"Mutation\", \"DataSourceName\": \"ItemsDynamoDataSource\", \"RequestMappingTemplate\": \"{\n        \"version\": \"2017-02-28\",\n        \"operation\": \"DeleteItem\",\n        \"key\": {\n          \"itemsId\": $util.dynamodb.toDynamoDBJson($ctx.args.itemsId)\n        }\n      }\", \"ResponseMappingTemplate\": \"$util.toJson($ctx.result)\"}, \"DependsOn\": [\"ItemsSchema\"], \"Metadata\": {\"aws:cdk:path\": \"AppSyncGraphQLDynamoDBExample/DeleteMutationResolver\"}}, \"CDKMetadata\": {\"Type\": \"AWS::CDK::Metadata\", \"Properties\": {\"Analytics\": \"v2:deflate64:H4sIAAAAAAAA/02PzQ6CMBCEn8V7qcpFrgYTD3oRvJulrWGR/oQWDGn67rYQo6eZ+Ta7k81pcaC7Dbxtxvgr67GhvnbAXiSihwdj7KwY9eVTnQcw7e16NEhiinIRM/nxmrVCQgIncFDrcWAipUpY3U9iCITPCqTmseEOTb8MFxMIgqS+0itLGgJJe/83vr7UiqNDrQJRmgva2e20L2gev+gsYjaMyqEUtFr1AypL7pPhAAAA\"}, \"Metadata\": {\"aws:cdk:path\": \"AppSyncGraphQLDynamoDBExample/CDKMetadata/Default\"}, \"Condition\": \"CDKMetadataAvailable\"}}, \"Conditions\": {\"CDKMetadataAvailable\": {\"Fn::Or\": [{\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"af-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ca-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-northwest-1\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-3\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"me-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"sa-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-2\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-2\"]}]}]}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import cdk = require('aws-cdk-lib');\nimport { CfnGraphQLApi, CfnApiKey, CfnGraphQLSchema, CfnDataSource, CfnResolver } from 'aws-cdk-lib/aws-appsync';\nimport { Table, AttributeType, StreamViewType, BillingMode } from 'aws-cdk-lib/aws-dynamodb';\nimport { Role, ServicePrincipal, ManagedPolicy } from 'aws-cdk-lib/aws-iam';\nimport { Construct } from 'constructs';\n\nexport class AppSyncCdkStack extends cdk.Stack {\n\n  constructor(scope: Construct, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n\n    const tableName = 'items'\n\n    const itemsGraphQLApi = new CfnGraphQLApi(this, 'ItemsApi', {\n      name: 'items-api',\n      authenticationType: 'API_KEY'\n    });\n\n    new CfnApiKey(this, 'ItemsApiKey', {\n      apiId: itemsGraphQLApi.attrApiId\n    });\n\n    const apiSchema = new CfnGraphQLSchema(this, 'ItemsSchema', {\n      apiId: itemsGraphQLApi.attrApiId,\n      definition: `type ${tableName} {\n        ${tableName}Id: ID!\n        name: String\n      }\n      type Paginated${tableName} {\n        items: [${tableName}!]!\n        nextToken: String\n      }\n      type Query {\n        all(limit: Int, nextToken: String): Paginated${tableName}!\n        getOne(${tableName}Id: ID!): ${tableName}\n      }\n      type Mutation {\n        save(name: String!): ${tableName}\n        delete(${tableName}Id: ID!): ${tableName}\n      }\n      type Schema {\n        query: Query\n        mutation: Mutation\n      }`\n    });\n\n    const itemsTable = new Table(this, 'ItemsTable', {\n      tableName: tableName,\n      partitionKey: {\n        name: `${tableName}Id`,\n        type: AttributeType.STRING\n      },\n      billingMode: BillingMode.PAY_PER_REQUEST,\n      stream: StreamViewType.NEW_IMAGE,\n\n      // The default removal policy is RETAIN, which means that cdk destroy will not attempt to delete\n      // the new table, and it will remain in your account until manually deleted. By setting the policy to\n      // DESTROY, cdk destroy will delete the table (even if it has data in it)\n      removalPolicy: cdk.RemovalPolicy.DESTROY, // NOT recommended for production code\n    });\n\n    const itemsTableRole = new Role(this, 'ItemsDynamoDBRole', {\n      assumedBy: new ServicePrincipal('appsync.amazonaws.com')\n    });\n\n    itemsTableRole.addManagedPolicy(ManagedPolicy.fromAwsManagedPolicyName('AmazonDynamoDBFullAccess'));\n\n    const dataSource = new CfnDataSource(this, 'ItemsDataSource', {\n      apiId: itemsGraphQLApi.attrApiId,\n      name: 'ItemsDynamoDataSource',\n      type: 'AMAZON_DYNAMODB',\n      dynamoDbConfig: {\n        tableName: itemsTable.tableName,\n        awsRegion: this.region\n      },\n      serviceRoleArn: itemsTableRole.roleArn\n    });\n\n    const getOneResolver = new CfnResolver(this, 'GetOneQueryResolver', {\n      apiId: itemsGraphQLApi.attrApiId,\n      typeName: 'Query',\n      fieldName: 'getOne',\n      dataSourceName: dataSource.name,\n      requestMappingTemplate: `{\n        \"version\": \"2017-02-28\",\n        \"operation\": \"GetItem\",\n        \"key\": {\n          \"${tableName}Id\": $util.dynamodb.toDynamoDBJson($ctx.args.${tableName}Id)\n        }\n      }`,\n      responseMappingTemplate: `$util.toJson($ctx.result)`\n    });\n    getOneResolver.addDependsOn(apiSchema);\n\n    const getAllResolver = new CfnResolver(this, 'GetAllQueryResolver', {\n      apiId: itemsGraphQLApi.attrApiId,\n      typeName: 'Query',\n      fieldName: 'all',\n      dataSourceName: dataSource.name,\n      requestMappingTemplate: `{\n        \"version\": \"2017-02-28\",\n        \"operation\": \"Scan\",\n        \"limit\": $util.defaultIfNull($ctx.args.limit, 20),\n        \"nextToken\": $util.toJson($util.defaultIfNullOrEmpty($ctx.args.nextToken, null))\n      }`,\n      responseMappingTemplate: `$util.toJson($ctx.result)`\n    });\n    getAllResolver.addDependsOn(apiSchema);\n\n    const saveResolver = new CfnResolver(this, 'SaveMutationResolver', {\n      apiId: itemsGraphQLApi.attrApiId,\n      typeName: 'Mutation',\n      fieldName: 'save',\n      dataSourceName: dataSource.name,\n      requestMappingTemplate: `{\n        \"version\": \"2017-02-28\",\n        \"operation\": \"PutItem\",\n        \"key\": {\n          \"${tableName}Id\": { \"S\": \"$util.autoId()\" }\n        },\n        \"attributeValues\": {\n          \"name\": $util.dynamodb.toDynamoDBJson($ctx.args.name)\n        }\n      }`,\n      responseMappingTemplate: `$util.toJson($ctx.result)`\n    });\n    saveResolver.addDependsOn(apiSchema);\n\n    const deleteResolver = new CfnResolver(this, 'DeleteMutationResolver', {\n      apiId: itemsGraphQLApi.attrApiId,\n      typeName: 'Mutation',\n      fieldName: 'delete',\n      dataSourceName: dataSource.name,\n      requestMappingTemplate: `{\n        \"version\": \"2017-02-28\",\n        \"operation\": \"DeleteItem\",\n        \"key\": {\n          \"${tableName}Id\": $util.dynamodb.toDynamoDBJson($ctx.args.${tableName}Id)\n        }\n      }`,\n      responseMappingTemplate: `$util.toJson($ctx.result)`\n    });\n    deleteResolver.addDependsOn(apiSchema);\n\n  }\n}\n\nconst app = new cdk.App();\nnew AppSyncCdkStack(app, 'AppSyncGraphQLDynamoDBExample');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"AppSync2EventBridgeApi\": {\"Type\": \"AWS::AppSync::GraphQLApi\", \"Properties\": {\"AuthenticationType\": \"API_KEY\", \"Name\": \"AppSync2EventBridge-API\"}, \"Metadata\": {\"aws:cdk:path\": \"AppSyncEventBridge/AppSync2EventBridgeApi\"}}, \"AppSync2EventBridgeApiKey\": {\"Type\": \"AWS::AppSync::ApiKey\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"AppSync2EventBridgeApi\", \"ApiId\"]}}, \"Metadata\": {\"aws:cdk:path\": \"AppSyncEventBridge/AppSync2EventBridgeApiKey\"}}, \"ItemsSchema\": {\"Type\": \"AWS::AppSync::GraphQLSchema\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"AppSync2EventBridgeApi\", \"ApiId\"]}, \"Definition\": \"type Event {\n        result: String\n      }\n\n      type Mutation {\n        putEvent(event: String!): Event\n      }\n\n      type Query {\n        getEvent: Event\n      }\n\n      schema {\n        query: Query\n        mutation: Mutation\n      }\"}, \"Metadata\": {\"aws:cdk:path\": \"AppSyncEventBridge/ItemsSchema\"}}, \"AppSyncEventBridgeRoleE2F34FE0\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"appsync.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}, \"Metadata\": {\"aws:cdk:path\": \"AppSyncEventBridge/AppSyncEventBridgeRole/Resource\"}}, \"AppSyncEventBridgeRoleDefaultPolicyC796B118\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"events:Put*\", \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"AppSyncEventBridgeRoleDefaultPolicyC796B118\", \"Roles\": [{\"Ref\": \"AppSyncEventBridgeRoleE2F34FE0\"}]}, \"Metadata\": {\"aws:cdk:path\": \"AppSyncEventBridge/AppSyncEventBridgeRole/DefaultPolicy/Resource\"}}, \"ItemsDataSource\": {\"Type\": \"AWS::AppSync::DataSource\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"AppSync2EventBridgeApi\", \"ApiId\"]}, \"Name\": \"EventBridgeDataSource\", \"Type\": \"HTTP\", \"HttpConfig\": {\"AuthorizationConfig\": {\"AuthorizationType\": \"AWS_IAM\", \"AwsIamConfig\": {\"SigningRegion\": {\"Ref\": \"AWS::Region\"}, \"SigningServiceName\": \"events\"}}, \"Endpoint\": {\"Fn::Join\": [\"\", [\"https://events.\", {\"Ref\": \"AWS::Region\"}, \".amazonaws.com/\"]]}}, \"ServiceRoleArn\": {\"Fn::GetAtt\": [\"AppSyncEventBridgeRoleE2F34FE0\", \"Arn\"]}}, \"Metadata\": {\"aws:cdk:path\": \"AppSyncEventBridge/ItemsDataSource\"}}, \"PutEventMutationResolver\": {\"Type\": \"AWS::AppSync::Resolver\", \"Properties\": {\"ApiId\": {\"Fn::GetAtt\": [\"AppSync2EventBridgeApi\", \"ApiId\"]}, \"FieldName\": \"putEvent\", \"TypeName\": \"Mutation\", \"DataSourceName\": \"EventBridgeDataSource\", \"RequestMappingTemplate\": \"{\n        \\\"version\\\": \\\"2018-05-29\\\",\n        \\\"method\\\": \\\"POST\\\",\n        \\\"resourcePath\\\": \\\"/\\\",\n        \\\"params\\\": {\n          \\\"headers\\\": {\n            \\\"content-type\\\": \\\"application/x-amz-json-1.1\\\",\n            \\\"x-amz-target\\\":\\\"AWSEvents.PutEvents\\\"\n          },\n          \\\"body\\\": {\n            \\\"Entries\\\":[\n              {\n                \\\"Source\\\":\\\"appsync\\\",\n                \\\"EventBusName\\\": \\\"default\\\",\n                \\\"Detail\\\":\\\"{ \\\"event\\\": \\\"$ctx.arguments.event\\\"}\\\",\n                \\\"DetailType\\\":\\\"Event Bridge via GraphQL\\\"\n               }\n            ]\n          }\n        }\n      }\", \"ResponseMappingTemplate\": \"## Raise a GraphQL field error in case of a datasource invocation error\n      #if($ctx.error)\n        $util.error($ctx.error.message, $ctx.error.type)\n      #end\n      ## if the response status code is not 200, then return an error. Else return the body **\n      #if($ctx.result.statusCode == 200)\n          ## If response is 200, return the body.\n          {\n            \\\"result\\\": \\\"$util.parseJson($ctx.result.body)\\\"\n          }\n      #else\n          ## If response is not 200, append the response to error block.\n          $utils.appendError($ctx.result.body, $ctx.result.statusCode)\n      #end\"}, \"DependsOn\": [\"ItemsSchema\"], \"Metadata\": {\"aws:cdk:path\": \"AppSyncEventBridge/PutEventMutationResolver\"}}, \"echoFunctionServiceRole1EBD6DF0\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}, \"Metadata\": {\"aws:cdk:path\": \"AppSyncEventBridge/echoFunction/ServiceRole/Resource\"}}, \"echoFunction5207BE9B\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"exports.handler = (event, context) => { console.log(event); context.succeed(event); }\"}, \"Role\": {\"Fn::GetAtt\": [\"echoFunctionServiceRole1EBD6DF0\", \"Arn\"]}, \"Handler\": \"index.handler\", \"Runtime\": \"nodejs16.x\"}, \"DependsOn\": [\"echoFunctionServiceRole1EBD6DF0\"], \"Metadata\": {\"aws:cdk:path\": \"AppSyncEventBridge/echoFunction/Resource\"}}, \"AppSyncEventBridgeRle2A25B9B1\": {\"Type\": \"AWS::Events::Rule\", \"Properties\": {\"EventPattern\": {\"source\": [\"appsync\"]}, \"State\": \"ENABLED\", \"Targets\": [{\"Arn\": {\"Fn::GetAtt\": [\"echoFunction5207BE9B\", \"Arn\"]}, \"Id\": \"Target0\"}]}, \"Metadata\": {\"aws:cdk:path\": \"AppSyncEventBridge/AppSyncEventBridgeRle/Resource\"}}, \"AppSyncEventBridgeRleAllowEventRuleAppSyncEventBridgeechoFunction7F06E48E35535C50\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"echoFunction5207BE9B\", \"Arn\"]}, \"Principal\": \"events.amazonaws.com\", \"SourceArn\": {\"Fn::GetAtt\": [\"AppSyncEventBridgeRle2A25B9B1\", \"Arn\"]}}, \"Metadata\": {\"aws:cdk:path\": \"AppSyncEventBridge/AppSyncEventBridgeRle/AllowEventRuleAppSyncEventBridgeechoFunction7F06E48E\"}}, \"CDKMetadata\": {\"Type\": \"AWS::CDK::Metadata\", \"Properties\": {\"Analytics\": \"v2:deflate64:H4sIAAAAAAAA/02PzY7CMAyEn2XvqWG5wBWBdg9wgPYBkEmNMOSnStIiFOXdSSgITjPzWR7LM1jMYfqDN1/J9lopPkJsAsqryOgQsev83UiIq5P5d9id99tlxyKnLBu6iw9v5Jk0FrDGgI3tnaSSavJWDeSSYNQQa6tGXHRnFctnyeiSUKiPLUL8640MbE2ZffsdOc3e55QEDWSCz5X9qzJrSqIc/D7+9itrWg7PTWNbgoufDL8LmOX3L565cr0JrAnqUR8R2NBAGgEAAA==\"}, \"Metadata\": {\"aws:cdk:path\": \"AppSyncEventBridge/CDKMetadata/Default\"}, \"Condition\": \"CDKMetadataAvailable\"}}, \"Conditions\": {\"CDKMetadataAvailable\": {\"Fn::Or\": [{\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"af-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ca-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-northwest-1\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-3\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"me-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"sa-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-2\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-2\"]}]}]}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import cdk = require(\"aws-cdk-lib\");\nimport {\n  CfnGraphQLApi,\n  CfnApiKey,\n  CfnGraphQLSchema,\n  CfnDataSource,\n  CfnResolver\n} from \"aws-cdk-lib/aws-appsync\";\nimport { Role, ServicePrincipal, PolicyStatement } from \"aws-cdk-lib/aws-iam\";\nimport { Rule } from \"aws-cdk-lib/aws-events\";\nimport lambda = require(\"aws-cdk-lib/aws-lambda\");\nimport targets = require(\"aws-cdk-lib/aws-events-targets\");\nimport { Construct } from 'constructs';\n\nexport class AppSyncCdkStack extends cdk.Stack {\n  constructor(scope: Construct, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n\n    const appSync2EventBridgeGraphQLApi = new CfnGraphQLApi(\n      this,\n      \"AppSync2EventBridgeApi\",\n      {\n        name: \"AppSync2EventBridge-API\",\n        authenticationType: \"API_KEY\"\n      }\n    );\n\n    new CfnApiKey(this, \"AppSync2EventBridgeApiKey\", {\n      apiId: appSync2EventBridgeGraphQLApi.attrApiId\n    });\n\n    const apiSchema = new CfnGraphQLSchema(this, \"ItemsSchema\", {\n      apiId: appSync2EventBridgeGraphQLApi.attrApiId,\n      definition: `type Event {\n        result: String\n      }\n\n      type Mutation {\n        putEvent(event: String!): Event\n      }\n\n      type Query {\n        getEvent: Event\n      }\n\n      schema {\n        query: Query\n        mutation: Mutation\n      }`\n    });\n\n    const appsyncEventBridgeRole = new Role(this, \"AppSyncEventBridgeRole\", {\n      assumedBy: new ServicePrincipal(\"appsync.amazonaws.com\")\n    });\n\n    appsyncEventBridgeRole.addToPolicy(\n      new PolicyStatement({\n        resources: [\"*\"],\n        actions: [\"events:Put*\"]\n      })\n    );\n\n    const dataSource = new CfnDataSource(this, \"ItemsDataSource\", {\n      apiId: appSync2EventBridgeGraphQLApi.attrApiId,\n      name: \"EventBridgeDataSource\",\n      type: \"HTTP\",\n      httpConfig: {\n        authorizationConfig: {\n          authorizationType: \"AWS_IAM\",\n          awsIamConfig: {\n            signingRegion: this.region,\n            signingServiceName: \"events\"\n          }\n        },\n        endpoint: \"https://events.\" + this.region + \".amazonaws.com/\"\n      },\n      serviceRoleArn: appsyncEventBridgeRole.roleArn\n    });\n\n    const putEventResolver = new CfnResolver(this, \"PutEventMutationResolver\", {\n      apiId: appSync2EventBridgeGraphQLApi.attrApiId,\n      typeName: \"Mutation\",\n      fieldName: \"putEvent\",\n      dataSourceName: dataSource.name,\n      requestMappingTemplate: `{\n        \"version\": \"2018-05-29\",\n        \"method\": \"POST\",\n        \"resourcePath\": \"/\",\n        \"params\": {\n          \"headers\": {\n            \"content-type\": \"application/x-amz-json-1.1\",\n            \"x-amz-target\":\"AWSEvents.PutEvents\"\n          },\n          \"body\": {\n            \"Entries\":[\n              {\n                \"Source\":\"appsync\",\n                \"EventBusName\": \"default\",\n                \"Detail\":\"{ \\\\\\\"event\\\\\\\": \\\\\\\"$ctx.arguments.event\\\\\\\"}\",\n                \"DetailType\":\"Event Bridge via GraphQL\"\n               }\n            ]\n          }\n        }\n      }`,\n      responseMappingTemplate: `## Raise a GraphQL field error in case of a datasource invocation error\n      #if($ctx.error)\n        $util.error($ctx.error.message, $ctx.error.type)\n      #end\n      ## if the response status code is not 200, then return an error. Else return the body **\n      #if($ctx.result.statusCode == 200)\n          ## If response is 200, return the body.\n          {\n            \"result\": \"$util.parseJson($ctx.result.body)\"\n          }\n      #else\n          ## If response is not 200, append the response to error block.\n          $utils.appendError($ctx.result.body, $ctx.result.statusCode)\n      #end`\n    });\n    putEventResolver.addDependsOn(apiSchema);\n\n    const echoLambda = new lambda.Function(this, \"echoFunction\", {\n      code: lambda.Code.fromInline(\n        \"exports.handler = (event, context) => { console.log(event); context.succeed(event); }\"\n      ),\n      handler: \"index.handler\",\n      runtime: lambda.Runtime.NODEJS_16_X\n    });\n\n    const rule = new Rule(this, \"AppSyncEventBridgeRle\", {\n      eventPattern: {\n        source: [\"appsync\"]\n      }\n    });\n    rule.addTarget(new targets.LambdaFunction(echoLambda));\n  }\n}\n\nconst app = new cdk.App();\nnew AppSyncCdkStack(app, \"AppSyncEventBridge\");\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"VPCB9E5F0B4\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"LoadBalancerStack/VPC\"}]}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/VPC/Resource\"}}, \"VPCPublicSubnet1SubnetB4246D30\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"LoadBalancerStack/VPC/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/VPC/PublicSubnet1/Subnet\"}}, \"VPCPublicSubnet1RouteTableFEE4B781\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"LoadBalancerStack/VPC/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/VPC/PublicSubnet1/RouteTable\"}}, \"VPCPublicSubnet1RouteTableAssociation0B0896DC\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/VPC/PublicSubnet1/RouteTableAssociation\"}}, \"VPCPublicSubnet1DefaultRoute91CEF279\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"], \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/VPC/PublicSubnet1/DefaultRoute\"}}, \"VPCPublicSubnet1EIP6AD938E8\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"LoadBalancerStack/VPC/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/VPC/PublicSubnet1/EIP\"}}, \"VPCPublicSubnet1NATGatewayE0556630\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet1EIP6AD938E8\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"LoadBalancerStack/VPC/PublicSubnet1\"}]}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\"], \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/VPC/PublicSubnet1/NATGateway\"}}, \"VPCPublicSubnet2Subnet74179F39\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"LoadBalancerStack/VPC/PublicSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/VPC/PublicSubnet2/Subnet\"}}, \"VPCPublicSubnet2RouteTable6F1A15F1\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"LoadBalancerStack/VPC/PublicSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/VPC/PublicSubnet2/RouteTable\"}}, \"VPCPublicSubnet2RouteTableAssociation5A808732\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/VPC/PublicSubnet2/RouteTableAssociation\"}}, \"VPCPublicSubnet2DefaultRouteB7481BBA\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"], \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/VPC/PublicSubnet2/DefaultRoute\"}}, \"VPCPublicSubnet2EIP4947BC00\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"LoadBalancerStack/VPC/PublicSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/VPC/PublicSubnet2/EIP\"}}, \"VPCPublicSubnet2NATGateway3C070193\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet2EIP4947BC00\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"LoadBalancerStack/VPC/PublicSubnet2\"}]}, \"DependsOn\": [\"VPCPublicSubnet2DefaultRouteB7481BBA\", \"VPCPublicSubnet2RouteTableAssociation5A808732\"], \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/VPC/PublicSubnet2/NATGateway\"}}, \"VPCPrivateSubnet1Subnet8BCA10E0\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"LoadBalancerStack/VPC/PrivateSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/VPC/PrivateSubnet1/Subnet\"}}, \"VPCPrivateSubnet1RouteTableBE8A6027\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"LoadBalancerStack/VPC/PrivateSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/VPC/PrivateSubnet1/RouteTable\"}}, \"VPCPrivateSubnet1RouteTableAssociation347902D1\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/VPC/PrivateSubnet1/RouteTableAssociation\"}}, \"VPCPrivateSubnet1DefaultRouteAE1D6490\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet1NATGatewayE0556630\"}}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/VPC/PrivateSubnet1/DefaultRoute\"}}, \"VPCPrivateSubnet2SubnetCFCDAA7A\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"LoadBalancerStack/VPC/PrivateSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/VPC/PrivateSubnet2/Subnet\"}}, \"VPCPrivateSubnet2RouteTable0A19E10E\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"LoadBalancerStack/VPC/PrivateSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/VPC/PrivateSubnet2/RouteTable\"}}, \"VPCPrivateSubnet2RouteTableAssociation0C73D413\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/VPC/PrivateSubnet2/RouteTableAssociation\"}}, \"VPCPrivateSubnet2DefaultRouteF4F5CFD2\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet2NATGateway3C070193\"}}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/VPC/PrivateSubnet2/DefaultRoute\"}}, \"VPCIGWB7E252D3\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"LoadBalancerStack/VPC\"}]}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/VPC/IGW\"}}, \"VPCVPCGW99B986DC\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"InternetGatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/VPC/VPCGW\"}}, \"ASGInstanceSecurityGroup0525485D\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"LoadBalancerStack/ASG/InstanceSecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"Tags\": [{\"Key\": \"Name\", \"Value\": \"LoadBalancerStack/ASG\"}], \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/ASG/InstanceSecurityGroup/Resource\"}}, \"ASGInstanceSecurityGroupfromLoadBalancerStackLBSecurityGroupB71A4BA880C28BC1C3\": {\"Type\": \"AWS::EC2::SecurityGroupIngress\", \"Properties\": {\"IpProtocol\": \"tcp\", \"Description\": \"Port 80 LB to fleet\", \"FromPort\": 80, \"GroupId\": {\"Fn::GetAtt\": [\"ASGInstanceSecurityGroup0525485D\", \"GroupId\"]}, \"SourceSecurityGroupId\": {\"Fn::GetAtt\": [\"LBSecurityGroup8A41EA2B\", \"GroupId\"]}, \"ToPort\": 80}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/ASG/InstanceSecurityGroup/from LoadBalancerStackLBSecurityGroupB71A4BA8:80\"}}, \"ASGInstanceRoleE263A41B\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"ec2.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"LoadBalancerStack/ASG\"}]}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/ASG/InstanceRole/Resource\"}}, \"ASGInstanceProfile0A2834D7\": {\"Type\": \"AWS::IAM::InstanceProfile\", \"Properties\": {\"Roles\": [{\"Ref\": \"ASGInstanceRoleE263A41B\"}]}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/ASG/InstanceProfile\"}}, \"ASGLaunchConfigC00AF12B\": {\"Type\": \"AWS::AutoScaling::LaunchConfiguration\", \"Properties\": {\"ImageId\": {\"Ref\": \"SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter\"}, \"InstanceType\": \"t2.micro\", \"IamInstanceProfile\": {\"Ref\": \"ASGInstanceProfile0A2834D7\"}, \"SecurityGroups\": [{\"Fn::GetAtt\": [\"ASGInstanceSecurityGroup0525485D\", \"GroupId\"]}], \"UserData\": {\"Fn::Base64\": \"#!/bin/bash\"}}, \"DependsOn\": [\"ASGInstanceRoleE263A41B\"], \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/ASG/LaunchConfig\"}}, \"ASG46ED3070\": {\"Type\": \"AWS::AutoScaling::AutoScalingGroup\", \"Properties\": {\"MaxSize\": \"1\", \"MinSize\": \"1\", \"LaunchConfigurationName\": {\"Ref\": \"ASGLaunchConfigC00AF12B\"}, \"LoadBalancerNames\": [{\"Ref\": \"LB8A12904C\"}], \"Tags\": [{\"Key\": \"Name\", \"PropagateAtLaunch\": true, \"Value\": \"LoadBalancerStack/ASG\"}], \"VPCZoneIdentifier\": [{\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}, {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}]}, \"UpdatePolicy\": {\"AutoScalingScheduledAction\": {\"IgnoreUnmodifiedGroupSizeProperties\": true}}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/ASG/ASG\"}}, \"LBSecurityGroup8A41EA2B\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"LoadBalancerStack/LB/SecurityGroup\", \"SecurityGroupIngress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Default rule allow on 80\", \"FromPort\": 80, \"IpProtocol\": \"tcp\", \"ToPort\": 80}], \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/LB/SecurityGroup/Resource\"}}, \"LBSecurityGrouptoLoadBalancerStackASGInstanceSecurityGroupB0050A1780E09A2D36\": {\"Type\": \"AWS::EC2::SecurityGroupEgress\", \"Properties\": {\"GroupId\": {\"Fn::GetAtt\": [\"LBSecurityGroup8A41EA2B\", \"GroupId\"]}, \"IpProtocol\": \"tcp\", \"Description\": \"Port 80 LB to fleet\", \"DestinationSecurityGroupId\": {\"Fn::GetAtt\": [\"ASGInstanceSecurityGroup0525485D\", \"GroupId\"]}, \"FromPort\": 80, \"ToPort\": 80}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/LB/SecurityGroup/to LoadBalancerStackASGInstanceSecurityGroupB0050A17:80\"}}, \"LB8A12904C\": {\"Type\": \"AWS::ElasticLoadBalancing::LoadBalancer\", \"Properties\": {\"Listeners\": [{\"InstancePort\": \"80\", \"InstanceProtocol\": \"http\", \"LoadBalancerPort\": \"80\", \"Protocol\": \"http\"}], \"CrossZone\": true, \"HealthCheck\": {\"HealthyThreshold\": \"2\", \"Interval\": \"30\", \"Target\": \"HTTP:80/\", \"Timeout\": \"5\", \"UnhealthyThreshold\": \"5\"}, \"Scheme\": \"internet-facing\", \"SecurityGroups\": [{\"Fn::GetAtt\": [\"LBSecurityGroup8A41EA2B\", \"GroupId\"]}], \"Subnets\": [{\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}, {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}]}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\", \"VPCPublicSubnet2DefaultRouteB7481BBA\", \"VPCPublicSubnet2RouteTableAssociation5A808732\"], \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/LB/Resource\"}}, \"CDKMetadata\": {\"Type\": \"AWS::CDK::Metadata\", \"Properties\": {\"Analytics\": \"v2:deflate64:H4sIAAAAAAAA/31RwW7CMAz9lt3TbOMyrh1CqBKaqnbiOrmpAUOaoMQBoar/vrQdFG3STn7v+cl+TmZy/iZfnuDiE1UfE02VbEsGdRRR+mpRzWS7OSmx2JpNvhB5qDSpMlQGudcmVNjA+AmVxkmftNR7qwiYrLmbe7DM8r58AK+A8QJXkTs6RzgNzgyji/hmGJP8sJRj1n2DhkWJKjji68rZcBoy/CtkZufQ+z/6cpA7AYGtV6DJ7GSbRlKO5D5tDcGo/cKaLe2Cu5/229oJgka2hR0f5lYz4xmMwtzZLWnsBGrwTEpbqCvQsTUsXkf6PlB0w9IH3nWiQG+DU8PEHBw0yKPvsREj1tTH64SxNcqDfz6/zuUsfvvBEyUuGKYGZTHWbwg3cWoSAgAA\"}, \"Metadata\": {\"aws:cdk:path\": \"LoadBalancerStack/CDKMetadata/Default\"}, \"Condition\": \"CDKMetadataAvailable\"}}, \"Parameters\": {\"SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter\": {\"Type\": \"AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>\", \"Default\": \"/aws/service/ami-amazon-linux-latest/amzn-ami-hvm-x86_64-gp2\"}, \"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Conditions\": {\"CDKMetadataAvailable\": {\"Fn::Or\": [{\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"af-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ca-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-northwest-1\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-3\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"me-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"sa-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-2\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-2\"]}]}]}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "#!/usr/bin/env node\nimport autoscaling = require('aws-cdk-lib/aws-autoscaling');\nimport ec2 = require('aws-cdk-lib/aws-ec2');\nimport elb = require('aws-cdk-lib/aws-elasticloadbalancing');\nimport cdk = require('aws-cdk-lib');\n\nclass LoadBalancerStack extends cdk.Stack {\n  constructor(app: cdk.App, id: string) {\n    super(app, id);\n\n    const vpc = new ec2.Vpc(this, 'VPC');\n\n    const asg = new autoscaling.AutoScalingGroup(this, 'ASG', {\n      vpc,\n      instanceType: ec2.InstanceType.of(ec2.InstanceClass.T2, ec2.InstanceSize.MICRO),\n      machineImage: new ec2.AmazonLinuxImage(),\n    });\n\n    const lb = new elb.LoadBalancer(this, 'LB', {\n      vpc,\n      internetFacing: true,\n      healthCheck: {\n        port: 80\n      },\n    });\n\n    lb.addTarget(asg);\n    const listener = lb.addListener({ externalPort: 80 });\n\n    listener.connections.allowDefaultPortFromAnyIpv4('Open to the world');\n  }\n}\n\nconst app = new cdk.App();\nnew LoadBalancerStack(app, 'LoadBalancerStack');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"AppConfigApplication\": {\"Type\": \"AWS::AppConfig::Application\", \"Properties\": {\"Name\": \"MyApplication\"}, \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationEcs/AppConfigApplication\"}}, \"AppConfigEnvironment\": {\"Type\": \"AWS::AppConfig::Environment\", \"Properties\": {\"ApplicationId\": {\"Ref\": \"AppConfigApplication\"}, \"Name\": \"MyEnvironment\"}, \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationEcs/AppConfigEnvironment\"}}, \"EvidentlyProject\": {\"Type\": \"AWS::Evidently::Project\", \"Properties\": {\"Name\": \"WebPage\", \"AppConfigResource\": {\"ApplicationId\": {\"Ref\": \"AppConfigApplication\"}, \"EnvironmentId\": {\"Ref\": \"AppConfigEnvironment\"}}}, \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationEcs/EvidentlyProject\"}}, \"EvidentlyFeature\": {\"Type\": \"AWS::Evidently::Feature\", \"Properties\": {\"Name\": \"SearchBar\", \"Project\": \"WebPage\", \"Variations\": [{\"BooleanValue\": false, \"VariationName\": \"oldSearchBar\"}, {\"BooleanValue\": true, \"VariationName\": \"fancyNewSearchBar\"}]}, \"DependsOn\": [\"EvidentlyProject\"], \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationEcs/EvidentlyFeature\"}}, \"EvidentlyLaunch\": {\"Type\": \"AWS::Evidently::Launch\", \"Properties\": {\"Groups\": [{\"Feature\": \"SearchBar\", \"GroupName\": \"oldSearchBar\", \"Variation\": \"oldSearchBar\"}, {\"Feature\": \"SearchBar\", \"GroupName\": \"fancyNewSearchBar\", \"Variation\": \"fancyNewSearchBar\"}], \"Name\": \"MyLaunch\", \"Project\": \"WebPage\", \"ScheduledSplitsConfig\": [{\"GroupWeights\": [{\"GroupName\": \"oldSearchBar\", \"SplitWeight\": 90000}, {\"GroupName\": \"fancyNewSearchBar\", \"SplitWeight\": 10000}], \"StartTime\": \"2022-01-01T00:00:00Z\"}], \"ExecutionStatus\": {\"Status\": \"START\"}}, \"DependsOn\": [\"EvidentlyFeature\"], \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationEcs/EvidentlyLaunch\"}}, \"Vpc8378EB38\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"EvidentlyClientSideEvaluationEcs/Vpc\"}]}, \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationEcs/Vpc/Resource\"}}, \"VpcPublicSubnet1Subnet5C2D37C4\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"EvidentlyClientSideEvaluationEcs/Vpc/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationEcs/Vpc/PublicSubnet1/Subnet\"}}, \"VpcPublicSubnet1RouteTable6C95E38E\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"EvidentlyClientSideEvaluationEcs/Vpc/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationEcs/Vpc/PublicSubnet1/RouteTable\"}}, \"VpcPublicSubnet1RouteTableAssociation97140677\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet1RouteTable6C95E38E\"}, \"SubnetId\": {\"Ref\": \"VpcPublicSubnet1Subnet5C2D37C4\"}}, \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationEcs/Vpc/PublicSubnet1/RouteTableAssociation\"}}, \"VpcPublicSubnet1DefaultRoute3DA9E72A\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet1RouteTable6C95E38E\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VpcIGWD7BA715C\"}}, \"DependsOn\": [\"VpcVPCGWBF912B6E\"], \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationEcs/Vpc/PublicSubnet1/DefaultRoute\"}}, \"VpcPublicSubnet1EIPD7E02669\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"EvidentlyClientSideEvaluationEcs/Vpc/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationEcs/Vpc/PublicSubnet1/EIP\"}}, \"VpcPublicSubnet1NATGateway4D7517AA\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VpcPublicSubnet1Subnet5C2D37C4\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VpcPublicSubnet1EIPD7E02669\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"EvidentlyClientSideEvaluationEcs/Vpc/PublicSubnet1\"}]}, \"DependsOn\": [\"VpcPublicSubnet1DefaultRoute3DA9E72A\", \"VpcPublicSubnet1RouteTableAssociation97140677\"], \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationEcs/Vpc/PublicSubnet1/NATGateway\"}}, \"VpcPublicSubnet2Subnet691E08A3\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"EvidentlyClientSideEvaluationEcs/Vpc/PublicSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationEcs/Vpc/PublicSubnet2/Subnet\"}}, \"VpcPublicSubnet2RouteTable94F7E489\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"EvidentlyClientSideEvaluationEcs/Vpc/PublicSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationEcs/Vpc/PublicSubnet2/RouteTable\"}}, \"VpcPublicSubnet2RouteTableAssociationDD5762D8\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet2RouteTable94F7E489\"}, \"SubnetId\": {\"Ref\": \"VpcPublicSubnet2Subnet691E08A3\"}}, \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationEcs/Vpc/PublicSubnet2/RouteTableAssociation\"}}, \"VpcPublicSubnet2DefaultRoute97F91067\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet2RouteTable94F7E489\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VpcIGWD7BA715C\"}}, \"DependsOn\": [\"VpcVPCGWBF912B6E\"], \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationEcs/Vpc/PublicSubnet2/DefaultRoute\"}}, \"VpcPublicSubnet2EIP3C605A87\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"EvidentlyClientSideEvaluationEcs/Vpc/PublicSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationEcs/Vpc/PublicSubnet2/EIP\"}}, \"VpcPublicSubnet2NATGateway9182C01D\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VpcPublicSubnet2Subnet691E08A3\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VpcPublicSubnet2EIP3C605A87\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"EvidentlyClientSideEvaluationEcs/Vpc/PublicSubnet2\"}]}, \"DependsOn\": [\"VpcPublicSubnet2DefaultRoute97F91067\", \"VpcPublicSubnet2RouteTableAssociationDD5762D8\"], \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationEcs/Vpc/PublicSubnet2/NATGateway\"}}, \"VpcPrivateSubnet1Subnet536B997A\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"EvidentlyClientSideEvaluationEcs/Vpc/PrivateSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationEcs/Vpc/PrivateSubnet1/Subnet\"}}, \"VpcPrivateSubnet1RouteTableB2C5B500\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"EvidentlyClientSideEvaluationEcs/Vpc/PrivateSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationEcs/Vpc/PrivateSubnet1/RouteTable\"}}, \"VpcPrivateSubnet1RouteTableAssociation70C59FA6\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet1RouteTableB2C5B500\"}, \"SubnetId\": {\"Ref\": \"VpcPrivateSubnet1Subnet536B997A\"}}, \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationEcs/Vpc/PrivateSubnet1/RouteTableAssociation\"}}, \"VpcPrivateSubnet1DefaultRouteBE02A9ED\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet1RouteTableB2C5B500\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VpcPublicSubnet1NATGateway4D7517AA\"}}, \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationEcs/Vpc/PrivateSubnet1/DefaultRoute\"}}, \"VpcPrivateSubnet2Subnet3788AAA1\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"EvidentlyClientSideEvaluationEcs/Vpc/PrivateSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationEcs/Vpc/PrivateSubnet2/Subnet\"}}, \"VpcPrivateSubnet2RouteTableA678073B\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"EvidentlyClientSideEvaluationEcs/Vpc/PrivateSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationEcs/Vpc/PrivateSubnet2/RouteTable\"}}, \"VpcPrivateSubnet2RouteTableAssociationA89CAD56\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet2RouteTableA678073B\"}, \"SubnetId\": {\"Ref\": \"VpcPrivateSubnet2Subnet3788AAA1\"}}, \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationEcs/Vpc/PrivateSubnet2/RouteTableAssociation\"}}, \"VpcPrivateSubnet2DefaultRoute060D2087\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet2RouteTableA678073B\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VpcPublicSubnet2NATGateway9182C01D\"}}, \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationEcs/Vpc/PrivateSubnet2/DefaultRoute\"}}, \"VpcIGWD7BA715C\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"EvidentlyClientSideEvaluationEcs/Vpc\"}]}, \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationEcs/Vpc/IGW\"}}, \"VpcVPCGWBF912B6E\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"InternetGatewayId\": {\"Ref\": \"VpcIGWD7BA715C\"}}, \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationEcs/Vpc/VPCGW\"}}, \"ClusterEB0386A7\": {\"Type\": \"AWS::ECS::Cluster\", \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationEcs/Cluster/Resource\"}}, \"FargateServiceLBB353E155\": {\"Type\": \"AWS::ElasticLoadBalancingV2::LoadBalancer\", \"Properties\": {\"LoadBalancerAttributes\": [{\"Key\": \"deletion_protection.enabled\", \"Value\": \"false\"}], \"Scheme\": \"internet-facing\", \"SecurityGroups\": [{\"Fn::GetAtt\": [\"FargateServiceLBSecurityGroup5F444C78\", \"GroupId\"]}], \"Subnets\": [{\"Ref\": \"VpcPublicSubnet1Subnet5C2D37C4\"}, {\"Ref\": \"VpcPublicSubnet2Subnet691E08A3\"}], \"Type\": \"application\"}, \"DependsOn\": [\"VpcPublicSubnet1DefaultRoute3DA9E72A\", \"VpcPublicSubnet1RouteTableAssociation97140677\", \"VpcPublicSubnet2DefaultRoute97F91067\", \"VpcPublicSubnet2RouteTableAssociationDD5762D8\"], \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationEcs/FargateService/LB/Resource\"}}, \"FargateServiceLBSecurityGroup5F444C78\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"Automatically created Security Group for ELB EvidentlyClientSideEvaluationEcsFargateServiceLBA0EE184B\", \"SecurityGroupIngress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow from anyone on port 80\", \"FromPort\": 80, \"IpProtocol\": \"tcp\", \"ToPort\": 80}], \"VpcId\": {\"Ref\": \"Vpc8378EB38\"}}, \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationEcs/FargateService/LB/SecurityGroup/Resource\"}}, \"FargateServiceLBSecurityGrouptoEvidentlyClientSideEvaluationEcsFargateServiceSecurityGroup8D28405F80E31E1016\": {\"Type\": \"AWS::EC2::SecurityGroupEgress\", \"Properties\": {\"GroupId\": {\"Fn::GetAtt\": [\"FargateServiceLBSecurityGroup5F444C78\", \"GroupId\"]}, \"IpProtocol\": \"tcp\", \"Description\": \"Load balancer to target\", \"DestinationSecurityGroupId\": {\"Fn::GetAtt\": [\"FargateServiceSecurityGroup262B61DD\", \"GroupId\"]}, \"FromPort\": 80, \"ToPort\": 80}, \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationEcs/FargateService/LB/SecurityGroup/to EvidentlyClientSideEvaluationEcsFargateServiceSecurityGroup8D28405F:80\"}}, \"FargateServiceLBPublicListener4B4929CA\": {\"Type\": \"AWS::ElasticLoadBalancingV2::Listener\", \"Properties\": {\"DefaultActions\": [{\"TargetGroupArn\": {\"Ref\": \"FargateServiceLBPublicListenerECSGroupBE57E081\"}, \"Type\": \"forward\"}], \"LoadBalancerArn\": {\"Ref\": \"FargateServiceLBB353E155\"}, \"Port\": 80, \"Protocol\": \"HTTP\"}, \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationEcs/FargateService/LB/PublicListener/Resource\"}}, \"FargateServiceLBPublicListenerECSGroupBE57E081\": {\"Type\": \"AWS::ElasticLoadBalancingV2::TargetGroup\", \"Properties\": {\"Port\": 80, \"Protocol\": \"HTTP\", \"TargetGroupAttributes\": [{\"Key\": \"stickiness.enabled\", \"Value\": \"false\"}], \"TargetType\": \"ip\", \"VpcId\": {\"Ref\": \"Vpc8378EB38\"}}, \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationEcs/FargateService/LB/PublicListener/ECSGroup/Resource\"}}, \"FargateServiceTaskDefTaskRole8CDCF85E\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"ecs-tasks.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}, \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationEcs/FargateService/TaskDef/TaskRole/Resource\"}}, \"FargateServiceTaskDefTaskRoleDefaultPolicy63F83D6F\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"appconfig:StartConfigurationSession\", \"appconfig:GetLatestConfiguration\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:aws:appconfig:us-east-1:446584840139:application/\", {\"Ref\": \"AppConfigApplication\"}, \"/environment/\", {\"Ref\": \"AppConfigEnvironment\"}, \"/configuration/*\"]]}}, {\"Action\": \"evidently:PutProjectEvents\", \"Effect\": \"Allow\", \"Resource\": \"arn:aws:evidently:us-east-1:446584840139:project/WebPage\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"FargateServiceTaskDefTaskRoleDefaultPolicy63F83D6F\", \"Roles\": [{\"Ref\": \"FargateServiceTaskDefTaskRole8CDCF85E\"}]}, \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationEcs/FargateService/TaskDef/TaskRole/DefaultPolicy/Resource\"}}, \"FargateServiceTaskDef940E3A80\": {\"Type\": \"AWS::ECS::TaskDefinition\", \"Properties\": {\"ContainerDefinitions\": [{\"Environment\": [{\"Name\": \"DEPLOYMENT_TIME\", \"Value\": \"1689687926870\"}], \"Essential\": true, \"Image\": {\"Fn::Sub\": \"${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:c87b1003b6f5585902462c75b26de7198bb6772627fea7dbea481c9a7e4ebafd\"}, \"LogConfiguration\": {\"LogDriver\": \"awslogs\", \"Options\": {\"awslogs-group\": {\"Ref\": \"FargateServiceTaskDefwebLogGroup71FAF541\"}, \"awslogs-stream-prefix\": \"FargateService\", \"awslogs-region\": {\"Ref\": \"AWS::Region\"}}}, \"Name\": \"web\", \"PortMappings\": [{\"ContainerPort\": 80, \"Protocol\": \"tcp\"}]}, {\"Environment\": [{\"Name\": \"EVIDENTLY_CONFIGURATIONS\", \"Value\": {\"Fn::Join\": [\"\", [\"applications/\", {\"Ref\": \"AppConfigApplication\"}, \"/environments/\", {\"Ref\": \"AppConfigEnvironment\"}, \"/configurations/WebPage\"]]}}, {\"Name\": \"PREFETCH_LIST\", \"Value\": {\"Fn::Join\": [\"\", [\"applications/\", {\"Ref\": \"AppConfigApplication\"}, \"/environments/\", {\"Ref\": \"AppConfigEnvironment\"}, \"/configurations/WebPage\"]]}}], \"Essential\": true, \"Image\": \"public.ecr.aws/aws-appconfig/aws-appconfig-agent:2.x\", \"Name\": \"AppConfigAgent\", \"PortMappings\": [{\"ContainerPort\": 2772, \"Protocol\": \"tcp\"}]}], \"Cpu\": \"256\", \"ExecutionRoleArn\": {\"Fn::GetAtt\": [\"FargateServiceTaskDefExecutionRole9194820E\", \"Arn\"]}, \"Family\": \"EvidentlyClientSideEvaluationEcsFargateServiceTaskDef10B35277\", \"Memory\": \"512\", \"NetworkMode\": \"awsvpc\", \"RequiresCompatibilities\": [\"FARGATE\"], \"TaskRoleArn\": {\"Fn::GetAtt\": [\"FargateServiceTaskDefTaskRole8CDCF85E\", \"Arn\"]}}, \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationEcs/FargateService/TaskDef/Resource\"}}, \"FargateServiceTaskDefwebLogGroup71FAF541\": {\"Type\": \"AWS::Logs::LogGroup\", \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\", \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationEcs/FargateService/TaskDef/web/LogGroup/Resource\"}}, \"FargateServiceTaskDefExecutionRole9194820E\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"ecs-tasks.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}, \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationEcs/FargateService/TaskDef/ExecutionRole/Resource\"}}, \"FargateServiceTaskDefExecutionRoleDefaultPolicy827E7CA2\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"ecr:BatchCheckLayerAvailability\", \"ecr:GetDownloadUrlForLayer\", \"ecr:BatchGetImage\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":ecr:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":repository/\", {\"Fn::Sub\": \"cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}\"}]]}}, {\"Action\": \"ecr:GetAuthorizationToken\", \"Effect\": \"Allow\", \"Resource\": \"*\"}, {\"Action\": [\"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"FargateServiceTaskDefwebLogGroup71FAF541\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"FargateServiceTaskDefExecutionRoleDefaultPolicy827E7CA2\", \"Roles\": [{\"Ref\": \"FargateServiceTaskDefExecutionRole9194820E\"}]}, \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationEcs/FargateService/TaskDef/ExecutionRole/DefaultPolicy/Resource\"}}, \"FargateServiceECC8084D\": {\"Type\": \"AWS::ECS::Service\", \"Properties\": {\"Cluster\": {\"Ref\": \"ClusterEB0386A7\"}, \"DeploymentConfiguration\": {\"Alarms\": {\"AlarmNames\": [], \"Enable\": false, \"Rollback\": false}, \"MaximumPercent\": 200, \"MinimumHealthyPercent\": 50}, \"EnableECSManagedTags\": false, \"HealthCheckGracePeriodSeconds\": 60, \"LaunchType\": \"FARGATE\", \"LoadBalancers\": [{\"ContainerName\": \"web\", \"ContainerPort\": 80, \"TargetGroupArn\": {\"Ref\": \"FargateServiceLBPublicListenerECSGroupBE57E081\"}}], \"NetworkConfiguration\": {\"AwsvpcConfiguration\": {\"AssignPublicIp\": \"DISABLED\", \"SecurityGroups\": [{\"Fn::GetAtt\": [\"FargateServiceSecurityGroup262B61DD\", \"GroupId\"]}], \"Subnets\": [{\"Ref\": \"VpcPrivateSubnet1Subnet536B997A\"}, {\"Ref\": \"VpcPrivateSubnet2Subnet3788AAA1\"}]}}, \"TaskDefinition\": {\"Ref\": \"FargateServiceTaskDef940E3A80\"}}, \"DependsOn\": [\"FargateServiceLBPublicListenerECSGroupBE57E081\", \"FargateServiceLBPublicListener4B4929CA\", \"FargateServiceTaskDefTaskRoleDefaultPolicy63F83D6F\", \"FargateServiceTaskDefTaskRole8CDCF85E\"], \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationEcs/FargateService/Service/Service\"}}, \"FargateServiceSecurityGroup262B61DD\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"EvidentlyClientSideEvaluationEcs/FargateService/Service/SecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"VpcId\": {\"Ref\": \"Vpc8378EB38\"}}, \"DependsOn\": [\"FargateServiceTaskDefTaskRoleDefaultPolicy63F83D6F\", \"FargateServiceTaskDefTaskRole8CDCF85E\"], \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationEcs/FargateService/Service/SecurityGroup/Resource\"}}, \"FargateServiceSecurityGroupfromEvidentlyClientSideEvaluationEcsFargateServiceLBSecurityGroup0DA937F6806767C2A3\": {\"Type\": \"AWS::EC2::SecurityGroupIngress\", \"Properties\": {\"IpProtocol\": \"tcp\", \"Description\": \"Load balancer to target\", \"FromPort\": 80, \"GroupId\": {\"Fn::GetAtt\": [\"FargateServiceSecurityGroup262B61DD\", \"GroupId\"]}, \"SourceSecurityGroupId\": {\"Fn::GetAtt\": [\"FargateServiceLBSecurityGroup5F444C78\", \"GroupId\"]}, \"ToPort\": 80}, \"DependsOn\": [\"FargateServiceTaskDefTaskRoleDefaultPolicy63F83D6F\", \"FargateServiceTaskDefTaskRole8CDCF85E\"], \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationEcs/FargateService/Service/SecurityGroup/from EvidentlyClientSideEvaluationEcsFargateServiceLBSecurityGroup0DA937F6:80\"}}, \"CDKMetadata\": {\"Type\": \"AWS::CDK::Metadata\", \"Properties\": {\"Analytics\": \"v2:deflate64:H4sIAAAAAAAA/31TTW/bMAz9Lbsr2pbLek0/ESBoDafoNaBlxmWiSIY+XASG//soOW68bthJj0+PIh9pL+XNL/njG3z4haqPC02V7LcB1FEwteuhbZU1e2pkf7c3q7bVpCCQNYLDB9ORs+aEJgwCO6oZ6HNWFs4eUIWkekQI0WGCG4hGvbNWLWX/1qrEvRV3oogVv7uNlcGcckWljQFfodJ45a/cynur6LOffJEbWxfpeIbwBAE/4CwKRx3D68NrE9AxngRjJ5doFXgC78mX2KKKjsL5ydnY5h7+Szw0Dr3/i16bzCfnnuejo+fqSTXBR3ANJFf+eI97MjR5+spYE4AMuhl3yd2i60iNcxphLrdrISSrXs62t7FQ34IGo7D+ko4afCClWVFlBZmm43X9Ozub+COe64i9mYtmwrP7V67MG5gGOQsHQXCSfWnHveezsJyXFzWi5M7twHsMXt5bdUS3PkGTPgpeMd/JElvrKVh3vgWPQtuGh7+xzWfFCQ+DKNHb6MbxvcTQxiDyQ/wvNDyB3MVMwnuo8/QHYWyN8uC/dz9v5JJ/pYMnWrhoAp1QluP5G0f1xEZmAwAA\"}, \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationEcs/CDKMetadata/Default\"}, \"Condition\": \"CDKMetadataAvailable\"}}, \"Outputs\": {\"FargateServiceLoadBalancerDNS9433D5F6\": {\"Value\": {\"Fn::GetAtt\": [\"FargateServiceLBB353E155\", \"DNSName\"]}}, \"FargateServiceServiceURL47701F45\": {\"Value\": {\"Fn::Join\": [\"\", [\"http://\", {\"Fn::GetAtt\": [\"FargateServiceLBB353E155\", \"DNSName\"]}]]}}}, \"Conditions\": {\"CDKMetadataAvailable\": {\"Fn::Or\": [{\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"af-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ca-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-northwest-1\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-3\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"me-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"sa-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-2\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-2\"]}]}]}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as ecs from 'aws-cdk-lib/aws-ecs';\nimport * as ecsPatterns from 'aws-cdk-lib/aws-ecs-patterns';\nimport * as path from 'path';\nimport * as appconfig from 'aws-cdk-lib/aws-appconfig';\nimport * as cdk from 'aws-cdk-lib';\nimport * as evidently from 'aws-cdk-lib/aws-evidently';\nimport * as iam from 'aws-cdk-lib/aws-iam';\n\nconst OLD_SEARCH_BAR = 'oldSearchBar'\nconst NEW_SEARCH_BAR = 'fancyNewSearchBar'\nconst AWS_REGION: string = process.env.CDK_DEFAULT_REGION || ''\nconst AWS_ACCOUNT: string = process.env.CDK_DEFAULT_ACCOUNT || ''\n\nexport class EvidentlyClientSideEvaluationEcsStack extends cdk.Stack {\n  constructor(app: cdk.App, id: string) {\n    super(app, id);\n\n    // Create AppConfig resources\n    const application = new appconfig.CfnApplication(this,'AppConfigApplication', {\n      name: 'MyApplication'\n    });\n\n    const environment = new appconfig.CfnEnvironment(this, 'AppConfigEnvironment', {\n      applicationId: application.ref,\n      name: 'MyEnvironment'\n    });\n\n    // Create Evidently resources\n    const project = new evidently.CfnProject(this, 'EvidentlyProject', {\n      name: 'WebPage',\n      appConfigResource: {\n        applicationId: application.ref,\n        environmentId: environment.ref\n      }\n    });\n\n    const feature = new evidently.CfnFeature(this, 'EvidentlyFeature', {\n      project: project.name,\n      name: 'SearchBar',\n      variations: [\n        {\n          booleanValue: false,\n          variationName: OLD_SEARCH_BAR\n        },\n        {\n          booleanValue: true,\n          variationName: NEW_SEARCH_BAR\n        }\n      ]\n    })\n    feature.addDependsOn(project)\n\n    const launch = new evidently.CfnLaunch(this, 'EvidentlyLaunch', {\n      project: project.name,\n      name: 'MyLaunch',\n      executionStatus: {\n        status: 'START'\n      },\n      groups: [\n        {\n          feature: feature.name,\n          variation: OLD_SEARCH_BAR,\n          groupName: OLD_SEARCH_BAR\n        },\n        {\n          feature: feature.name,\n          variation: NEW_SEARCH_BAR,\n          groupName: NEW_SEARCH_BAR\n        }\n      ],\n      scheduledSplitsConfig: [{\n        // This must be a timestamp. Choosing a start time in the past with status START will start the launch immediately:\n        // https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_ScheduledSplitConfig.html#cloudwatchevidently-Type-ScheduledSplitConfig-startTime\n        startTime: '2022-01-01T00:00:00Z',\n        groupWeights: [\n          {\n            groupName: OLD_SEARCH_BAR,\n            splitWeight: 90000\n          },\n          {\n            groupName: NEW_SEARCH_BAR,\n            splitWeight: 10000\n          }\n        ]\n      }]\n    })\n    launch.addDependsOn(feature)\n\n    // Create ECS resources\n    const vpc = new ec2.Vpc(this, 'Vpc', { maxAzs: 2 });\n    const cluster = new ecs.Cluster(this, 'Cluster', { vpc });\n\n    // Instantiate Fargate Service with a cluster and a local image that gets\n    // uploaded to an S3 staging bucket prior to being uploaded to ECR.\n    // A new repository is created in ECR and the Fargate service is created\n    // with the image from ECR.\n    const service = new ecsPatterns.ApplicationLoadBalancedFargateService(this, \"FargateService\", {\n      cluster,\n      taskImageOptions: {\n        image: ecs.ContainerImage.fromAsset(path.resolve(__dirname, 'local-image')),\n        environment: {\n          DEPLOYMENT_TIME: new Date().getTime().toString(),\n        }\n      },\n    });\n\n    const configuration = `applications/${application.ref}/environments/${environment.ref}/configurations/${project.name}`\n    service.taskDefinition.addContainer('AppConfigAgent', {\n      image: ecs.ContainerImage.fromRegistry('public.ecr.aws/aws-appconfig/aws-appconfig-agent:2.x'),\n      portMappings: [{\n        containerPort: 2772\n      }],\n      environment: {\n        EVIDENTLY_CONFIGURATIONS: configuration,\n        PREFETCH_LIST: configuration\n      }\n    })\n\n    service.taskDefinition.taskRole.addToPrincipalPolicy(\n      new iam.PolicyStatement({\n        actions: ['appconfig:StartConfigurationSession', 'appconfig:GetLatestConfiguration'],\n        effect: iam.Effect.ALLOW,\n        resources: [`arn:aws:appconfig:${AWS_REGION}:${AWS_ACCOUNT}:application/${application.ref}/environment/${environment.ref}/configuration/*`]\n      })\n    )\n    service.taskDefinition.taskRole.addToPrincipalPolicy(\n      new iam.PolicyStatement({\n        actions: ['evidently:PutProjectEvents'],\n        effect: iam.Effect.ALLOW,\n        resources: [`arn:aws:evidently:${AWS_REGION}:${AWS_ACCOUNT}:project/${project.name}`]\n      })\n    )\n\n  }\n}\n\nconst app = new cdk.App();\nnew EvidentlyClientSideEvaluationEcsStack(app, 'EvidentlyClientSideEvaluationEcs');\napp.synth();\n"}

{ "prompt": "{\"Resources\": {\"AppConfigApplication\": {\"Type\": \"AWS::AppConfig::Application\", \"Properties\": {\"Name\": \"EvidentlyExampleProject\"}, \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationLambda/AppConfigApplication\"}}, \"AppConfigEnvironment\": {\"Type\": \"AWS::AppConfig::Environment\", \"Properties\": {\"ApplicationId\": {\"Ref\": \"AppConfigApplication\"}, \"Name\": \"EvidentlyExampleProjectEnvironment\"}, \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationLambda/AppConfigEnvironment\"}}, \"EvidentlyProject\": {\"Type\": \"AWS::Evidently::Project\", \"Properties\": {\"Name\": \"EvidentlyExampleProject\", \"AppConfigResource\": {\"ApplicationId\": {\"Ref\": \"AppConfigApplication\"}, \"EnvironmentId\": {\"Ref\": \"AppConfigEnvironment\"}}}, \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationLambda/EvidentlyProject\"}}, \"EvidentlyFeature\": {\"Type\": \"AWS::Evidently::Feature\", \"Properties\": {\"Name\": \"MyExampleFeature\", \"Project\": \"EvidentlyExampleProject\", \"Variations\": [{\"BooleanValue\": false, \"VariationName\": \"hideFeature\"}, {\"BooleanValue\": true, \"VariationName\": \"showFeature\"}]}, \"DependsOn\": [\"EvidentlyProject\"], \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationLambda/EvidentlyFeature\"}}, \"EvidentlyLaunch\": {\"Type\": \"AWS::Evidently::Launch\", \"Properties\": {\"Groups\": [{\"Feature\": \"MyExampleFeature\", \"GroupName\": \"hideFeature\", \"Variation\": \"hideFeature\"}, {\"Feature\": \"MyExampleFeature\", \"GroupName\": \"showFeature\", \"Variation\": \"showFeature\"}], \"Name\": \"ExampleFeatureLaunch\", \"Project\": \"EvidentlyExampleProject\", \"ScheduledSplitsConfig\": [{\"GroupWeights\": [{\"GroupName\": \"hideFeature\", \"SplitWeight\": 90000}, {\"GroupName\": \"showFeature\", \"SplitWeight\": 10000}], \"StartTime\": \"2022-01-01T00:00:00Z\"}], \"ExecutionStatus\": {\"Status\": \"START\"}}, \"DependsOn\": [\"EvidentlyFeature\"], \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationLambda/EvidentlyLaunch\"}}, \"LambdaFunctionServiceRoleC555A460\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}, \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationLambda/LambdaFunction/ServiceRole/Resource\"}}, \"LambdaFunctionServiceRoleDefaultPolicy32EEEE35\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"appconfig:StartConfigurationSession\", \"appconfig:GetLatestConfiguration\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:aws:appconfig:us-east-1:446584840139:application/\", {\"Ref\": \"AppConfigApplication\"}, \"/environment/\", {\"Ref\": \"AppConfigEnvironment\"}, \"/configuration/*\"]]}}, {\"Action\": \"evidently:PutProjectEvents\", \"Effect\": \"Allow\", \"Resource\": \"arn:aws:evidently:us-east-1:446584840139:project/EvidentlyExampleProject\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"LambdaFunctionServiceRoleDefaultPolicy32EEEE35\", \"Roles\": [{\"Ref\": \"LambdaFunctionServiceRoleC555A460\"}]}, \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationLambda/LambdaFunction/ServiceRole/DefaultPolicy/Resource\"}}, \"LambdaFunctionBF21E41F\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"import boto3\nimport botocore.config\n\n# We must disable host prefix injection because the Evidently SDK automatically adds an unnecessary prefix to localhost\naws_config = botocore.config.Config(inject_host_prefix=False)\n\n\ndef main(event, context):\n    # Instead of calling the Evidently API to determine the feature variation, we call the AppConfig extension that we\n    # added to our Lambda function. This layer is essentially a local server we can call in place of the API.\n    # By default, the AppConfig extension runs on port 2772. This is configurable:\n    # https://docs.aws.amazon.com/appconfig/latest/userguide/appconfig-integration-lambda-extensions.html#w97aac17b7c21c21\n    client = boto3.client('evidently', endpoint_url='http://localhost:2772', config=aws_config)\n    evaluation = client.evaluate_feature(\n        project='EvidentlyExampleProject',\n        feature='MyExampleFeature',\n        entityId='someUserId'\n    )\n    return evaluation\n\"}, \"Role\": {\"Fn::GetAtt\": [\"LambdaFunctionServiceRoleC555A460\", \"Arn\"]}, \"Environment\": {\"Variables\": {\"AWS_APPCONFIG_EXTENSION_EVIDENTLY_CONFIGURATIONS\": {\"Fn::Join\": [\"\", [\"applications/\", {\"Ref\": \"AppConfigApplication\"}, \"/environments/\", {\"Ref\": \"AppConfigEnvironment\"}, \"/configurations/EvidentlyExampleProject\"]]}}}, \"Handler\": \"index.main\", \"Layers\": [\"arn:aws:lambda:us-east-1:027255383542:layer:AWS-AppConfig-Extension:82\"], \"Runtime\": \"python3.9\", \"Timeout\": 300}, \"DependsOn\": [\"LambdaFunctionServiceRoleDefaultPolicy32EEEE35\", \"LambdaFunctionServiceRoleC555A460\"], \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationLambda/LambdaFunction/Resource\"}}, \"CDKMetadata\": {\"Type\": \"AWS::CDK::Metadata\", \"Properties\": {\"Analytics\": \"v2:deflate64:H4sIAAAAAAAA/02PvQ7CMAyEn4U9NT8LrAjBxFCVB0AmCeCS2lWaFqEo707aConpvrPOZ3kDuy2sFvjuCm1ehaMbxEtA/VJ5dI3Ytlr4Tg+Ihzvv29aRxkDCKtsjD+SFG8shKTuQyeA+U7L0UlsdxtTJYui9HfGMPetnUg6bm0GIp2x/ZT9OirCBWImbViYtJZ/9jHamlFRlO+m9njN/fBA2NPewGAt1txzWO9jkH+uOqPA9B2osVLN+ATtJtqv/AAAA\"}, \"Metadata\": {\"aws:cdk:path\": \"EvidentlyClientSideEvaluationLambda/CDKMetadata/Default\"}, \"Condition\": \"CDKMetadataAvailable\"}}, \"Conditions\": {\"CDKMetadataAvailable\": {\"Fn::Or\": [{\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"af-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ca-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-northwest-1\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-3\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"me-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"sa-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-2\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-2\"]}]}]}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as appconfig from 'aws-cdk-lib/aws-appconfig'\nimport * as cdk from 'aws-cdk-lib'\nimport * as evidently from 'aws-cdk-lib/aws-evidently'\nimport * as iam from 'aws-cdk-lib/aws-iam'\nimport * as lambda from 'aws-cdk-lib/aws-lambda'\nimport * as fs from'fs'\n\nconst HIDE_FEATURE = 'hideFeature'\nconst SHOW_FEATURE = 'showFeature'\nconst AWS_REGION: string = process.env.CDK_DEFAULT_REGION || ''\nconst AWS_ACCOUNT: string = process.env.CDK_DEFAULT_ACCOUNT || ''\n\n// We must choose the Lambda Layer ARN that corresponds with the AWS Region where you create your Lambda:\n// https://docs.aws.amazon.com/appconfig/latest/userguide/appconfig-integration-lambda-extensions-versions.html#appconfig-integration-lambda-extensions-enabling-x86-64\nconst APP_CONFIG_EXTENSION_ARNS: Record<string, string> = {\n  'us-east-1': 'arn:aws:lambda:us-east-1:027255383542:layer:AWS-AppConfig-Extension:82',\n  'us-east-2': 'arn:aws:lambda:us-east-2:728743619870:layer:AWS-AppConfig-Extension:59',\n  'us-west-1': 'arn:aws:lambda:us-west-1:958113053741:layer:AWS-AppConfig-Extension:93',\n  'us-west-2': 'arn:aws:lambda:us-west-2:359756378197:layer:AWS-AppConfig-Extension:114',\n  'ca-central-1': 'arn:aws:lambda:ca-central-1:039592058896:layer:AWS-AppConfig-Extension:59',\n  'eu-central-1': 'arn:aws:lambda:eu-central-1:066940009817:layer:AWS-AppConfig-Extension:70',\n  'eu-west-1': 'arn:aws:lambda:eu-west-1:434848589818:layer:AWS-AppConfig-Extension:82',\n  'eu-west-2': 'arn:aws:lambda:eu-west-2:282860088358:layer:AWS-AppConfig-Extension:59',\n  'eu-west-3': 'arn:aws:lambda:eu-west-3:493207061005:layer:AWS-AppConfig-Extension:60',\n  'eu-north-1': 'arn:aws:lambda:eu-north-1:646970417810:layer:AWS-AppConfig-Extension:111',\n  'eu-south-1': 'arn:aws:lambda:eu-south-1:203683718741:layer:AWS-AppConfig-Extension:54',\n  'cn-north-1': 'arn:aws-cn:lambda:cn-north-1:615057806174:layer:AWS-AppConfig-Extension:52',\n  'cn-northwest-1': 'arn:aws-cn:lambda:cn-northwest-1:615084187847:layer:AWS-AppConfig-Extension:52',\n  'ap-east-1': 'arn:aws:lambda:ap-east-1:630222743974:layer:AWS-AppConfig-Extension:54',\n  'ap-northeast-1': 'arn:aws:lambda:ap-northeast-1:980059726660:layer:AWS-AppConfig-Extension:62',\n  'ap-northeast-2': 'arn:aws:lambda:ap-northeast-2:826293736237:layer:AWS-AppConfig-Extension:70',\n  'ap-northeast-3': 'arn:aws:lambda:ap-northeast-3:706869817123:layer:AWS-AppConfig-Extension:59',\n  'ap-southeast-1': 'arn:aws:lambda:ap-southeast-1:421114256042:layer:AWS-AppConfig-Extension:64',\n  'ap-southeast-2': 'arn:aws:lambda:ap-southeast-2:080788657173:layer:AWS-AppConfig-Extension:70',\n  'ap-southeast-3': 'arn:aws:lambda:ap-southeast-3:418787028745:layer:AWS-AppConfig-Extension:37',\n  'ap-south-1': 'arn:aws:lambda:ap-south-1:554480029851:layer:AWS-AppConfig-Extension:71',\n  'sa-east-1': 'arn:aws:lambda:sa-east-1:000010852771:layer:AWS-AppConfig-Extension:82',\n  'af-south-1': 'arn:aws:lambda:af-south-1:574348263942:layer:AWS-AppConfig-Extension:54',\n  'me-south-1': 'arn:aws:lambda:me-south-1:559955524753:layer:AWS-AppConfig-Extension:54',\n  'us-gov-east-1': 'arn:aws-us-gov:lambda:us-gov-east-1:946561847325:layer:AWS-AppConfig-Extension:29',\n  'us-gov-west-1': 'arn:aws-us-gov:lambda:us-gov-west-1:946746059096:layer:AWS-AppConfig-Extension:29'\n}\n\nexport class EvidentlyClientSideEvaluationLambdaStack extends cdk.Stack {\n  constructor(app: cdk.App, id: string) {\n    super(app, id);\n\n    // Create AppConfig resources\n    const application = new appconfig.CfnApplication(this,'AppConfigApplication', {\n      name: 'EvidentlyExampleProject'\n    });\n\n    const environment = new appconfig.CfnEnvironment(this, 'AppConfigEnvironment', {\n      applicationId: application.ref,\n      name: application.name + 'Environment'\n    });\n\n    // Create Evidently resources\n    const project = new evidently.CfnProject(this, 'EvidentlyProject', {\n      name: application.name,\n      appConfigResource: {\n        applicationId: application.ref,\n        environmentId: environment.ref\n      }\n    });\n\n    const feature = new evidently.CfnFeature(this, 'EvidentlyFeature', {\n      project: project.name,\n      name: 'MyExampleFeature',\n      variations: [\n        {\n          booleanValue: false,\n          variationName: HIDE_FEATURE\n        },\n        {\n          booleanValue: true,\n          variationName: SHOW_FEATURE\n        }\n      ]\n    })\n    feature.addDependsOn(project)\n\n    const launch = new evidently.CfnLaunch(this, 'EvidentlyLaunch', {\n      project: project.name,\n      name: 'ExampleFeatureLaunch',\n      executionStatus: {\n        status: 'START'\n      },\n      groups: [\n        {\n          feature: feature.name,\n          variation: HIDE_FEATURE,\n          groupName: HIDE_FEATURE\n        },\n        {\n          feature: feature.name,\n          variation: SHOW_FEATURE,\n          groupName: SHOW_FEATURE\n        }\n      ],\n      scheduledSplitsConfig: [{\n        // This must be a timestamp. Choosing a start time in the past with status START will start the launch immediately:\n        // https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_ScheduledSplitConfig.html#cloudwatchevidently-Type-ScheduledSplitConfig-startTime\n        startTime: '2022-01-01T00:00:00Z',\n        groupWeights: [\n          {\n            groupName: HIDE_FEATURE,\n            splitWeight: 90000\n          },\n          {\n            groupName: SHOW_FEATURE,\n            splitWeight: 10000\n          }\n        ]\n      }]\n    })\n    launch.addDependsOn(feature)\n\n    // Create Lambda resources\n    const lambdaFunction = new lambda.Function(this, 'LambdaFunction', {\n      code: new lambda.InlineCode(fs.readFileSync('lambda-handler.py', { encoding: 'utf-8' })),\n      handler: 'index.main',\n      timeout: cdk.Duration.seconds(300),\n      runtime: lambda.Runtime.PYTHON_3_9,\n      layers: [\n        lambda.LayerVersion.fromLayerVersionArn(this, 'ClientSideEvaluationLayer', APP_CONFIG_EXTENSION_ARNS[AWS_REGION])\n      ],\n      environment: {\n        // This tells the AppConfig extension which AppConfig configuration to use for local evaluation.\n        // It must be in the form applications/<APP_ID>/environments/<ENV_ID>/configurations/<PROJECT_NAME>\n        AWS_APPCONFIG_EXTENSION_EVIDENTLY_CONFIGURATIONS: `applications/${application.ref}/environments/${environment.ref}/configurations/${project.name}`\n      }\n    });\n    lambdaFunction.role?.addToPrincipalPolicy(\n      new iam.PolicyStatement({\n        actions: ['appconfig:StartConfigurationSession', 'appconfig:GetLatestConfiguration'],\n        effect: iam.Effect.ALLOW,\n        resources: [`arn:aws:appconfig:${AWS_REGION}:${AWS_ACCOUNT}:application/${application.ref}/environment/${environment.ref}/configuration/*`]\n      })\n    )\n    lambdaFunction.role?.addToPrincipalPolicy(\n      new iam.PolicyStatement({\n        actions: ['evidently:PutProjectEvents'],\n        effect: iam.Effect.ALLOW,\n        resources: [`arn:aws:evidently:${AWS_REGION}:${AWS_ACCOUNT}:project/${project.name}`]\n      })\n    )\n\n  }\n}\n\nconst app = new cdk.App();\nnew EvidentlyClientSideEvaluationLambdaStack(app, 'EvidentlyClientSideEvaluationLambda');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"codeRepo68658E14\": {\"Type\": \"AWS::CodeCommit::Repository\", \"Properties\": {\"RepositoryName\": \"simple-app-code-repo\", \"Code\": {\"BranchName\": \"main\", \"S3\": {\"Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"Key\": \"91e680718fa806c30a3d07e382c1dc54e6668609a753350ed647369c29512aa2.zip\"}}}, \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/codeRepo/Resource\"}}, \"codeRepoCodepipelineBuildDeployStackBuildDeployPipeline2B279CCCmainEventRule0618FB92\": {\"Type\": \"AWS::Events::Rule\", \"Properties\": {\"EventPattern\": {\"source\": [\"aws.codecommit\"], \"resources\": [{\"Fn::GetAtt\": [\"codeRepo68658E14\", \"Arn\"]}], \"detail-type\": [\"CodeCommit Repository State Change\"], \"detail\": {\"event\": [\"referenceCreated\", \"referenceUpdated\"], \"referenceName\": [\"main\"]}}, \"State\": \"ENABLED\", \"Targets\": [{\"Arn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":codepipeline:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":\", {\"Ref\": \"BuildDeployPipeline5EEC284B\"}]]}, \"Id\": \"Target0\", \"RoleArn\": {\"Fn::GetAtt\": [\"BuildDeployPipelineEventsRoleDE5B0F8F\", \"Arn\"]}}]}, \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/codeRepo/CodepipelineBuildDeployStackBuildDeployPipeline2B279CCC-main-EventRule/Resource\"}}, \"imageRepo1D8A68AF\": {\"Type\": \"AWS::ECR::Repository\", \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\", \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/imageRepo/Resource\"}}, \"FargateTaskDefTaskRole0B257552\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"ecs-tasks.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}, \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/FargateTaskDef/TaskRole/Resource\"}}, \"FargateTaskDefC6FB60B4\": {\"Type\": \"AWS::ECS::TaskDefinition\", \"Properties\": {\"ContainerDefinitions\": [{\"Essential\": true, \"Image\": {\"Fn::Join\": [\"\", [{\"Fn::Select\": [4, {\"Fn::Split\": [\":\", {\"Fn::GetAtt\": [\"imageRepo1D8A68AF\", \"Arn\"]}]}]}, \".dkr.ecr.\", {\"Fn::Select\": [3, {\"Fn::Split\": [\":\", {\"Fn::GetAtt\": [\"imageRepo1D8A68AF\", \"Arn\"]}]}]}, \".\", {\"Ref\": \"AWS::URLSuffix\"}, \"/\", {\"Ref\": \"imageRepo1D8A68AF\"}, \":latest\"]]}, \"Name\": \"web\", \"PortMappings\": [{\"ContainerPort\": 80, \"Protocol\": \"tcp\"}]}], \"Cpu\": \"256\", \"ExecutionRoleArn\": {\"Fn::GetAtt\": [\"FargateTaskDefExecutionRole272677A9\", \"Arn\"]}, \"Family\": \"CodepipelineBuildDeployStackFargateTaskDef1618DD8E\", \"Memory\": \"512\", \"NetworkMode\": \"awsvpc\", \"RequiresCompatibilities\": [\"FARGATE\"], \"TaskRoleArn\": {\"Fn::GetAtt\": [\"FargateTaskDefTaskRole0B257552\", \"Arn\"]}}, \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/FargateTaskDef/Resource\"}}, \"FargateTaskDefExecutionRole272677A9\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"ecs-tasks.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}, \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/FargateTaskDef/ExecutionRole/Resource\"}}, \"FargateTaskDefExecutionRoleDefaultPolicy6D29E918\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"ecr:BatchCheckLayerAvailability\", \"ecr:BatchGetImage\", \"ecr:GetDownloadUrlForLayer\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"imageRepo1D8A68AF\", \"Arn\"]}}, {\"Action\": \"ecr:GetAuthorizationToken\", \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"FargateTaskDefExecutionRoleDefaultPolicy6D29E918\", \"Roles\": [{\"Ref\": \"FargateTaskDefExecutionRole272677A9\"}]}, \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/FargateTaskDef/ExecutionRole/DefaultPolicy/Resource\"}}, \"BuildImageRoleA9C72406\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codebuild.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}, \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/BuildImage/Role/Resource\"}}, \"BuildImageRoleDefaultPolicy8FF7A310\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"codecommit:GitPull\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"codeRepo68658E14\", \"Arn\"]}}, {\"Action\": [\"logs:CreateLogGroup\", \"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"BuildImage74257FD8\"}, \":*\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":logs:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":log-group:/aws/codebuild/\", {\"Ref\": \"BuildImage74257FD8\"}]]}]}, {\"Action\": [\"codebuild:BatchPutCodeCoverages\", \"codebuild:BatchPutTestCases\", \"codebuild:CreateReport\", \"codebuild:CreateReportGroup\", \"codebuild:UpdateReport\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":codebuild:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":report-group/\", {\"Ref\": \"BuildImage74257FD8\"}, \"-*\"]]}}, {\"Action\": [\"ecr:BatchCheckLayerAvailability\", \"ecr:BatchGetImage\", \"ecr:CompleteLayerUpload\", \"ecr:GetDownloadUrlForLayer\", \"ecr:InitiateLayerUpload\", \"ecr:PutImage\", \"ecr:UploadLayerPart\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"imageRepo1D8A68AF\", \"Arn\"]}}, {\"Action\": \"ecr:GetAuthorizationToken\", \"Effect\": \"Allow\", \"Resource\": \"*\"}, {\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"BuildDeployPipelineArtifactsBucket5D4A76C1\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"BuildDeployPipelineArtifactsBucket5D4A76C1\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"kms:Decrypt\", \"kms:DescribeKey\", \"kms:Encrypt\", \"kms:GenerateDataKey*\", \"kms:ReEncrypt*\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"BuildDeployPipelineArtifactsBucketEncryptionKey8AB5ABF8\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"BuildImageRoleDefaultPolicy8FF7A310\", \"Roles\": [{\"Ref\": \"BuildImageRoleA9C72406\"}]}, \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/BuildImage/Role/DefaultPolicy/Resource\"}}, \"BuildImage74257FD8\": {\"Type\": \"AWS::CodeBuild::Project\", \"Properties\": {\"Artifacts\": {\"Type\": \"NO_ARTIFACTS\"}, \"Environment\": {\"ComputeType\": \"BUILD_GENERAL1_SMALL\", \"EnvironmentVariables\": [{\"Name\": \"AWS_ACCOUNT_ID\", \"Type\": \"PLAINTEXT\", \"Value\": \"446584840139\"}, {\"Name\": \"REGION\", \"Type\": \"PLAINTEXT\", \"Value\": \"us-east-1\"}, {\"Name\": \"IMAGE_TAG\", \"Type\": \"PLAINTEXT\", \"Value\": \"latest\"}, {\"Name\": \"IMAGE_REPO_NAME\", \"Type\": \"PLAINTEXT\", \"Value\": {\"Ref\": \"imageRepo1D8A68AF\"}}, {\"Name\": \"REPOSITORY_URI\", \"Type\": \"PLAINTEXT\", \"Value\": {\"Fn::Join\": [\"\", [{\"Fn::Select\": [4, {\"Fn::Split\": [\":\", {\"Fn::GetAtt\": [\"imageRepo1D8A68AF\", \"Arn\"]}]}]}, \".dkr.ecr.\", {\"Fn::Select\": [3, {\"Fn::Split\": [\":\", {\"Fn::GetAtt\": [\"imageRepo1D8A68AF\", \"Arn\"]}]}]}, \".\", {\"Ref\": \"AWS::URLSuffix\"}, \"/\", {\"Ref\": \"imageRepo1D8A68AF\"}]]}}, {\"Name\": \"TASK_DEFINITION_ARN\", \"Type\": \"PLAINTEXT\", \"Value\": {\"Ref\": \"FargateTaskDefC6FB60B4\"}}, {\"Name\": \"TASK_ROLE_ARN\", \"Type\": \"PLAINTEXT\", \"Value\": {\"Fn::GetAtt\": [\"FargateTaskDefTaskRole0B257552\", \"Arn\"]}}, {\"Name\": \"EXECUTION_ROLE_ARN\", \"Type\": \"PLAINTEXT\", \"Value\": {\"Fn::GetAtt\": [\"FargateTaskDefExecutionRole272677A9\", \"Arn\"]}}], \"Image\": \"aws/codebuild/standard:1.0\", \"ImagePullCredentialsType\": \"CODEBUILD\", \"PrivilegedMode\": true, \"Type\": \"LINUX_CONTAINER\"}, \"ServiceRole\": {\"Fn::GetAtt\": [\"BuildImageRoleA9C72406\", \"Arn\"]}, \"Source\": {\"BuildSpec\": \"buildspec.yaml\", \"Location\": {\"Fn::GetAtt\": [\"codeRepo68658E14\", \"CloneUrlHttp\"]}, \"Type\": \"CODECOMMIT\"}, \"Cache\": {\"Type\": \"NO_CACHE\"}, \"EncryptionKey\": {\"Fn::GetAtt\": [\"BuildDeployPipelineArtifactsBucketEncryptionKey8AB5ABF8\", \"Arn\"]}}, \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/BuildImage/Resource\"}}, \"BuildLambdaServiceRole8FB6C033\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}, \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/BuildLambda/ServiceRole/Resource\"}}, \"BuildLambdaServiceRoleDefaultPolicyB9720C71\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"codebuild:StartBuild\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"BuildImage74257FD8\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"BuildLambdaServiceRoleDefaultPolicyB9720C71\", \"Roles\": [{\"Ref\": \"BuildLambdaServiceRole8FB6C033\"}]}, \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/BuildLambda/ServiceRole/DefaultPolicy/Resource\"}}, \"BuildLambda72E2A667\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"98292e519a027fddd37735bc3fa779872b481d325f8aa0df23b88f3224e80403.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"BuildLambdaServiceRole8FB6C033\", \"Arn\"]}, \"Architectures\": [\"arm64\"], \"Environment\": {\"Variables\": {\"REGION\": \"us-east-1\", \"CODEBUILD_PROJECT_NAME\": {\"Ref\": \"BuildImage74257FD8\"}}}, \"Handler\": \"trigger-build.handler\", \"Runtime\": \"nodejs18.x\"}, \"DependsOn\": [\"BuildLambdaServiceRoleDefaultPolicyB9720C71\", \"BuildLambdaServiceRole8FB6C033\"], \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/BuildLambda/Resource\", \"aws:asset:path\": \"asset.98292e519a027fddd37735bc3fa779872b481d325f8aa0df23b88f3224e80403\", \"aws:asset:is-bundled\": false, \"aws:asset:property\": \"Code\"}}, \"BuildLambdaTriggerB4D1B83F\": {\"Type\": \"Custom::AWS\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"AWS679f53fac002430cb0da5b7982bd22872D164C4C\", \"Arn\"]}, \"Create\": {\"Fn::Join\": [\"\", [\"{\\\"service\\\":\\\"Lambda\\\",\\\"action\\\":\\\"invoke\\\",\\\"physicalResourceId\\\":{\\\"id\\\":\\\"id\\\"},\\\"parameters\\\":{\\\"FunctionName\\\":\\\"\", {\"Ref\": \"BuildLambda72E2A667\"}, \"\\\",\\\"InvocationType\\\":\\\"Event\\\"}}\"]]}, \"Update\": {\"Fn::Join\": [\"\", [\"{\\\"service\\\":\\\"Lambda\\\",\\\"action\\\":\\\"invoke\\\",\\\"parameters\\\":{\\\"FunctionName\\\":\\\"\", {\"Ref\": \"BuildLambda72E2A667\"}, \"\\\",\\\"InvocationType\\\":\\\"Event\\\"}}\"]]}, \"InstallLatestAwsSdk\": true}, \"DependsOn\": [\"BuildLambdaTriggerCustomResourcePolicy465CA35F\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\", \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/BuildLambdaTrigger/Resource/Default\"}}, \"BuildLambdaTriggerCustomResourcePolicy465CA35F\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"lambda:InvokeFunction\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"BuildLambda72E2A667\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"BuildLambdaTriggerCustomResourcePolicy465CA35F\", \"Roles\": [{\"Ref\": \"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/BuildLambdaTrigger/CustomResourcePolicy/Resource\"}}, \"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}, \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/AWS679f53fac002430cb0da5b7982bd2287/ServiceRole/Resource\"}}, \"AWS679f53fac002430cb0da5b7982bd22872D164C4C\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"bb459fac5f6b4b052aac9803443226d161a5cfe96f4648b21f9e4912c698bf30.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\", \"Arn\"]}, \"Handler\": \"index.handler\", \"Runtime\": \"nodejs14.x\", \"Timeout\": 120}, \"DependsOn\": [\"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\"], \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/AWS679f53fac002430cb0da5b7982bd2287/Resource\", \"aws:asset:path\": \"asset.bb459fac5f6b4b052aac9803443226d161a5cfe96f4648b21f9e4912c698bf30\", \"aws:asset:is-bundled\": false, \"aws:asset:property\": \"Code\"}}, \"ClusterVpcA8CFF6E7\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.50.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"CodepipelineBuildDeployStack/ClusterVpc\"}]}, \"DependsOn\": [\"BuildLambdaTriggerCustomResourcePolicy465CA35F\", \"BuildLambdaTriggerB4D1B83F\"], \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/ClusterVpc/Resource\"}}, \"ClusterVpcPublicSubnet1Subnet6F292256\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"ClusterVpcA8CFF6E7\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.50.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"CodepipelineBuildDeployStack/ClusterVpc/PublicSubnet1\"}]}, \"DependsOn\": [\"BuildLambdaTriggerCustomResourcePolicy465CA35F\", \"BuildLambdaTriggerB4D1B83F\"], \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/ClusterVpc/PublicSubnet1/Subnet\"}}, \"ClusterVpcPublicSubnet1RouteTableA4D922A0\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"ClusterVpcA8CFF6E7\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"CodepipelineBuildDeployStack/ClusterVpc/PublicSubnet1\"}]}, \"DependsOn\": [\"BuildLambdaTriggerCustomResourcePolicy465CA35F\", \"BuildLambdaTriggerB4D1B83F\"], \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/ClusterVpc/PublicSubnet1/RouteTable\"}}, \"ClusterVpcPublicSubnet1RouteTableAssociation5AD6D21B\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"ClusterVpcPublicSubnet1RouteTableA4D922A0\"}, \"SubnetId\": {\"Ref\": \"ClusterVpcPublicSubnet1Subnet6F292256\"}}, \"DependsOn\": [\"BuildLambdaTriggerCustomResourcePolicy465CA35F\", \"BuildLambdaTriggerB4D1B83F\"], \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/ClusterVpc/PublicSubnet1/RouteTableAssociation\"}}, \"ClusterVpcPublicSubnet1DefaultRouteAFF78CE0\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"ClusterVpcPublicSubnet1RouteTableA4D922A0\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"ClusterVpcIGW467AA2AB\"}}, \"DependsOn\": [\"BuildLambdaTriggerCustomResourcePolicy465CA35F\", \"BuildLambdaTriggerB4D1B83F\", \"ClusterVpcVPCGW361426E5\"], \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/ClusterVpc/PublicSubnet1/DefaultRoute\"}}, \"ClusterVpcPublicSubnet1EIP37B290BD\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"CodepipelineBuildDeployStack/ClusterVpc/PublicSubnet1\"}]}, \"DependsOn\": [\"BuildLambdaTriggerCustomResourcePolicy465CA35F\", \"BuildLambdaTriggerB4D1B83F\"], \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/ClusterVpc/PublicSubnet1/EIP\"}}, \"ClusterVpcPublicSubnet1NATGateway69FA9C06\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"ClusterVpcPublicSubnet1Subnet6F292256\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"ClusterVpcPublicSubnet1EIP37B290BD\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"CodepipelineBuildDeployStack/ClusterVpc/PublicSubnet1\"}]}, \"DependsOn\": [\"BuildLambdaTriggerCustomResourcePolicy465CA35F\", \"BuildLambdaTriggerB4D1B83F\", \"ClusterVpcPublicSubnet1DefaultRouteAFF78CE0\", \"ClusterVpcPublicSubnet1RouteTableAssociation5AD6D21B\"], \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/ClusterVpc/PublicSubnet1/NATGateway\"}}, \"ClusterVpcPublicSubnet2Subnet426701E5\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"ClusterVpcA8CFF6E7\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.50.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"CodepipelineBuildDeployStack/ClusterVpc/PublicSubnet2\"}]}, \"DependsOn\": [\"BuildLambdaTriggerCustomResourcePolicy465CA35F\", \"BuildLambdaTriggerB4D1B83F\"], \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/ClusterVpc/PublicSubnet2/Subnet\"}}, \"ClusterVpcPublicSubnet2RouteTable12CC8384\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"ClusterVpcA8CFF6E7\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"CodepipelineBuildDeployStack/ClusterVpc/PublicSubnet2\"}]}, \"DependsOn\": [\"BuildLambdaTriggerCustomResourcePolicy465CA35F\", \"BuildLambdaTriggerB4D1B83F\"], \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/ClusterVpc/PublicSubnet2/RouteTable\"}}, \"ClusterVpcPublicSubnet2RouteTableAssociation7ADD1D72\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"ClusterVpcPublicSubnet2RouteTable12CC8384\"}, \"SubnetId\": {\"Ref\": \"ClusterVpcPublicSubnet2Subnet426701E5\"}}, \"DependsOn\": [\"BuildLambdaTriggerCustomResourcePolicy465CA35F\", \"BuildLambdaTriggerB4D1B83F\"], \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/ClusterVpc/PublicSubnet2/RouteTableAssociation\"}}, \"ClusterVpcPublicSubnet2DefaultRouteAEC6FDD4\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"ClusterVpcPublicSubnet2RouteTable12CC8384\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"ClusterVpcIGW467AA2AB\"}}, \"DependsOn\": [\"BuildLambdaTriggerCustomResourcePolicy465CA35F\", \"BuildLambdaTriggerB4D1B83F\", \"ClusterVpcVPCGW361426E5\"], \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/ClusterVpc/PublicSubnet2/DefaultRoute\"}}, \"ClusterVpcPublicSubnet2EIP299AF9FE\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"CodepipelineBuildDeployStack/ClusterVpc/PublicSubnet2\"}]}, \"DependsOn\": [\"BuildLambdaTriggerCustomResourcePolicy465CA35F\", \"BuildLambdaTriggerB4D1B83F\"], \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/ClusterVpc/PublicSubnet2/EIP\"}}, \"ClusterVpcPublicSubnet2NATGatewayC9242BCE\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"ClusterVpcPublicSubnet2Subnet426701E5\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"ClusterVpcPublicSubnet2EIP299AF9FE\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"CodepipelineBuildDeployStack/ClusterVpc/PublicSubnet2\"}]}, \"DependsOn\": [\"BuildLambdaTriggerCustomResourcePolicy465CA35F\", \"BuildLambdaTriggerB4D1B83F\", \"ClusterVpcPublicSubnet2DefaultRouteAEC6FDD4\", \"ClusterVpcPublicSubnet2RouteTableAssociation7ADD1D72\"], \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/ClusterVpc/PublicSubnet2/NATGateway\"}}, \"ClusterVpcPrivateSubnet1Subnet505E4257\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"ClusterVpcA8CFF6E7\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.50.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"CodepipelineBuildDeployStack/ClusterVpc/PrivateSubnet1\"}]}, \"DependsOn\": [\"BuildLambdaTriggerCustomResourcePolicy465CA35F\", \"BuildLambdaTriggerB4D1B83F\"], \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/ClusterVpc/PrivateSubnet1/Subnet\"}}, \"ClusterVpcPrivateSubnet1RouteTable4D91A516\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"ClusterVpcA8CFF6E7\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"CodepipelineBuildDeployStack/ClusterVpc/PrivateSubnet1\"}]}, \"DependsOn\": [\"BuildLambdaTriggerCustomResourcePolicy465CA35F\", \"BuildLambdaTriggerB4D1B83F\"], \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/ClusterVpc/PrivateSubnet1/RouteTable\"}}, \"ClusterVpcPrivateSubnet1RouteTableAssociationB0545C4C\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"ClusterVpcPrivateSubnet1RouteTable4D91A516\"}, \"SubnetId\": {\"Ref\": \"ClusterVpcPrivateSubnet1Subnet505E4257\"}}, \"DependsOn\": [\"BuildLambdaTriggerCustomResourcePolicy465CA35F\", \"BuildLambdaTriggerB4D1B83F\"], \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/ClusterVpc/PrivateSubnet1/RouteTableAssociation\"}}, \"ClusterVpcPrivateSubnet1DefaultRoute6BD16184\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"ClusterVpcPrivateSubnet1RouteTable4D91A516\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"ClusterVpcPublicSubnet1NATGateway69FA9C06\"}}, \"DependsOn\": [\"BuildLambdaTriggerCustomResourcePolicy465CA35F\", \"BuildLambdaTriggerB4D1B83F\"], \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/ClusterVpc/PrivateSubnet1/DefaultRoute\"}}, \"ClusterVpcPrivateSubnet2Subnet176BE39E\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"ClusterVpcA8CFF6E7\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.50.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"CodepipelineBuildDeployStack/ClusterVpc/PrivateSubnet2\"}]}, \"DependsOn\": [\"BuildLambdaTriggerCustomResourcePolicy465CA35F\", \"BuildLambdaTriggerB4D1B83F\"], \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/ClusterVpc/PrivateSubnet2/Subnet\"}}, \"ClusterVpcPrivateSubnet2RouteTable918A9411\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"ClusterVpcA8CFF6E7\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"CodepipelineBuildDeployStack/ClusterVpc/PrivateSubnet2\"}]}, \"DependsOn\": [\"BuildLambdaTriggerCustomResourcePolicy465CA35F\", \"BuildLambdaTriggerB4D1B83F\"], \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/ClusterVpc/PrivateSubnet2/RouteTable\"}}, \"ClusterVpcPrivateSubnet2RouteTableAssociation994802D2\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"ClusterVpcPrivateSubnet2RouteTable918A9411\"}, \"SubnetId\": {\"Ref\": \"ClusterVpcPrivateSubnet2Subnet176BE39E\"}}, \"DependsOn\": [\"BuildLambdaTriggerCustomResourcePolicy465CA35F\", \"BuildLambdaTriggerB4D1B83F\"], \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/ClusterVpc/PrivateSubnet2/RouteTableAssociation\"}}, \"ClusterVpcPrivateSubnet2DefaultRouteCC18893B\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"ClusterVpcPrivateSubnet2RouteTable918A9411\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"ClusterVpcPublicSubnet2NATGatewayC9242BCE\"}}, \"DependsOn\": [\"BuildLambdaTriggerCustomResourcePolicy465CA35F\", \"BuildLambdaTriggerB4D1B83F\"], \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/ClusterVpc/PrivateSubnet2/DefaultRoute\"}}, \"ClusterVpcIGW467AA2AB\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"CodepipelineBuildDeployStack/ClusterVpc\"}]}, \"DependsOn\": [\"BuildLambdaTriggerCustomResourcePolicy465CA35F\", \"BuildLambdaTriggerB4D1B83F\"], \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/ClusterVpc/IGW\"}}, \"ClusterVpcVPCGW361426E5\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"ClusterVpcA8CFF6E7\"}, \"InternetGatewayId\": {\"Ref\": \"ClusterVpcIGW467AA2AB\"}}, \"DependsOn\": [\"BuildLambdaTriggerCustomResourcePolicy465CA35F\", \"BuildLambdaTriggerB4D1B83F\"], \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/ClusterVpc/VPCGW\"}}, \"BlueTargetGroupF108EB01\": {\"Type\": \"AWS::ElasticLoadBalancingV2::TargetGroup\", \"Properties\": {\"Name\": \"alb-blue-tg\", \"Port\": 80, \"Protocol\": \"HTTP\", \"TargetGroupAttributes\": [{\"Key\": \"stickiness.enabled\", \"Value\": \"false\"}], \"TargetType\": \"ip\", \"VpcId\": {\"Ref\": \"ClusterVpcA8CFF6E7\"}}, \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/BlueTargetGroup/Resource\"}}, \"GreenTargetGroupEEB2DF3E\": {\"Type\": \"AWS::ElasticLoadBalancingV2::TargetGroup\", \"Properties\": {\"Name\": \"alb-green-tg\", \"Port\": 80, \"Protocol\": \"HTTP\", \"TargetGroupAttributes\": [{\"Key\": \"stickiness.enabled\", \"Value\": \"false\"}], \"TargetType\": \"ip\", \"VpcId\": {\"Ref\": \"ClusterVpcA8CFF6E7\"}}, \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/GreenTargetGroup/Resource\"}}, \"SecurityGroupDD263621\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"CodepipelineBuildDeployStack/SecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"SecurityGroupIngress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allows access on port 80/http\", \"FromPort\": 80, \"IpProtocol\": \"tcp\", \"ToPort\": 80}], \"VpcId\": {\"Ref\": \"ClusterVpcA8CFF6E7\"}}, \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/SecurityGroup/Resource\"}}, \"PublicAlb84330974\": {\"Type\": \"AWS::ElasticLoadBalancingV2::LoadBalancer\", \"Properties\": {\"LoadBalancerAttributes\": [{\"Key\": \"deletion_protection.enabled\", \"Value\": \"false\"}], \"Scheme\": \"internet-facing\", \"SecurityGroups\": [{\"Fn::GetAtt\": [\"SecurityGroupDD263621\", \"GroupId\"]}], \"Subnets\": [{\"Ref\": \"ClusterVpcPublicSubnet1Subnet6F292256\"}, {\"Ref\": \"ClusterVpcPublicSubnet2Subnet426701E5\"}], \"Type\": \"application\"}, \"DependsOn\": [\"ClusterVpcPublicSubnet1DefaultRouteAFF78CE0\", \"ClusterVpcPublicSubnet1RouteTableAssociation5AD6D21B\", \"ClusterVpcPublicSubnet2DefaultRouteAEC6FDD4\", \"ClusterVpcPublicSubnet2RouteTableAssociation7ADD1D72\"], \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/PublicAlb/Resource\"}}, \"PublicAlbAlbListener804C1B2779\": {\"Type\": \"AWS::ElasticLoadBalancingV2::Listener\", \"Properties\": {\"DefaultActions\": [{\"TargetGroupArn\": {\"Ref\": \"BlueTargetGroupF108EB01\"}, \"Type\": \"forward\"}], \"LoadBalancerArn\": {\"Ref\": \"PublicAlb84330974\"}, \"Port\": 80, \"Protocol\": \"HTTP\"}, \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/PublicAlb/AlbListener80/Resource\"}}, \"EcsCluster97242B84\": {\"Type\": \"AWS::ECS::Cluster\", \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/EcsCluster/Resource\"}}, \"EcsCluster72B17558\": {\"Type\": \"AWS::ECS::ClusterCapacityProviderAssociations\", \"Properties\": {\"CapacityProviders\": [\"FARGATE\", \"FARGATE_SPOT\"], \"Cluster\": {\"Ref\": \"EcsCluster97242B84\"}, \"DefaultCapacityProviderStrategy\": []}, \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/EcsCluster/EcsCluster\"}}, \"FargateServiceAC2B3B85\": {\"Type\": \"AWS::ECS::Service\", \"Properties\": {\"Cluster\": {\"Ref\": \"EcsCluster97242B84\"}, \"DeploymentConfiguration\": {\"MaximumPercent\": 200, \"MinimumHealthyPercent\": 50}, \"DeploymentController\": {\"Type\": \"CODE_DEPLOY\"}, \"DesiredCount\": 1, \"EnableECSManagedTags\": false, \"HealthCheckGracePeriodSeconds\": 60, \"LaunchType\": \"FARGATE\", \"LoadBalancers\": [{\"ContainerName\": \"web\", \"ContainerPort\": 80, \"TargetGroupArn\": {\"Ref\": \"BlueTargetGroupF108EB01\"}}], \"NetworkConfiguration\": {\"AwsvpcConfiguration\": {\"AssignPublicIp\": \"DISABLED\", \"SecurityGroups\": [{\"Fn::GetAtt\": [\"FargateServiceSecurityGroup0A0E79CB\", \"GroupId\"]}], \"Subnets\": [{\"Ref\": \"ClusterVpcPrivateSubnet1Subnet505E4257\"}, {\"Ref\": \"ClusterVpcPrivateSubnet2Subnet176BE39E\"}]}}, \"ServiceName\": \"fargate-frontend-service\", \"TaskDefinition\": \"CodepipelineBuildDeployStackFargateTaskDef1618DD8E\"}, \"DependsOn\": [\"FargateTaskDefExecutionRoleDefaultPolicy6D29E918\", \"FargateTaskDefExecutionRole272677A9\", \"FargateTaskDefC6FB60B4\", \"FargateTaskDefTaskRole0B257552\", \"PublicAlbAlbListener804C1B2779\"], \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/FargateService/Service\"}}, \"FargateServiceSecurityGroup0A0E79CB\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"CodepipelineBuildDeployStack/FargateService/SecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"VpcId\": {\"Ref\": \"ClusterVpcA8CFF6E7\"}}, \"DependsOn\": [\"FargateTaskDefExecutionRoleDefaultPolicy6D29E918\", \"FargateTaskDefExecutionRole272677A9\", \"FargateTaskDefC6FB60B4\", \"FargateTaskDefTaskRole0B257552\"], \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/FargateService/SecurityGroup/Resource\"}}, \"FargateServiceSecurityGroupfromCodepipelineBuildDeployStackSecurityGroup07B96CA880690A9743\": {\"Type\": \"AWS::EC2::SecurityGroupIngress\", \"Properties\": {\"IpProtocol\": \"tcp\", \"Description\": \"Load balancer to target\", \"FromPort\": 80, \"GroupId\": {\"Fn::GetAtt\": [\"FargateServiceSecurityGroup0A0E79CB\", \"GroupId\"]}, \"SourceSecurityGroupId\": {\"Fn::GetAtt\": [\"SecurityGroupDD263621\", \"GroupId\"]}, \"ToPort\": 80}, \"DependsOn\": [\"FargateTaskDefExecutionRoleDefaultPolicy6D29E918\", \"FargateTaskDefExecutionRole272677A9\", \"FargateTaskDefC6FB60B4\", \"FargateTaskDefTaskRole0B257552\"], \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/FargateService/SecurityGroup/from CodepipelineBuildDeployStackSecurityGroup07B96CA8:80\"}}, \"CodeDeployGroupServiceRole50553EBF\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codedeploy.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/AWSCodeDeployRoleForECS\"]]}]}, \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/CodeDeployGroup/ServiceRole/Resource\"}}, \"CodeDeployGroupApplication13EFBDA6\": {\"Type\": \"AWS::CodeDeploy::Application\", \"Properties\": {\"ComputePlatform\": \"ECS\"}, \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/CodeDeployGroup/Application/Resource\"}}, \"CodeDeployGroup58220FC8\": {\"Type\": \"AWS::CodeDeploy::DeploymentGroup\", \"Properties\": {\"ApplicationName\": {\"Ref\": \"CodeDeployGroupApplication13EFBDA6\"}, \"ServiceRoleArn\": {\"Fn::GetAtt\": [\"CodeDeployGroupServiceRole50553EBF\", \"Arn\"]}, \"AlarmConfiguration\": {\"Enabled\": false}, \"AutoRollbackConfiguration\": {\"Enabled\": true, \"Events\": [\"DEPLOYMENT_FAILURE\"]}, \"BlueGreenDeploymentConfiguration\": {\"DeploymentReadyOption\": {\"ActionOnTimeout\": \"CONTINUE_DEPLOYMENT\", \"WaitTimeInMinutes\": 0}, \"TerminateBlueInstancesOnDeploymentSuccess\": {\"Action\": \"TERMINATE\", \"TerminationWaitTimeInMinutes\": 0}}, \"DeploymentConfigName\": \"CodeDeployDefault.ECSAllAtOnce\", \"DeploymentStyle\": {\"DeploymentOption\": \"WITH_TRAFFIC_CONTROL\", \"DeploymentType\": \"BLUE_GREEN\"}, \"ECSServices\": [{\"ClusterName\": {\"Ref\": \"EcsCluster97242B84\"}, \"ServiceName\": {\"Fn::GetAtt\": [\"FargateServiceAC2B3B85\", \"Name\"]}}], \"LoadBalancerInfo\": {\"TargetGroupPairInfoList\": [{\"ProdTrafficRoute\": {\"ListenerArns\": [{\"Ref\": \"PublicAlbAlbListener804C1B2779\"}]}, \"TargetGroups\": [{\"Name\": {\"Fn::GetAtt\": [\"BlueTargetGroupF108EB01\", \"TargetGroupName\"]}}, {\"Name\": {\"Fn::GetAtt\": [\"GreenTargetGroupEEB2DF3E\", \"TargetGroupName\"]}}]}]}}, \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/CodeDeployGroup/Resource\"}}, \"BuildDeployPipelineArtifactsBucketEncryptionKey8AB5ABF8\": {\"Type\": \"AWS::KMS::Key\", \"Properties\": {\"KeyPolicy\": {\"Statement\": [{\"Action\": \"kms:*\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}, \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\", \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/BuildDeployPipeline/ArtifactsBucketEncryptionKey/Resource\"}}, \"BuildDeployPipelineArtifactsBucketEncryptionKeyAliasC52C67EF\": {\"Type\": \"AWS::KMS::Alias\", \"Properties\": {\"AliasName\": \"alias/codepipeline-codepipelinebuilddeploystack-builddeploypipeline-2b279ccc\", \"TargetKeyId\": {\"Fn::GetAtt\": [\"BuildDeployPipelineArtifactsBucketEncryptionKey8AB5ABF8\", \"Arn\"]}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\", \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/BuildDeployPipeline/ArtifactsBucketEncryptionKeyAlias/Resource\"}}, \"BuildDeployPipelineArtifactsBucket5D4A76C1\": {\"Type\": \"AWS::S3::Bucket\", \"Properties\": {\"BucketEncryption\": {\"ServerSideEncryptionConfiguration\": [{\"ServerSideEncryptionByDefault\": {\"KMSMasterKeyID\": {\"Fn::GetAtt\": [\"BuildDeployPipelineArtifactsBucketEncryptionKey8AB5ABF8\", \"Arn\"]}, \"SSEAlgorithm\": \"aws:kms\"}}]}, \"PublicAccessBlockConfiguration\": {\"BlockPublicAcls\": true, \"BlockPublicPolicy\": true, \"IgnorePublicAcls\": true, \"RestrictPublicBuckets\": true}}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\", \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/BuildDeployPipeline/ArtifactsBucket/Resource\"}}, \"BuildDeployPipelineArtifactsBucketPolicyC49383E9\": {\"Type\": \"AWS::S3::BucketPolicy\", \"Properties\": {\"Bucket\": {\"Ref\": \"BuildDeployPipelineArtifactsBucket5D4A76C1\"}, \"PolicyDocument\": {\"Statement\": [{\"Action\": \"s3:*\", \"Condition\": {\"Bool\": {\"aws:SecureTransport\": \"false\"}}, \"Effect\": \"Deny\", \"Principal\": {\"AWS\": \"*\"}, \"Resource\": [{\"Fn::GetAtt\": [\"BuildDeployPipelineArtifactsBucket5D4A76C1\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"BuildDeployPipelineArtifactsBucket5D4A76C1\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}}, \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/BuildDeployPipeline/ArtifactsBucket/Policy/Resource\"}}, \"BuildDeployPipelineRole3223E55F\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codepipeline.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}, \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/BuildDeployPipeline/Role/Resource\"}}, \"BuildDeployPipelineRoleDefaultPolicyECF964D2\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"BuildDeployPipelineArtifactsBucket5D4A76C1\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"BuildDeployPipelineArtifactsBucket5D4A76C1\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"kms:Decrypt\", \"kms:DescribeKey\", \"kms:Encrypt\", \"kms:GenerateDataKey*\", \"kms:ReEncrypt*\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"BuildDeployPipelineArtifactsBucketEncryptionKey8AB5ABF8\", \"Arn\"]}}, {\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"BuildDeployPipelineBuildDockerBuildPushCodePipelineActionRole760EF965\", \"Arn\"]}, {\"Fn::GetAtt\": [\"BuildDeployPipelineDeployEcsFargateDeployCodePipelineActionRole054540AB\", \"Arn\"]}, {\"Fn::GetAtt\": [\"BuildDeployPipelineSourceCodeCommitCodePipelineActionRoleB12AC215\", \"Arn\"]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"BuildDeployPipelineRoleDefaultPolicyECF964D2\", \"Roles\": [{\"Ref\": \"BuildDeployPipelineRole3223E55F\"}]}, \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/BuildDeployPipeline/Role/DefaultPolicy/Resource\"}}, \"BuildDeployPipeline5EEC284B\": {\"Type\": \"AWS::CodePipeline::Pipeline\", \"Properties\": {\"RoleArn\": {\"Fn::GetAtt\": [\"BuildDeployPipelineRole3223E55F\", \"Arn\"]}, \"Stages\": [{\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Source\", \"Owner\": \"AWS\", \"Provider\": \"CodeCommit\", \"Version\": \"1\"}, \"Configuration\": {\"RepositoryName\": {\"Fn::GetAtt\": [\"codeRepo68658E14\", \"Name\"]}, \"BranchName\": \"main\", \"PollForSourceChanges\": false}, \"Name\": \"CodeCommit\", \"OutputArtifacts\": [{\"Name\": \"SourceArtifact\"}], \"RoleArn\": {\"Fn::GetAtt\": [\"BuildDeployPipelineSourceCodeCommitCodePipelineActionRoleB12AC215\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"Source\"}, {\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Build\", \"Owner\": \"AWS\", \"Provider\": \"CodeBuild\", \"Version\": \"1\"}, \"Configuration\": {\"ProjectName\": {\"Ref\": \"BuildImage74257FD8\"}}, \"InputArtifacts\": [{\"Name\": \"SourceArtifact\"}], \"Name\": \"DockerBuildPush\", \"OutputArtifacts\": [{\"Name\": \"BuildArtifact\"}], \"RoleArn\": {\"Fn::GetAtt\": [\"BuildDeployPipelineBuildDockerBuildPushCodePipelineActionRole760EF965\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"Build\"}, {\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Deploy\", \"Owner\": \"AWS\", \"Provider\": \"CodeDeployToECS\", \"Version\": \"1\"}, \"Configuration\": {\"ApplicationName\": {\"Ref\": \"CodeDeployGroupApplication13EFBDA6\"}, \"DeploymentGroupName\": {\"Ref\": \"CodeDeployGroup58220FC8\"}, \"TaskDefinitionTemplateArtifact\": \"BuildArtifact\", \"TaskDefinitionTemplatePath\": \"taskdef.json\", \"AppSpecTemplateArtifact\": \"BuildArtifact\", \"AppSpecTemplatePath\": \"appspec.yaml\"}, \"InputArtifacts\": [{\"Name\": \"BuildArtifact\"}], \"Name\": \"EcsFargateDeploy\", \"RoleArn\": {\"Fn::GetAtt\": [\"BuildDeployPipelineDeployEcsFargateDeployCodePipelineActionRole054540AB\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"Deploy\"}], \"ArtifactStore\": {\"EncryptionKey\": {\"Id\": {\"Fn::GetAtt\": [\"BuildDeployPipelineArtifactsBucketEncryptionKey8AB5ABF8\", \"Arn\"]}, \"Type\": \"KMS\"}, \"Location\": {\"Ref\": \"BuildDeployPipelineArtifactsBucket5D4A76C1\"}, \"Type\": \"S3\"}, \"Name\": \"ImageBuildDeployPipeline\"}, \"DependsOn\": [\"BuildDeployPipelineRoleDefaultPolicyECF964D2\", \"BuildDeployPipelineRole3223E55F\"], \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/BuildDeployPipeline/Resource\"}}, \"BuildDeployPipelineSourceCodeCommitCodePipelineActionRoleB12AC215\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}, \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/BuildDeployPipeline/Source/CodeCommit/CodePipelineActionRole/Resource\"}}, \"BuildDeployPipelineSourceCodeCommitCodePipelineActionRoleDefaultPolicy4653922A\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:Abort*\", \"s3:DeleteObject*\", \"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"BuildDeployPipelineArtifactsBucket5D4A76C1\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"BuildDeployPipelineArtifactsBucket5D4A76C1\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"kms:Decrypt\", \"kms:DescribeKey\", \"kms:Encrypt\", \"kms:GenerateDataKey*\", \"kms:ReEncrypt*\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"BuildDeployPipelineArtifactsBucketEncryptionKey8AB5ABF8\", \"Arn\"]}}, {\"Action\": [\"codecommit:CancelUploadArchive\", \"codecommit:GetBranch\", \"codecommit:GetCommit\", \"codecommit:GetUploadArchiveStatus\", \"codecommit:UploadArchive\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"codeRepo68658E14\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"BuildDeployPipelineSourceCodeCommitCodePipelineActionRoleDefaultPolicy4653922A\", \"Roles\": [{\"Ref\": \"BuildDeployPipelineSourceCodeCommitCodePipelineActionRoleB12AC215\"}]}, \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/BuildDeployPipeline/Source/CodeCommit/CodePipelineActionRole/DefaultPolicy/Resource\"}}, \"BuildDeployPipelineEventsRoleDE5B0F8F\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"events.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}, \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/BuildDeployPipeline/EventsRole/Resource\"}}, \"BuildDeployPipelineEventsRoleDefaultPolicy849508FE\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"codepipeline:StartPipelineExecution\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":codepipeline:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":\", {\"Ref\": \"BuildDeployPipeline5EEC284B\"}]]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"BuildDeployPipelineEventsRoleDefaultPolicy849508FE\", \"Roles\": [{\"Ref\": \"BuildDeployPipelineEventsRoleDE5B0F8F\"}]}, \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/BuildDeployPipeline/EventsRole/DefaultPolicy/Resource\"}}, \"BuildDeployPipelineBuildDockerBuildPushCodePipelineActionRole760EF965\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}, \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/BuildDeployPipeline/Build/DockerBuildPush/CodePipelineActionRole/Resource\"}}, \"BuildDeployPipelineBuildDockerBuildPushCodePipelineActionRoleDefaultPolicy31694614\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"codebuild:BatchGetBuilds\", \"codebuild:StartBuild\", \"codebuild:StopBuild\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"BuildImage74257FD8\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"BuildDeployPipelineBuildDockerBuildPushCodePipelineActionRoleDefaultPolicy31694614\", \"Roles\": [{\"Ref\": \"BuildDeployPipelineBuildDockerBuildPushCodePipelineActionRole760EF965\"}]}, \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/BuildDeployPipeline/Build/DockerBuildPush/CodePipelineActionRole/DefaultPolicy/Resource\"}}, \"BuildDeployPipelineDeployEcsFargateDeployCodePipelineActionRole054540AB\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}, \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/BuildDeployPipeline/Deploy/EcsFargateDeploy/CodePipelineActionRole/Resource\"}}, \"BuildDeployPipelineDeployEcsFargateDeployCodePipelineActionRoleDefaultPolicy5E7BE922\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"codedeploy:GetApplication\", \"codedeploy:GetApplicationRevision\", \"codedeploy:RegisterApplicationRevision\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":codedeploy:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":application:\", {\"Ref\": \"CodeDeployGroupApplication13EFBDA6\"}]]}}, {\"Action\": [\"codedeploy:CreateDeployment\", \"codedeploy:GetDeployment\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":codedeploy:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":deploymentgroup:\", {\"Ref\": \"CodeDeployGroupApplication13EFBDA6\"}, \"/\", {\"Ref\": \"CodeDeployGroup58220FC8\"}]]}}, {\"Action\": \"codedeploy:GetDeploymentConfig\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":codedeploy:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":deploymentconfig:CodeDeployDefault.ECSAllAtOnce\"]]}}, {\"Action\": \"ecs:RegisterTaskDefinition\", \"Effect\": \"Allow\", \"Resource\": \"*\"}, {\"Action\": \"iam:PassRole\", \"Condition\": {\"StringEqualsIfExists\": {\"iam:PassedToService\": [\"ecs-tasks.amazonaws.com\"]}}, \"Effect\": \"Allow\", \"Resource\": \"*\"}, {\"Action\": [\"s3:GetBucket*\", \"s3:GetObject*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"BuildDeployPipelineArtifactsBucket5D4A76C1\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"BuildDeployPipelineArtifactsBucket5D4A76C1\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"kms:Decrypt\", \"kms:DescribeKey\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"BuildDeployPipelineArtifactsBucketEncryptionKey8AB5ABF8\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"BuildDeployPipelineDeployEcsFargateDeployCodePipelineActionRoleDefaultPolicy5E7BE922\", \"Roles\": [{\"Ref\": \"BuildDeployPipelineDeployEcsFargateDeployCodePipelineActionRole054540AB\"}]}, \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/BuildDeployPipeline/Deploy/EcsFargateDeploy/CodePipelineActionRole/DefaultPolicy/Resource\"}}, \"CDKMetadata\": {\"Type\": \"AWS::CDK::Metadata\", \"Properties\": {\"Analytics\": \"v2:deflate64:H4sIAAAAAAAA/31TTW/bMAz9Lb0r2podtmuSdkWwYTOSotdAltmMsSwZ+nAQGP7voyQn9jKgJz4+kBQfSS351yV/fBBnt5BVvVBY8n7vhawZUYdemgqkaRr0vN9Baxx6Yy9s864nb2Duy0E4B97xVTTk834dZA1+LRywDGPSiLIpjEJ5mejsDww60FSq3wUF6SWyxEr7UQsgKeO7sEfh4VW4+gneUaNHo2PkPWO0F6jBzjkVnAcbo/+HG9EKif5SWNNhBZZkGokiJjo2vroH26FMHY9wYCgaatqMOqKdRF/lxhGXAVXFeyp/ApkmNcKBKdGUlSBtQcurnBveoz4q8ObGxEEsef/Wyhj3VmxYEUp6Zx9KnVcwoZ0JcVZl7i7zEzeTeAuO4HlbRPNL+BcSfRYXVljsov5b4a2mkRG+BuRORm/l6br+NLRitgcZLE31xZrQ5rl9RGz10YJzJFEJ51EqI6pSKKElTaEj1au2Jamp5VfaCTVwrTN3Z1E/qcI6Vcjb/sefxyEdgR5jRpwXV0GrzIX3z9I9JRiF5XeImpWIqXfuXUIu2GILik6TjmFE6RpGPLC6oTv/AWmo0awUCpeKRzAMLP1A+sFHGgrbgTPB0lFKOmPTHOzo00c9u03ibiH3bvxfE/4dfBvSdunzVJhvTVPD/OQ+dY/f+JJ/fjg5xIUN2mMDfJftX1uXuThhBAAA\"}, \"Metadata\": {\"aws:cdk:path\": \"CodepipelineBuildDeployStack/CDKMetadata/Default\"}, \"Condition\": \"CDKMetadataAvailable\"}}, \"Outputs\": {\"PublicAlbEndpoint\": {\"Value\": {\"Fn::Join\": [\"\", [\"http://\", {\"Fn::GetAtt\": [\"PublicAlb84330974\", \"DNSName\"]}]]}}}, \"Conditions\": {\"CDKMetadataAvailable\": {\"Fn::Or\": [{\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"af-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ca-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-northwest-1\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-3\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"me-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"sa-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-2\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-2\"]}]}]}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": ""}
{ "prompt": "{\"Resources\": {\"helloWorldFunctionServiceRole8475DBF0\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}, \"Metadata\": {\"aws:cdk:path\": \"CognitoProtectedApi/helloWorldFunction/ServiceRole/Resource\"}}, \"helloWorldFunction00C940B5\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"3c31a560c275440e9698544c4b4cc6074e3987855f7ab6e34eac67292d132862.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"helloWorldFunctionServiceRole8475DBF0\", \"Arn\"]}, \"Handler\": \"helloworld.handler\", \"Runtime\": \"nodejs18.x\"}, \"DependsOn\": [\"helloWorldFunctionServiceRole8475DBF0\"], \"Metadata\": {\"aws:cdk:path\": \"CognitoProtectedApi/helloWorldFunction/Resource\", \"aws:asset:path\": \"asset.3c31a560c275440e9698544c4b4cc6074e3987855f7ab6e34eac67292d132862\", \"aws:asset:is-bundled\": false, \"aws:asset:property\": \"Code\"}}, \"helloWorldLambdaRestApi6825FB98\": {\"Type\": \"AWS::ApiGateway::RestApi\", \"Properties\": {\"Name\": \"Hello World API\"}, \"Metadata\": {\"aws:cdk:path\": \"CognitoProtectedApi/helloWorldLambdaRestApi/Resource\"}}, \"helloWorldLambdaRestApiCloudWatchRole22367FBD\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"apigateway.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs\"]]}]}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\", \"Metadata\": {\"aws:cdk:path\": \"CognitoProtectedApi/helloWorldLambdaRestApi/CloudWatchRole/Resource\"}}, \"helloWorldLambdaRestApiAccount3D66EADA\": {\"Type\": \"AWS::ApiGateway::Account\", \"Properties\": {\"CloudWatchRoleArn\": {\"Fn::GetAtt\": [\"helloWorldLambdaRestApiCloudWatchRole22367FBD\", \"Arn\"]}}, \"DependsOn\": [\"helloWorldLambdaRestApi6825FB98\"], \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\", \"Metadata\": {\"aws:cdk:path\": \"CognitoProtectedApi/helloWorldLambdaRestApi/Account\"}}, \"helloWorldLambdaRestApiDeploymentCB1FF57464f3e9f368e40968a1aeabdb5bcc9580\": {\"Type\": \"AWS::ApiGateway::Deployment\", \"Properties\": {\"RestApiId\": {\"Ref\": \"helloWorldLambdaRestApi6825FB98\"}, \"Description\": \"Automatically created by the RestApi construct\"}, \"DependsOn\": [\"helloWorldLambdaRestApiHELLOGET6E88F46C\", \"helloWorldLambdaRestApiHELLOAD091B67\"], \"Metadata\": {\"aws:cdk:path\": \"CognitoProtectedApi/helloWorldLambdaRestApi/Deployment/Resource\"}}, \"helloWorldLambdaRestApiDeploymentStageprod67DD79AF\": {\"Type\": \"AWS::ApiGateway::Stage\", \"Properties\": {\"RestApiId\": {\"Ref\": \"helloWorldLambdaRestApi6825FB98\"}, \"DeploymentId\": {\"Ref\": \"helloWorldLambdaRestApiDeploymentCB1FF57464f3e9f368e40968a1aeabdb5bcc9580\"}, \"StageName\": \"prod\"}, \"DependsOn\": [\"helloWorldLambdaRestApiAccount3D66EADA\"], \"Metadata\": {\"aws:cdk:path\": \"CognitoProtectedApi/helloWorldLambdaRestApi/DeploymentStage.prod/Resource\"}}, \"helloWorldLambdaRestApiHELLOAD091B67\": {\"Type\": \"AWS::ApiGateway::Resource\", \"Properties\": {\"ParentId\": {\"Fn::GetAtt\": [\"helloWorldLambdaRestApi6825FB98\", \"RootResourceId\"]}, \"PathPart\": \"HELLO\", \"RestApiId\": {\"Ref\": \"helloWorldLambdaRestApi6825FB98\"}}, \"Metadata\": {\"aws:cdk:path\": \"CognitoProtectedApi/helloWorldLambdaRestApi/Default/HELLO/Resource\"}}, \"helloWorldLambdaRestApiHELLOGETApiPermissionCognitoProtectedApihelloWorldLambdaRestApi9E9DB39DGETHELLO61B4977B\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"helloWorldFunction00C940B5\", \"Arn\"]}, \"Principal\": \"apigateway.amazonaws.com\", \"SourceArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":execute-api:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":\", {\"Ref\": \"helloWorldLambdaRestApi6825FB98\"}, \"/\", {\"Ref\": \"helloWorldLambdaRestApiDeploymentStageprod67DD79AF\"}, \"/GET/HELLO\"]]}}, \"Metadata\": {\"aws:cdk:path\": \"CognitoProtectedApi/helloWorldLambdaRestApi/Default/HELLO/GET/ApiPermission.CognitoProtectedApihelloWorldLambdaRestApi9E9DB39D.GET..HELLO\"}}, \"helloWorldLambdaRestApiHELLOGETApiPermissionTestCognitoProtectedApihelloWorldLambdaRestApi9E9DB39DGETHELLOD4AD0AEF\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"helloWorldFunction00C940B5\", \"Arn\"]}, \"Principal\": \"apigateway.amazonaws.com\", \"SourceArn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":execute-api:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":\", {\"Ref\": \"helloWorldLambdaRestApi6825FB98\"}, \"/test-invoke-stage/GET/HELLO\"]]}}, \"Metadata\": {\"aws:cdk:path\": \"CognitoProtectedApi/helloWorldLambdaRestApi/Default/HELLO/GET/ApiPermission.Test.CognitoProtectedApihelloWorldLambdaRestApi9E9DB39D.GET..HELLO\"}}, \"helloWorldLambdaRestApiHELLOGET6E88F46C\": {\"Type\": \"AWS::ApiGateway::Method\", \"Properties\": {\"HttpMethod\": \"GET\", \"ResourceId\": {\"Ref\": \"helloWorldLambdaRestApiHELLOAD091B67\"}, \"RestApiId\": {\"Ref\": \"helloWorldLambdaRestApi6825FB98\"}, \"AuthorizationType\": \"COGNITO_USER_POOLS\", \"AuthorizerId\": {\"Ref\": \"cfnAuth\"}, \"Integration\": {\"IntegrationHttpMethod\": \"POST\", \"Type\": \"AWS_PROXY\", \"Uri\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":apigateway:\", {\"Ref\": \"AWS::Region\"}, \":lambda:path/2015-03-31/functions/\", {\"Fn::GetAtt\": [\"helloWorldFunction00C940B5\", \"Arn\"]}, \"/invocations\"]]}}}, \"Metadata\": {\"aws:cdk:path\": \"CognitoProtectedApi/helloWorldLambdaRestApi/Default/HELLO/GET/Resource\"}}, \"userPoolDC9497E0\": {\"Type\": \"AWS::Cognito::UserPool\", \"Properties\": {\"AccountRecoverySetting\": {\"RecoveryMechanisms\": [{\"Name\": \"verified_phone_number\", \"Priority\": 1}, {\"Name\": \"verified_email\", \"Priority\": 2}]}, \"AdminCreateUserConfig\": {\"AllowAdminCreateUserOnly\": true}, \"AutoVerifiedAttributes\": [\"email\"], \"EmailVerificationMessage\": \"The verification code to your new account is {####}\", \"EmailVerificationSubject\": \"Verify your new account\", \"SmsVerificationMessage\": \"The verification code to your new account is {####}\", \"UsernameAttributes\": [\"email\"], \"VerificationMessageTemplate\": {\"DefaultEmailOption\": \"CONFIRM_WITH_CODE\", \"EmailMessage\": \"The verification code to your new account is {####}\", \"EmailSubject\": \"Verify your new account\", \"SmsMessage\": \"The verification code to your new account is {####}\"}}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\", \"Metadata\": {\"aws:cdk:path\": \"CognitoProtectedApi/userPool/Resource\"}}, \"cfnAuth\": {\"Type\": \"AWS::ApiGateway::Authorizer\", \"Properties\": {\"Name\": \"HelloWorldAPIAuthorizer\", \"RestApiId\": {\"Ref\": \"helloWorldLambdaRestApi6825FB98\"}, \"Type\": \"COGNITO_USER_POOLS\", \"IdentitySource\": \"method.request.header.Authorization\", \"ProviderARNs\": [{\"Fn::GetAtt\": [\"userPoolDC9497E0\", \"Arn\"]}]}, \"Metadata\": {\"aws:cdk:path\": \"CognitoProtectedApi/cfnAuth\"}}, \"CDKMetadata\": {\"Type\": \"AWS::CDK::Metadata\", \"Properties\": {\"Analytics\": \"v2:deflate64:H4sIAAAAAAAA/1WQwU7DMAyGn4V7GmAc2LUb4gRiKuI8ZakpXtu4ih2mEfXdSVqmjpO/33H8217p9aO+uzEnLmzdFh0edHwXY1uVUvvYmf5QGx2fg7OC5NT2013zDnyPzEmNCk2vY0Ud5IccR8UPe8MMwrrMIWm9CbYF2RgGZQZsjMDJnHV8mYwqYCkHnBosWFpLwYl6gqGjcw8JU/ZKpYGbyXWG9JWCtzCZXMRfz5lfQb6ozqmFypDI4w/4UVlqHArp+MHgd0RdLrjwOC5Np7WyK7om17wFGYL880q8JVejTEdyVIM+8u33/Vqv0uGPjFj4tB32oKs5/gJLpMzAlAEAAA==\"}, \"Metadata\": {\"aws:cdk:path\": \"CognitoProtectedApi/CDKMetadata/Default\"}, \"Condition\": \"CDKMetadataAvailable\"}}, \"Outputs\": {\"helloWorldLambdaRestApiEndpointC5601FAC\": {\"Value\": {\"Fn::Join\": [\"\", [\"https://\", {\"Ref\": \"helloWorldLambdaRestApi6825FB98\"}, \".execute-api.\", {\"Ref\": \"AWS::Region\"}, \".\", {\"Ref\": \"AWS::URLSuffix\"}, \"/\", {\"Ref\": \"helloWorldLambdaRestApiDeploymentStageprod67DD79AF\"}, \"/\"]]}}}, \"Conditions\": {\"CDKMetadataAvailable\": {\"Fn::Or\": [{\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"af-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ca-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-northwest-1\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-3\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"me-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"sa-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-2\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-2\"]}]}]}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import { LambdaRestApi, CfnAuthorizer, LambdaIntegration, AuthorizationType } from 'aws-cdk-lib/aws-apigateway';\nimport { AssetCode, Function, Runtime } from 'aws-cdk-lib/aws-lambda';\nimport { App, Stack } from 'aws-cdk-lib';\nimport { UserPool } from 'aws-cdk-lib/aws-cognito'\n\nexport class CognitoProtectedApi extends Stack {\n  constructor(app: App, id: string) {\n    super(app, id);\n\n    // Function that returns 201 with \"Hello world!\"\n    const helloWorldFunction = new Function(this, 'helloWorldFunction', {\n      code: new AssetCode('src'),\n      handler: 'helloworld.handler',\n      runtime: Runtime.NODEJS_18_X\n    });\n\n    // Rest API backed by the helloWorldFunction\n    const helloWorldLambdaRestApi = new LambdaRestApi(this, 'helloWorldLambdaRestApi', {\n      restApiName: 'Hello World API',\n      handler: helloWorldFunction,\n      proxy: false,\n    });\n\n    // Cognito User Pool with Email Sign-in Type.\n    const userPool = new UserPool(this, 'userPool', {\n      signInAliases: {\n        email: true\n      }\n    })\n\n    // Authorizer for the Hello World API that uses the\n    // Cognito User pool to Authorize users.\n    const authorizer = new CfnAuthorizer(this, 'cfnAuth', {\n      restApiId: helloWorldLambdaRestApi.restApiId,\n      name: 'HelloWorldAPIAuthorizer',\n      type: 'COGNITO_USER_POOLS',\n      identitySource: 'method.request.header.Authorization',\n      providerArns: [userPool.userPoolArn],\n    })\n\n    // Hello Resource API for the REST API. \n    const hello = helloWorldLambdaRestApi.root.addResource('HELLO');\n\n    // GET method for the HELLO API resource. It uses Cognito for\n    // authorization and the auathorizer defined above.\n    hello.addMethod('GET', new LambdaIntegration(helloWorldFunction), {\n      authorizationType: AuthorizationType.COGNITO,\n      authorizer: {\n        authorizerId: authorizer.ref\n      }\n      \n    })\n    \n  }\n}\n\n\nconst app = new App();\nnew CognitoProtectedApi(app, 'CognitoProtectedApi');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyTopic86869434\": {\"Type\": \"AWS::SNS::Topic\", \"Metadata\": {\"aws:cdk:path\": \"MyStack/MyTopic/Resource\"}}, \"MyBucketF68F3FF0\": {\"Type\": \"AWS::S3::Bucket\", \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\", \"Metadata\": {\"aws:cdk:path\": \"MyStack/MyBucket/Resource\"}}, \"CDKMetadata\": {\"Type\": \"AWS::CDK::Metadata\", \"Properties\": {\"Analytics\": \"v2:deflate64:H4sIAAAAAAAA/yXNMQ7CMAyF4bOwJwbKQGd6g9IdtU6Q3ICN6oQOUe5OQ6f36V9eA+0VTodxVYsu2BdNkO9xxGC29MjKCnmQD6HpnvxHMXqBfEsYfKxxVynVvVdJC/rqTthRJOFiWJyHWY/fcwvN9jYrkV0SR3p76Pf9Afz9mgSJAAAA\"}, \"Metadata\": {\"aws:cdk:path\": \"MyStack/CDKMetadata/Default\"}, \"Condition\": \"CDKMetadataAvailable\"}}, \"Conditions\": {\"CDKMetadataAvailable\": {\"Fn::Or\": [{\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"af-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ca-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-northwest-1\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-3\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"me-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"sa-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-2\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-2\"]}]}]}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "#!/usr/bin/env node\nimport { BaseStack } from './base-stack';\nimport { App, StackProps } from 'aws-cdk-lib';\nimport s3 = require('aws-cdk-lib/aws-s3');\nimport sns = require('aws-cdk-lib/aws-sns');\nimport { Construct } from 'constructs';\n\nclass MyStack extends BaseStack {\n  constructor(scope: Construct, id: string, props?: StackProps) {\n    super(scope, id, props);\n\n    new sns.Topic(this, 'MyTopic');\n    new s3.Bucket(this, 'MyBucket');\n  }\n}\n\nconst app = new App();\nnew MyStack(app, 'MyStack');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"DemoResourceProviderframeworkonEventServiceRoleDB88154F\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}, \"Metadata\": {\"aws:cdk:path\": \"CustomResourceDemoStack/DemoResource/Provider/framework-onEvent/ServiceRole/Resource\"}}, \"DemoResourceProviderframeworkonEventServiceRoleDefaultPolicyA9A2047B\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"lambda:InvokeFunction\", \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"SingletonLambdaf7d4f7304ee111e89c2dfa7ae01bbebc492C6E5C\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"SingletonLambdaf7d4f7304ee111e89c2dfa7ae01bbebc492C6E5C\", \"Arn\"]}, \":*\"]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"DemoResourceProviderframeworkonEventServiceRoleDefaultPolicyA9A2047B\", \"Roles\": [{\"Ref\": \"DemoResourceProviderframeworkonEventServiceRoleDB88154F\"}]}, \"Metadata\": {\"aws:cdk:path\": \"CustomResourceDemoStack/DemoResource/Provider/framework-onEvent/ServiceRole/DefaultPolicy/Resource\"}}, \"DemoResourceProviderframeworkonEventF8E49AD2\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"f2d30cfc360482320a52a4fcde8a70f3569df79ab30be24650fda58eb60052cf.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"DemoResourceProviderframeworkonEventServiceRoleDB88154F\", \"Arn\"]}, \"Description\": \"AWS CDK resource provider framework - onEvent (CustomResourceDemoStack/DemoResource/Provider)\", \"Environment\": {\"Variables\": {\"USER_ON_EVENT_FUNCTION_ARN\": {\"Fn::GetAtt\": [\"SingletonLambdaf7d4f7304ee111e89c2dfa7ae01bbebc492C6E5C\", \"Arn\"]}}}, \"Handler\": \"framework.onEvent\", \"Runtime\": \"nodejs18.x\", \"Timeout\": 900}, \"DependsOn\": [\"DemoResourceProviderframeworkonEventServiceRoleDefaultPolicyA9A2047B\", \"DemoResourceProviderframeworkonEventServiceRoleDB88154F\"], \"Metadata\": {\"aws:cdk:path\": \"CustomResourceDemoStack/DemoResource/Provider/framework-onEvent/Resource\", \"aws:asset:path\": \"asset.f2d30cfc360482320a52a4fcde8a70f3569df79ab30be24650fda58eb60052cf\", \"aws:asset:is-bundled\": false, \"aws:asset:property\": \"Code\"}}, \"DemoResource5B5C546C\": {\"Type\": \"AWS::CloudFormation::CustomResource\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"DemoResourceProviderframeworkonEventF8E49AD2\", \"Arn\"]}, \"message\": \"CustomResource says hello\"}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\", \"Metadata\": {\"aws:cdk:path\": \"CustomResourceDemoStack/DemoResource/Resource/Default\"}}, \"SingletonLambdaf7d4f7304ee111e89c2dfa7ae01bbebcServiceRoleFE9ABB04\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}, \"Metadata\": {\"aws:cdk:path\": \"CustomResourceDemoStack/SingletonLambdaf7d4f7304ee111e89c2dfa7ae01bbebc/ServiceRole/Resource\"}}, \"SingletonLambdaf7d4f7304ee111e89c2dfa7ae01bbebc492C6E5C\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"def main(event, context):\n    import logging as log\n    import cfnresponse\n    log.getLogger().setLevel(log.INFO)\n\n    # This needs to change if there are to be multiple resources in the same stack\n    physical_id = 'TheOnlyCustomResource'\n\n    try:\n        log.info('Input event: %s', event)\n\n        # Check if this is a Create and we're failing Creates\n        if event['RequestType'] == 'Create' and event['ResourceProperties'].get('FailCreate', False):\n            raise RuntimeError('Create failure requested')\n\n        # Do the thing\n        message = event['ResourceProperties']['Message']\n        attributes = {\n            'Response': 'You said \\\"%s\\\"' % message\n        }\n\n        cfnresponse.send(event, context, cfnresponse.SUCCESS, attributes, physical_id)\n    except Exception as e:\n        log.exception(e)\n        # cfnresponse's error message is always \\\"see CloudWatch\\\"\n        cfnresponse.send(event, context, cfnresponse.FAILED, {}, physical_id)\n\"}, \"Role\": {\"Fn::GetAtt\": [\"SingletonLambdaf7d4f7304ee111e89c2dfa7ae01bbebcServiceRoleFE9ABB04\", \"Arn\"]}, \"Handler\": \"index.main\", \"Runtime\": \"python3.6\", \"Timeout\": 300}, \"DependsOn\": [\"SingletonLambdaf7d4f7304ee111e89c2dfa7ae01bbebcServiceRoleFE9ABB04\"], \"Metadata\": {\"aws:cdk:path\": \"CustomResourceDemoStack/SingletonLambdaf7d4f7304ee111e89c2dfa7ae01bbebc/Resource\"}}, \"CDKMetadata\": {\"Type\": \"AWS::CDK::Metadata\", \"Properties\": {\"Analytics\": \"v2:deflate64:H4sIAAAAAAAA/02PwU7DMAyGn4V7amA7sCurxHVTeYAqS8zkNY1R7GxCVd+dpEUVp//3Z1v+vYPDG7w82Yc0zg9NoAtMn2rdYArqp2DHi7cFUbwGVI4fOToljmYz7dcGZ0N2hKnjgBUveuZA7qeWq5uN7HsrgirwXqXUcMxuQD1awdm4LMpjn1A4J4cC58R38phM94fMsldSXksq0y7zW6/e/edPWb+zVtdy9LSmjOwRbvJ8fz3Arnx/E6Im5ag0InSr/gJAqNwmGQEAAA==\"}, \"Metadata\": {\"aws:cdk:path\": \"CustomResourceDemoStack/CDKMetadata/Default\"}, \"Condition\": \"CDKMetadataAvailable\"}}, \"Outputs\": {\"ResponseMessage\": {\"Description\": \"The message that came back from the Custom Resource\", \"Value\": {\"Fn::GetAtt\": [\"DemoResource5B5C546C\", \"Response\"]}}}, \"Conditions\": {\"CDKMetadataAvailable\": {\"Fn::Or\": [{\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"af-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ca-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-northwest-1\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-3\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"me-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"sa-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-2\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-2\"]}]}]}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import cdk = require('aws-cdk-lib');\nimport { MyCustomResource } from './my-custom-resource';\n\n/**\n * A stack that sets up MyCustomResource and shows how to get an attribute from it\n */\nclass MyStack extends cdk.Stack {\n  constructor(scope: cdk.App, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n\n    const resource = new MyCustomResource(this, 'DemoResource', {\n      message: 'CustomResource says hello',\n    });\n\n    // Publish the custom resource output\n    new cdk.CfnOutput(this, 'ResponseMessage', {\n      description: 'The message that came back from the Custom Resource',\n      value: resource.response\n    });\n  }\n}\n\nconst app = new cdk.App();\nnew MyStack(app, 'CustomResourceDemoStack');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"DemoResourceMyProviderframeworkonEventServiceRole1437DF1C\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}, \"Metadata\": {\"aws:cdk:path\": \"CustomResourceDemoStack/DemoResource/MyProvider/framework-onEvent/ServiceRole/Resource\"}}, \"DemoResourceMyProviderframeworkonEventServiceRoleDefaultPolicy258762CA\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"lambda:InvokeFunction\", \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"SingletonLambdaf7d4f7304ee111e89c2dfa7ae01bbebc492C6E5C\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"SingletonLambdaf7d4f7304ee111e89c2dfa7ae01bbebc492C6E5C\", \"Arn\"]}, \":*\"]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"DemoResourceMyProviderframeworkonEventServiceRoleDefaultPolicy258762CA\", \"Roles\": [{\"Ref\": \"DemoResourceMyProviderframeworkonEventServiceRole1437DF1C\"}]}, \"Metadata\": {\"aws:cdk:path\": \"CustomResourceDemoStack/DemoResource/MyProvider/framework-onEvent/ServiceRole/DefaultPolicy/Resource\"}}, \"DemoResourceMyProviderframeworkonEvent65F24A35\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"f2d30cfc360482320a52a4fcde8a70f3569df79ab30be24650fda58eb60052cf.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"DemoResourceMyProviderframeworkonEventServiceRole1437DF1C\", \"Arn\"]}, \"Description\": \"AWS CDK resource provider framework - onEvent (CustomResourceDemoStack/DemoResource/MyProvider)\", \"Environment\": {\"Variables\": {\"USER_ON_EVENT_FUNCTION_ARN\": {\"Fn::GetAtt\": [\"SingletonLambdaf7d4f7304ee111e89c2dfa7ae01bbebc492C6E5C\", \"Arn\"]}}}, \"Handler\": \"framework.onEvent\", \"Runtime\": \"nodejs18.x\", \"Timeout\": 900}, \"DependsOn\": [\"DemoResourceMyProviderframeworkonEventServiceRoleDefaultPolicy258762CA\", \"DemoResourceMyProviderframeworkonEventServiceRole1437DF1C\"], \"Metadata\": {\"aws:cdk:path\": \"CustomResourceDemoStack/DemoResource/MyProvider/framework-onEvent/Resource\", \"aws:asset:path\": \"asset.f2d30cfc360482320a52a4fcde8a70f3569df79ab30be24650fda58eb60052cf\", \"aws:asset:is-bundled\": false, \"aws:asset:property\": \"Code\"}}, \"DemoResourceMyProviderframeworkonEventLogRetention309A0FF0\": {\"Type\": \"Custom::LogRetention\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A\", \"Arn\"]}, \"LogGroupName\": {\"Fn::Join\": [\"\", [\"/aws/lambda/\", {\"Ref\": \"DemoResourceMyProviderframeworkonEvent65F24A35\"}]]}, \"RetentionInDays\": 1}, \"Metadata\": {\"aws:cdk:path\": \"CustomResourceDemoStack/DemoResource/MyProvider/framework-onEvent/LogRetention/Resource\"}}, \"DemoResourceResource1DB79ECAB\": {\"Type\": \"AWS::CloudFormation::CustomResource\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"DemoResourceMyProviderframeworkonEvent65F24A35\", \"Arn\"]}, \"Message\": \"CustomResource says hello\"}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\", \"Metadata\": {\"aws:cdk:path\": \"CustomResourceDemoStack/DemoResource/Resource1/Default\"}}, \"SingletonLambdaf7d4f7304ee111e89c2dfa7ae01bbebcServiceRoleFE9ABB04\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}, \"Metadata\": {\"aws:cdk:path\": \"CustomResourceDemoStack/SingletonLambdaf7d4f7304ee111e89c2dfa7ae01bbebc/ServiceRole/Resource\"}}, \"SingletonLambdaf7d4f7304ee111e89c2dfa7ae01bbebc492C6E5C\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"def on_event(event, context):\n  print(event)\n  request_type = event['RequestType']\n  if request_type == 'Create': return on_create(event)\n  if request_type == 'Update': return on_update(event)\n  if request_type == 'Delete': return on_delete(event)\n  raise Exception(\\\"Invalid request type: %s\\\" % request_type)\n\ndef on_create(event):\n  props = event[\\\"ResourceProperties\\\"]\n  print(\\\"create new resource with props %s\\\" % props)\n\n  message = event['ResourceProperties']['Message']\n\n  attributes = {\n      'Response': 'You said \\\"%s\\\"' % message\n  }\n  return { 'Data': attributes }\n\ndef on_update(event):\n  physical_id = event[\\\"PhysicalResourceId\\\"]\n  props = event[\\\"ResourceProperties\\\"]\n  print(\\\"update resource %s with props %s\\\" % (physical_id, props))\n  # ...\n\n  return { 'PhysicalResourceId': physical_id }\n\ndef on_delete(event):\n  physical_id = event[\\\"PhysicalResourceId\\\"]\n  print(\\\"delete resource %s\\\" % physical_id)\n  # ...\n\n  return { 'PhysicalResourceId': physical_id }\n\ndef is_complete(event, context):\n  physical_id = event[\\\"PhysicalResourceId\\\"]\n  request_type = event[\\\"RequestType\\\"]\n\n  # check if resource is stable based on request_type\n  # is_ready = ...\n\n  return { 'IsComplete': True }\"}, \"Role\": {\"Fn::GetAtt\": [\"SingletonLambdaf7d4f7304ee111e89c2dfa7ae01bbebcServiceRoleFE9ABB04\", \"Arn\"]}, \"Handler\": \"index.on_event\", \"Runtime\": \"python3.6\", \"Timeout\": 300}, \"DependsOn\": [\"SingletonLambdaf7d4f7304ee111e89c2dfa7ae01bbebcServiceRoleFE9ABB04\"], \"Metadata\": {\"aws:cdk:path\": \"CustomResourceDemoStack/SingletonLambdaf7d4f7304ee111e89c2dfa7ae01bbebc/Resource\"}}, \"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}, \"Metadata\": {\"aws:cdk:path\": \"CustomResourceDemoStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource\"}}, \"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"logs:PutRetentionPolicy\", \"logs:DeleteRetentionPolicy\"], \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB\", \"Roles\": [{\"Ref\": \"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB\"}]}, \"Metadata\": {\"aws:cdk:path\": \"CustomResourceDemoStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource\"}}, \"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Handler\": \"index.handler\", \"Runtime\": {\"Fn::FindInMap\": [\"DefaultCrNodeVersionMap\", {\"Ref\": \"AWS::Region\"}, \"value\"]}, \"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"5fa1330271b8967d9254ba2d4a07144f8acefe8b77e6d6bba38261373a50d5f8.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB\", \"Arn\"]}}, \"DependsOn\": [\"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB\", \"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB\"], \"Metadata\": {\"aws:cdk:path\": \"CustomResourceDemoStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource\", \"aws:asset:path\": \"asset.5fa1330271b8967d9254ba2d4a07144f8acefe8b77e6d6bba38261373a50d5f8\", \"aws:asset:is-bundled\": false, \"aws:asset:property\": \"Code\"}}, \"CDKMetadata\": {\"Type\": \"AWS::CDK::Metadata\", \"Properties\": {\"Analytics\": \"v2:deflate64:H4sIAAAAAAAA/0WQwU7DMBBEv4W7s0A50CuNxKmIKnxA5NrbaBvHG3nXRSjqv+MkpZxm5tneHXkD21d4erDfUjnfV4GOMH2pdb0pqJ2CHY7eFkSxC6gc33N0ShzN3dSnO7wasgNMDQec8aIHDuR+5ri6q5GX1oqgCrzNUjLssutRd1bQBO4E9tw1qBjXoS6L8tAmFM7JocAh8YU8JtPckFkmld5d6bms/juol7f/8RQ/7Djebn1mHbPOruboad0W2SOc5fHyvIVN+ZqzEFUply4DQrPqL0gMuuU2AQAA\"}, \"Metadata\": {\"aws:cdk:path\": \"CustomResourceDemoStack/CDKMetadata/Default\"}, \"Condition\": \"CDKMetadataAvailable\"}}, \"Mappings\": {\"DefaultCrNodeVersionMap\": {\"af-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-east-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-3\": {\"value\": \"nodejs16.x\"}, \"ap-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-south-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-3\": {\"value\": \"nodejs16.x\"}, \"ca-central-1\": {\"value\": \"nodejs16.x\"}, \"cn-north-1\": {\"value\": \"nodejs16.x\"}, \"cn-northwest-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-2\": {\"value\": \"nodejs16.x\"}, \"eu-north-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-1\": {\"value\": \"nodejs16.x\"}, \"eu-west-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-3\": {\"value\": \"nodejs16.x\"}, \"me-central-1\": {\"value\": \"nodejs16.x\"}, \"me-south-1\": {\"value\": \"nodejs16.x\"}, \"sa-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-2\": {\"value\": \"nodejs16.x\"}, \"us-gov-east-1\": {\"value\": \"nodejs16.x\"}, \"us-gov-west-1\": {\"value\": \"nodejs16.x\"}, \"us-iso-east-1\": {\"value\": \"nodejs14.x\"}, \"us-iso-west-1\": {\"value\": \"nodejs14.x\"}, \"us-isob-east-1\": {\"value\": \"nodejs14.x\"}, \"us-west-1\": {\"value\": \"nodejs16.x\"}, \"us-west-2\": {\"value\": \"nodejs16.x\"}}}, \"Outputs\": {\"ResponseMessage\": {\"Description\": \"The message that came back from the Custom Resource\", \"Value\": {\"Fn::GetAtt\": [\"DemoResourceResource1DB79ECAB\", \"Response\"]}}}, \"Conditions\": {\"CDKMetadataAvailable\": {\"Fn::Or\": [{\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"af-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ca-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-northwest-1\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-3\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"me-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"sa-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-2\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-2\"]}]}]}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import cdk = require('aws-cdk-lib');\nimport { MyCustomResource } from './my-custom-resource';\n\n/**\n * A stack that sets up MyCustomResource and shows how to get an attribute from it\n */\nclass MyStack extends cdk.Stack {\n  constructor(scope: cdk.App, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n\n    const resource = new MyCustomResource(this, 'DemoResource', {\n      Message: 'CustomResource says hello',\n    });\n\n    // Publish the custom resource output\n    new cdk.CfnOutput(this, 'ResponseMessage', {\n      description: 'The message that came back from the Custom Resource',\n      value: resource.response\n    });\n  }\n}\n\nconst app = new cdk.App();\nnew MyStack(app, 'CustomResourceDemoStack');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"globaltable\": {\"Type\": \"AWS::DynamoDB::GlobalTable\", \"Properties\": {\"AttributeDefinitions\": [{\"AttributeName\": \"id\", \"AttributeType\": \"S\"}], \"KeySchema\": [{\"AttributeName\": \"id\", \"KeyType\": \"HASH\"}], \"Replicas\": [{\"Region\": \"us-east-1\", \"SSESpecification\": {\"KMSMasterKeyId\": {\"Fn::ImportValue\": \"cmk-key-arn-us-east-1\"}}}, {\"Region\": \"us-west-2\", \"SSESpecification\": {\"KMSMasterKeyId\": {\"Fn::ImportValue\": \"cmk-key-arn-us-west-2\"}}}, {\"Region\": \"us-east-2\", \"SSESpecification\": {\"KMSMasterKeyId\": {\"Fn::ImportValue\": \"cmk-key-arn-us-east-2\"}}}], \"BillingMode\": \"PAY_PER_REQUEST\", \"SSESpecification\": {\"SSEEnabled\": true, \"SSEType\": \"KMS\"}, \"StreamSpecification\": {\"StreamViewType\": \"KEYS_ONLY\"}, \"TableName\": \"global-ddb-cmk-demo\"}, \"Metadata\": {\"aws:cdk:path\": \"global-ddb-cmk/ddb-stack/global-table\"}}, \"CDKMetadata\": {\"Type\": \"AWS::CDK::Metadata\", \"Properties\": {\"Analytics\": \"v2:deflate64:H4sIAAAAAAAA/zPSMzLQM1BMLC/WTU7J1s3JTNKr9kstLklNCS5JTM7WAUrEp1TmJebmpyTpOafluefkJyXmhCQm5aTqALlBqcX5pUXJqbU6efkpqXpZxfplhhZ6RkATs4ozM3WLSvNKMnNT9YIgNACHT1gNbQAAAA==\"}, \"Metadata\": {\"aws:cdk:path\": \"global-ddb-cmk/ddb-stack/CDKMetadata/Default\"}}}}", "completion": ""}
{ "prompt": "", "completion": ""}
{ "prompt": "", "completion": ""}
{ "prompt": "", "completion": "import autoscaling = require('aws-cdk-lib/aws-autoscaling');\nimport ec2 = require('aws-cdk-lib/aws-ec2');\nimport ecs = require('aws-cdk-lib/aws-ecs');\nimport cdk = require('aws-cdk-lib');\n\nclass ECSCluster extends cdk.Stack {\n  constructor(scope: cdk.App, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n\n    const vpc = new ec2.Vpc(this, 'MyVpc', { maxAzs: 2 });\n\n    const asg = new autoscaling.AutoScalingGroup(this, 'MyFleet', {\n      instanceType: ec2.InstanceType.of(ec2.InstanceClass.T2, ec2.InstanceSize.XLARGE),\n      machineImage: ecs.EcsOptimizedImage.amazonLinux2(),\n      desiredCapacity: 3,\n      vpc,\n    });\n\n    const cluster = new ecs.Cluster(this, 'EcsCluster', { vpc });\n    const capacityProvider = new ecs.AsgCapacityProvider(this, 'AsgCapacityProvider', { autoScalingGroup: asg });\n    cluster.addAsgCapacityProvider(capacityProvider);\n  }\n}\n\nconst app = new cdk.App();\n\nnew ECSCluster(app, 'MyFirstEcsCluster');\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyVpcF9F0CA6F\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"MyFirstEcsCluster/MyVpc\"}]}, \"Metadata\": {\"aws:cdk:path\": \"MyFirstEcsCluster/MyVpc/Resource\"}}, \"MyVpcPublicSubnet1SubnetF6608456\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"MyFirstEcsCluster/MyVpc/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"MyFirstEcsCluster/MyVpc/PublicSubnet1/Subnet\"}}, \"MyVpcPublicSubnet1RouteTableC46AB2F4\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"MyFirstEcsCluster/MyVpc/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"MyFirstEcsCluster/MyVpc/PublicSubnet1/RouteTable\"}}, \"MyVpcPublicSubnet1RouteTableAssociation2ECEE1CB\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPublicSubnet1RouteTableC46AB2F4\"}, \"SubnetId\": {\"Ref\": \"MyVpcPublicSubnet1SubnetF6608456\"}}, \"Metadata\": {\"aws:cdk:path\": \"MyFirstEcsCluster/MyVpc/PublicSubnet1/RouteTableAssociation\"}}, \"MyVpcPublicSubnet1DefaultRoute95FDF9EB\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPublicSubnet1RouteTableC46AB2F4\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"MyVpcIGW5C4A4F63\"}}, \"DependsOn\": [\"MyVpcVPCGW488ACE0D\"], \"Metadata\": {\"aws:cdk:path\": \"MyFirstEcsCluster/MyVpc/PublicSubnet1/DefaultRoute\"}}, \"MyVpcPublicSubnet1EIP096967CB\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"MyFirstEcsCluster/MyVpc/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"MyFirstEcsCluster/MyVpc/PublicSubnet1/EIP\"}}, \"MyVpcPublicSubnet1NATGatewayAD3400C1\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"MyVpcPublicSubnet1SubnetF6608456\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"MyVpcPublicSubnet1EIP096967CB\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"MyFirstEcsCluster/MyVpc/PublicSubnet1\"}]}, \"DependsOn\": [\"MyVpcPublicSubnet1DefaultRoute95FDF9EB\", \"MyVpcPublicSubnet1RouteTableAssociation2ECEE1CB\"], \"Metadata\": {\"aws:cdk:path\": \"MyFirstEcsCluster/MyVpc/PublicSubnet1/NATGateway\"}}, \"MyVpcPublicSubnet2Subnet492B6BFB\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"MyFirstEcsCluster/MyVpc/PublicSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"MyFirstEcsCluster/MyVpc/PublicSubnet2/Subnet\"}}, \"MyVpcPublicSubnet2RouteTable1DF17386\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"MyFirstEcsCluster/MyVpc/PublicSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"MyFirstEcsCluster/MyVpc/PublicSubnet2/RouteTable\"}}, \"MyVpcPublicSubnet2RouteTableAssociation227DE78D\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPublicSubnet2RouteTable1DF17386\"}, \"SubnetId\": {\"Ref\": \"MyVpcPublicSubnet2Subnet492B6BFB\"}}, \"Metadata\": {\"aws:cdk:path\": \"MyFirstEcsCluster/MyVpc/PublicSubnet2/RouteTableAssociation\"}}, \"MyVpcPublicSubnet2DefaultRoute052936F6\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPublicSubnet2RouteTable1DF17386\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"MyVpcIGW5C4A4F63\"}}, \"DependsOn\": [\"MyVpcVPCGW488ACE0D\"], \"Metadata\": {\"aws:cdk:path\": \"MyFirstEcsCluster/MyVpc/PublicSubnet2/DefaultRoute\"}}, \"MyVpcPublicSubnet2EIP8CCBA239\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"MyFirstEcsCluster/MyVpc/PublicSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"MyFirstEcsCluster/MyVpc/PublicSubnet2/EIP\"}}, \"MyVpcPublicSubnet2NATGateway91BFBEC9\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"MyVpcPublicSubnet2Subnet492B6BFB\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"MyVpcPublicSubnet2EIP8CCBA239\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"MyFirstEcsCluster/MyVpc/PublicSubnet2\"}]}, \"DependsOn\": [\"MyVpcPublicSubnet2DefaultRoute052936F6\", \"MyVpcPublicSubnet2RouteTableAssociation227DE78D\"], \"Metadata\": {\"aws:cdk:path\": \"MyFirstEcsCluster/MyVpc/PublicSubnet2/NATGateway\"}}, \"MyVpcPrivateSubnet1Subnet5057CF7E\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"MyFirstEcsCluster/MyVpc/PrivateSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"MyFirstEcsCluster/MyVpc/PrivateSubnet1/Subnet\"}}, \"MyVpcPrivateSubnet1RouteTable8819E6E2\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"MyFirstEcsCluster/MyVpc/PrivateSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"MyFirstEcsCluster/MyVpc/PrivateSubnet1/RouteTable\"}}, \"MyVpcPrivateSubnet1RouteTableAssociation56D38C7E\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPrivateSubnet1RouteTable8819E6E2\"}, \"SubnetId\": {\"Ref\": \"MyVpcPrivateSubnet1Subnet5057CF7E\"}}, \"Metadata\": {\"aws:cdk:path\": \"MyFirstEcsCluster/MyVpc/PrivateSubnet1/RouteTableAssociation\"}}, \"MyVpcPrivateSubnet1DefaultRouteA8CDE2FA\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPrivateSubnet1RouteTable8819E6E2\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"MyVpcPublicSubnet1NATGatewayAD3400C1\"}}, \"Metadata\": {\"aws:cdk:path\": \"MyFirstEcsCluster/MyVpc/PrivateSubnet1/DefaultRoute\"}}, \"MyVpcPrivateSubnet2Subnet0040C983\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"MyFirstEcsCluster/MyVpc/PrivateSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"MyFirstEcsCluster/MyVpc/PrivateSubnet2/Subnet\"}}, \"MyVpcPrivateSubnet2RouteTableCEDCEECE\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"MyFirstEcsCluster/MyVpc/PrivateSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"MyFirstEcsCluster/MyVpc/PrivateSubnet2/RouteTable\"}}, \"MyVpcPrivateSubnet2RouteTableAssociation86A610DA\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPrivateSubnet2RouteTableCEDCEECE\"}, \"SubnetId\": {\"Ref\": \"MyVpcPrivateSubnet2Subnet0040C983\"}}, \"Metadata\": {\"aws:cdk:path\": \"MyFirstEcsCluster/MyVpc/PrivateSubnet2/RouteTableAssociation\"}}, \"MyVpcPrivateSubnet2DefaultRoute9CE96294\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPrivateSubnet2RouteTableCEDCEECE\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"MyVpcPublicSubnet2NATGateway91BFBEC9\"}}, \"Metadata\": {\"aws:cdk:path\": \"MyFirstEcsCluster/MyVpc/PrivateSubnet2/DefaultRoute\"}}, \"MyVpcIGW5C4A4F63\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"MyFirstEcsCluster/MyVpc\"}]}, \"Metadata\": {\"aws:cdk:path\": \"MyFirstEcsCluster/MyVpc/IGW\"}}, \"MyVpcVPCGW488ACE0D\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"InternetGatewayId\": {\"Ref\": \"MyVpcIGW5C4A4F63\"}}, \"Metadata\": {\"aws:cdk:path\": \"MyFirstEcsCluster/MyVpc/VPCGW\"}}, \"MyFleetInstanceSecurityGroup774E8234\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"MyFirstEcsCluster/MyFleet/InstanceSecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"Tags\": [{\"Key\": \"Name\", \"Value\": \"MyFirstEcsCluster/MyFleet\"}], \"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}}, \"Metadata\": {\"aws:cdk:path\": \"MyFirstEcsCluster/MyFleet/InstanceSecurityGroup/Resource\"}}, \"MyFleetInstanceRole25A84AB8\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"ec2.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"MyFirstEcsCluster/MyFleet\"}]}, \"Metadata\": {\"aws:cdk:path\": \"MyFirstEcsCluster/MyFleet/InstanceRole/Resource\"}}, \"MyFleetInstanceRoleDefaultPolicy7B0197E7\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"ecs:DeregisterContainerInstance\", \"ecs:RegisterContainerInstance\", \"ecs:Submit*\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"EcsCluster97242B84\", \"Arn\"]}}, {\"Action\": [\"ecs:Poll\", \"ecs:StartTelemetrySession\"], \"Condition\": {\"ArnEquals\": {\"ecs:cluster\": {\"Fn::GetAtt\": [\"EcsCluster97242B84\", \"Arn\"]}}}, \"Effect\": \"Allow\", \"Resource\": \"*\"}, {\"Action\": [\"ecs:DiscoverPollEndpoint\", \"ecr:GetAuthorizationToken\", \"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyFleetInstanceRoleDefaultPolicy7B0197E7\", \"Roles\": [{\"Ref\": \"MyFleetInstanceRole25A84AB8\"}]}, \"Metadata\": {\"aws:cdk:path\": \"MyFirstEcsCluster/MyFleet/InstanceRole/DefaultPolicy/Resource\"}}, \"MyFleetInstanceProfile70A58496\": {\"Type\": \"AWS::IAM::InstanceProfile\", \"Properties\": {\"Roles\": [{\"Ref\": \"MyFleetInstanceRole25A84AB8\"}]}, \"Metadata\": {\"aws:cdk:path\": \"MyFirstEcsCluster/MyFleet/InstanceProfile\"}}, \"MyFleetLaunchConfig5D7F9801\": {\"Type\": \"AWS::AutoScaling::LaunchConfiguration\", \"Properties\": {\"ImageId\": {\"Ref\": \"SsmParameterValueawsserviceecsoptimizedamiamazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter\"}, \"InstanceType\": \"t2.xlarge\", \"IamInstanceProfile\": {\"Ref\": \"MyFleetInstanceProfile70A58496\"}, \"SecurityGroups\": [{\"Fn::GetAtt\": [\"MyFleetInstanceSecurityGroup774E8234\", \"GroupId\"]}], \"UserData\": {\"Fn::Base64\": {\"Fn::Join\": [\"\", [\"#!/bin/bash\necho ECS_CLUSTER=\", {\"Ref\": \"EcsCluster97242B84\"}, \" >> /etc/ecs/ecs.config\nsudo iptables --insert FORWARD 1 --in-interface docker+ --destination 169.254.169.254/32 --jump DROP\nsudo service iptables save\necho ECS_AWSVPC_BLOCK_IMDS=true >> /etc/ecs/ecs.config\"]]}}}, \"DependsOn\": [\"MyFleetInstanceRoleDefaultPolicy7B0197E7\", \"MyFleetInstanceRole25A84AB8\"], \"Metadata\": {\"aws:cdk:path\": \"MyFirstEcsCluster/MyFleet/LaunchConfig\"}}, \"MyFleetASG88E55886\": {\"Type\": \"AWS::AutoScaling::AutoScalingGroup\", \"Properties\": {\"MaxSize\": \"3\", \"MinSize\": \"1\", \"DesiredCapacity\": \"3\", \"LaunchConfigurationName\": {\"Ref\": \"MyFleetLaunchConfig5D7F9801\"}, \"NewInstancesProtectedFromScaleIn\": true, \"Tags\": [{\"Key\": \"Name\", \"PropagateAtLaunch\": true, \"Value\": \"MyFirstEcsCluster/MyFleet\"}], \"VPCZoneIdentifier\": [{\"Ref\": \"MyVpcPrivateSubnet1Subnet5057CF7E\"}, {\"Ref\": \"MyVpcPrivateSubnet2Subnet0040C983\"}]}, \"UpdatePolicy\": {\"AutoScalingScheduledAction\": {\"IgnoreUnmodifiedGroupSizeProperties\": true}}, \"Metadata\": {\"aws:cdk:path\": \"MyFirstEcsCluster/MyFleet/ASG\"}}, \"EcsCluster97242B84\": {\"Type\": \"AWS::ECS::Cluster\", \"Metadata\": {\"aws:cdk:path\": \"MyFirstEcsCluster/EcsCluster/Resource\"}}, \"EcsCluster72B17558\": {\"Type\": \"AWS::ECS::ClusterCapacityProviderAssociations\", \"Properties\": {\"CapacityProviders\": [{\"Ref\": \"AsgCapacityProvider760D11D9\"}], \"Cluster\": {\"Ref\": \"EcsCluster97242B84\"}, \"DefaultCapacityProviderStrategy\": []}, \"Metadata\": {\"aws:cdk:path\": \"MyFirstEcsCluster/EcsCluster/EcsCluster\"}}, \"AsgCapacityProvider760D11D9\": {\"Type\": \"AWS::ECS::CapacityProvider\", \"Properties\": {\"AutoScalingGroupProvider\": {\"AutoScalingGroupArn\": {\"Ref\": \"MyFleetASG88E55886\"}, \"ManagedScaling\": {\"Status\": \"ENABLED\", \"TargetCapacity\": 100}, \"ManagedTerminationProtection\": \"ENABLED\"}}, \"Metadata\": {\"aws:cdk:path\": \"MyFirstEcsCluster/AsgCapacityProvider/AsgCapacityProvider\"}}, \"CDKMetadata\": {\"Type\": \"AWS::CDK::Metadata\", \"Properties\": {\"Analytics\": \"v2:deflate64:H4sIAAAAAAAA/2VSTW/CMAz9LbuHbOMyrlU1ISQ0Re3EdXJdA4Y2QfkoQlX/+9KW0Yqd/Pz87DxbWcrVh3x7gatbYHleVFzINveAZxGpn5ZwKdvdBUW61zuVChWKijEPhSbfcxPKTPD0DUVFEz9xiXMGGTwb/RD34HOj+vAFfg2ernATynIT4TR4oz3ZiP8Eo5N7lvjo9ViT9iInDJb9bW1NuAwe5kQnIHjjECrWB9kmMcnH5KHfQtB4TI3e8yHYh9dnaScYatlmZtx0iMrEqwzWJrTRzoNGUtbsuaJOEDrZplVwcZ9e8B+mcAGMjmNLwyXZ2dWcSNzhuT60PnFdJzJyJlgc7CmwUNP9mXkh7llyP7kT2pQkT+61eV/JZfwMJ8e8sEF7rklmY/wFeDq/FygCAAA=\"}, \"Metadata\": {\"aws:cdk:path\": \"MyFirstEcsCluster/CDKMetadata/Default\"}, \"Condition\": \"CDKMetadataAvailable\"}}, \"Parameters\": {\"SsmParameterValueawsserviceecsoptimizedamiamazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter\": {\"Type\": \"AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>\", \"Default\": \"/aws/service/ecs/optimized-ami/amazon-linux-2/recommended/image_id\"}, \"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Conditions\": {\"CDKMetadataAvailable\": {\"Fn::Or\": [{\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"af-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ca-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-northwest-1\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-3\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"me-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"sa-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-2\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-2\"]}]}]}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import autoscaling = require('aws-cdk-lib/aws-autoscaling');\nimport ec2 = require('aws-cdk-lib/aws-ec2');\nimport ecs = require('aws-cdk-lib/aws-ecs');\nimport cdk = require('aws-cdk-lib');\n\nclass ECSCluster extends cdk.Stack {\n  constructor(scope: cdk.App, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n\n    const vpc = new ec2.Vpc(this, 'MyVpc', { maxAzs: 2 });\n\n    const asg = new autoscaling.AutoScalingGroup(this, 'MyFleet', {\n      instanceType: ec2.InstanceType.of(ec2.InstanceClass.T2, ec2.InstanceSize.XLARGE),\n      machineImage: ecs.EcsOptimizedImage.amazonLinux2(),\n      desiredCapacity: 3,\n      vpc,\n    });\n\n    const cluster = new ecs.Cluster(this, 'EcsCluster', { vpc });\n    const capacityProvider = new ecs.AsgCapacityProvider(this, 'AsgCapacityProvider', { autoScalingGroup: asg });\n    cluster.addAsgCapacityProvider(capacityProvider);\n  }\n}\n\nconst app = new cdk.App();\n\nnew ECSCluster(app, 'MyFirstEcsCluster');\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"Vpc8378EB38\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"CrossStackLBInfra/Vpc\"}]}, \"Metadata\": {\"aws:cdk:path\": \"CrossStackLBInfra/Vpc/Resource\"}}, \"VpcPublicSubnet1Subnet5C2D37C4\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"CrossStackLBInfra/Vpc/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"CrossStackLBInfra/Vpc/PublicSubnet1/Subnet\"}}, \"VpcPublicSubnet1RouteTable6C95E38E\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"CrossStackLBInfra/Vpc/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"CrossStackLBInfra/Vpc/PublicSubnet1/RouteTable\"}}, \"VpcPublicSubnet1RouteTableAssociation97140677\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet1RouteTable6C95E38E\"}, \"SubnetId\": {\"Ref\": \"VpcPublicSubnet1Subnet5C2D37C4\"}}, \"Metadata\": {\"aws:cdk:path\": \"CrossStackLBInfra/Vpc/PublicSubnet1/RouteTableAssociation\"}}, \"VpcPublicSubnet1DefaultRoute3DA9E72A\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet1RouteTable6C95E38E\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VpcIGWD7BA715C\"}}, \"DependsOn\": [\"VpcVPCGWBF912B6E\"], \"Metadata\": {\"aws:cdk:path\": \"CrossStackLBInfra/Vpc/PublicSubnet1/DefaultRoute\"}}, \"VpcPublicSubnet1EIPD7E02669\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"CrossStackLBInfra/Vpc/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"CrossStackLBInfra/Vpc/PublicSubnet1/EIP\"}}, \"VpcPublicSubnet1NATGateway4D7517AA\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VpcPublicSubnet1Subnet5C2D37C4\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VpcPublicSubnet1EIPD7E02669\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"CrossStackLBInfra/Vpc/PublicSubnet1\"}]}, \"DependsOn\": [\"VpcPublicSubnet1DefaultRoute3DA9E72A\", \"VpcPublicSubnet1RouteTableAssociation97140677\"], \"Metadata\": {\"aws:cdk:path\": \"CrossStackLBInfra/Vpc/PublicSubnet1/NATGateway\"}}, \"VpcPublicSubnet2Subnet691E08A3\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"CrossStackLBInfra/Vpc/PublicSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"CrossStackLBInfra/Vpc/PublicSubnet2/Subnet\"}}, \"VpcPublicSubnet2RouteTable94F7E489\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"CrossStackLBInfra/Vpc/PublicSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"CrossStackLBInfra/Vpc/PublicSubnet2/RouteTable\"}}, \"VpcPublicSubnet2RouteTableAssociationDD5762D8\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet2RouteTable94F7E489\"}, \"SubnetId\": {\"Ref\": \"VpcPublicSubnet2Subnet691E08A3\"}}, \"Metadata\": {\"aws:cdk:path\": \"CrossStackLBInfra/Vpc/PublicSubnet2/RouteTableAssociation\"}}, \"VpcPublicSubnet2DefaultRoute97F91067\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet2RouteTable94F7E489\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VpcIGWD7BA715C\"}}, \"DependsOn\": [\"VpcVPCGWBF912B6E\"], \"Metadata\": {\"aws:cdk:path\": \"CrossStackLBInfra/Vpc/PublicSubnet2/DefaultRoute\"}}, \"VpcPublicSubnet2EIP3C605A87\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"CrossStackLBInfra/Vpc/PublicSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"CrossStackLBInfra/Vpc/PublicSubnet2/EIP\"}}, \"VpcPublicSubnet2NATGateway9182C01D\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VpcPublicSubnet2Subnet691E08A3\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VpcPublicSubnet2EIP3C605A87\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"CrossStackLBInfra/Vpc/PublicSubnet2\"}]}, \"DependsOn\": [\"VpcPublicSubnet2DefaultRoute97F91067\", \"VpcPublicSubnet2RouteTableAssociationDD5762D8\"], \"Metadata\": {\"aws:cdk:path\": \"CrossStackLBInfra/Vpc/PublicSubnet2/NATGateway\"}}, \"VpcPrivateSubnet1Subnet536B997A\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"CrossStackLBInfra/Vpc/PrivateSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"CrossStackLBInfra/Vpc/PrivateSubnet1/Subnet\"}}, \"VpcPrivateSubnet1RouteTableB2C5B500\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"CrossStackLBInfra/Vpc/PrivateSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"CrossStackLBInfra/Vpc/PrivateSubnet1/RouteTable\"}}, \"VpcPrivateSubnet1RouteTableAssociation70C59FA6\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet1RouteTableB2C5B500\"}, \"SubnetId\": {\"Ref\": \"VpcPrivateSubnet1Subnet536B997A\"}}, \"Metadata\": {\"aws:cdk:path\": \"CrossStackLBInfra/Vpc/PrivateSubnet1/RouteTableAssociation\"}}, \"VpcPrivateSubnet1DefaultRouteBE02A9ED\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet1RouteTableB2C5B500\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VpcPublicSubnet1NATGateway4D7517AA\"}}, \"Metadata\": {\"aws:cdk:path\": \"CrossStackLBInfra/Vpc/PrivateSubnet1/DefaultRoute\"}}, \"VpcPrivateSubnet2Subnet3788AAA1\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"CrossStackLBInfra/Vpc/PrivateSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"CrossStackLBInfra/Vpc/PrivateSubnet2/Subnet\"}}, \"VpcPrivateSubnet2RouteTableA678073B\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"CrossStackLBInfra/Vpc/PrivateSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"CrossStackLBInfra/Vpc/PrivateSubnet2/RouteTable\"}}, \"VpcPrivateSubnet2RouteTableAssociationA89CAD56\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet2RouteTableA678073B\"}, \"SubnetId\": {\"Ref\": \"VpcPrivateSubnet2Subnet3788AAA1\"}}, \"Metadata\": {\"aws:cdk:path\": \"CrossStackLBInfra/Vpc/PrivateSubnet2/RouteTableAssociation\"}}, \"VpcPrivateSubnet2DefaultRoute060D2087\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet2RouteTableA678073B\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VpcPublicSubnet2NATGateway9182C01D\"}}, \"Metadata\": {\"aws:cdk:path\": \"CrossStackLBInfra/Vpc/PrivateSubnet2/DefaultRoute\"}}, \"VpcIGWD7BA715C\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"CrossStackLBInfra/Vpc\"}]}, \"Metadata\": {\"aws:cdk:path\": \"CrossStackLBInfra/Vpc/IGW\"}}, \"VpcVPCGWBF912B6E\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"InternetGatewayId\": {\"Ref\": \"VpcIGWD7BA715C\"}}, \"Metadata\": {\"aws:cdk:path\": \"CrossStackLBInfra/Vpc/VPCGW\"}}, \"ClusterEB0386A7\": {\"Type\": \"AWS::ECS::Cluster\", \"Metadata\": {\"aws:cdk:path\": \"CrossStackLBInfra/Cluster/Resource\"}}, \"CDKMetadata\": {\"Type\": \"AWS::CDK::Metadata\", \"Properties\": {\"Analytics\": \"v2:deflate64:H4sIAAAAAAAA/02QwQrCMBBEv8V7GrUXey1BxIuUKl4lTVdcWxNpNhUJ/XcTq9bTvB2G3WFTnq34YiYfNlF1k7RYcb8nqRoWrJMHlXJ/vCsmzvpYCFa4qkW1d5UGit5EpXEEB1m1MPmTl1trFEpCo3/hCOttEWUnaSMJHvLJig77gNPirSboAn8DY5PPlFPoermBpoGBstyL1tmQj6kPDgMrwRrXqffFfxZG1xg7DUybGvjVzvtlxtPwkKtFTDqnCW/Ay1FfRBNlhSwBAAA=\"}, \"Metadata\": {\"aws:cdk:path\": \"CrossStackLBInfra/CDKMetadata/Default\"}, \"Condition\": \"CDKMetadataAvailable\"}}, \"Conditions\": {\"CDKMetadataAvailable\": {\"Fn::Or\": [{\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"af-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ca-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-northwest-1\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-3\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"me-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"sa-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-2\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-2\"]}]}]}}, \"Outputs\": {\"ExportsOutputRefVpcPublicSubnet1Subnet5C2D37C4FFA2B456\": {\"Value\": {\"Ref\": \"VpcPublicSubnet1Subnet5C2D37C4\"}, \"Export\": {\"Name\": \"CrossStackLBInfra:ExportsOutputRefVpcPublicSubnet1Subnet5C2D37C4FFA2B456\"}}, \"ExportsOutputRefVpcPublicSubnet2Subnet691E08A351552740\": {\"Value\": {\"Ref\": \"VpcPublicSubnet2Subnet691E08A3\"}, \"Export\": {\"Name\": \"CrossStackLBInfra:ExportsOutputRefVpcPublicSubnet2Subnet691E08A351552740\"}}, \"ExportsOutputRefVpc8378EB38272D6E3A\": {\"Value\": {\"Ref\": \"Vpc8378EB38\"}, \"Export\": {\"Name\": \"CrossStackLBInfra:ExportsOutputRefVpc8378EB38272D6E3A\"}}, \"ExportsOutputRefClusterEB0386A796A0E3FE\": {\"Value\": {\"Ref\": \"ClusterEB0386A7\"}, \"Export\": {\"Name\": \"CrossStackLBInfra:ExportsOutputRefClusterEB0386A796A0E3FE\"}}, \"ExportsOutputRefVpcPrivateSubnet1Subnet536B997AFD4CC940\": {\"Value\": {\"Ref\": \"VpcPrivateSubnet1Subnet536B997A\"}, \"Export\": {\"Name\": \"CrossStackLBInfra:ExportsOutputRefVpcPrivateSubnet1Subnet536B997AFD4CC940\"}}, \"ExportsOutputRefVpcPrivateSubnet2Subnet3788AAA1380949A3\": {\"Value\": {\"Ref\": \"VpcPrivateSubnet2Subnet3788AAA1\"}, \"Export\": {\"Name\": \"CrossStackLBInfra:ExportsOutputRefVpcPrivateSubnet2Subnet3788AAA1380949A3\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import ecs = require('aws-cdk-lib/aws-ecs');\nimport ec2 = require('aws-cdk-lib/aws-ec2');\nimport { Stack, StackProps, App } from 'aws-cdk-lib';\nimport { SplitAtListener_LoadBalancerStack, SplitAtListener_ServiceStack } from './split-at-listener';\nimport { SplitAtTargetGroup_LoadBalancerStack, SplitAtTargetGroup_ServiceStack } from './split-at-targetgroup';\nimport { Construct } from 'constructs';\n\n/**\n * Shared infrastructure -- VPC and Cluster\n */\nclass SharedInfraStack extends Stack {\n  public readonly vpc: ec2.Vpc;\n  public readonly cluster: ecs.Cluster;\n\n  constructor(scope: Construct, id: string, props: StackProps = {}) {\n    super(scope, id, props);\n\n    this.vpc = new ec2.Vpc(this, 'Vpc', { maxAzs: 2 });\n    this.cluster = new ecs.Cluster(this, 'Cluster', {\n      vpc: this.vpc\n    });\n  }\n}\n\nconst app = new App();\n\nconst infra = new SharedInfraStack(app, 'CrossStackLBInfra');\n\n// Demo that splits at Listener\nconst splitAtListenerLBStack = new SplitAtListener_LoadBalancerStack(app, 'SplitAtListener-LBStack', {\n  vpc: infra.vpc,\n});\nnew SplitAtListener_ServiceStack(app, 'SplitAtListener-ServiceStack', {\n  cluster: infra.cluster,\n  vpc: infra.vpc,\n  loadBalancer: splitAtListenerLBStack.loadBalancer\n});\n\n// Demo that splits at Target Group\nconst splitAtTargetGroupLBStack = new SplitAtTargetGroup_LoadBalancerStack(app, 'SplitAtTargetGroup-LBStack', {\n  vpc: infra.vpc,\n});\nnew SplitAtTargetGroup_ServiceStack(app, 'SplitAtTargetGroup-ServiceStack', {\n  cluster: infra.cluster,\n  vpc: infra.vpc,\n  targetGroup: splitAtTargetGroupLBStack.targetGroup\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyVpcF9F0CA6F\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"Bonjour/MyVpc\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/MyVpc/Resource\"}}, \"MyVpcPublicSubnet1SubnetF6608456\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"Bonjour/MyVpc/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/MyVpc/PublicSubnet1/Subnet\"}}, \"MyVpcPublicSubnet1RouteTableC46AB2F4\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"Bonjour/MyVpc/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/MyVpc/PublicSubnet1/RouteTable\"}}, \"MyVpcPublicSubnet1RouteTableAssociation2ECEE1CB\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPublicSubnet1RouteTableC46AB2F4\"}, \"SubnetId\": {\"Ref\": \"MyVpcPublicSubnet1SubnetF6608456\"}}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/MyVpc/PublicSubnet1/RouteTableAssociation\"}}, \"MyVpcPublicSubnet1DefaultRoute95FDF9EB\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPublicSubnet1RouteTableC46AB2F4\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"MyVpcIGW5C4A4F63\"}}, \"DependsOn\": [\"MyVpcVPCGW488ACE0D\"], \"Metadata\": {\"aws:cdk:path\": \"Bonjour/MyVpc/PublicSubnet1/DefaultRoute\"}}, \"MyVpcPublicSubnet1EIP096967CB\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"Bonjour/MyVpc/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/MyVpc/PublicSubnet1/EIP\"}}, \"MyVpcPublicSubnet1NATGatewayAD3400C1\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"MyVpcPublicSubnet1SubnetF6608456\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"MyVpcPublicSubnet1EIP096967CB\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"Bonjour/MyVpc/PublicSubnet1\"}]}, \"DependsOn\": [\"MyVpcPublicSubnet1DefaultRoute95FDF9EB\", \"MyVpcPublicSubnet1RouteTableAssociation2ECEE1CB\"], \"Metadata\": {\"aws:cdk:path\": \"Bonjour/MyVpc/PublicSubnet1/NATGateway\"}}, \"MyVpcPublicSubnet2Subnet492B6BFB\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"Bonjour/MyVpc/PublicSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/MyVpc/PublicSubnet2/Subnet\"}}, \"MyVpcPublicSubnet2RouteTable1DF17386\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"Bonjour/MyVpc/PublicSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/MyVpc/PublicSubnet2/RouteTable\"}}, \"MyVpcPublicSubnet2RouteTableAssociation227DE78D\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPublicSubnet2RouteTable1DF17386\"}, \"SubnetId\": {\"Ref\": \"MyVpcPublicSubnet2Subnet492B6BFB\"}}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/MyVpc/PublicSubnet2/RouteTableAssociation\"}}, \"MyVpcPublicSubnet2DefaultRoute052936F6\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPublicSubnet2RouteTable1DF17386\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"MyVpcIGW5C4A4F63\"}}, \"DependsOn\": [\"MyVpcVPCGW488ACE0D\"], \"Metadata\": {\"aws:cdk:path\": \"Bonjour/MyVpc/PublicSubnet2/DefaultRoute\"}}, \"MyVpcPublicSubnet2EIP8CCBA239\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"Bonjour/MyVpc/PublicSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/MyVpc/PublicSubnet2/EIP\"}}, \"MyVpcPublicSubnet2NATGateway91BFBEC9\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"MyVpcPublicSubnet2Subnet492B6BFB\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"MyVpcPublicSubnet2EIP8CCBA239\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"Bonjour/MyVpc/PublicSubnet2\"}]}, \"DependsOn\": [\"MyVpcPublicSubnet2DefaultRoute052936F6\", \"MyVpcPublicSubnet2RouteTableAssociation227DE78D\"], \"Metadata\": {\"aws:cdk:path\": \"Bonjour/MyVpc/PublicSubnet2/NATGateway\"}}, \"MyVpcPrivateSubnet1Subnet5057CF7E\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"Bonjour/MyVpc/PrivateSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/MyVpc/PrivateSubnet1/Subnet\"}}, \"MyVpcPrivateSubnet1RouteTable8819E6E2\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"Bonjour/MyVpc/PrivateSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/MyVpc/PrivateSubnet1/RouteTable\"}}, \"MyVpcPrivateSubnet1RouteTableAssociation56D38C7E\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPrivateSubnet1RouteTable8819E6E2\"}, \"SubnetId\": {\"Ref\": \"MyVpcPrivateSubnet1Subnet5057CF7E\"}}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/MyVpc/PrivateSubnet1/RouteTableAssociation\"}}, \"MyVpcPrivateSubnet1DefaultRouteA8CDE2FA\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPrivateSubnet1RouteTable8819E6E2\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"MyVpcPublicSubnet1NATGatewayAD3400C1\"}}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/MyVpc/PrivateSubnet1/DefaultRoute\"}}, \"MyVpcPrivateSubnet2Subnet0040C983\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"Bonjour/MyVpc/PrivateSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/MyVpc/PrivateSubnet2/Subnet\"}}, \"MyVpcPrivateSubnet2RouteTableCEDCEECE\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"Bonjour/MyVpc/PrivateSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/MyVpc/PrivateSubnet2/RouteTable\"}}, \"MyVpcPrivateSubnet2RouteTableAssociation86A610DA\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPrivateSubnet2RouteTableCEDCEECE\"}, \"SubnetId\": {\"Ref\": \"MyVpcPrivateSubnet2Subnet0040C983\"}}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/MyVpc/PrivateSubnet2/RouteTableAssociation\"}}, \"MyVpcPrivateSubnet2DefaultRoute9CE96294\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPrivateSubnet2RouteTableCEDCEECE\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"MyVpcPublicSubnet2NATGateway91BFBEC9\"}}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/MyVpc/PrivateSubnet2/DefaultRoute\"}}, \"MyVpcIGW5C4A4F63\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"Bonjour/MyVpc\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/MyVpc/IGW\"}}, \"MyVpcVPCGW488ACE0D\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"InternetGatewayId\": {\"Ref\": \"MyVpcIGW5C4A4F63\"}}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/MyVpc/VPCGW\"}}, \"Ec2ClusterEE43E89D\": {\"Type\": \"AWS::ECS::Cluster\", \"Metadata\": {\"aws:cdk:path\": \"Bonjour/Ec2Cluster/Resource\"}}, \"Ec2ClusterDefaultAutoScalingGroupInstanceSecurityGroup149B0A9E\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"Bonjour/Ec2Cluster/DefaultAutoScalingGroup/InstanceSecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"SecurityGroupIngress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"from 0.0.0.0/0:32768-65535\", \"FromPort\": 32768, \"IpProtocol\": \"tcp\", \"ToPort\": 65535}], \"Tags\": [{\"Key\": \"Name\", \"Value\": \"Bonjour/Ec2Cluster/DefaultAutoScalingGroup\"}], \"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/Ec2Cluster/DefaultAutoScalingGroup/InstanceSecurityGroup/Resource\"}}, \"Ec2ClusterDefaultAutoScalingGroupInstanceRole73D80898\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"ec2.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"Bonjour/Ec2Cluster/DefaultAutoScalingGroup\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/Ec2Cluster/DefaultAutoScalingGroup/InstanceRole/Resource\"}}, \"Ec2ClusterDefaultAutoScalingGroupInstanceRoleDefaultPolicy6D2DC2FD\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"ecs:DeregisterContainerInstance\", \"ecs:RegisterContainerInstance\", \"ecs:Submit*\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"Ec2ClusterEE43E89D\", \"Arn\"]}}, {\"Action\": [\"ecs:Poll\", \"ecs:StartTelemetrySession\"], \"Condition\": {\"ArnEquals\": {\"ecs:cluster\": {\"Fn::GetAtt\": [\"Ec2ClusterEE43E89D\", \"Arn\"]}}}, \"Effect\": \"Allow\", \"Resource\": \"*\"}, {\"Action\": [\"ecs:DiscoverPollEndpoint\", \"ecr:GetAuthorizationToken\", \"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"Ec2ClusterDefaultAutoScalingGroupInstanceRoleDefaultPolicy6D2DC2FD\", \"Roles\": [{\"Ref\": \"Ec2ClusterDefaultAutoScalingGroupInstanceRole73D80898\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/Ec2Cluster/DefaultAutoScalingGroup/InstanceRole/DefaultPolicy/Resource\"}}, \"Ec2ClusterDefaultAutoScalingGroupInstanceProfileDB232471\": {\"Type\": \"AWS::IAM::InstanceProfile\", \"Properties\": {\"Roles\": [{\"Ref\": \"Ec2ClusterDefaultAutoScalingGroupInstanceRole73D80898\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/Ec2Cluster/DefaultAutoScalingGroup/InstanceProfile\"}}, \"Ec2ClusterDefaultAutoScalingGroupLaunchConfig7B2FED3A\": {\"Type\": \"AWS::AutoScaling::LaunchConfiguration\", \"Properties\": {\"ImageId\": {\"Ref\": \"SsmParameterValueawsserviceecsoptimizedamiamazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter\"}, \"InstanceType\": \"t2.micro\", \"IamInstanceProfile\": {\"Ref\": \"Ec2ClusterDefaultAutoScalingGroupInstanceProfileDB232471\"}, \"SecurityGroups\": [{\"Fn::GetAtt\": [\"Ec2ClusterDefaultAutoScalingGroupInstanceSecurityGroup149B0A9E\", \"GroupId\"]}], \"UserData\": {\"Fn::Base64\": {\"Fn::Join\": [\"\", [\"#!/bin/bash\necho ECS_CLUSTER=\", {\"Ref\": \"Ec2ClusterEE43E89D\"}, \" >> /etc/ecs/ecs.config\nsudo iptables --insert FORWARD 1 --in-interface docker+ --destination 169.254.169.254/32 --jump DROP\nsudo service iptables save\necho ECS_AWSVPC_BLOCK_IMDS=true >> /etc/ecs/ecs.config\"]]}}}, \"DependsOn\": [\"Ec2ClusterDefaultAutoScalingGroupInstanceRoleDefaultPolicy6D2DC2FD\", \"Ec2ClusterDefaultAutoScalingGroupInstanceRole73D80898\"], \"Metadata\": {\"aws:cdk:path\": \"Bonjour/Ec2Cluster/DefaultAutoScalingGroup/LaunchConfig\"}}, \"Ec2ClusterDefaultAutoScalingGroupASGC5A6D4C0\": {\"Type\": \"AWS::AutoScaling::AutoScalingGroup\", \"Properties\": {\"MaxSize\": \"1\", \"MinSize\": \"1\", \"LaunchConfigurationName\": {\"Ref\": \"Ec2ClusterDefaultAutoScalingGroupLaunchConfig7B2FED3A\"}, \"Tags\": [{\"Key\": \"Name\", \"PropagateAtLaunch\": true, \"Value\": \"Bonjour/Ec2Cluster/DefaultAutoScalingGroup\"}], \"VPCZoneIdentifier\": [{\"Ref\": \"MyVpcPrivateSubnet1Subnet5057CF7E\"}, {\"Ref\": \"MyVpcPrivateSubnet2Subnet0040C983\"}]}, \"UpdatePolicy\": {\"AutoScalingReplacingUpdate\": {\"WillReplace\": true}, \"AutoScalingScheduledAction\": {\"IgnoreUnmodifiedGroupSizeProperties\": true}}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/Ec2Cluster/DefaultAutoScalingGroup/ASG\"}}, \"Ec2ClusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRole23116FA3\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}], \"Tags\": [{\"Key\": \"Name\", \"Value\": \"Bonjour/Ec2Cluster/DefaultAutoScalingGroup\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/Ec2Cluster/DefaultAutoScalingGroup/DrainECSHook/Function/ServiceRole/Resource\"}}, \"Ec2ClusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRoleDefaultPolicy638C9E33\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"ec2:DescribeInstances\", \"ec2:DescribeInstanceAttribute\", \"ec2:DescribeInstanceStatus\", \"ec2:DescribeHosts\"], \"Effect\": \"Allow\", \"Resource\": \"*\"}, {\"Action\": \"autoscaling:CompleteLifecycleAction\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":autoscaling:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":autoScalingGroup:*:autoScalingGroupName/\", {\"Ref\": \"Ec2ClusterDefaultAutoScalingGroupASGC5A6D4C0\"}]]}}, {\"Action\": [\"ecs:DescribeContainerInstances\", \"ecs:DescribeTasks\"], \"Condition\": {\"ArnEquals\": {\"ecs:cluster\": {\"Fn::GetAtt\": [\"Ec2ClusterEE43E89D\", \"Arn\"]}}}, \"Effect\": \"Allow\", \"Resource\": \"*\"}, {\"Action\": [\"ecs:ListContainerInstances\", \"ecs:SubmitContainerStateChange\", \"ecs:SubmitTaskStateChange\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"Ec2ClusterEE43E89D\", \"Arn\"]}}, {\"Action\": [\"ecs:UpdateContainerInstancesState\", \"ecs:ListTasks\"], \"Condition\": {\"ArnEquals\": {\"ecs:cluster\": {\"Fn::GetAtt\": [\"Ec2ClusterEE43E89D\", \"Arn\"]}}}, \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"Ec2ClusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRoleDefaultPolicy638C9E33\", \"Roles\": [{\"Ref\": \"Ec2ClusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRole23116FA3\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/Ec2Cluster/DefaultAutoScalingGroup/DrainECSHook/Function/ServiceRole/DefaultPolicy/Resource\"}}, \"Ec2ClusterDefaultAutoScalingGroupDrainECSHookFunctionE0DEFB31\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"import boto3, json, os, time\n\necs = boto3.client('ecs')\nautoscaling = boto3.client('autoscaling')\n\n\ndef lambda_handler(event, context):\n  print(json.dumps(dict(event, ResponseURL='...')))\n  cluster = os.environ['CLUSTER']\n  snsTopicArn = event['Records'][0]['Sns']['TopicArn']\n  lifecycle_event = json.loads(event['Records'][0]['Sns']['Message'])\n  instance_id = lifecycle_event.get('EC2InstanceId')\n  if not instance_id:\n    print('Got event without EC2InstanceId: %s', json.dumps(dict(event, ResponseURL='...')))\n    return\n\n  instance_arn = container_instance_arn(cluster, instance_id)\n  print('Instance %s has container instance ARN %s' % (lifecycle_event['EC2InstanceId'], instance_arn))\n\n  if not instance_arn:\n    return\n\n  task_arns = container_instance_task_arns(cluster, instance_arn)\n\n  if task_arns:\n    print('Instance ARN %s has task ARNs %s' % (instance_arn, ', '.join(task_arns)))\n\n  while has_tasks(cluster, instance_arn, task_arns):\n    time.sleep(10)\n\n  try:\n    print('Terminating instance %s' % instance_id)\n    autoscaling.complete_lifecycle_action(\n        LifecycleActionResult='CONTINUE',\n        **pick(lifecycle_event, 'LifecycleHookName', 'LifecycleActionToken', 'AutoScalingGroupName'))\n  except Exception as e:\n    # Lifecycle action may have already completed.\n    print(str(e))\n\n\ndef container_instance_arn(cluster, instance_id):\n  \\\"\\\"\\\"Turn an instance ID into a container instance ARN.\\\"\\\"\\\"\n  arns = ecs.list_container_instances(cluster=cluster, filter='ec2InstanceId==' + instance_id)['containerInstanceArns']\n  if not arns:\n    return None\n  return arns[0]\n\ndef container_instance_task_arns(cluster, instance_arn):\n  \\\"\\\"\\\"Fetch tasks for a container instance ARN.\\\"\\\"\\\"\n  arns = ecs.list_tasks(cluster=cluster, containerInstance=instance_arn)['taskArns']\n  return arns\n\ndef has_tasks(cluster, instance_arn, task_arns):\n  \\\"\\\"\\\"Return True if the instance is running tasks for the given cluster.\\\"\\\"\\\"\n  instances = ecs.describe_container_instances(cluster=cluster, containerInstances=[instance_arn])['containerInstances']\n  if not instances:\n    return False\n  instance = instances[0]\n\n  if instance['status'] == 'ACTIVE':\n    # Start draining, then try again later\n    set_container_instance_to_draining(cluster, instance_arn)\n    return True\n\n  task_count = None\n\n  if task_arns:\n    # Fetch details for tasks running on the container instance\n    tasks = ecs.describe_tasks(cluster=cluster, tasks=task_arns)['tasks']\n    if tasks:\n      # Consider any non-stopped tasks as running\n      task_count = sum(task['lastStatus'] != 'STOPPED' for task in tasks) + instance['pendingTasksCount']\n\n  if not task_count:\n    # Fallback to instance task counts if detailed task information is unavailable\n    task_count = instance['runningTasksCount'] + instance['pendingTasksCount']\n\n  print('Instance %s has %s tasks' % (instance_arn, task_count))\n\n  return task_count > 0\n\ndef set_container_instance_to_draining(cluster, instance_arn):\n  ecs.update_container_instances_state(\n      cluster=cluster,\n      containerInstances=[instance_arn], status='DRAINING')\n\n\ndef pick(dct, *keys):\n  \\\"\\\"\\\"Pick a subset of a dict.\\\"\\\"\\\"\n  return {k: v for k, v in dct.items() if k in keys}\n\"}, \"Role\": {\"Fn::GetAtt\": [\"Ec2ClusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRole23116FA3\", \"Arn\"]}, \"Environment\": {\"Variables\": {\"CLUSTER\": {\"Ref\": \"Ec2ClusterEE43E89D\"}}}, \"Handler\": \"index.lambda_handler\", \"Runtime\": \"python3.9\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"Bonjour/Ec2Cluster/DefaultAutoScalingGroup\"}], \"Timeout\": 310}, \"DependsOn\": [\"Ec2ClusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRoleDefaultPolicy638C9E33\", \"Ec2ClusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRole23116FA3\"], \"Metadata\": {\"aws:cdk:path\": \"Bonjour/Ec2Cluster/DefaultAutoScalingGroup/DrainECSHook/Function/Resource\"}}, \"Ec2ClusterDefaultAutoScalingGroupDrainECSHookFunctionAllowInvokeBonjourEc2ClusterDefaultAutoScalingGroupLifecycleHookDrainHookTopic94CDCB5A17F04E0F\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"Ec2ClusterDefaultAutoScalingGroupDrainECSHookFunctionE0DEFB31\", \"Arn\"]}, \"Principal\": \"sns.amazonaws.com\", \"SourceArn\": {\"Ref\": \"Ec2ClusterDefaultAutoScalingGroupLifecycleHookDrainHookTopicF7263B30\"}}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/Ec2Cluster/DefaultAutoScalingGroup/DrainECSHook/Function/AllowInvoke:BonjourEc2ClusterDefaultAutoScalingGroupLifecycleHookDrainHookTopic94CDCB5A\"}}, \"Ec2ClusterDefaultAutoScalingGroupDrainECSHookFunctionTopic4795E0F6\": {\"Type\": \"AWS::SNS::Subscription\", \"Properties\": {\"Protocol\": \"lambda\", \"TopicArn\": {\"Ref\": \"Ec2ClusterDefaultAutoScalingGroupLifecycleHookDrainHookTopicF7263B30\"}, \"Endpoint\": {\"Fn::GetAtt\": [\"Ec2ClusterDefaultAutoScalingGroupDrainECSHookFunctionE0DEFB31\", \"Arn\"]}}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/Ec2Cluster/DefaultAutoScalingGroup/DrainECSHook/Function/Topic/Resource\"}}, \"Ec2ClusterDefaultAutoScalingGroupLifecycleHookDrainHookTopicF7263B30\": {\"Type\": \"AWS::SNS::Topic\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"Bonjour/Ec2Cluster/DefaultAutoScalingGroup\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/Ec2Cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Topic/Resource\"}}, \"Ec2ClusterDefaultAutoScalingGroupLifecycleHookDrainHookRole71045ED7\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"autoscaling.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"Bonjour/Ec2Cluster/DefaultAutoScalingGroup\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/Ec2Cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Role/Resource\"}}, \"Ec2ClusterDefaultAutoScalingGroupLifecycleHookDrainHookRoleDefaultPolicyE499974B\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"sns:Publish\", \"Effect\": \"Allow\", \"Resource\": {\"Ref\": \"Ec2ClusterDefaultAutoScalingGroupLifecycleHookDrainHookTopicF7263B30\"}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"Ec2ClusterDefaultAutoScalingGroupLifecycleHookDrainHookRoleDefaultPolicyE499974B\", \"Roles\": [{\"Ref\": \"Ec2ClusterDefaultAutoScalingGroupLifecycleHookDrainHookRole71045ED7\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/Ec2Cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Role/DefaultPolicy/Resource\"}}, \"Ec2ClusterDefaultAutoScalingGroupLifecycleHookDrainHook5CB1467E\": {\"Type\": \"AWS::AutoScaling::LifecycleHook\", \"Properties\": {\"AutoScalingGroupName\": {\"Ref\": \"Ec2ClusterDefaultAutoScalingGroupASGC5A6D4C0\"}, \"LifecycleTransition\": \"autoscaling:EC2_INSTANCE_TERMINATING\", \"DefaultResult\": \"CONTINUE\", \"HeartbeatTimeout\": 300, \"NotificationTargetARN\": {\"Ref\": \"Ec2ClusterDefaultAutoScalingGroupLifecycleHookDrainHookTopicF7263B30\"}, \"RoleARN\": {\"Fn::GetAtt\": [\"Ec2ClusterDefaultAutoScalingGroupLifecycleHookDrainHookRole71045ED7\", \"Arn\"]}}, \"DependsOn\": [\"Ec2ClusterDefaultAutoScalingGroupLifecycleHookDrainHookRoleDefaultPolicyE499974B\", \"Ec2ClusterDefaultAutoScalingGroupLifecycleHookDrainHookRole71045ED7\"], \"Metadata\": {\"aws:cdk:path\": \"Bonjour/Ec2Cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Resource\"}}, \"Ec2ServiceLB381329CE\": {\"Type\": \"AWS::ElasticLoadBalancingV2::LoadBalancer\", \"Properties\": {\"LoadBalancerAttributes\": [{\"Key\": \"deletion_protection.enabled\", \"Value\": \"false\"}], \"Scheme\": \"internet-facing\", \"Subnets\": [{\"Ref\": \"MyVpcPublicSubnet1SubnetF6608456\"}, {\"Ref\": \"MyVpcPublicSubnet2Subnet492B6BFB\"}], \"Type\": \"network\"}, \"DependsOn\": [\"MyVpcPublicSubnet1DefaultRoute95FDF9EB\", \"MyVpcPublicSubnet1RouteTableAssociation2ECEE1CB\", \"MyVpcPublicSubnet2DefaultRoute052936F6\", \"MyVpcPublicSubnet2RouteTableAssociation227DE78D\"], \"Metadata\": {\"aws:cdk:path\": \"Bonjour/Ec2Service/LB/Resource\"}}, \"Ec2ServiceLBPublicListenerA941070C\": {\"Type\": \"AWS::ElasticLoadBalancingV2::Listener\", \"Properties\": {\"DefaultActions\": [{\"TargetGroupArn\": {\"Ref\": \"Ec2ServiceLBPublicListenerECSGroup3DC8690E\"}, \"Type\": \"forward\"}], \"LoadBalancerArn\": {\"Ref\": \"Ec2ServiceLB381329CE\"}, \"Port\": 80, \"Protocol\": \"TCP\"}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/Ec2Service/LB/PublicListener/Resource\"}}, \"Ec2ServiceLBPublicListenerECSGroup3DC8690E\": {\"Type\": \"AWS::ElasticLoadBalancingV2::TargetGroup\", \"Properties\": {\"Port\": 80, \"Protocol\": \"TCP\", \"TargetType\": \"instance\", \"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/Ec2Service/LB/PublicListener/ECSGroup/Resource\"}}, \"Ec2ServiceTaskDefTaskRole27A5D642\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"ecs-tasks.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/Ec2Service/TaskDef/TaskRole/Resource\"}}, \"Ec2ServiceTaskDef8D94BAA3\": {\"Type\": \"AWS::ECS::TaskDefinition\", \"Properties\": {\"ContainerDefinitions\": [{\"Essential\": true, \"Image\": \"amazon/amazon-ecs-sample\", \"LogConfiguration\": {\"LogDriver\": \"awslogs\", \"Options\": {\"awslogs-group\": {\"Ref\": \"Ec2ServiceTaskDefwebLogGroup923CD0CD\"}, \"awslogs-stream-prefix\": \"Ec2Service\", \"awslogs-region\": {\"Ref\": \"AWS::Region\"}}}, \"Memory\": 512, \"Name\": \"web\", \"PortMappings\": [{\"ContainerPort\": 80, \"HostPort\": 0, \"Protocol\": \"tcp\"}]}], \"ExecutionRoleArn\": {\"Fn::GetAtt\": [\"Ec2ServiceTaskDefExecutionRole0B89ED3C\", \"Arn\"]}, \"Family\": \"BonjourEc2ServiceTaskDef2C3EE7C1\", \"NetworkMode\": \"bridge\", \"RequiresCompatibilities\": [\"EC2\"], \"TaskRoleArn\": {\"Fn::GetAtt\": [\"Ec2ServiceTaskDefTaskRole27A5D642\", \"Arn\"]}}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/Ec2Service/TaskDef/Resource\"}}, \"Ec2ServiceTaskDefwebLogGroup923CD0CD\": {\"Type\": \"AWS::Logs::LogGroup\", \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\", \"Metadata\": {\"aws:cdk:path\": \"Bonjour/Ec2Service/TaskDef/web/LogGroup/Resource\"}}, \"Ec2ServiceTaskDefExecutionRole0B89ED3C\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"ecs-tasks.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/Ec2Service/TaskDef/ExecutionRole/Resource\"}}, \"Ec2ServiceTaskDefExecutionRoleDefaultPolicy7E1456F8\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"Ec2ServiceTaskDefwebLogGroup923CD0CD\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"Ec2ServiceTaskDefExecutionRoleDefaultPolicy7E1456F8\", \"Roles\": [{\"Ref\": \"Ec2ServiceTaskDefExecutionRole0B89ED3C\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/Ec2Service/TaskDef/ExecutionRole/DefaultPolicy/Resource\"}}, \"Ec2Service398F0E46\": {\"Type\": \"AWS::ECS::Service\", \"Properties\": {\"Cluster\": {\"Ref\": \"Ec2ClusterEE43E89D\"}, \"DeploymentConfiguration\": {\"Alarms\": {\"AlarmNames\": [], \"Enable\": false, \"Rollback\": false}, \"MaximumPercent\": 200, \"MinimumHealthyPercent\": 50}, \"EnableECSManagedTags\": false, \"HealthCheckGracePeriodSeconds\": 60, \"LaunchType\": \"EC2\", \"LoadBalancers\": [{\"ContainerName\": \"web\", \"ContainerPort\": 80, \"TargetGroupArn\": {\"Ref\": \"Ec2ServiceLBPublicListenerECSGroup3DC8690E\"}}], \"SchedulingStrategy\": \"REPLICA\", \"TaskDefinition\": {\"Ref\": \"Ec2ServiceTaskDef8D94BAA3\"}}, \"DependsOn\": [\"Ec2ServiceLBPublicListenerECSGroup3DC8690E\", \"Ec2ServiceLBPublicListenerA941070C\", \"Ec2ServiceTaskDefTaskRole27A5D642\"], \"Metadata\": {\"aws:cdk:path\": \"Bonjour/Ec2Service/Service/Service\"}}, \"CDKMetadata\": {\"Type\": \"AWS::CDK::Metadata\", \"Properties\": {\"Analytics\": \"v2:deflate64:H4sIAAAAAAAA/2VTy27bMBD8lt5ptvWlubpumhowUsEycg1W1MrZiCIFPmwYgv69K0qylebE2QdXw5nVWj78kN++wMWvVFmvNBWyywOoWnDqtUO1lt1Lq8S2Mi/ZVmSx0KTyWBgMQ+6ODjYGPEKh8Z6/5zbeW0UQyJpb8wAed9lwPEN4goAXuIrM0ZnhffDOBHSM54aRyRRtAnN9a9AEkaOKjsL1ydnYJg7LRC9QedltdfQ8bijP8FGtj+DrX1iRoZng/xlrApBBt8jxvRzdmdT44BH2AmKwXoEmc5LdhoN8DG609hCNeuOJFZ2iu0nyqXVPFaqr0vjH2jpdXCZ6QdDI7mBHvdOZWfYmCXRHO+MDGIWZsxVp5qehKUqQ3W9mMX97iTN0DXnPUS+8YcnYCa8ctXPDh/hoW0rLkUAS+bWFMDjm5TOGi3X13kL5E/TAolyIhhp8IKW5WqQqv/zM2/b5VrLrQzz3EDtopvqMp9oR3ImXZlZ9EbIG9sQP29uFKRPue3FAb6MbXc3AQYPTwvyNoY3jri9a2MgyLUQvjC1Rvvuv5+8Pcs0/1bsnWrloAjUoD+P5D0/m+9JwAwAA\"}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/CDKMetadata/Default\"}, \"Condition\": \"CDKMetadataAvailable\"}}, \"Parameters\": {\"SsmParameterValueawsserviceecsoptimizedamiamazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter\": {\"Type\": \"AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>\", \"Default\": \"/aws/service/ecs/optimized-ami/amazon-linux-2/recommended/image_id\"}, \"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Outputs\": {\"Ec2ServiceLoadBalancerDNS6983C9B2\": {\"Value\": {\"Fn::GetAtt\": [\"Ec2ServiceLB381329CE\", \"DNSName\"]}}, \"networkLoadBalancerURL\": {\"Description\": \"Network LoadBalancer URL\", \"Value\": {\"Fn::Join\": [\"\", [\"https://\", {\"Fn::GetAtt\": [\"Ec2ServiceLB381329CE\", \"DNSName\"]}]]}}}, \"Conditions\": {\"CDKMetadataAvailable\": {\"Fn::Or\": [{\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"af-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ca-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-northwest-1\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-3\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"me-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"sa-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-2\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-2\"]}]}]}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import ec2 = require('aws-cdk-lib/aws-ec2');\nimport ecs = require('aws-cdk-lib/aws-ecs');\nimport ecs_patterns = require('aws-cdk-lib/aws-ecs-patterns');\nimport cdk = require('aws-cdk-lib');\n\n/**\n * The port range to open up for dynamic port mapping\n */\nconst EPHEMERAL_PORT_RANGE = ec2.Port.tcpRange(32768, 65535);\n\nclass BonjourECS extends cdk.Stack {\n  constructor(scope: cdk.App, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n\n    // For better iteration speed, it might make sense to put this VPC into\n    // a separate stack and import it here. We then have two stacks to\n    // deploy, but VPC creation is slow so we'll only have to do that once\n    // and can iterate quickly on consuming stacks. Not doing that for now.\n    const vpc = new ec2.Vpc(this, 'MyVpc', { maxAzs: 2 });\n    const cluster = new ecs.Cluster(this, 'Ec2Cluster', { vpc });\n    cluster.addCapacity('DefaultAutoScalingGroup', {\n      instanceType: ec2.InstanceType.of(ec2.InstanceClass.T2, ec2.InstanceSize.MICRO)\n    });\n\n    // Instantiate ECS Service with just cluster and image\n    const ecsService = new ecs_patterns.NetworkLoadBalancedEc2Service(this, \"Ec2Service\", {\n      cluster,\n      memoryLimitMiB: 512,\n      taskImageOptions: {\n        image: ecs.ContainerImage.fromRegistry(\"amazon/amazon-ecs-sample\"),\n      }\n    });\n\n    // Need target security group to allow all inbound traffic for\n    // ephemeral port range (when host port is 0).\n    ecsService.service.connections.allowFromAnyIpv4(EPHEMERAL_PORT_RANGE);\n\n    new cdk.CfnOutput(this, \"networkLoadBalancerURL\", {\n      value: \"https://\"+ecsService.loadBalancer.loadBalancerDnsName,\n      description: \"Network LoadBalancer URL\"\n    });\n  }\n}\n\nconst app = new cdk.App();\n\nnew BonjourECS(app, 'Bonjour');\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"Vpc8378EB38\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"sample-aws-ecs-integ-ecs/Vpc\"}]}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/Vpc/Resource\"}}, \"VpcPublicSubnet1Subnet5C2D37C4\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"sample-aws-ecs-integ-ecs/Vpc/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/Vpc/PublicSubnet1/Subnet\"}}, \"VpcPublicSubnet1RouteTable6C95E38E\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"sample-aws-ecs-integ-ecs/Vpc/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/Vpc/PublicSubnet1/RouteTable\"}}, \"VpcPublicSubnet1RouteTableAssociation97140677\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet1RouteTable6C95E38E\"}, \"SubnetId\": {\"Ref\": \"VpcPublicSubnet1Subnet5C2D37C4\"}}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/Vpc/PublicSubnet1/RouteTableAssociation\"}}, \"VpcPublicSubnet1DefaultRoute3DA9E72A\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet1RouteTable6C95E38E\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VpcIGWD7BA715C\"}}, \"DependsOn\": [\"VpcVPCGWBF912B6E\"], \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/Vpc/PublicSubnet1/DefaultRoute\"}}, \"VpcPublicSubnet1EIPD7E02669\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"sample-aws-ecs-integ-ecs/Vpc/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/Vpc/PublicSubnet1/EIP\"}}, \"VpcPublicSubnet1NATGateway4D7517AA\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VpcPublicSubnet1Subnet5C2D37C4\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VpcPublicSubnet1EIPD7E02669\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"sample-aws-ecs-integ-ecs/Vpc/PublicSubnet1\"}]}, \"DependsOn\": [\"VpcPublicSubnet1DefaultRoute3DA9E72A\", \"VpcPublicSubnet1RouteTableAssociation97140677\"], \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/Vpc/PublicSubnet1/NATGateway\"}}, \"VpcPublicSubnet2Subnet691E08A3\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"sample-aws-ecs-integ-ecs/Vpc/PublicSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/Vpc/PublicSubnet2/Subnet\"}}, \"VpcPublicSubnet2RouteTable94F7E489\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"sample-aws-ecs-integ-ecs/Vpc/PublicSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/Vpc/PublicSubnet2/RouteTable\"}}, \"VpcPublicSubnet2RouteTableAssociationDD5762D8\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet2RouteTable94F7E489\"}, \"SubnetId\": {\"Ref\": \"VpcPublicSubnet2Subnet691E08A3\"}}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/Vpc/PublicSubnet2/RouteTableAssociation\"}}, \"VpcPublicSubnet2DefaultRoute97F91067\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet2RouteTable94F7E489\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VpcIGWD7BA715C\"}}, \"DependsOn\": [\"VpcVPCGWBF912B6E\"], \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/Vpc/PublicSubnet2/DefaultRoute\"}}, \"VpcPublicSubnet2EIP3C605A87\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"sample-aws-ecs-integ-ecs/Vpc/PublicSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/Vpc/PublicSubnet2/EIP\"}}, \"VpcPublicSubnet2NATGateway9182C01D\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VpcPublicSubnet2Subnet691E08A3\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VpcPublicSubnet2EIP3C605A87\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"sample-aws-ecs-integ-ecs/Vpc/PublicSubnet2\"}]}, \"DependsOn\": [\"VpcPublicSubnet2DefaultRoute97F91067\", \"VpcPublicSubnet2RouteTableAssociationDD5762D8\"], \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/Vpc/PublicSubnet2/NATGateway\"}}, \"VpcPrivateSubnet1Subnet536B997A\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"sample-aws-ecs-integ-ecs/Vpc/PrivateSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/Vpc/PrivateSubnet1/Subnet\"}}, \"VpcPrivateSubnet1RouteTableB2C5B500\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"sample-aws-ecs-integ-ecs/Vpc/PrivateSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/Vpc/PrivateSubnet1/RouteTable\"}}, \"VpcPrivateSubnet1RouteTableAssociation70C59FA6\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet1RouteTableB2C5B500\"}, \"SubnetId\": {\"Ref\": \"VpcPrivateSubnet1Subnet536B997A\"}}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/Vpc/PrivateSubnet1/RouteTableAssociation\"}}, \"VpcPrivateSubnet1DefaultRouteBE02A9ED\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet1RouteTableB2C5B500\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VpcPublicSubnet1NATGateway4D7517AA\"}}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/Vpc/PrivateSubnet1/DefaultRoute\"}}, \"VpcPrivateSubnet2Subnet3788AAA1\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"sample-aws-ecs-integ-ecs/Vpc/PrivateSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/Vpc/PrivateSubnet2/Subnet\"}}, \"VpcPrivateSubnet2RouteTableA678073B\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"sample-aws-ecs-integ-ecs/Vpc/PrivateSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/Vpc/PrivateSubnet2/RouteTable\"}}, \"VpcPrivateSubnet2RouteTableAssociationA89CAD56\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet2RouteTableA678073B\"}, \"SubnetId\": {\"Ref\": \"VpcPrivateSubnet2Subnet3788AAA1\"}}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/Vpc/PrivateSubnet2/RouteTableAssociation\"}}, \"VpcPrivateSubnet2DefaultRoute060D2087\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet2RouteTableA678073B\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VpcPublicSubnet2NATGateway9182C01D\"}}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/Vpc/PrivateSubnet2/DefaultRoute\"}}, \"VpcIGWD7BA715C\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"sample-aws-ecs-integ-ecs/Vpc\"}]}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/Vpc/IGW\"}}, \"VpcVPCGWBF912B6E\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"InternetGatewayId\": {\"Ref\": \"VpcIGWD7BA715C\"}}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/Vpc/VPCGW\"}}, \"EcsCluster97242B84\": {\"Type\": \"AWS::ECS::Cluster\", \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/EcsCluster/Resource\"}}, \"EcsClusterDefaultAutoScalingGroupInstanceSecurityGroup912E1231\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"sample-aws-ecs-integ-ecs/EcsCluster/DefaultAutoScalingGroup/InstanceSecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"Tags\": [{\"Key\": \"Name\", \"Value\": \"sample-aws-ecs-integ-ecs/EcsCluster/DefaultAutoScalingGroup\"}], \"VpcId\": {\"Ref\": \"Vpc8378EB38\"}}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/EcsCluster/DefaultAutoScalingGroup/InstanceSecurityGroup/Resource\"}}, \"EcsClusterDefaultAutoScalingGroupInstanceSecurityGroupfromsampleawsecsintegecsLBSecurityGroup5D33E15E80803EE2CEBD\": {\"Type\": \"AWS::EC2::SecurityGroupIngress\", \"Properties\": {\"IpProtocol\": \"tcp\", \"Description\": \"Load balancer to target\", \"FromPort\": 8080, \"GroupId\": {\"Fn::GetAtt\": [\"EcsClusterDefaultAutoScalingGroupInstanceSecurityGroup912E1231\", \"GroupId\"]}, \"SourceSecurityGroupId\": {\"Fn::GetAtt\": [\"LBSecurityGroup8A41EA2B\", \"GroupId\"]}, \"ToPort\": 8080}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/EcsCluster/DefaultAutoScalingGroup/InstanceSecurityGroup/from sampleawsecsintegecsLBSecurityGroup5D33E15E:8080\"}}, \"EcsClusterDefaultAutoScalingGroupInstanceRole3C026863\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"ec2.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"sample-aws-ecs-integ-ecs/EcsCluster/DefaultAutoScalingGroup\"}]}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/EcsCluster/DefaultAutoScalingGroup/InstanceRole/Resource\"}}, \"EcsClusterDefaultAutoScalingGroupInstanceRoleDefaultPolicy04DC6C80\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"ecs:DeregisterContainerInstance\", \"ecs:RegisterContainerInstance\", \"ecs:Submit*\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"EcsCluster97242B84\", \"Arn\"]}}, {\"Action\": [\"ecs:Poll\", \"ecs:StartTelemetrySession\"], \"Condition\": {\"ArnEquals\": {\"ecs:cluster\": {\"Fn::GetAtt\": [\"EcsCluster97242B84\", \"Arn\"]}}}, \"Effect\": \"Allow\", \"Resource\": \"*\"}, {\"Action\": [\"ecs:DiscoverPollEndpoint\", \"ecr:GetAuthorizationToken\", \"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"EcsClusterDefaultAutoScalingGroupInstanceRoleDefaultPolicy04DC6C80\", \"Roles\": [{\"Ref\": \"EcsClusterDefaultAutoScalingGroupInstanceRole3C026863\"}]}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/EcsCluster/DefaultAutoScalingGroup/InstanceRole/DefaultPolicy/Resource\"}}, \"EcsClusterDefaultAutoScalingGroupInstanceProfile2CE606B3\": {\"Type\": \"AWS::IAM::InstanceProfile\", \"Properties\": {\"Roles\": [{\"Ref\": \"EcsClusterDefaultAutoScalingGroupInstanceRole3C026863\"}]}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/EcsCluster/DefaultAutoScalingGroup/InstanceProfile\"}}, \"EcsClusterDefaultAutoScalingGroupLaunchConfigB7E376C1\": {\"Type\": \"AWS::AutoScaling::LaunchConfiguration\", \"Properties\": {\"ImageId\": {\"Ref\": \"SsmParameterValueawsserviceecsoptimizedamiamazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter\"}, \"InstanceType\": \"t2.micro\", \"IamInstanceProfile\": {\"Ref\": \"EcsClusterDefaultAutoScalingGroupInstanceProfile2CE606B3\"}, \"SecurityGroups\": [{\"Fn::GetAtt\": [\"EcsClusterDefaultAutoScalingGroupInstanceSecurityGroup912E1231\", \"GroupId\"]}], \"UserData\": {\"Fn::Base64\": {\"Fn::Join\": [\"\", [\"#!/bin/bash\necho ECS_CLUSTER=\", {\"Ref\": \"EcsCluster97242B84\"}, \" >> /etc/ecs/ecs.config\nsudo iptables --insert FORWARD 1 --in-interface docker+ --destination 169.254.169.254/32 --jump DROP\nsudo service iptables save\necho ECS_AWSVPC_BLOCK_IMDS=true >> /etc/ecs/ecs.config\"]]}}}, \"DependsOn\": [\"EcsClusterDefaultAutoScalingGroupInstanceRoleDefaultPolicy04DC6C80\", \"EcsClusterDefaultAutoScalingGroupInstanceRole3C026863\"], \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/EcsCluster/DefaultAutoScalingGroup/LaunchConfig\"}}, \"EcsClusterDefaultAutoScalingGroupASGC1A785DB\": {\"Type\": \"AWS::AutoScaling::AutoScalingGroup\", \"Properties\": {\"MaxSize\": \"1\", \"MinSize\": \"1\", \"LaunchConfigurationName\": {\"Ref\": \"EcsClusterDefaultAutoScalingGroupLaunchConfigB7E376C1\"}, \"Tags\": [{\"Key\": \"Name\", \"PropagateAtLaunch\": true, \"Value\": \"sample-aws-ecs-integ-ecs/EcsCluster/DefaultAutoScalingGroup\"}], \"VPCZoneIdentifier\": [{\"Ref\": \"VpcPrivateSubnet1Subnet536B997A\"}, {\"Ref\": \"VpcPrivateSubnet2Subnet3788AAA1\"}]}, \"UpdatePolicy\": {\"AutoScalingReplacingUpdate\": {\"WillReplace\": true}, \"AutoScalingScheduledAction\": {\"IgnoreUnmodifiedGroupSizeProperties\": true}}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/EcsCluster/DefaultAutoScalingGroup/ASG\"}}, \"EcsClusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRole94543EDA\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}], \"Tags\": [{\"Key\": \"Name\", \"Value\": \"sample-aws-ecs-integ-ecs/EcsCluster/DefaultAutoScalingGroup\"}]}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/EcsCluster/DefaultAutoScalingGroup/DrainECSHook/Function/ServiceRole/Resource\"}}, \"EcsClusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRoleDefaultPolicyA45BF396\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"ec2:DescribeInstances\", \"ec2:DescribeInstanceAttribute\", \"ec2:DescribeInstanceStatus\", \"ec2:DescribeHosts\"], \"Effect\": \"Allow\", \"Resource\": \"*\"}, {\"Action\": \"autoscaling:CompleteLifecycleAction\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":autoscaling:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":autoScalingGroup:*:autoScalingGroupName/\", {\"Ref\": \"EcsClusterDefaultAutoScalingGroupASGC1A785DB\"}]]}}, {\"Action\": [\"ecs:DescribeContainerInstances\", \"ecs:DescribeTasks\"], \"Condition\": {\"ArnEquals\": {\"ecs:cluster\": {\"Fn::GetAtt\": [\"EcsCluster97242B84\", \"Arn\"]}}}, \"Effect\": \"Allow\", \"Resource\": \"*\"}, {\"Action\": [\"ecs:ListContainerInstances\", \"ecs:SubmitContainerStateChange\", \"ecs:SubmitTaskStateChange\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"EcsCluster97242B84\", \"Arn\"]}}, {\"Action\": [\"ecs:UpdateContainerInstancesState\", \"ecs:ListTasks\"], \"Condition\": {\"ArnEquals\": {\"ecs:cluster\": {\"Fn::GetAtt\": [\"EcsCluster97242B84\", \"Arn\"]}}}, \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"EcsClusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRoleDefaultPolicyA45BF396\", \"Roles\": [{\"Ref\": \"EcsClusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRole94543EDA\"}]}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/EcsCluster/DefaultAutoScalingGroup/DrainECSHook/Function/ServiceRole/DefaultPolicy/Resource\"}}, \"EcsClusterDefaultAutoScalingGroupDrainECSHookFunctionE17A5F5E\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"import boto3, json, os, time\n\necs = boto3.client('ecs')\nautoscaling = boto3.client('autoscaling')\n\n\ndef lambda_handler(event, context):\n  print(json.dumps(dict(event, ResponseURL='...')))\n  cluster = os.environ['CLUSTER']\n  snsTopicArn = event['Records'][0]['Sns']['TopicArn']\n  lifecycle_event = json.loads(event['Records'][0]['Sns']['Message'])\n  instance_id = lifecycle_event.get('EC2InstanceId')\n  if not instance_id:\n    print('Got event without EC2InstanceId: %s', json.dumps(dict(event, ResponseURL='...')))\n    return\n\n  instance_arn = container_instance_arn(cluster, instance_id)\n  print('Instance %s has container instance ARN %s' % (lifecycle_event['EC2InstanceId'], instance_arn))\n\n  if not instance_arn:\n    return\n\n  task_arns = container_instance_task_arns(cluster, instance_arn)\n\n  if task_arns:\n    print('Instance ARN %s has task ARNs %s' % (instance_arn, ', '.join(task_arns)))\n\n  while has_tasks(cluster, instance_arn, task_arns):\n    time.sleep(10)\n\n  try:\n    print('Terminating instance %s' % instance_id)\n    autoscaling.complete_lifecycle_action(\n        LifecycleActionResult='CONTINUE',\n        **pick(lifecycle_event, 'LifecycleHookName', 'LifecycleActionToken', 'AutoScalingGroupName'))\n  except Exception as e:\n    # Lifecycle action may have already completed.\n    print(str(e))\n\n\ndef container_instance_arn(cluster, instance_id):\n  \\\"\\\"\\\"Turn an instance ID into a container instance ARN.\\\"\\\"\\\"\n  arns = ecs.list_container_instances(cluster=cluster, filter='ec2InstanceId==' + instance_id)['containerInstanceArns']\n  if not arns:\n    return None\n  return arns[0]\n\ndef container_instance_task_arns(cluster, instance_arn):\n  \\\"\\\"\\\"Fetch tasks for a container instance ARN.\\\"\\\"\\\"\n  arns = ecs.list_tasks(cluster=cluster, containerInstance=instance_arn)['taskArns']\n  return arns\n\ndef has_tasks(cluster, instance_arn, task_arns):\n  \\\"\\\"\\\"Return True if the instance is running tasks for the given cluster.\\\"\\\"\\\"\n  instances = ecs.describe_container_instances(cluster=cluster, containerInstances=[instance_arn])['containerInstances']\n  if not instances:\n    return False\n  instance = instances[0]\n\n  if instance['status'] == 'ACTIVE':\n    # Start draining, then try again later\n    set_container_instance_to_draining(cluster, instance_arn)\n    return True\n\n  task_count = None\n\n  if task_arns:\n    # Fetch details for tasks running on the container instance\n    tasks = ecs.describe_tasks(cluster=cluster, tasks=task_arns)['tasks']\n    if tasks:\n      # Consider any non-stopped tasks as running\n      task_count = sum(task['lastStatus'] != 'STOPPED' for task in tasks) + instance['pendingTasksCount']\n\n  if not task_count:\n    # Fallback to instance task counts if detailed task information is unavailable\n    task_count = instance['runningTasksCount'] + instance['pendingTasksCount']\n\n  print('Instance %s has %s tasks' % (instance_arn, task_count))\n\n  return task_count > 0\n\ndef set_container_instance_to_draining(cluster, instance_arn):\n  ecs.update_container_instances_state(\n      cluster=cluster,\n      containerInstances=[instance_arn], status='DRAINING')\n\n\ndef pick(dct, *keys):\n  \\\"\\\"\\\"Pick a subset of a dict.\\\"\\\"\\\"\n  return {k: v for k, v in dct.items() if k in keys}\n\"}, \"Role\": {\"Fn::GetAtt\": [\"EcsClusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRole94543EDA\", \"Arn\"]}, \"Environment\": {\"Variables\": {\"CLUSTER\": {\"Ref\": \"EcsCluster97242B84\"}}}, \"Handler\": \"index.lambda_handler\", \"Runtime\": \"python3.9\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"sample-aws-ecs-integ-ecs/EcsCluster/DefaultAutoScalingGroup\"}], \"Timeout\": 310}, \"DependsOn\": [\"EcsClusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRoleDefaultPolicyA45BF396\", \"EcsClusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRole94543EDA\"], \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/EcsCluster/DefaultAutoScalingGroup/DrainECSHook/Function/Resource\"}}, \"EcsClusterDefaultAutoScalingGroupDrainECSHookFunctionAllowInvokesampleawsecsintegecsEcsClusterDefaultAutoScalingGroupLifecycleHookDrainHookTopic7D0FA5A858D2FF02\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"EcsClusterDefaultAutoScalingGroupDrainECSHookFunctionE17A5F5E\", \"Arn\"]}, \"Principal\": \"sns.amazonaws.com\", \"SourceArn\": {\"Ref\": \"EcsClusterDefaultAutoScalingGroupLifecycleHookDrainHookTopicACD2D4A4\"}}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/EcsCluster/DefaultAutoScalingGroup/DrainECSHook/Function/AllowInvoke:sampleawsecsintegecsEcsClusterDefaultAutoScalingGroupLifecycleHookDrainHookTopic7D0FA5A8\"}}, \"EcsClusterDefaultAutoScalingGroupDrainECSHookFunctionTopic8F34E394\": {\"Type\": \"AWS::SNS::Subscription\", \"Properties\": {\"Protocol\": \"lambda\", \"TopicArn\": {\"Ref\": \"EcsClusterDefaultAutoScalingGroupLifecycleHookDrainHookTopicACD2D4A4\"}, \"Endpoint\": {\"Fn::GetAtt\": [\"EcsClusterDefaultAutoScalingGroupDrainECSHookFunctionE17A5F5E\", \"Arn\"]}}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/EcsCluster/DefaultAutoScalingGroup/DrainECSHook/Function/Topic/Resource\"}}, \"EcsClusterDefaultAutoScalingGroupLifecycleHookDrainHookTopicACD2D4A4\": {\"Type\": \"AWS::SNS::Topic\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"sample-aws-ecs-integ-ecs/EcsCluster/DefaultAutoScalingGroup\"}]}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/EcsCluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Topic/Resource\"}}, \"EcsClusterDefaultAutoScalingGroupLifecycleHookDrainHookRoleA38EC83B\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"autoscaling.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"sample-aws-ecs-integ-ecs/EcsCluster/DefaultAutoScalingGroup\"}]}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/EcsCluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Role/Resource\"}}, \"EcsClusterDefaultAutoScalingGroupLifecycleHookDrainHookRoleDefaultPolicy75002F88\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"sns:Publish\", \"Effect\": \"Allow\", \"Resource\": {\"Ref\": \"EcsClusterDefaultAutoScalingGroupLifecycleHookDrainHookTopicACD2D4A4\"}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"EcsClusterDefaultAutoScalingGroupLifecycleHookDrainHookRoleDefaultPolicy75002F88\", \"Roles\": [{\"Ref\": \"EcsClusterDefaultAutoScalingGroupLifecycleHookDrainHookRoleA38EC83B\"}]}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/EcsCluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Role/DefaultPolicy/Resource\"}}, \"EcsClusterDefaultAutoScalingGroupLifecycleHookDrainHookFFA63029\": {\"Type\": \"AWS::AutoScaling::LifecycleHook\", \"Properties\": {\"AutoScalingGroupName\": {\"Ref\": \"EcsClusterDefaultAutoScalingGroupASGC1A785DB\"}, \"LifecycleTransition\": \"autoscaling:EC2_INSTANCE_TERMINATING\", \"DefaultResult\": \"CONTINUE\", \"HeartbeatTimeout\": 300, \"NotificationTargetARN\": {\"Ref\": \"EcsClusterDefaultAutoScalingGroupLifecycleHookDrainHookTopicACD2D4A4\"}, \"RoleARN\": {\"Fn::GetAtt\": [\"EcsClusterDefaultAutoScalingGroupLifecycleHookDrainHookRoleA38EC83B\", \"Arn\"]}}, \"DependsOn\": [\"EcsClusterDefaultAutoScalingGroupLifecycleHookDrainHookRoleDefaultPolicy75002F88\", \"EcsClusterDefaultAutoScalingGroupLifecycleHookDrainHookRoleA38EC83B\"], \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/EcsCluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Resource\"}}, \"TaskDefTaskRole1EDB4A67\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"ecs-tasks.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/TaskDef/TaskRole/Resource\"}}, \"TaskDef54694570\": {\"Type\": \"AWS::ECS::TaskDefinition\", \"Properties\": {\"ContainerDefinitions\": [{\"Essential\": true, \"Image\": \"amazon/amazon-ecs-sample\", \"Memory\": 256, \"Name\": \"web\", \"PortMappings\": [{\"ContainerPort\": 80, \"HostPort\": 8080, \"Protocol\": \"tcp\"}]}], \"Family\": \"sampleawsecsintegecsTaskDef39CD318E\", \"NetworkMode\": \"bridge\", \"RequiresCompatibilities\": [\"EC2\"], \"TaskRoleArn\": {\"Fn::GetAtt\": [\"TaskDefTaskRole1EDB4A67\", \"Arn\"]}}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/TaskDef/Resource\"}}, \"ServiceD69D759B\": {\"Type\": \"AWS::ECS::Service\", \"Properties\": {\"Cluster\": {\"Ref\": \"EcsCluster97242B84\"}, \"DeploymentConfiguration\": {\"Alarms\": {\"AlarmNames\": [], \"Enable\": false, \"Rollback\": false}, \"MaximumPercent\": 200, \"MinimumHealthyPercent\": 50}, \"EnableECSManagedTags\": false, \"HealthCheckGracePeriodSeconds\": 60, \"LaunchType\": \"EC2\", \"LoadBalancers\": [{\"ContainerName\": \"web\", \"ContainerPort\": 80, \"TargetGroupArn\": {\"Ref\": \"LBPublicListenerECSGroupD6A32205\"}}], \"SchedulingStrategy\": \"REPLICA\", \"TaskDefinition\": {\"Ref\": \"TaskDef54694570\"}}, \"DependsOn\": [\"LBPublicListenerECSGroupD6A32205\", \"LBPublicListener6E1F3D94\", \"TaskDefTaskRole1EDB4A67\"], \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/Service/Service\"}}, \"LB8A12904C\": {\"Type\": \"AWS::ElasticLoadBalancingV2::LoadBalancer\", \"Properties\": {\"LoadBalancerAttributes\": [{\"Key\": \"deletion_protection.enabled\", \"Value\": \"false\"}], \"Scheme\": \"internet-facing\", \"SecurityGroups\": [{\"Fn::GetAtt\": [\"LBSecurityGroup8A41EA2B\", \"GroupId\"]}], \"Subnets\": [{\"Ref\": \"VpcPublicSubnet1Subnet5C2D37C4\"}, {\"Ref\": \"VpcPublicSubnet2Subnet691E08A3\"}], \"Type\": \"application\"}, \"DependsOn\": [\"VpcPublicSubnet1DefaultRoute3DA9E72A\", \"VpcPublicSubnet1RouteTableAssociation97140677\", \"VpcPublicSubnet2DefaultRoute97F91067\", \"VpcPublicSubnet2RouteTableAssociationDD5762D8\"], \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/LB/Resource\"}}, \"LBSecurityGroup8A41EA2B\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"Automatically created Security Group for ELB sampleawsecsintegecsLBA09F4FBE\", \"SecurityGroupIngress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow from anyone on port 80\", \"FromPort\": 80, \"IpProtocol\": \"tcp\", \"ToPort\": 80}], \"VpcId\": {\"Ref\": \"Vpc8378EB38\"}}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/LB/SecurityGroup/Resource\"}}, \"LBSecurityGrouptosampleawsecsintegecsEcsClusterDefaultAutoScalingGroupInstanceSecurityGroupB9ACBAA4808088D50957\": {\"Type\": \"AWS::EC2::SecurityGroupEgress\", \"Properties\": {\"GroupId\": {\"Fn::GetAtt\": [\"LBSecurityGroup8A41EA2B\", \"GroupId\"]}, \"IpProtocol\": \"tcp\", \"Description\": \"Load balancer to target\", \"DestinationSecurityGroupId\": {\"Fn::GetAtt\": [\"EcsClusterDefaultAutoScalingGroupInstanceSecurityGroup912E1231\", \"GroupId\"]}, \"FromPort\": 8080, \"ToPort\": 8080}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/LB/SecurityGroup/to sampleawsecsintegecsEcsClusterDefaultAutoScalingGroupInstanceSecurityGroupB9ACBAA4:8080\"}}, \"LBPublicListener6E1F3D94\": {\"Type\": \"AWS::ElasticLoadBalancingV2::Listener\", \"Properties\": {\"DefaultActions\": [{\"TargetGroupArn\": {\"Ref\": \"LBPublicListenerECSGroupD6A32205\"}, \"Type\": \"forward\"}], \"LoadBalancerArn\": {\"Ref\": \"LB8A12904C\"}, \"Port\": 80, \"Protocol\": \"HTTP\"}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/LB/PublicListener/Resource\"}}, \"LBPublicListenerECSGroupD6A32205\": {\"Type\": \"AWS::ElasticLoadBalancingV2::TargetGroup\", \"Properties\": {\"HealthCheckIntervalSeconds\": 60, \"HealthCheckPath\": \"/health\", \"HealthCheckTimeoutSeconds\": 5, \"Port\": 8080, \"Protocol\": \"HTTP\", \"TargetGroupAttributes\": [{\"Key\": \"stickiness.enabled\", \"Value\": \"false\"}], \"TargetType\": \"instance\", \"VpcId\": {\"Ref\": \"Vpc8378EB38\"}}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/LB/PublicListener/ECSGroup/Resource\"}}, \"CDKMetadata\": {\"Type\": \"AWS::CDK::Metadata\", \"Properties\": {\"Analytics\": \"v2:deflate64:H4sIAAAAAAAA/31Ty27bMBD8lt5ptvWlubqumxowWsEyci1W1MrZmCIFPhwYgv69a9KylAToibPDETncWS3lwzf55RO8+oWqTwtNlezLAOokmPrbo1rK/qlTYt2Yp2ItilhpUmWsDIYrN6G9jQEPUGmc+IlbeW8VQSBr7uIr2GyL6/IbwiMEfIWLKBydGU4Hb01Ax3gUZCe3ahXY63OLJogSVXQULo/Oxi55+C+xNUeH3n/gN4keBCov+7WOnm+/ika4UcsD+NMPbMjQ+J73jDUByKCbcfxdie5MKvcnw0FADNYr0GSOsl9xUebibnoH0ahnPrGhY3T3Dn6Q7qhBdVEaf1l7Sh/OiUEQtLLf2xxPWgvLUaZ+TmhrfACjsHC2Ic3+NLRVDbL/yS7Gu+e4QNeS91wNwhtuGQfnlaNuFLypD7ajNEsJcJM1+EBKW6gr0HwxP+fME7fqOnaUHrvjve9pL+fwpp7riOMxN82IZ/sHcEceorGts3IYxB69jS5HU4CDFm+p/4mhi3m+ZxJOo06pDsLYGuWL/3z++iCX/CO9eKKFiyZQi3Kf13/FbYWTZAMAAA==\"}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/CDKMetadata/Default\"}, \"Condition\": \"CDKMetadataAvailable\"}}, \"Parameters\": {\"SsmParameterValueawsserviceecsoptimizedamiamazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter\": {\"Type\": \"AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>\", \"Default\": \"/aws/service/ecs/optimized-ami/amazon-linux-2/recommended/image_id\"}, \"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Outputs\": {\"LoadBalancerDNS\": {\"Value\": {\"Fn::GetAtt\": [\"LB8A12904C\", \"DNSName\"]}}}, \"Conditions\": {\"CDKMetadataAvailable\": {\"Fn::Or\": [{\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"af-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ca-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-northwest-1\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-3\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"me-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"sa-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-2\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-2\"]}]}]}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import ecs = require('aws-cdk-lib/aws-ecs');\nimport ec2 = require('aws-cdk-lib/aws-ec2');\nimport elbv2 = require('aws-cdk-lib/aws-elasticloadbalancingv2');\nimport cdk = require('aws-cdk-lib');\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'sample-aws-ecs-integ-ecs');\n\n// Create a cluster\nconst vpc = new ec2.Vpc(stack, 'Vpc', { maxAzs: 2 });\n\nconst cluster = new ecs.Cluster(stack, 'EcsCluster', { vpc });\ncluster.addCapacity('DefaultAutoScalingGroup', {\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.T2, ec2.InstanceSize.MICRO)\n});\n\n// Create Task Definition\nconst taskDefinition = new ecs.Ec2TaskDefinition(stack, 'TaskDef');\nconst container = taskDefinition.addContainer('web', {\n  image: ecs.ContainerImage.fromRegistry(\"amazon/amazon-ecs-sample\"),\n  memoryLimitMiB: 256,\n});\n\ncontainer.addPortMappings({\n  containerPort: 80,\n  hostPort: 8080,\n  protocol: ecs.Protocol.TCP\n});\n\n// Create Service\nconst service = new ecs.Ec2Service(stack, \"Service\", {\n  cluster,\n  taskDefinition,\n});\n\n// Create ALB\nconst lb = new elbv2.ApplicationLoadBalancer(stack, 'LB', {\n  vpc,\n  internetFacing: true\n});\nconst listener = lb.addListener('PublicListener', { port: 80, open: true });\n\n// Attach ALB to ECS Service\nlistener.addTargets('ECS', {\n  port: 8080,\n  targets: [service.loadBalancerTarget({\n    containerName: 'web',\n    containerPort: 80\n  })],\n  // include health check (default is none)\n  healthCheck: {\n    interval: cdk.Duration.seconds(60),\n    path: \"/health\",\n    timeout: cdk.Duration.seconds(5),\n  }\n});\n\nnew cdk.CfnOutput(stack, 'LoadBalancerDNS', { value: lb.loadBalancerDnsName, });\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyVpcF9F0CA6F\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"Willkommen/MyVpc\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyVpc/Resource\"}}, \"MyVpcPublicSubnet1SubnetF6608456\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"Willkommen/MyVpc/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyVpc/PublicSubnet1/Subnet\"}}, \"MyVpcPublicSubnet1RouteTableC46AB2F4\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"Willkommen/MyVpc/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyVpc/PublicSubnet1/RouteTable\"}}, \"MyVpcPublicSubnet1RouteTableAssociation2ECEE1CB\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPublicSubnet1RouteTableC46AB2F4\"}, \"SubnetId\": {\"Ref\": \"MyVpcPublicSubnet1SubnetF6608456\"}}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyVpc/PublicSubnet1/RouteTableAssociation\"}}, \"MyVpcPublicSubnet1DefaultRoute95FDF9EB\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPublicSubnet1RouteTableC46AB2F4\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"MyVpcIGW5C4A4F63\"}}, \"DependsOn\": [\"MyVpcVPCGW488ACE0D\"], \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyVpc/PublicSubnet1/DefaultRoute\"}}, \"MyVpcPublicSubnet1EIP096967CB\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"Willkommen/MyVpc/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyVpc/PublicSubnet1/EIP\"}}, \"MyVpcPublicSubnet1NATGatewayAD3400C1\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"MyVpcPublicSubnet1SubnetF6608456\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"MyVpcPublicSubnet1EIP096967CB\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"Willkommen/MyVpc/PublicSubnet1\"}]}, \"DependsOn\": [\"MyVpcPublicSubnet1DefaultRoute95FDF9EB\", \"MyVpcPublicSubnet1RouteTableAssociation2ECEE1CB\"], \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyVpc/PublicSubnet1/NATGateway\"}}, \"MyVpcPublicSubnet2Subnet492B6BFB\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"Willkommen/MyVpc/PublicSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyVpc/PublicSubnet2/Subnet\"}}, \"MyVpcPublicSubnet2RouteTable1DF17386\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"Willkommen/MyVpc/PublicSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyVpc/PublicSubnet2/RouteTable\"}}, \"MyVpcPublicSubnet2RouteTableAssociation227DE78D\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPublicSubnet2RouteTable1DF17386\"}, \"SubnetId\": {\"Ref\": \"MyVpcPublicSubnet2Subnet492B6BFB\"}}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyVpc/PublicSubnet2/RouteTableAssociation\"}}, \"MyVpcPublicSubnet2DefaultRoute052936F6\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPublicSubnet2RouteTable1DF17386\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"MyVpcIGW5C4A4F63\"}}, \"DependsOn\": [\"MyVpcVPCGW488ACE0D\"], \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyVpc/PublicSubnet2/DefaultRoute\"}}, \"MyVpcPublicSubnet2EIP8CCBA239\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"Willkommen/MyVpc/PublicSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyVpc/PublicSubnet2/EIP\"}}, \"MyVpcPublicSubnet2NATGateway91BFBEC9\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"MyVpcPublicSubnet2Subnet492B6BFB\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"MyVpcPublicSubnet2EIP8CCBA239\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"Willkommen/MyVpc/PublicSubnet2\"}]}, \"DependsOn\": [\"MyVpcPublicSubnet2DefaultRoute052936F6\", \"MyVpcPublicSubnet2RouteTableAssociation227DE78D\"], \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyVpc/PublicSubnet2/NATGateway\"}}, \"MyVpcPrivateSubnet1Subnet5057CF7E\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"Willkommen/MyVpc/PrivateSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyVpc/PrivateSubnet1/Subnet\"}}, \"MyVpcPrivateSubnet1RouteTable8819E6E2\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"Willkommen/MyVpc/PrivateSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyVpc/PrivateSubnet1/RouteTable\"}}, \"MyVpcPrivateSubnet1RouteTableAssociation56D38C7E\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPrivateSubnet1RouteTable8819E6E2\"}, \"SubnetId\": {\"Ref\": \"MyVpcPrivateSubnet1Subnet5057CF7E\"}}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyVpc/PrivateSubnet1/RouteTableAssociation\"}}, \"MyVpcPrivateSubnet1DefaultRouteA8CDE2FA\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPrivateSubnet1RouteTable8819E6E2\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"MyVpcPublicSubnet1NATGatewayAD3400C1\"}}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyVpc/PrivateSubnet1/DefaultRoute\"}}, \"MyVpcPrivateSubnet2Subnet0040C983\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"Willkommen/MyVpc/PrivateSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyVpc/PrivateSubnet2/Subnet\"}}, \"MyVpcPrivateSubnet2RouteTableCEDCEECE\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"Willkommen/MyVpc/PrivateSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyVpc/PrivateSubnet2/RouteTable\"}}, \"MyVpcPrivateSubnet2RouteTableAssociation86A610DA\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPrivateSubnet2RouteTableCEDCEECE\"}, \"SubnetId\": {\"Ref\": \"MyVpcPrivateSubnet2Subnet0040C983\"}}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyVpc/PrivateSubnet2/RouteTableAssociation\"}}, \"MyVpcPrivateSubnet2DefaultRoute9CE96294\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPrivateSubnet2RouteTableCEDCEECE\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"MyVpcPublicSubnet2NATGateway91BFBEC9\"}}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyVpc/PrivateSubnet2/DefaultRoute\"}}, \"MyVpcIGW5C4A4F63\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"Willkommen/MyVpc\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyVpc/IGW\"}}, \"MyVpcVPCGW488ACE0D\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"InternetGatewayId\": {\"Ref\": \"MyVpcIGW5C4A4F63\"}}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyVpc/VPCGW\"}}, \"Ec2ClusterEE43E89D\": {\"Type\": \"AWS::ECS::Cluster\", \"Metadata\": {\"aws:cdk:path\": \"Willkommen/Ec2Cluster/Resource\"}}, \"Ec2ClusterDefaultAutoScalingGroupInstanceSecurityGroup149B0A9E\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"Willkommen/Ec2Cluster/DefaultAutoScalingGroup/InstanceSecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"Tags\": [{\"Key\": \"Name\", \"Value\": \"Willkommen/Ec2Cluster/DefaultAutoScalingGroup\"}], \"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/Ec2Cluster/DefaultAutoScalingGroup/InstanceSecurityGroup/Resource\"}}, \"Ec2ClusterDefaultAutoScalingGroupInstanceRole73D80898\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"ec2.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"Willkommen/Ec2Cluster/DefaultAutoScalingGroup\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/Ec2Cluster/DefaultAutoScalingGroup/InstanceRole/Resource\"}}, \"Ec2ClusterDefaultAutoScalingGroupInstanceRoleDefaultPolicy6D2DC2FD\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"ecs:DeregisterContainerInstance\", \"ecs:RegisterContainerInstance\", \"ecs:Submit*\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"Ec2ClusterEE43E89D\", \"Arn\"]}}, {\"Action\": [\"ecs:Poll\", \"ecs:StartTelemetrySession\"], \"Condition\": {\"ArnEquals\": {\"ecs:cluster\": {\"Fn::GetAtt\": [\"Ec2ClusterEE43E89D\", \"Arn\"]}}}, \"Effect\": \"Allow\", \"Resource\": \"*\"}, {\"Action\": [\"ecs:DiscoverPollEndpoint\", \"ecr:GetAuthorizationToken\", \"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"Ec2ClusterDefaultAutoScalingGroupInstanceRoleDefaultPolicy6D2DC2FD\", \"Roles\": [{\"Ref\": \"Ec2ClusterDefaultAutoScalingGroupInstanceRole73D80898\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/Ec2Cluster/DefaultAutoScalingGroup/InstanceRole/DefaultPolicy/Resource\"}}, \"Ec2ClusterDefaultAutoScalingGroupInstanceProfileDB232471\": {\"Type\": \"AWS::IAM::InstanceProfile\", \"Properties\": {\"Roles\": [{\"Ref\": \"Ec2ClusterDefaultAutoScalingGroupInstanceRole73D80898\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/Ec2Cluster/DefaultAutoScalingGroup/InstanceProfile\"}}, \"Ec2ClusterDefaultAutoScalingGroupLaunchConfig7B2FED3A\": {\"Type\": \"AWS::AutoScaling::LaunchConfiguration\", \"Properties\": {\"ImageId\": {\"Ref\": \"SsmParameterValueawsserviceecsoptimizedamiamazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter\"}, \"InstanceType\": \"t2.micro\", \"IamInstanceProfile\": {\"Ref\": \"Ec2ClusterDefaultAutoScalingGroupInstanceProfileDB232471\"}, \"SecurityGroups\": [{\"Fn::GetAtt\": [\"Ec2ClusterDefaultAutoScalingGroupInstanceSecurityGroup149B0A9E\", \"GroupId\"]}], \"UserData\": {\"Fn::Base64\": {\"Fn::Join\": [\"\", [\"#!/bin/bash\necho ECS_CLUSTER=\", {\"Ref\": \"Ec2ClusterEE43E89D\"}, \" >> /etc/ecs/ecs.config\nsudo iptables --insert FORWARD 1 --in-interface docker+ --destination 169.254.169.254/32 --jump DROP\nsudo service iptables save\necho ECS_AWSVPC_BLOCK_IMDS=true >> /etc/ecs/ecs.config\"]]}}}, \"DependsOn\": [\"Ec2ClusterDefaultAutoScalingGroupInstanceRoleDefaultPolicy6D2DC2FD\", \"Ec2ClusterDefaultAutoScalingGroupInstanceRole73D80898\"], \"Metadata\": {\"aws:cdk:path\": \"Willkommen/Ec2Cluster/DefaultAutoScalingGroup/LaunchConfig\"}}, \"Ec2ClusterDefaultAutoScalingGroupASGC5A6D4C0\": {\"Type\": \"AWS::AutoScaling::AutoScalingGroup\", \"Properties\": {\"MaxSize\": \"1\", \"MinSize\": \"1\", \"LaunchConfigurationName\": {\"Ref\": \"Ec2ClusterDefaultAutoScalingGroupLaunchConfig7B2FED3A\"}, \"Tags\": [{\"Key\": \"Name\", \"PropagateAtLaunch\": true, \"Value\": \"Willkommen/Ec2Cluster/DefaultAutoScalingGroup\"}], \"VPCZoneIdentifier\": [{\"Ref\": \"MyVpcPrivateSubnet1Subnet5057CF7E\"}, {\"Ref\": \"MyVpcPrivateSubnet2Subnet0040C983\"}]}, \"UpdatePolicy\": {\"AutoScalingReplacingUpdate\": {\"WillReplace\": true}, \"AutoScalingScheduledAction\": {\"IgnoreUnmodifiedGroupSizeProperties\": true}}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/Ec2Cluster/DefaultAutoScalingGroup/ASG\"}}, \"Ec2ClusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRole23116FA3\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}], \"Tags\": [{\"Key\": \"Name\", \"Value\": \"Willkommen/Ec2Cluster/DefaultAutoScalingGroup\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/Ec2Cluster/DefaultAutoScalingGroup/DrainECSHook/Function/ServiceRole/Resource\"}}, \"Ec2ClusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRoleDefaultPolicy638C9E33\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"ec2:DescribeInstances\", \"ec2:DescribeInstanceAttribute\", \"ec2:DescribeInstanceStatus\", \"ec2:DescribeHosts\"], \"Effect\": \"Allow\", \"Resource\": \"*\"}, {\"Action\": \"autoscaling:CompleteLifecycleAction\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":autoscaling:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":autoScalingGroup:*:autoScalingGroupName/\", {\"Ref\": \"Ec2ClusterDefaultAutoScalingGroupASGC5A6D4C0\"}]]}}, {\"Action\": [\"ecs:DescribeContainerInstances\", \"ecs:DescribeTasks\"], \"Condition\": {\"ArnEquals\": {\"ecs:cluster\": {\"Fn::GetAtt\": [\"Ec2ClusterEE43E89D\", \"Arn\"]}}}, \"Effect\": \"Allow\", \"Resource\": \"*\"}, {\"Action\": [\"ecs:ListContainerInstances\", \"ecs:SubmitContainerStateChange\", \"ecs:SubmitTaskStateChange\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"Ec2ClusterEE43E89D\", \"Arn\"]}}, {\"Action\": [\"ecs:UpdateContainerInstancesState\", \"ecs:ListTasks\"], \"Condition\": {\"ArnEquals\": {\"ecs:cluster\": {\"Fn::GetAtt\": [\"Ec2ClusterEE43E89D\", \"Arn\"]}}}, \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"Ec2ClusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRoleDefaultPolicy638C9E33\", \"Roles\": [{\"Ref\": \"Ec2ClusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRole23116FA3\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/Ec2Cluster/DefaultAutoScalingGroup/DrainECSHook/Function/ServiceRole/DefaultPolicy/Resource\"}}, \"Ec2ClusterDefaultAutoScalingGroupDrainECSHookFunctionE0DEFB31\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"import boto3, json, os, time\n\necs = boto3.client('ecs')\nautoscaling = boto3.client('autoscaling')\n\n\ndef lambda_handler(event, context):\n  print(json.dumps(dict(event, ResponseURL='...')))\n  cluster = os.environ['CLUSTER']\n  snsTopicArn = event['Records'][0]['Sns']['TopicArn']\n  lifecycle_event = json.loads(event['Records'][0]['Sns']['Message'])\n  instance_id = lifecycle_event.get('EC2InstanceId')\n  if not instance_id:\n    print('Got event without EC2InstanceId: %s', json.dumps(dict(event, ResponseURL='...')))\n    return\n\n  instance_arn = container_instance_arn(cluster, instance_id)\n  print('Instance %s has container instance ARN %s' % (lifecycle_event['EC2InstanceId'], instance_arn))\n\n  if not instance_arn:\n    return\n\n  task_arns = container_instance_task_arns(cluster, instance_arn)\n\n  if task_arns:\n    print('Instance ARN %s has task ARNs %s' % (instance_arn, ', '.join(task_arns)))\n\n  while has_tasks(cluster, instance_arn, task_arns):\n    time.sleep(10)\n\n  try:\n    print('Terminating instance %s' % instance_id)\n    autoscaling.complete_lifecycle_action(\n        LifecycleActionResult='CONTINUE',\n        **pick(lifecycle_event, 'LifecycleHookName', 'LifecycleActionToken', 'AutoScalingGroupName'))\n  except Exception as e:\n    # Lifecycle action may have already completed.\n    print(str(e))\n\n\ndef container_instance_arn(cluster, instance_id):\n  \\\"\\\"\\\"Turn an instance ID into a container instance ARN.\\\"\\\"\\\"\n  arns = ecs.list_container_instances(cluster=cluster, filter='ec2InstanceId==' + instance_id)['containerInstanceArns']\n  if not arns:\n    return None\n  return arns[0]\n\ndef container_instance_task_arns(cluster, instance_arn):\n  \\\"\\\"\\\"Fetch tasks for a container instance ARN.\\\"\\\"\\\"\n  arns = ecs.list_tasks(cluster=cluster, containerInstance=instance_arn)['taskArns']\n  return arns\n\ndef has_tasks(cluster, instance_arn, task_arns):\n  \\\"\\\"\\\"Return True if the instance is running tasks for the given cluster.\\\"\\\"\\\"\n  instances = ecs.describe_container_instances(cluster=cluster, containerInstances=[instance_arn])['containerInstances']\n  if not instances:\n    return False\n  instance = instances[0]\n\n  if instance['status'] == 'ACTIVE':\n    # Start draining, then try again later\n    set_container_instance_to_draining(cluster, instance_arn)\n    return True\n\n  task_count = None\n\n  if task_arns:\n    # Fetch details for tasks running on the container instance\n    tasks = ecs.describe_tasks(cluster=cluster, tasks=task_arns)['tasks']\n    if tasks:\n      # Consider any non-stopped tasks as running\n      task_count = sum(task['lastStatus'] != 'STOPPED' for task in tasks) + instance['pendingTasksCount']\n\n  if not task_count:\n    # Fallback to instance task counts if detailed task information is unavailable\n    task_count = instance['runningTasksCount'] + instance['pendingTasksCount']\n\n  print('Instance %s has %s tasks' % (instance_arn, task_count))\n\n  return task_count > 0\n\ndef set_container_instance_to_draining(cluster, instance_arn):\n  ecs.update_container_instances_state(\n      cluster=cluster,\n      containerInstances=[instance_arn], status='DRAINING')\n\n\ndef pick(dct, *keys):\n  \\\"\\\"\\\"Pick a subset of a dict.\\\"\\\"\\\"\n  return {k: v for k, v in dct.items() if k in keys}\n\"}, \"Role\": {\"Fn::GetAtt\": [\"Ec2ClusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRole23116FA3\", \"Arn\"]}, \"Environment\": {\"Variables\": {\"CLUSTER\": {\"Ref\": \"Ec2ClusterEE43E89D\"}}}, \"Handler\": \"index.lambda_handler\", \"Runtime\": \"python3.9\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"Willkommen/Ec2Cluster/DefaultAutoScalingGroup\"}], \"Timeout\": 310}, \"DependsOn\": [\"Ec2ClusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRoleDefaultPolicy638C9E33\", \"Ec2ClusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRole23116FA3\"], \"Metadata\": {\"aws:cdk:path\": \"Willkommen/Ec2Cluster/DefaultAutoScalingGroup/DrainECSHook/Function/Resource\"}}, \"Ec2ClusterDefaultAutoScalingGroupDrainECSHookFunctionAllowInvokeWillkommenEc2ClusterDefaultAutoScalingGroupLifecycleHookDrainHookTopic5835279F94354ECC\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"Ec2ClusterDefaultAutoScalingGroupDrainECSHookFunctionE0DEFB31\", \"Arn\"]}, \"Principal\": \"sns.amazonaws.com\", \"SourceArn\": {\"Ref\": \"Ec2ClusterDefaultAutoScalingGroupLifecycleHookDrainHookTopicF7263B30\"}}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/Ec2Cluster/DefaultAutoScalingGroup/DrainECSHook/Function/AllowInvoke:WillkommenEc2ClusterDefaultAutoScalingGroupLifecycleHookDrainHookTopic5835279F\"}}, \"Ec2ClusterDefaultAutoScalingGroupDrainECSHookFunctionTopic4795E0F6\": {\"Type\": \"AWS::SNS::Subscription\", \"Properties\": {\"Protocol\": \"lambda\", \"TopicArn\": {\"Ref\": \"Ec2ClusterDefaultAutoScalingGroupLifecycleHookDrainHookTopicF7263B30\"}, \"Endpoint\": {\"Fn::GetAtt\": [\"Ec2ClusterDefaultAutoScalingGroupDrainECSHookFunctionE0DEFB31\", \"Arn\"]}}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/Ec2Cluster/DefaultAutoScalingGroup/DrainECSHook/Function/Topic/Resource\"}}, \"Ec2ClusterDefaultAutoScalingGroupLifecycleHookDrainHookTopicF7263B30\": {\"Type\": \"AWS::SNS::Topic\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"Willkommen/Ec2Cluster/DefaultAutoScalingGroup\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/Ec2Cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Topic/Resource\"}}, \"Ec2ClusterDefaultAutoScalingGroupLifecycleHookDrainHookRole71045ED7\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"autoscaling.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"Willkommen/Ec2Cluster/DefaultAutoScalingGroup\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/Ec2Cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Role/Resource\"}}, \"Ec2ClusterDefaultAutoScalingGroupLifecycleHookDrainHookRoleDefaultPolicyE499974B\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"sns:Publish\", \"Effect\": \"Allow\", \"Resource\": {\"Ref\": \"Ec2ClusterDefaultAutoScalingGroupLifecycleHookDrainHookTopicF7263B30\"}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"Ec2ClusterDefaultAutoScalingGroupLifecycleHookDrainHookRoleDefaultPolicyE499974B\", \"Roles\": [{\"Ref\": \"Ec2ClusterDefaultAutoScalingGroupLifecycleHookDrainHookRole71045ED7\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/Ec2Cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Role/DefaultPolicy/Resource\"}}, \"Ec2ClusterDefaultAutoScalingGroupLifecycleHookDrainHook5CB1467E\": {\"Type\": \"AWS::AutoScaling::LifecycleHook\", \"Properties\": {\"AutoScalingGroupName\": {\"Ref\": \"Ec2ClusterDefaultAutoScalingGroupASGC5A6D4C0\"}, \"LifecycleTransition\": \"autoscaling:EC2_INSTANCE_TERMINATING\", \"DefaultResult\": \"CONTINUE\", \"HeartbeatTimeout\": 300, \"NotificationTargetARN\": {\"Ref\": \"Ec2ClusterDefaultAutoScalingGroupLifecycleHookDrainHookTopicF7263B30\"}, \"RoleARN\": {\"Fn::GetAtt\": [\"Ec2ClusterDefaultAutoScalingGroupLifecycleHookDrainHookRole71045ED7\", \"Arn\"]}}, \"DependsOn\": [\"Ec2ClusterDefaultAutoScalingGroupLifecycleHookDrainHookRoleDefaultPolicyE499974B\", \"Ec2ClusterDefaultAutoScalingGroupLifecycleHookDrainHookRole71045ED7\"], \"Metadata\": {\"aws:cdk:path\": \"Willkommen/Ec2Cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Resource\"}}, \"MyTaskDefinitionTaskRole93FBB305\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"ecs-tasks.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyTaskDefinition/TaskRole/Resource\"}}, \"MyTaskDefinitionF5B350B4\": {\"Type\": \"AWS::ECS::TaskDefinition\", \"Properties\": {\"ContainerDefinitions\": [{\"Essential\": true, \"Image\": \"amazon/amazon-ecs-sample\", \"LogConfiguration\": {\"LogDriver\": \"awslogs\", \"Options\": {\"awslogs-group\": {\"Ref\": \"MyTaskDefinitionAppContainerLogGroupA24DD1B6\"}, \"awslogs-stream-prefix\": \"myapp\", \"awslogs-region\": {\"Ref\": \"AWS::Region\"}}}, \"Memory\": 512, \"Name\": \"AppContainer\"}], \"ExecutionRoleArn\": {\"Fn::GetAtt\": [\"MyTaskDefinitionExecutionRole3D88C23D\", \"Arn\"]}, \"Family\": \"WillkommenMyTaskDefinition0AD83474\", \"NetworkMode\": \"bridge\", \"RequiresCompatibilities\": [\"EC2\"], \"TaskRoleArn\": {\"Fn::GetAtt\": [\"MyTaskDefinitionTaskRole93FBB305\", \"Arn\"]}}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyTaskDefinition/Resource\"}}, \"MyTaskDefinitionAppContainerLogGroupA24DD1B6\": {\"Type\": \"AWS::Logs::LogGroup\", \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\", \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyTaskDefinition/AppContainer/LogGroup/Resource\"}}, \"MyTaskDefinitionExecutionRole3D88C23D\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"ecs-tasks.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyTaskDefinition/ExecutionRole/Resource\"}}, \"MyTaskDefinitionExecutionRoleDefaultPolicy17975C1F\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"MyTaskDefinitionAppContainerLogGroupA24DD1B6\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyTaskDefinitionExecutionRoleDefaultPolicy17975C1F\", \"Roles\": [{\"Ref\": \"MyTaskDefinitionExecutionRole3D88C23D\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyTaskDefinition/ExecutionRole/DefaultPolicy/Resource\"}}, \"Ec2Service04A33183\": {\"Type\": \"AWS::ECS::Service\", \"Properties\": {\"Cluster\": {\"Ref\": \"Ec2ClusterEE43E89D\"}, \"DeploymentConfiguration\": {\"Alarms\": {\"AlarmNames\": [], \"Enable\": false, \"Rollback\": false}, \"MaximumPercent\": 200, \"MinimumHealthyPercent\": 50}, \"EnableECSManagedTags\": false, \"LaunchType\": \"EC2\", \"SchedulingStrategy\": \"REPLICA\", \"TaskDefinition\": {\"Ref\": \"MyTaskDefinitionF5B350B4\"}}, \"DependsOn\": [\"MyTaskDefinitionTaskRole93FBB305\"], \"Metadata\": {\"aws:cdk:path\": \"Willkommen/Ec2Service/Service\"}}, \"CDKMetadata\": {\"Type\": \"AWS::CDK::Metadata\", \"Properties\": {\"Analytics\": \"v2:deflate64:H4sIAAAAAAAA/2VSTW/CMAz9LbuHbOtlXBFjDAlNVYu4Tm5wwdAmKB8gVPW/z20p7baTn19s5+U5kZy+yZcnuLqJ2p0mBWWySj2ok2Dqu0IVyWp7VmKe6208F3HIClJpyDT6hhtQYoLHDWQFDvzAzZwzisCT0Y/iBixWcRO+wC/B4xVuIrZ0YTgMXmmPlnFf0Cm5ZzPPWg8lai9SVMGSvy2tCedWw5ioBSonq3kRHI9rjnu4UNEG3Okdc9LUC/zLGO2BNNoRx30p2gup7sEdrAUEb5yCgvReVjNO0i55yFpD0OrAE3PaB/uw5F/pmnJUN1XgpzGntnFM1IKglFViOr/bGBveTWvQgFbaedAKY2tyKlhfAWW2A1l9sIr+7jGO0ZbkHGe1cJot4004ZencF/zKN+ZM7edoAU83e25Zm9Fz77iuRYLOBNv5FYOFEu+rGB+wMbvW4Fpos0N5dM+X16mM+JMeHdHEBu2pRJl08Qeh7PlXwAIAAA==\"}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/CDKMetadata/Default\"}, \"Condition\": \"CDKMetadataAvailable\"}}, \"Parameters\": {\"SsmParameterValueawsserviceecsoptimizedamiamazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter\": {\"Type\": \"AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>\", \"Default\": \"/aws/service/ecs/optimized-ami/amazon-linux-2/recommended/image_id\"}, \"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Conditions\": {\"CDKMetadataAvailable\": {\"Fn::Or\": [{\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"af-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ca-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-northwest-1\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-3\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"me-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"sa-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-2\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-2\"]}]}]}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import ec2 = require('aws-cdk-lib/aws-ec2');\nimport ecs = require('aws-cdk-lib/aws-ecs');\nimport cdk = require('aws-cdk-lib');\n\nclass WillkommenECS extends cdk.Stack {\n  constructor(scope: cdk.App, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n\n    const vpc = new ec2.Vpc(this, 'MyVpc', { maxAzs: 2 });\n    \n    const cluster = new ecs.Cluster(this, 'Ec2Cluster', { vpc });\n    cluster.addCapacity('DefaultAutoScalingGroup', {\n      instanceType: ec2.InstanceType.of(ec2.InstanceClass.T2, ec2.InstanceSize.MICRO)\n    });\n\n    // create a task definition with CloudWatch Logs\n    const logging = new ecs.AwsLogDriver({ streamPrefix: \"myapp\" })\n\n    const taskDef = new ecs.Ec2TaskDefinition(this, \"MyTaskDefinition\");\n    taskDef.addContainer(\"AppContainer\", {\n      image: ecs.ContainerImage.fromRegistry(\"amazon/amazon-ecs-sample\"),\n      memoryLimitMiB: 512,\n      logging,\n    })\n\n    // Instantiate ECS Service with just cluster and image\n    new ecs.Ec2Service(this, \"Ec2Service\", {\n      cluster,\n      taskDefinition: taskDef,\n    });\n  }\n}\n\nconst app = new cdk.App();\n\nnew WillkommenECS(app, 'Willkommen');\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"Vpc8378EB38\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"ec2-service-with-task-networking/Vpc\"}]}, \"Metadata\": {\"aws:cdk:path\": \"ec2-service-with-task-networking/Vpc/Resource\"}}, \"VpcPublicSubnet1Subnet5C2D37C4\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"ec2-service-with-task-networking/Vpc/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"ec2-service-with-task-networking/Vpc/PublicSubnet1/Subnet\"}}, \"VpcPublicSubnet1RouteTable6C95E38E\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"ec2-service-with-task-networking/Vpc/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"ec2-service-with-task-networking/Vpc/PublicSubnet1/RouteTable\"}}, \"VpcPublicSubnet1RouteTableAssociation97140677\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet1RouteTable6C95E38E\"}, \"SubnetId\": {\"Ref\": \"VpcPublicSubnet1Subnet5C2D37C4\"}}, \"Metadata\": {\"aws:cdk:path\": \"ec2-service-with-task-networking/Vpc/PublicSubnet1/RouteTableAssociation\"}}, \"VpcPublicSubnet1DefaultRoute3DA9E72A\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet1RouteTable6C95E38E\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VpcIGWD7BA715C\"}}, \"DependsOn\": [\"VpcVPCGWBF912B6E\"], \"Metadata\": {\"aws:cdk:path\": \"ec2-service-with-task-networking/Vpc/PublicSubnet1/DefaultRoute\"}}, \"VpcPublicSubnet1EIPD7E02669\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"ec2-service-with-task-networking/Vpc/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"ec2-service-with-task-networking/Vpc/PublicSubnet1/EIP\"}}, \"VpcPublicSubnet1NATGateway4D7517AA\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VpcPublicSubnet1Subnet5C2D37C4\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VpcPublicSubnet1EIPD7E02669\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"ec2-service-with-task-networking/Vpc/PublicSubnet1\"}]}, \"DependsOn\": [\"VpcPublicSubnet1DefaultRoute3DA9E72A\", \"VpcPublicSubnet1RouteTableAssociation97140677\"], \"Metadata\": {\"aws:cdk:path\": \"ec2-service-with-task-networking/Vpc/PublicSubnet1/NATGateway\"}}, \"VpcPublicSubnet2Subnet691E08A3\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"ec2-service-with-task-networking/Vpc/PublicSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"ec2-service-with-task-networking/Vpc/PublicSubnet2/Subnet\"}}, \"VpcPublicSubnet2RouteTable94F7E489\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"ec2-service-with-task-networking/Vpc/PublicSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"ec2-service-with-task-networking/Vpc/PublicSubnet2/RouteTable\"}}, \"VpcPublicSubnet2RouteTableAssociationDD5762D8\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet2RouteTable94F7E489\"}, \"SubnetId\": {\"Ref\": \"VpcPublicSubnet2Subnet691E08A3\"}}, \"Metadata\": {\"aws:cdk:path\": \"ec2-service-with-task-networking/Vpc/PublicSubnet2/RouteTableAssociation\"}}, \"VpcPublicSubnet2DefaultRoute97F91067\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet2RouteTable94F7E489\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VpcIGWD7BA715C\"}}, \"DependsOn\": [\"VpcVPCGWBF912B6E\"], \"Metadata\": {\"aws:cdk:path\": \"ec2-service-with-task-networking/Vpc/PublicSubnet2/DefaultRoute\"}}, \"VpcPublicSubnet2EIP3C605A87\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"ec2-service-with-task-networking/Vpc/PublicSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"ec2-service-with-task-networking/Vpc/PublicSubnet2/EIP\"}}, \"VpcPublicSubnet2NATGateway9182C01D\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VpcPublicSubnet2Subnet691E08A3\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VpcPublicSubnet2EIP3C605A87\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"ec2-service-with-task-networking/Vpc/PublicSubnet2\"}]}, \"DependsOn\": [\"VpcPublicSubnet2DefaultRoute97F91067\", \"VpcPublicSubnet2RouteTableAssociationDD5762D8\"], \"Metadata\": {\"aws:cdk:path\": \"ec2-service-with-task-networking/Vpc/PublicSubnet2/NATGateway\"}}, \"VpcPrivateSubnet1Subnet536B997A\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"ec2-service-with-task-networking/Vpc/PrivateSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"ec2-service-with-task-networking/Vpc/PrivateSubnet1/Subnet\"}}, \"VpcPrivateSubnet1RouteTableB2C5B500\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"ec2-service-with-task-networking/Vpc/PrivateSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"ec2-service-with-task-networking/Vpc/PrivateSubnet1/RouteTable\"}}, \"VpcPrivateSubnet1RouteTableAssociation70C59FA6\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet1RouteTableB2C5B500\"}, \"SubnetId\": {\"Ref\": \"VpcPrivateSubnet1Subnet536B997A\"}}, \"Metadata\": {\"aws:cdk:path\": \"ec2-service-with-task-networking/Vpc/PrivateSubnet1/RouteTableAssociation\"}}, \"VpcPrivateSubnet1DefaultRouteBE02A9ED\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet1RouteTableB2C5B500\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VpcPublicSubnet1NATGateway4D7517AA\"}}, \"Metadata\": {\"aws:cdk:path\": \"ec2-service-with-task-networking/Vpc/PrivateSubnet1/DefaultRoute\"}}, \"VpcPrivateSubnet2Subnet3788AAA1\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"ec2-service-with-task-networking/Vpc/PrivateSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"ec2-service-with-task-networking/Vpc/PrivateSubnet2/Subnet\"}}, \"VpcPrivateSubnet2RouteTableA678073B\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"ec2-service-with-task-networking/Vpc/PrivateSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"ec2-service-with-task-networking/Vpc/PrivateSubnet2/RouteTable\"}}, \"VpcPrivateSubnet2RouteTableAssociationA89CAD56\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet2RouteTableA678073B\"}, \"SubnetId\": {\"Ref\": \"VpcPrivateSubnet2Subnet3788AAA1\"}}, \"Metadata\": {\"aws:cdk:path\": \"ec2-service-with-task-networking/Vpc/PrivateSubnet2/RouteTableAssociation\"}}, \"VpcPrivateSubnet2DefaultRoute060D2087\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet2RouteTableA678073B\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VpcPublicSubnet2NATGateway9182C01D\"}}, \"Metadata\": {\"aws:cdk:path\": \"ec2-service-with-task-networking/Vpc/PrivateSubnet2/DefaultRoute\"}}, \"VpcIGWD7BA715C\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"ec2-service-with-task-networking/Vpc\"}]}, \"Metadata\": {\"aws:cdk:path\": \"ec2-service-with-task-networking/Vpc/IGW\"}}, \"VpcVPCGWBF912B6E\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"InternetGatewayId\": {\"Ref\": \"VpcIGWD7BA715C\"}}, \"Metadata\": {\"aws:cdk:path\": \"ec2-service-with-task-networking/Vpc/VPCGW\"}}, \"awsvpcecsdemoclusterA7FD8C86\": {\"Type\": \"AWS::ECS::Cluster\", \"Metadata\": {\"aws:cdk:path\": \"ec2-service-with-task-networking/awsvpc-ecs-demo-cluster/Resource\"}}, \"awsvpcecsdemoclusterDefaultAutoScalingGroupInstanceSecurityGroupFF91CD80\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"ec2-service-with-task-networking/awsvpc-ecs-demo-cluster/DefaultAutoScalingGroup/InstanceSecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"Tags\": [{\"Key\": \"Name\", \"Value\": \"ec2-service-with-task-networking/awsvpc-ecs-demo-cluster/DefaultAutoScalingGroup\"}], \"VpcId\": {\"Ref\": \"Vpc8378EB38\"}}, \"Metadata\": {\"aws:cdk:path\": \"ec2-service-with-task-networking/awsvpc-ecs-demo-cluster/DefaultAutoScalingGroup/InstanceSecurityGroup/Resource\"}}, \"awsvpcecsdemoclusterDefaultAutoScalingGroupInstanceRoleB36FE662\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"ec2.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"ec2-service-with-task-networking/awsvpc-ecs-demo-cluster/DefaultAutoScalingGroup\"}]}, \"Metadata\": {\"aws:cdk:path\": \"ec2-service-with-task-networking/awsvpc-ecs-demo-cluster/DefaultAutoScalingGroup/InstanceRole/Resource\"}}, \"awsvpcecsdemoclusterDefaultAutoScalingGroupInstanceRoleDefaultPolicy63242A56\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"ecs:DeregisterContainerInstance\", \"ecs:RegisterContainerInstance\", \"ecs:Submit*\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"awsvpcecsdemoclusterA7FD8C86\", \"Arn\"]}}, {\"Action\": [\"ecs:Poll\", \"ecs:StartTelemetrySession\"], \"Condition\": {\"ArnEquals\": {\"ecs:cluster\": {\"Fn::GetAtt\": [\"awsvpcecsdemoclusterA7FD8C86\", \"Arn\"]}}}, \"Effect\": \"Allow\", \"Resource\": \"*\"}, {\"Action\": [\"ecs:DiscoverPollEndpoint\", \"ecr:GetAuthorizationToken\", \"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"awsvpcecsdemoclusterDefaultAutoScalingGroupInstanceRoleDefaultPolicy63242A56\", \"Roles\": [{\"Ref\": \"awsvpcecsdemoclusterDefaultAutoScalingGroupInstanceRoleB36FE662\"}]}, \"Metadata\": {\"aws:cdk:path\": \"ec2-service-with-task-networking/awsvpc-ecs-demo-cluster/DefaultAutoScalingGroup/InstanceRole/DefaultPolicy/Resource\"}}, \"awsvpcecsdemoclusterDefaultAutoScalingGroupInstanceProfileF3361609\": {\"Type\": \"AWS::IAM::InstanceProfile\", \"Properties\": {\"Roles\": [{\"Ref\": \"awsvpcecsdemoclusterDefaultAutoScalingGroupInstanceRoleB36FE662\"}]}, \"Metadata\": {\"aws:cdk:path\": \"ec2-service-with-task-networking/awsvpc-ecs-demo-cluster/DefaultAutoScalingGroup/InstanceProfile\"}}, \"awsvpcecsdemoclusterDefaultAutoScalingGroupLaunchConfig067B11BF\": {\"Type\": \"AWS::AutoScaling::LaunchConfiguration\", \"Properties\": {\"ImageId\": {\"Ref\": \"SsmParameterValueawsserviceecsoptimizedamiamazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter\"}, \"InstanceType\": \"t2.micro\", \"IamInstanceProfile\": {\"Ref\": \"awsvpcecsdemoclusterDefaultAutoScalingGroupInstanceProfileF3361609\"}, \"SecurityGroups\": [{\"Fn::GetAtt\": [\"awsvpcecsdemoclusterDefaultAutoScalingGroupInstanceSecurityGroupFF91CD80\", \"GroupId\"]}], \"UserData\": {\"Fn::Base64\": {\"Fn::Join\": [\"\", [\"#!/bin/bash\necho ECS_CLUSTER=\", {\"Ref\": \"awsvpcecsdemoclusterA7FD8C86\"}, \" >> /etc/ecs/ecs.config\nsudo iptables --insert FORWARD 1 --in-interface docker+ --destination 169.254.169.254/32 --jump DROP\nsudo service iptables save\necho ECS_AWSVPC_BLOCK_IMDS=true >> /etc/ecs/ecs.config\"]]}}}, \"DependsOn\": [\"awsvpcecsdemoclusterDefaultAutoScalingGroupInstanceRoleDefaultPolicy63242A56\", \"awsvpcecsdemoclusterDefaultAutoScalingGroupInstanceRoleB36FE662\"], \"Metadata\": {\"aws:cdk:path\": \"ec2-service-with-task-networking/awsvpc-ecs-demo-cluster/DefaultAutoScalingGroup/LaunchConfig\"}}, \"awsvpcecsdemoclusterDefaultAutoScalingGroupASG7F29632B\": {\"Type\": \"AWS::AutoScaling::AutoScalingGroup\", \"Properties\": {\"MaxSize\": \"1\", \"MinSize\": \"1\", \"LaunchConfigurationName\": {\"Ref\": \"awsvpcecsdemoclusterDefaultAutoScalingGroupLaunchConfig067B11BF\"}, \"Tags\": [{\"Key\": \"Name\", \"PropagateAtLaunch\": true, \"Value\": \"ec2-service-with-task-networking/awsvpc-ecs-demo-cluster/DefaultAutoScalingGroup\"}], \"VPCZoneIdentifier\": [{\"Ref\": \"VpcPrivateSubnet1Subnet536B997A\"}, {\"Ref\": \"VpcPrivateSubnet2Subnet3788AAA1\"}]}, \"UpdatePolicy\": {\"AutoScalingReplacingUpdate\": {\"WillReplace\": true}, \"AutoScalingScheduledAction\": {\"IgnoreUnmodifiedGroupSizeProperties\": true}}, \"Metadata\": {\"aws:cdk:path\": \"ec2-service-with-task-networking/awsvpc-ecs-demo-cluster/DefaultAutoScalingGroup/ASG\"}}, \"awsvpcecsdemoclusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRoleBC3C9F69\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}], \"Tags\": [{\"Key\": \"Name\", \"Value\": \"ec2-service-with-task-networking/awsvpc-ecs-demo-cluster/DefaultAutoScalingGroup\"}]}, \"Metadata\": {\"aws:cdk:path\": \"ec2-service-with-task-networking/awsvpc-ecs-demo-cluster/DefaultAutoScalingGroup/DrainECSHook/Function/ServiceRole/Resource\"}}, \"awsvpcecsdemoclusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRoleDefaultPolicy44190D0C\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"ec2:DescribeInstances\", \"ec2:DescribeInstanceAttribute\", \"ec2:DescribeInstanceStatus\", \"ec2:DescribeHosts\"], \"Effect\": \"Allow\", \"Resource\": \"*\"}, {\"Action\": \"autoscaling:CompleteLifecycleAction\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":autoscaling:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":autoScalingGroup:*:autoScalingGroupName/\", {\"Ref\": \"awsvpcecsdemoclusterDefaultAutoScalingGroupASG7F29632B\"}]]}}, {\"Action\": [\"ecs:DescribeContainerInstances\", \"ecs:DescribeTasks\"], \"Condition\": {\"ArnEquals\": {\"ecs:cluster\": {\"Fn::GetAtt\": [\"awsvpcecsdemoclusterA7FD8C86\", \"Arn\"]}}}, \"Effect\": \"Allow\", \"Resource\": \"*\"}, {\"Action\": [\"ecs:ListContainerInstances\", \"ecs:SubmitContainerStateChange\", \"ecs:SubmitTaskStateChange\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"awsvpcecsdemoclusterA7FD8C86\", \"Arn\"]}}, {\"Action\": [\"ecs:UpdateContainerInstancesState\", \"ecs:ListTasks\"], \"Condition\": {\"ArnEquals\": {\"ecs:cluster\": {\"Fn::GetAtt\": [\"awsvpcecsdemoclusterA7FD8C86\", \"Arn\"]}}}, \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"awsvpcecsdemoclusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRoleDefaultPolicy44190D0C\", \"Roles\": [{\"Ref\": \"awsvpcecsdemoclusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRoleBC3C9F69\"}]}, \"Metadata\": {\"aws:cdk:path\": \"ec2-service-with-task-networking/awsvpc-ecs-demo-cluster/DefaultAutoScalingGroup/DrainECSHook/Function/ServiceRole/DefaultPolicy/Resource\"}}, \"awsvpcecsdemoclusterDefaultAutoScalingGroupDrainECSHookFunctionC919C385\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"import boto3, json, os, time\n\necs = boto3.client('ecs')\nautoscaling = boto3.client('autoscaling')\n\n\ndef lambda_handler(event, context):\n  print(json.dumps(dict(event, ResponseURL='...')))\n  cluster = os.environ['CLUSTER']\n  snsTopicArn = event['Records'][0]['Sns']['TopicArn']\n  lifecycle_event = json.loads(event['Records'][0]['Sns']['Message'])\n  instance_id = lifecycle_event.get('EC2InstanceId')\n  if not instance_id:\n    print('Got event without EC2InstanceId: %s', json.dumps(dict(event, ResponseURL='...')))\n    return\n\n  instance_arn = container_instance_arn(cluster, instance_id)\n  print('Instance %s has container instance ARN %s' % (lifecycle_event['EC2InstanceId'], instance_arn))\n\n  if not instance_arn:\n    return\n\n  task_arns = container_instance_task_arns(cluster, instance_arn)\n\n  if task_arns:\n    print('Instance ARN %s has task ARNs %s' % (instance_arn, ', '.join(task_arns)))\n\n  while has_tasks(cluster, instance_arn, task_arns):\n    time.sleep(10)\n\n  try:\n    print('Terminating instance %s' % instance_id)\n    autoscaling.complete_lifecycle_action(\n        LifecycleActionResult='CONTINUE',\n        **pick(lifecycle_event, 'LifecycleHookName', 'LifecycleActionToken', 'AutoScalingGroupName'))\n  except Exception as e:\n    # Lifecycle action may have already completed.\n    print(str(e))\n\n\ndef container_instance_arn(cluster, instance_id):\n  \\\"\\\"\\\"Turn an instance ID into a container instance ARN.\\\"\\\"\\\"\n  arns = ecs.list_container_instances(cluster=cluster, filter='ec2InstanceId==' + instance_id)['containerInstanceArns']\n  if not arns:\n    return None\n  return arns[0]\n\ndef container_instance_task_arns(cluster, instance_arn):\n  \\\"\\\"\\\"Fetch tasks for a container instance ARN.\\\"\\\"\\\"\n  arns = ecs.list_tasks(cluster=cluster, containerInstance=instance_arn)['taskArns']\n  return arns\n\ndef has_tasks(cluster, instance_arn, task_arns):\n  \\\"\\\"\\\"Return True if the instance is running tasks for the given cluster.\\\"\\\"\\\"\n  instances = ecs.describe_container_instances(cluster=cluster, containerInstances=[instance_arn])['containerInstances']\n  if not instances:\n    return False\n  instance = instances[0]\n\n  if instance['status'] == 'ACTIVE':\n    # Start draining, then try again later\n    set_container_instance_to_draining(cluster, instance_arn)\n    return True\n\n  task_count = None\n\n  if task_arns:\n    # Fetch details for tasks running on the container instance\n    tasks = ecs.describe_tasks(cluster=cluster, tasks=task_arns)['tasks']\n    if tasks:\n      # Consider any non-stopped tasks as running\n      task_count = sum(task['lastStatus'] != 'STOPPED' for task in tasks) + instance['pendingTasksCount']\n\n  if not task_count:\n    # Fallback to instance task counts if detailed task information is unavailable\n    task_count = instance['runningTasksCount'] + instance['pendingTasksCount']\n\n  print('Instance %s has %s tasks' % (instance_arn, task_count))\n\n  return task_count > 0\n\ndef set_container_instance_to_draining(cluster, instance_arn):\n  ecs.update_container_instances_state(\n      cluster=cluster,\n      containerInstances=[instance_arn], status='DRAINING')\n\n\ndef pick(dct, *keys):\n  \\\"\\\"\\\"Pick a subset of a dict.\\\"\\\"\\\"\n  return {k: v for k, v in dct.items() if k in keys}\n\"}, \"Role\": {\"Fn::GetAtt\": [\"awsvpcecsdemoclusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRoleBC3C9F69\", \"Arn\"]}, \"Environment\": {\"Variables\": {\"CLUSTER\": {\"Ref\": \"awsvpcecsdemoclusterA7FD8C86\"}}}, \"Handler\": \"index.lambda_handler\", \"Runtime\": \"python3.9\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"ec2-service-with-task-networking/awsvpc-ecs-demo-cluster/DefaultAutoScalingGroup\"}], \"Timeout\": 310}, \"DependsOn\": [\"awsvpcecsdemoclusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRoleDefaultPolicy44190D0C\", \"awsvpcecsdemoclusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRoleBC3C9F69\"], \"Metadata\": {\"aws:cdk:path\": \"ec2-service-with-task-networking/awsvpc-ecs-demo-cluster/DefaultAutoScalingGroup/DrainECSHook/Function/Resource\"}}, \"awsvpcecsdemoclusterDefaultAutoScalingGroupDrainECSHookFunctionAllowInvokeec2servicewithtasknetworkingawsvpcecsdemoclusterDefaultAutoScalingGroupLifecycleHookDrainHookTopic582DD4BEABB08B98\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"awsvpcecsdemoclusterDefaultAutoScalingGroupDrainECSHookFunctionC919C385\", \"Arn\"]}, \"Principal\": \"sns.amazonaws.com\", \"SourceArn\": {\"Ref\": \"awsvpcecsdemoclusterDefaultAutoScalingGroupLifecycleHookDrainHookTopic42EE7A5C\"}}, \"Metadata\": {\"aws:cdk:path\": \"ec2-service-with-task-networking/awsvpc-ecs-demo-cluster/DefaultAutoScalingGroup/DrainECSHook/Function/AllowInvoke:ec2servicewithtasknetworkingawsvpcecsdemoclusterDefaultAutoScalingGroupLifecycleHookDrainHookTopic582DD4BE\"}}, \"awsvpcecsdemoclusterDefaultAutoScalingGroupDrainECSHookFunctionTopicF27EF507\": {\"Type\": \"AWS::SNS::Subscription\", \"Properties\": {\"Protocol\": \"lambda\", \"TopicArn\": {\"Ref\": \"awsvpcecsdemoclusterDefaultAutoScalingGroupLifecycleHookDrainHookTopic42EE7A5C\"}, \"Endpoint\": {\"Fn::GetAtt\": [\"awsvpcecsdemoclusterDefaultAutoScalingGroupDrainECSHookFunctionC919C385\", \"Arn\"]}}, \"Metadata\": {\"aws:cdk:path\": \"ec2-service-with-task-networking/awsvpc-ecs-demo-cluster/DefaultAutoScalingGroup/DrainECSHook/Function/Topic/Resource\"}}, \"awsvpcecsdemoclusterDefaultAutoScalingGroupLifecycleHookDrainHookTopic42EE7A5C\": {\"Type\": \"AWS::SNS::Topic\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"ec2-service-with-task-networking/awsvpc-ecs-demo-cluster/DefaultAutoScalingGroup\"}]}, \"Metadata\": {\"aws:cdk:path\": \"ec2-service-with-task-networking/awsvpc-ecs-demo-cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Topic/Resource\"}}, \"awsvpcecsdemoclusterDefaultAutoScalingGroupLifecycleHookDrainHookRoleD0498D9C\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"autoscaling.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"ec2-service-with-task-networking/awsvpc-ecs-demo-cluster/DefaultAutoScalingGroup\"}]}, \"Metadata\": {\"aws:cdk:path\": \"ec2-service-with-task-networking/awsvpc-ecs-demo-cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Role/Resource\"}}, \"awsvpcecsdemoclusterDefaultAutoScalingGroupLifecycleHookDrainHookRoleDefaultPolicy8468BE7A\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"sns:Publish\", \"Effect\": \"Allow\", \"Resource\": {\"Ref\": \"awsvpcecsdemoclusterDefaultAutoScalingGroupLifecycleHookDrainHookTopic42EE7A5C\"}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"awsvpcecsdemoclusterDefaultAutoScalingGroupLifecycleHookDrainHookRoleDefaultPolicy8468BE7A\", \"Roles\": [{\"Ref\": \"awsvpcecsdemoclusterDefaultAutoScalingGroupLifecycleHookDrainHookRoleD0498D9C\"}]}, \"Metadata\": {\"aws:cdk:path\": \"ec2-service-with-task-networking/awsvpc-ecs-demo-cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Role/DefaultPolicy/Resource\"}}, \"awsvpcecsdemoclusterDefaultAutoScalingGroupLifecycleHookDrainHook4D2DB763\": {\"Type\": \"AWS::AutoScaling::LifecycleHook\", \"Properties\": {\"AutoScalingGroupName\": {\"Ref\": \"awsvpcecsdemoclusterDefaultAutoScalingGroupASG7F29632B\"}, \"LifecycleTransition\": \"autoscaling:EC2_INSTANCE_TERMINATING\", \"DefaultResult\": \"CONTINUE\", \"HeartbeatTimeout\": 300, \"NotificationTargetARN\": {\"Ref\": \"awsvpcecsdemoclusterDefaultAutoScalingGroupLifecycleHookDrainHookTopic42EE7A5C\"}, \"RoleARN\": {\"Fn::GetAtt\": [\"awsvpcecsdemoclusterDefaultAutoScalingGroupLifecycleHookDrainHookRoleD0498D9C\", \"Arn\"]}}, \"DependsOn\": [\"awsvpcecsdemoclusterDefaultAutoScalingGroupLifecycleHookDrainHookRoleDefaultPolicy8468BE7A\", \"awsvpcecsdemoclusterDefaultAutoScalingGroupLifecycleHookDrainHookRoleD0498D9C\"], \"Metadata\": {\"aws:cdk:path\": \"ec2-service-with-task-networking/awsvpc-ecs-demo-cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Resource\"}}, \"nginxawspvcTaskRole3F43A26E\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"ecs-tasks.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}, \"Metadata\": {\"aws:cdk:path\": \"ec2-service-with-task-networking/nginx-awspvc/TaskRole/Resource\"}}, \"nginxawspvcB396AC00\": {\"Type\": \"AWS::ECS::TaskDefinition\", \"Properties\": {\"ContainerDefinitions\": [{\"Cpu\": 100, \"Essential\": true, \"Image\": \"nginx:latest\", \"Memory\": 256, \"Name\": \"nginx\", \"PortMappings\": [{\"ContainerPort\": 80, \"Protocol\": \"tcp\"}]}], \"Family\": \"ec2servicewithtasknetworkingnginxawspvc7640E02A\", \"NetworkMode\": \"awsvpc\", \"RequiresCompatibilities\": [\"EC2\"], \"TaskRoleArn\": {\"Fn::GetAtt\": [\"nginxawspvcTaskRole3F43A26E\", \"Arn\"]}}, \"Metadata\": {\"aws:cdk:path\": \"ec2-service-with-task-networking/nginx-awspvc/Resource\"}}, \"nginx76230F353007\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"ec2-service-with-task-networking/nginx--7623\", \"SecurityGroupEgress\": [{\"CidrIp\": \"255.255.255.255/32\", \"Description\": \"Disallow all traffic\", \"FromPort\": 252, \"IpProtocol\": \"icmp\", \"ToPort\": 86}], \"SecurityGroupIngress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"from 0.0.0.0/0:80\", \"FromPort\": 80, \"IpProtocol\": \"tcp\", \"ToPort\": 80}], \"VpcId\": {\"Ref\": \"Vpc8378EB38\"}}, \"Metadata\": {\"aws:cdk:path\": \"ec2-service-with-task-networking/nginx--7623/Resource\"}}, \"awsvpcecsdemoserviceServiceFC4BE5C7\": {\"Type\": \"AWS::ECS::Service\", \"Properties\": {\"Cluster\": {\"Ref\": \"awsvpcecsdemoclusterA7FD8C86\"}, \"DeploymentConfiguration\": {\"Alarms\": {\"AlarmNames\": [], \"Enable\": false, \"Rollback\": false}, \"MaximumPercent\": 200, \"MinimumHealthyPercent\": 50}, \"EnableECSManagedTags\": false, \"LaunchType\": \"EC2\", \"NetworkConfiguration\": {\"AwsvpcConfiguration\": {\"AssignPublicIp\": \"DISABLED\", \"SecurityGroups\": [{\"Fn::GetAtt\": [\"nginx76230F353007\", \"GroupId\"]}], \"Subnets\": [{\"Ref\": \"VpcPrivateSubnet1Subnet536B997A\"}, {\"Ref\": \"VpcPrivateSubnet2Subnet3788AAA1\"}]}}, \"SchedulingStrategy\": \"REPLICA\", \"TaskDefinition\": {\"Ref\": \"nginxawspvcB396AC00\"}}, \"DependsOn\": [\"nginxawspvcTaskRole3F43A26E\"], \"Metadata\": {\"aws:cdk:path\": \"ec2-service-with-task-networking/awsvpc-ecs-demo-service/Service\"}}, \"CDKMetadata\": {\"Type\": \"AWS::CDK::Metadata\", \"Properties\": {\"Analytics\": \"v2:deflate64:H4sIAAAAAAAA/2VSy27CMBD8lt6N2+ZSrohSioSqKEFcq43ZwBLHjvwAoSj/XichJG1POzNer8djR3z+xl+e4Gpn4lDMJGW8Th2IggXpu0YR8XpfCbbM1T5esthnkkTqM4Wu1UaUaO9wB5nEUR+1hbVaEDjS6tHcgtUmbssXuDU4vMKNxYYuAY6DN8qhCXho6J3c2cIFr6cSlWMpCm/I3dZG+6rzMBUahsLyeim9DePa5QGuRLQDW7xjTooGg38VrRyQQjPRwr4UzYVEf+EeNgy801aAJHXk9SKQtCcPW1vwSpzCxJyO3jwi+de6pRzFTUj81LroNk6FhhGUvE50n3dXYx3epgtoRBtlHSiBsdE5yeBPQpkdgNcfwcVw9hTHaEqyNrCGWRUiCy9hhaFqaPjFd7qi7nN0oGlYglZ702cSg4ES73FPF8LlD12IDVP6gPxsny+vcx6Fj3i2RDPjlaMSedLXH6wa0V6kAgAA\"}, \"Metadata\": {\"aws:cdk:path\": \"ec2-service-with-task-networking/CDKMetadata/Default\"}, \"Condition\": \"CDKMetadataAvailable\"}}, \"Parameters\": {\"SsmParameterValueawsserviceecsoptimizedamiamazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter\": {\"Type\": \"AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>\", \"Default\": \"/aws/service/ecs/optimized-ami/amazon-linux-2/recommended/image_id\"}, \"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Conditions\": {\"CDKMetadataAvailable\": {\"Fn::Or\": [{\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"af-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ca-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-northwest-1\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-3\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"me-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"sa-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-2\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-2\"]}]}]}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import cdk = require('aws-cdk-lib');\nimport ec2 = require('aws-cdk-lib/aws-ec2');\nimport ecs = require('aws-cdk-lib/aws-ecs');\n\n// Based on https://aws.amazon.com/blogs/compute/introducing-cloud-native-networking-for-ecs-containers/\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'ec2-service-with-task-networking');\n\n// Create the cluster\nconst vpc = new ec2.Vpc(stack, 'Vpc', { maxAzs: 2 });\n\nconst cluster = new ecs.Cluster(stack, 'awsvpc-ecs-demo-cluster', { vpc });\ncluster.addCapacity('DefaultAutoScalingGroup', {\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.T2, ec2.InstanceSize.MICRO)\n});\n\n// Create a task definition with its own elastic network interface\nconst taskDefinition = new ecs.Ec2TaskDefinition(stack, 'nginx-awspvc', {\n  networkMode: ecs.NetworkMode.AWS_VPC,\n});\n\nconst webContainer = taskDefinition.addContainer('nginx', {\n  image: ecs.ContainerImage.fromRegistry('nginx:latest'),\n  cpu: 100,\n  memoryLimitMiB: 256,\n  essential: true,\n});\n\nwebContainer.addPortMappings({\n  containerPort: 80,\n  protocol: ecs.Protocol.TCP,\n});\n\n// Create a security group that allows HTTP traffic on port 80 for our containers without modifying the security group on the instance\nconst securityGroup = new ec2.SecurityGroup(stack, 'nginx--7623', {\n  vpc,\n  allowAllOutbound: false,\n});\n\nsecurityGroup.addIngressRule(ec2.Peer.anyIpv4(), ec2.Port.tcp(80));\n\n// Create the service\nnew ecs.Ec2Service(stack, 'awsvpc-ecs-demo-service', {\n  cluster,\n  taskDefinition,\n  securityGroups: [securityGroup],\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"Vpc8378EB38\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"sample-aws-ecs-integ-ecs/Vpc\"}]}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/Vpc/Resource\"}}, \"VpcPublicSubnet1Subnet5C2D37C4\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"sample-aws-ecs-integ-ecs/Vpc/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/Vpc/PublicSubnet1/Subnet\"}}, \"VpcPublicSubnet1RouteTable6C95E38E\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"sample-aws-ecs-integ-ecs/Vpc/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/Vpc/PublicSubnet1/RouteTable\"}}, \"VpcPublicSubnet1RouteTableAssociation97140677\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet1RouteTable6C95E38E\"}, \"SubnetId\": {\"Ref\": \"VpcPublicSubnet1Subnet5C2D37C4\"}}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/Vpc/PublicSubnet1/RouteTableAssociation\"}}, \"VpcPublicSubnet1DefaultRoute3DA9E72A\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet1RouteTable6C95E38E\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VpcIGWD7BA715C\"}}, \"DependsOn\": [\"VpcVPCGWBF912B6E\"], \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/Vpc/PublicSubnet1/DefaultRoute\"}}, \"VpcPublicSubnet1EIPD7E02669\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"sample-aws-ecs-integ-ecs/Vpc/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/Vpc/PublicSubnet1/EIP\"}}, \"VpcPublicSubnet1NATGateway4D7517AA\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VpcPublicSubnet1Subnet5C2D37C4\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VpcPublicSubnet1EIPD7E02669\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"sample-aws-ecs-integ-ecs/Vpc/PublicSubnet1\"}]}, \"DependsOn\": [\"VpcPublicSubnet1DefaultRoute3DA9E72A\", \"VpcPublicSubnet1RouteTableAssociation97140677\"], \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/Vpc/PublicSubnet1/NATGateway\"}}, \"VpcPublicSubnet2Subnet691E08A3\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"sample-aws-ecs-integ-ecs/Vpc/PublicSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/Vpc/PublicSubnet2/Subnet\"}}, \"VpcPublicSubnet2RouteTable94F7E489\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"sample-aws-ecs-integ-ecs/Vpc/PublicSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/Vpc/PublicSubnet2/RouteTable\"}}, \"VpcPublicSubnet2RouteTableAssociationDD5762D8\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet2RouteTable94F7E489\"}, \"SubnetId\": {\"Ref\": \"VpcPublicSubnet2Subnet691E08A3\"}}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/Vpc/PublicSubnet2/RouteTableAssociation\"}}, \"VpcPublicSubnet2DefaultRoute97F91067\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet2RouteTable94F7E489\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VpcIGWD7BA715C\"}}, \"DependsOn\": [\"VpcVPCGWBF912B6E\"], \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/Vpc/PublicSubnet2/DefaultRoute\"}}, \"VpcPublicSubnet2EIP3C605A87\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"sample-aws-ecs-integ-ecs/Vpc/PublicSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/Vpc/PublicSubnet2/EIP\"}}, \"VpcPublicSubnet2NATGateway9182C01D\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VpcPublicSubnet2Subnet691E08A3\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VpcPublicSubnet2EIP3C605A87\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"sample-aws-ecs-integ-ecs/Vpc/PublicSubnet2\"}]}, \"DependsOn\": [\"VpcPublicSubnet2DefaultRoute97F91067\", \"VpcPublicSubnet2RouteTableAssociationDD5762D8\"], \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/Vpc/PublicSubnet2/NATGateway\"}}, \"VpcPrivateSubnet1Subnet536B997A\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"sample-aws-ecs-integ-ecs/Vpc/PrivateSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/Vpc/PrivateSubnet1/Subnet\"}}, \"VpcPrivateSubnet1RouteTableB2C5B500\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"sample-aws-ecs-integ-ecs/Vpc/PrivateSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/Vpc/PrivateSubnet1/RouteTable\"}}, \"VpcPrivateSubnet1RouteTableAssociation70C59FA6\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet1RouteTableB2C5B500\"}, \"SubnetId\": {\"Ref\": \"VpcPrivateSubnet1Subnet536B997A\"}}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/Vpc/PrivateSubnet1/RouteTableAssociation\"}}, \"VpcPrivateSubnet1DefaultRouteBE02A9ED\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet1RouteTableB2C5B500\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VpcPublicSubnet1NATGateway4D7517AA\"}}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/Vpc/PrivateSubnet1/DefaultRoute\"}}, \"VpcPrivateSubnet2Subnet3788AAA1\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"sample-aws-ecs-integ-ecs/Vpc/PrivateSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/Vpc/PrivateSubnet2/Subnet\"}}, \"VpcPrivateSubnet2RouteTableA678073B\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"sample-aws-ecs-integ-ecs/Vpc/PrivateSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/Vpc/PrivateSubnet2/RouteTable\"}}, \"VpcPrivateSubnet2RouteTableAssociationA89CAD56\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet2RouteTableA678073B\"}, \"SubnetId\": {\"Ref\": \"VpcPrivateSubnet2Subnet3788AAA1\"}}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/Vpc/PrivateSubnet2/RouteTableAssociation\"}}, \"VpcPrivateSubnet2DefaultRoute060D2087\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet2RouteTableA678073B\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VpcPublicSubnet2NATGateway9182C01D\"}}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/Vpc/PrivateSubnet2/DefaultRoute\"}}, \"VpcIGWD7BA715C\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"sample-aws-ecs-integ-ecs/Vpc\"}]}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/Vpc/IGW\"}}, \"VpcVPCGWBF912B6E\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"InternetGatewayId\": {\"Ref\": \"VpcIGWD7BA715C\"}}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/Vpc/VPCGW\"}}, \"EcsCluster97242B84\": {\"Type\": \"AWS::ECS::Cluster\", \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/EcsCluster/Resource\"}}, \"EcsClusterDefaultAutoScalingGroupInstanceSecurityGroup912E1231\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"sample-aws-ecs-integ-ecs/EcsCluster/DefaultAutoScalingGroup/InstanceSecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"Tags\": [{\"Key\": \"Name\", \"Value\": \"sample-aws-ecs-integ-ecs/EcsCluster/DefaultAutoScalingGroup\"}], \"VpcId\": {\"Ref\": \"Vpc8378EB38\"}}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/EcsCluster/DefaultAutoScalingGroup/InstanceSecurityGroup/Resource\"}}, \"EcsClusterDefaultAutoScalingGroupInstanceRole3C026863\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"ec2.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"sample-aws-ecs-integ-ecs/EcsCluster/DefaultAutoScalingGroup\"}]}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/EcsCluster/DefaultAutoScalingGroup/InstanceRole/Resource\"}}, \"EcsClusterDefaultAutoScalingGroupInstanceRoleDefaultPolicy04DC6C80\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"ecs:DeregisterContainerInstance\", \"ecs:RegisterContainerInstance\", \"ecs:Submit*\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"EcsCluster97242B84\", \"Arn\"]}}, {\"Action\": [\"ecs:Poll\", \"ecs:StartTelemetrySession\"], \"Condition\": {\"ArnEquals\": {\"ecs:cluster\": {\"Fn::GetAtt\": [\"EcsCluster97242B84\", \"Arn\"]}}}, \"Effect\": \"Allow\", \"Resource\": \"*\"}, {\"Action\": [\"ecs:DiscoverPollEndpoint\", \"ecr:GetAuthorizationToken\", \"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"EcsClusterDefaultAutoScalingGroupInstanceRoleDefaultPolicy04DC6C80\", \"Roles\": [{\"Ref\": \"EcsClusterDefaultAutoScalingGroupInstanceRole3C026863\"}]}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/EcsCluster/DefaultAutoScalingGroup/InstanceRole/DefaultPolicy/Resource\"}}, \"EcsClusterDefaultAutoScalingGroupInstanceProfile2CE606B3\": {\"Type\": \"AWS::IAM::InstanceProfile\", \"Properties\": {\"Roles\": [{\"Ref\": \"EcsClusterDefaultAutoScalingGroupInstanceRole3C026863\"}]}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/EcsCluster/DefaultAutoScalingGroup/InstanceProfile\"}}, \"EcsClusterDefaultAutoScalingGroupLaunchConfigB7E376C1\": {\"Type\": \"AWS::AutoScaling::LaunchConfiguration\", \"Properties\": {\"ImageId\": {\"Ref\": \"SsmParameterValueawsserviceecsoptimizedamiamazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter\"}, \"InstanceType\": \"t2.micro\", \"IamInstanceProfile\": {\"Ref\": \"EcsClusterDefaultAutoScalingGroupInstanceProfile2CE606B3\"}, \"SecurityGroups\": [{\"Fn::GetAtt\": [\"EcsClusterDefaultAutoScalingGroupInstanceSecurityGroup912E1231\", \"GroupId\"]}], \"UserData\": {\"Fn::Base64\": {\"Fn::Join\": [\"\", [\"#!/bin/bash\necho ECS_CLUSTER=\", {\"Ref\": \"EcsCluster97242B84\"}, \" >> /etc/ecs/ecs.config\nsudo iptables --insert FORWARD 1 --in-interface docker+ --destination 169.254.169.254/32 --jump DROP\nsudo service iptables save\necho ECS_AWSVPC_BLOCK_IMDS=true >> /etc/ecs/ecs.config\"]]}}}, \"DependsOn\": [\"EcsClusterDefaultAutoScalingGroupInstanceRoleDefaultPolicy04DC6C80\", \"EcsClusterDefaultAutoScalingGroupInstanceRole3C026863\"], \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/EcsCluster/DefaultAutoScalingGroup/LaunchConfig\"}}, \"EcsClusterDefaultAutoScalingGroupASGC1A785DB\": {\"Type\": \"AWS::AutoScaling::AutoScalingGroup\", \"Properties\": {\"MaxSize\": \"1\", \"MinSize\": \"1\", \"LaunchConfigurationName\": {\"Ref\": \"EcsClusterDefaultAutoScalingGroupLaunchConfigB7E376C1\"}, \"Tags\": [{\"Key\": \"Name\", \"PropagateAtLaunch\": true, \"Value\": \"sample-aws-ecs-integ-ecs/EcsCluster/DefaultAutoScalingGroup\"}], \"VPCZoneIdentifier\": [{\"Ref\": \"VpcPrivateSubnet1Subnet536B997A\"}, {\"Ref\": \"VpcPrivateSubnet2Subnet3788AAA1\"}]}, \"UpdatePolicy\": {\"AutoScalingReplacingUpdate\": {\"WillReplace\": true}, \"AutoScalingScheduledAction\": {\"IgnoreUnmodifiedGroupSizeProperties\": true}}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/EcsCluster/DefaultAutoScalingGroup/ASG\"}}, \"EcsClusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRole94543EDA\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}], \"Tags\": [{\"Key\": \"Name\", \"Value\": \"sample-aws-ecs-integ-ecs/EcsCluster/DefaultAutoScalingGroup\"}]}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/EcsCluster/DefaultAutoScalingGroup/DrainECSHook/Function/ServiceRole/Resource\"}}, \"EcsClusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRoleDefaultPolicyA45BF396\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"ec2:DescribeInstances\", \"ec2:DescribeInstanceAttribute\", \"ec2:DescribeInstanceStatus\", \"ec2:DescribeHosts\"], \"Effect\": \"Allow\", \"Resource\": \"*\"}, {\"Action\": \"autoscaling:CompleteLifecycleAction\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":autoscaling:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":autoScalingGroup:*:autoScalingGroupName/\", {\"Ref\": \"EcsClusterDefaultAutoScalingGroupASGC1A785DB\"}]]}}, {\"Action\": [\"ecs:DescribeContainerInstances\", \"ecs:DescribeTasks\"], \"Condition\": {\"ArnEquals\": {\"ecs:cluster\": {\"Fn::GetAtt\": [\"EcsCluster97242B84\", \"Arn\"]}}}, \"Effect\": \"Allow\", \"Resource\": \"*\"}, {\"Action\": [\"ecs:ListContainerInstances\", \"ecs:SubmitContainerStateChange\", \"ecs:SubmitTaskStateChange\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"EcsCluster97242B84\", \"Arn\"]}}, {\"Action\": [\"ecs:UpdateContainerInstancesState\", \"ecs:ListTasks\"], \"Condition\": {\"ArnEquals\": {\"ecs:cluster\": {\"Fn::GetAtt\": [\"EcsCluster97242B84\", \"Arn\"]}}}, \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"EcsClusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRoleDefaultPolicyA45BF396\", \"Roles\": [{\"Ref\": \"EcsClusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRole94543EDA\"}]}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/EcsCluster/DefaultAutoScalingGroup/DrainECSHook/Function/ServiceRole/DefaultPolicy/Resource\"}}, \"EcsClusterDefaultAutoScalingGroupDrainECSHookFunctionE17A5F5E\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"import boto3, json, os, time\n\necs = boto3.client('ecs')\nautoscaling = boto3.client('autoscaling')\n\n\ndef lambda_handler(event, context):\n  print(json.dumps(dict(event, ResponseURL='...')))\n  cluster = os.environ['CLUSTER']\n  snsTopicArn = event['Records'][0]['Sns']['TopicArn']\n  lifecycle_event = json.loads(event['Records'][0]['Sns']['Message'])\n  instance_id = lifecycle_event.get('EC2InstanceId')\n  if not instance_id:\n    print('Got event without EC2InstanceId: %s', json.dumps(dict(event, ResponseURL='...')))\n    return\n\n  instance_arn = container_instance_arn(cluster, instance_id)\n  print('Instance %s has container instance ARN %s' % (lifecycle_event['EC2InstanceId'], instance_arn))\n\n  if not instance_arn:\n    return\n\n  task_arns = container_instance_task_arns(cluster, instance_arn)\n\n  if task_arns:\n    print('Instance ARN %s has task ARNs %s' % (instance_arn, ', '.join(task_arns)))\n\n  while has_tasks(cluster, instance_arn, task_arns):\n    time.sleep(10)\n\n  try:\n    print('Terminating instance %s' % instance_id)\n    autoscaling.complete_lifecycle_action(\n        LifecycleActionResult='CONTINUE',\n        **pick(lifecycle_event, 'LifecycleHookName', 'LifecycleActionToken', 'AutoScalingGroupName'))\n  except Exception as e:\n    # Lifecycle action may have already completed.\n    print(str(e))\n\n\ndef container_instance_arn(cluster, instance_id):\n  \\\"\\\"\\\"Turn an instance ID into a container instance ARN.\\\"\\\"\\\"\n  arns = ecs.list_container_instances(cluster=cluster, filter='ec2InstanceId==' + instance_id)['containerInstanceArns']\n  if not arns:\n    return None\n  return arns[0]\n\ndef container_instance_task_arns(cluster, instance_arn):\n  \\\"\\\"\\\"Fetch tasks for a container instance ARN.\\\"\\\"\\\"\n  arns = ecs.list_tasks(cluster=cluster, containerInstance=instance_arn)['taskArns']\n  return arns\n\ndef has_tasks(cluster, instance_arn, task_arns):\n  \\\"\\\"\\\"Return True if the instance is running tasks for the given cluster.\\\"\\\"\\\"\n  instances = ecs.describe_container_instances(cluster=cluster, containerInstances=[instance_arn])['containerInstances']\n  if not instances:\n    return False\n  instance = instances[0]\n\n  if instance['status'] == 'ACTIVE':\n    # Start draining, then try again later\n    set_container_instance_to_draining(cluster, instance_arn)\n    return True\n\n  task_count = None\n\n  if task_arns:\n    # Fetch details for tasks running on the container instance\n    tasks = ecs.describe_tasks(cluster=cluster, tasks=task_arns)['tasks']\n    if tasks:\n      # Consider any non-stopped tasks as running\n      task_count = sum(task['lastStatus'] != 'STOPPED' for task in tasks) + instance['pendingTasksCount']\n\n  if not task_count:\n    # Fallback to instance task counts if detailed task information is unavailable\n    task_count = instance['runningTasksCount'] + instance['pendingTasksCount']\n\n  print('Instance %s has %s tasks' % (instance_arn, task_count))\n\n  return task_count > 0\n\ndef set_container_instance_to_draining(cluster, instance_arn):\n  ecs.update_container_instances_state(\n      cluster=cluster,\n      containerInstances=[instance_arn], status='DRAINING')\n\n\ndef pick(dct, *keys):\n  \\\"\\\"\\\"Pick a subset of a dict.\\\"\\\"\\\"\n  return {k: v for k, v in dct.items() if k in keys}\n\"}, \"Role\": {\"Fn::GetAtt\": [\"EcsClusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRole94543EDA\", \"Arn\"]}, \"Environment\": {\"Variables\": {\"CLUSTER\": {\"Ref\": \"EcsCluster97242B84\"}}}, \"Handler\": \"index.lambda_handler\", \"Runtime\": \"python3.9\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"sample-aws-ecs-integ-ecs/EcsCluster/DefaultAutoScalingGroup\"}], \"Timeout\": 310}, \"DependsOn\": [\"EcsClusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRoleDefaultPolicyA45BF396\", \"EcsClusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRole94543EDA\"], \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/EcsCluster/DefaultAutoScalingGroup/DrainECSHook/Function/Resource\"}}, \"EcsClusterDefaultAutoScalingGroupDrainECSHookFunctionAllowInvokesampleawsecsintegecsEcsClusterDefaultAutoScalingGroupLifecycleHookDrainHookTopic7D0FA5A858D2FF02\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"EcsClusterDefaultAutoScalingGroupDrainECSHookFunctionE17A5F5E\", \"Arn\"]}, \"Principal\": \"sns.amazonaws.com\", \"SourceArn\": {\"Ref\": \"EcsClusterDefaultAutoScalingGroupLifecycleHookDrainHookTopicACD2D4A4\"}}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/EcsCluster/DefaultAutoScalingGroup/DrainECSHook/Function/AllowInvoke:sampleawsecsintegecsEcsClusterDefaultAutoScalingGroupLifecycleHookDrainHookTopic7D0FA5A8\"}}, \"EcsClusterDefaultAutoScalingGroupDrainECSHookFunctionTopic8F34E394\": {\"Type\": \"AWS::SNS::Subscription\", \"Properties\": {\"Protocol\": \"lambda\", \"TopicArn\": {\"Ref\": \"EcsClusterDefaultAutoScalingGroupLifecycleHookDrainHookTopicACD2D4A4\"}, \"Endpoint\": {\"Fn::GetAtt\": [\"EcsClusterDefaultAutoScalingGroupDrainECSHookFunctionE17A5F5E\", \"Arn\"]}}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/EcsCluster/DefaultAutoScalingGroup/DrainECSHook/Function/Topic/Resource\"}}, \"EcsClusterDefaultAutoScalingGroupLifecycleHookDrainHookTopicACD2D4A4\": {\"Type\": \"AWS::SNS::Topic\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"sample-aws-ecs-integ-ecs/EcsCluster/DefaultAutoScalingGroup\"}]}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/EcsCluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Topic/Resource\"}}, \"EcsClusterDefaultAutoScalingGroupLifecycleHookDrainHookRoleA38EC83B\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"autoscaling.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"sample-aws-ecs-integ-ecs/EcsCluster/DefaultAutoScalingGroup\"}]}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/EcsCluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Role/Resource\"}}, \"EcsClusterDefaultAutoScalingGroupLifecycleHookDrainHookRoleDefaultPolicy75002F88\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"sns:Publish\", \"Effect\": \"Allow\", \"Resource\": {\"Ref\": \"EcsClusterDefaultAutoScalingGroupLifecycleHookDrainHookTopicACD2D4A4\"}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"EcsClusterDefaultAutoScalingGroupLifecycleHookDrainHookRoleDefaultPolicy75002F88\", \"Roles\": [{\"Ref\": \"EcsClusterDefaultAutoScalingGroupLifecycleHookDrainHookRoleA38EC83B\"}]}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/EcsCluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Role/DefaultPolicy/Resource\"}}, \"EcsClusterDefaultAutoScalingGroupLifecycleHookDrainHookFFA63029\": {\"Type\": \"AWS::AutoScaling::LifecycleHook\", \"Properties\": {\"AutoScalingGroupName\": {\"Ref\": \"EcsClusterDefaultAutoScalingGroupASGC1A785DB\"}, \"LifecycleTransition\": \"autoscaling:EC2_INSTANCE_TERMINATING\", \"DefaultResult\": \"CONTINUE\", \"HeartbeatTimeout\": 300, \"NotificationTargetARN\": {\"Ref\": \"EcsClusterDefaultAutoScalingGroupLifecycleHookDrainHookTopicACD2D4A4\"}, \"RoleARN\": {\"Fn::GetAtt\": [\"EcsClusterDefaultAutoScalingGroupLifecycleHookDrainHookRoleA38EC83B\", \"Arn\"]}}, \"DependsOn\": [\"EcsClusterDefaultAutoScalingGroupLifecycleHookDrainHookRoleDefaultPolicy75002F88\", \"EcsClusterDefaultAutoScalingGroupLifecycleHookDrainHookRoleA38EC83B\"], \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/EcsCluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Resource\"}}, \"TaskDefTaskRole1EDB4A67\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"ecs-tasks.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/TaskDef/TaskRole/Resource\"}}, \"TaskDef54694570\": {\"Type\": \"AWS::ECS::TaskDefinition\", \"Properties\": {\"ContainerDefinitions\": [{\"Essential\": true, \"Image\": \"amazon/amazon-ecs-sample\", \"Memory\": 256, \"Name\": \"web\", \"PortMappings\": [{\"ContainerPort\": 80, \"HostPort\": 8080, \"Protocol\": \"tcp\"}]}], \"Family\": \"sampleawsecsintegecsTaskDef39CD318E\", \"NetworkMode\": \"bridge\", \"RequiresCompatibilities\": [\"EC2\"], \"TaskRoleArn\": {\"Fn::GetAtt\": [\"TaskDefTaskRole1EDB4A67\", \"Arn\"]}}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/TaskDef/Resource\"}}, \"ServiceD69D759B\": {\"Type\": \"AWS::ECS::Service\", \"Properties\": {\"Cluster\": {\"Ref\": \"EcsCluster97242B84\"}, \"DeploymentConfiguration\": {\"Alarms\": {\"AlarmNames\": [], \"Enable\": false, \"Rollback\": false}, \"MaximumPercent\": 200, \"MinimumHealthyPercent\": 50}, \"EnableECSManagedTags\": false, \"LaunchType\": \"EC2\", \"PlacementConstraints\": [{\"Type\": \"distinctInstance\"}], \"PlacementStrategies\": [{\"Field\": \"MEMORY\", \"Type\": \"binpack\"}, {\"Field\": \"attribute:ecs.availability-zone\", \"Type\": \"spread\"}], \"SchedulingStrategy\": \"REPLICA\", \"TaskDefinition\": {\"Ref\": \"TaskDef54694570\"}}, \"DependsOn\": [\"TaskDefTaskRole1EDB4A67\"], \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/Service/Service\"}}, \"CDKMetadata\": {\"Type\": \"AWS::CDK::Metadata\", \"Properties\": {\"Analytics\": \"v2:deflate64:H4sIAAAAAAAA/2VSy27CMBD8lt6N2+ZSrohSioSqKEFcq43ZwBLHjvwAoSj/XichJG1POzNer8djR3z+xl+e4Gpn4lDMJGW8Th2IggXpu0YR8XpfCbbM1T5esthnkkTqM4Wu1UaUaO9wB5nEUR+1hbVaEDjS6tHcgtUmbssXuDU4vMKNxYYuAY6DN8qhCXho6J3c2cIFr6cSlWMpCm/I3dZG+6rzMBUahsLyeim9DePa5QGuRLQDW7xjTooGg38VrRyQQjPRwr4UzYVEf+EeNgy801aAJHXk9SKQtCcPW1vwSpzCxJyO3jwi+de6pRzFTUj81LroNk6FhhGUvE50n3dXYx3epgtoRBtlHSiBsdE5yeBPQpkdgNcfwcVw9hTHaEqyNrCGWRUiCy9hhaFqaPjFd7qi7nN0oGlYglZ702cSg4ES73FPF8LlD12IDVP6gPxsny+vcx6Fj3i2RDPjlaMSedLXH6wa0V6kAgAA\"}, \"Metadata\": {\"aws:cdk:path\": \"sample-aws-ecs-integ-ecs/CDKMetadata/Default\"}, \"Condition\": \"CDKMetadataAvailable\"}}, \"Parameters\": {\"SsmParameterValueawsserviceecsoptimizedamiamazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter\": {\"Type\": \"AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>\", \"Default\": \"/aws/service/ecs/optimized-ami/amazon-linux-2/recommended/image_id\"}, \"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Conditions\": {\"CDKMetadataAvailable\": {\"Fn::Or\": [{\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"af-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ca-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-northwest-1\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-3\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"me-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"sa-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-2\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-2\"]}]}]}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import ecs = require('aws-cdk-lib/aws-ecs');\nimport ec2 = require('aws-cdk-lib/aws-ec2');\nimport cdk = require('aws-cdk-lib');\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'sample-aws-ecs-integ-ecs');\n\n// Create a cluster\nconst vpc = new ec2.Vpc(stack, 'Vpc', { maxAzs: 2 });\n\nconst cluster = new ecs.Cluster(stack, 'EcsCluster', { vpc });\ncluster.addCapacity('DefaultAutoScalingGroup', {\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.T2, ec2.InstanceSize.MICRO)\n});\n\n// Create Task Definition with placement constraint\nconst taskDefinition = new ecs.Ec2TaskDefinition(stack, 'TaskDef');\n\nconst container = taskDefinition.addContainer('web', {\n  image: ecs.ContainerImage.fromRegistry('amazon/amazon-ecs-sample'),\n  memoryLimitMiB: 256,\n});\n\ncontainer.addPortMappings({\n  containerPort: 80,\n  hostPort: 8080,\n  protocol: ecs.Protocol.TCP,\n});\n\n// Create Service\nconst service = new ecs.Ec2Service(stack, 'Service', {\n  cluster,\n  taskDefinition,\n  placementConstraints: [\n        ecs.PlacementConstraint.distinctInstances()\n    ]\n});\n\n// Specify binpack by memory and spread across availability zone as placement strategies.\n// To place randomly, call: service.placeRandomly()\nservice.addPlacementStrategies(\n  ecs.PlacementStrategy.packedBy(ecs.BinPackResource.MEMORY), \n  ecs.PlacementStrategy.spreadAcross(ecs.BuiltInAttributes.AVAILABILITY_ZONE));\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyVpcF9F0CA6F\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"Bonjour/MyVpc\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/MyVpc/Resource\"}}, \"MyVpcPublicSubnet1SubnetF6608456\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"Bonjour/MyVpc/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/MyVpc/PublicSubnet1/Subnet\"}}, \"MyVpcPublicSubnet1RouteTableC46AB2F4\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"Bonjour/MyVpc/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/MyVpc/PublicSubnet1/RouteTable\"}}, \"MyVpcPublicSubnet1RouteTableAssociation2ECEE1CB\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPublicSubnet1RouteTableC46AB2F4\"}, \"SubnetId\": {\"Ref\": \"MyVpcPublicSubnet1SubnetF6608456\"}}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/MyVpc/PublicSubnet1/RouteTableAssociation\"}}, \"MyVpcPublicSubnet1DefaultRoute95FDF9EB\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPublicSubnet1RouteTableC46AB2F4\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"MyVpcIGW5C4A4F63\"}}, \"DependsOn\": [\"MyVpcVPCGW488ACE0D\"], \"Metadata\": {\"aws:cdk:path\": \"Bonjour/MyVpc/PublicSubnet1/DefaultRoute\"}}, \"MyVpcPublicSubnet1EIP096967CB\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"Bonjour/MyVpc/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/MyVpc/PublicSubnet1/EIP\"}}, \"MyVpcPublicSubnet1NATGatewayAD3400C1\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"MyVpcPublicSubnet1SubnetF6608456\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"MyVpcPublicSubnet1EIP096967CB\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"Bonjour/MyVpc/PublicSubnet1\"}]}, \"DependsOn\": [\"MyVpcPublicSubnet1DefaultRoute95FDF9EB\", \"MyVpcPublicSubnet1RouteTableAssociation2ECEE1CB\"], \"Metadata\": {\"aws:cdk:path\": \"Bonjour/MyVpc/PublicSubnet1/NATGateway\"}}, \"MyVpcPublicSubnet2Subnet492B6BFB\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"Bonjour/MyVpc/PublicSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/MyVpc/PublicSubnet2/Subnet\"}}, \"MyVpcPublicSubnet2RouteTable1DF17386\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"Bonjour/MyVpc/PublicSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/MyVpc/PublicSubnet2/RouteTable\"}}, \"MyVpcPublicSubnet2RouteTableAssociation227DE78D\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPublicSubnet2RouteTable1DF17386\"}, \"SubnetId\": {\"Ref\": \"MyVpcPublicSubnet2Subnet492B6BFB\"}}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/MyVpc/PublicSubnet2/RouteTableAssociation\"}}, \"MyVpcPublicSubnet2DefaultRoute052936F6\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPublicSubnet2RouteTable1DF17386\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"MyVpcIGW5C4A4F63\"}}, \"DependsOn\": [\"MyVpcVPCGW488ACE0D\"], \"Metadata\": {\"aws:cdk:path\": \"Bonjour/MyVpc/PublicSubnet2/DefaultRoute\"}}, \"MyVpcPublicSubnet2EIP8CCBA239\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"Bonjour/MyVpc/PublicSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/MyVpc/PublicSubnet2/EIP\"}}, \"MyVpcPublicSubnet2NATGateway91BFBEC9\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"MyVpcPublicSubnet2Subnet492B6BFB\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"MyVpcPublicSubnet2EIP8CCBA239\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"Bonjour/MyVpc/PublicSubnet2\"}]}, \"DependsOn\": [\"MyVpcPublicSubnet2DefaultRoute052936F6\", \"MyVpcPublicSubnet2RouteTableAssociation227DE78D\"], \"Metadata\": {\"aws:cdk:path\": \"Bonjour/MyVpc/PublicSubnet2/NATGateway\"}}, \"MyVpcPrivateSubnet1Subnet5057CF7E\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"Bonjour/MyVpc/PrivateSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/MyVpc/PrivateSubnet1/Subnet\"}}, \"MyVpcPrivateSubnet1RouteTable8819E6E2\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"Bonjour/MyVpc/PrivateSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/MyVpc/PrivateSubnet1/RouteTable\"}}, \"MyVpcPrivateSubnet1RouteTableAssociation56D38C7E\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPrivateSubnet1RouteTable8819E6E2\"}, \"SubnetId\": {\"Ref\": \"MyVpcPrivateSubnet1Subnet5057CF7E\"}}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/MyVpc/PrivateSubnet1/RouteTableAssociation\"}}, \"MyVpcPrivateSubnet1DefaultRouteA8CDE2FA\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPrivateSubnet1RouteTable8819E6E2\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"MyVpcPublicSubnet1NATGatewayAD3400C1\"}}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/MyVpc/PrivateSubnet1/DefaultRoute\"}}, \"MyVpcPrivateSubnet2Subnet0040C983\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"Bonjour/MyVpc/PrivateSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/MyVpc/PrivateSubnet2/Subnet\"}}, \"MyVpcPrivateSubnet2RouteTableCEDCEECE\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"Bonjour/MyVpc/PrivateSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/MyVpc/PrivateSubnet2/RouteTable\"}}, \"MyVpcPrivateSubnet2RouteTableAssociation86A610DA\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPrivateSubnet2RouteTableCEDCEECE\"}, \"SubnetId\": {\"Ref\": \"MyVpcPrivateSubnet2Subnet0040C983\"}}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/MyVpc/PrivateSubnet2/RouteTableAssociation\"}}, \"MyVpcPrivateSubnet2DefaultRoute9CE96294\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPrivateSubnet2RouteTableCEDCEECE\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"MyVpcPublicSubnet2NATGateway91BFBEC9\"}}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/MyVpc/PrivateSubnet2/DefaultRoute\"}}, \"MyVpcIGW5C4A4F63\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"Bonjour/MyVpc\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/MyVpc/IGW\"}}, \"MyVpcVPCGW488ACE0D\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"InternetGatewayId\": {\"Ref\": \"MyVpcIGW5C4A4F63\"}}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/MyVpc/VPCGW\"}}, \"ClusterEB0386A7\": {\"Type\": \"AWS::ECS::Cluster\", \"Metadata\": {\"aws:cdk:path\": \"Bonjour/Cluster/Resource\"}}, \"FargateServiceLBB353E155\": {\"Type\": \"AWS::ElasticLoadBalancingV2::LoadBalancer\", \"Properties\": {\"LoadBalancerAttributes\": [{\"Key\": \"deletion_protection.enabled\", \"Value\": \"false\"}], \"Scheme\": \"internet-facing\", \"SecurityGroups\": [{\"Fn::GetAtt\": [\"FargateServiceLBSecurityGroup5F444C78\", \"GroupId\"]}], \"Subnets\": [{\"Ref\": \"MyVpcPublicSubnet1SubnetF6608456\"}, {\"Ref\": \"MyVpcPublicSubnet2Subnet492B6BFB\"}], \"Type\": \"application\"}, \"DependsOn\": [\"MyVpcPublicSubnet1DefaultRoute95FDF9EB\", \"MyVpcPublicSubnet1RouteTableAssociation2ECEE1CB\", \"MyVpcPublicSubnet2DefaultRoute052936F6\", \"MyVpcPublicSubnet2RouteTableAssociation227DE78D\"], \"Metadata\": {\"aws:cdk:path\": \"Bonjour/FargateService/LB/Resource\"}}, \"FargateServiceLBSecurityGroup5F444C78\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"Automatically created Security Group for ELB BonjourFargateServiceLB0FE13A54\", \"SecurityGroupIngress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow from anyone on port 80\", \"FromPort\": 80, \"IpProtocol\": \"tcp\", \"ToPort\": 80}], \"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/FargateService/LB/SecurityGroup/Resource\"}}, \"FargateServiceLBSecurityGrouptoBonjourFargateServiceSecurityGroupB8A86CBA80181B6C73\": {\"Type\": \"AWS::EC2::SecurityGroupEgress\", \"Properties\": {\"GroupId\": {\"Fn::GetAtt\": [\"FargateServiceLBSecurityGroup5F444C78\", \"GroupId\"]}, \"IpProtocol\": \"tcp\", \"Description\": \"Load balancer to target\", \"DestinationSecurityGroupId\": {\"Fn::GetAtt\": [\"FargateServiceSecurityGroup262B61DD\", \"GroupId\"]}, \"FromPort\": 80, \"ToPort\": 80}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/FargateService/LB/SecurityGroup/to BonjourFargateServiceSecurityGroupB8A86CBA:80\"}}, \"FargateServiceLBPublicListener4B4929CA\": {\"Type\": \"AWS::ElasticLoadBalancingV2::Listener\", \"Properties\": {\"DefaultActions\": [{\"TargetGroupArn\": {\"Ref\": \"FargateServiceLBPublicListenerECSGroupBE57E081\"}, \"Type\": \"forward\"}], \"LoadBalancerArn\": {\"Ref\": \"FargateServiceLBB353E155\"}, \"Port\": 80, \"Protocol\": \"HTTP\"}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/FargateService/LB/PublicListener/Resource\"}}, \"FargateServiceLBPublicListenerECSGroupBE57E081\": {\"Type\": \"AWS::ElasticLoadBalancingV2::TargetGroup\", \"Properties\": {\"Port\": 80, \"Protocol\": \"HTTP\", \"TargetGroupAttributes\": [{\"Key\": \"stickiness.enabled\", \"Value\": \"false\"}], \"TargetType\": \"ip\", \"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/FargateService/LB/PublicListener/ECSGroup/Resource\"}}, \"FargateServiceTaskDefTaskRole8CDCF85E\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"ecs-tasks.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/FargateService/TaskDef/TaskRole/Resource\"}}, \"FargateServiceTaskDef940E3A80\": {\"Type\": \"AWS::ECS::TaskDefinition\", \"Properties\": {\"ContainerDefinitions\": [{\"Essential\": true, \"Image\": \"amazon/amazon-ecs-sample\", \"LogConfiguration\": {\"LogDriver\": \"awslogs\", \"Options\": {\"awslogs-group\": {\"Ref\": \"FargateServiceTaskDefwebLogGroup71FAF541\"}, \"awslogs-stream-prefix\": \"FargateService\", \"awslogs-region\": {\"Ref\": \"AWS::Region\"}}}, \"Name\": \"web\", \"PortMappings\": [{\"ContainerPort\": 80, \"Protocol\": \"tcp\"}]}], \"Cpu\": \"256\", \"ExecutionRoleArn\": {\"Fn::GetAtt\": [\"FargateServiceTaskDefExecutionRole9194820E\", \"Arn\"]}, \"Family\": \"BonjourFargateServiceTaskDef61A4799A\", \"Memory\": \"512\", \"NetworkMode\": \"awsvpc\", \"RequiresCompatibilities\": [\"FARGATE\"], \"TaskRoleArn\": {\"Fn::GetAtt\": [\"FargateServiceTaskDefTaskRole8CDCF85E\", \"Arn\"]}}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/FargateService/TaskDef/Resource\"}}, \"FargateServiceTaskDefwebLogGroup71FAF541\": {\"Type\": \"AWS::Logs::LogGroup\", \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\", \"Metadata\": {\"aws:cdk:path\": \"Bonjour/FargateService/TaskDef/web/LogGroup/Resource\"}}, \"FargateServiceTaskDefExecutionRole9194820E\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"ecs-tasks.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/FargateService/TaskDef/ExecutionRole/Resource\"}}, \"FargateServiceTaskDefExecutionRoleDefaultPolicy827E7CA2\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"FargateServiceTaskDefwebLogGroup71FAF541\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"FargateServiceTaskDefExecutionRoleDefaultPolicy827E7CA2\", \"Roles\": [{\"Ref\": \"FargateServiceTaskDefExecutionRole9194820E\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/FargateService/TaskDef/ExecutionRole/DefaultPolicy/Resource\"}}, \"FargateServiceECC8084D\": {\"Type\": \"AWS::ECS::Service\", \"Properties\": {\"Cluster\": {\"Ref\": \"ClusterEB0386A7\"}, \"DeploymentConfiguration\": {\"Alarms\": {\"AlarmNames\": [], \"Enable\": false, \"Rollback\": false}, \"MaximumPercent\": 200, \"MinimumHealthyPercent\": 50}, \"EnableECSManagedTags\": false, \"HealthCheckGracePeriodSeconds\": 60, \"LaunchType\": \"FARGATE\", \"LoadBalancers\": [{\"ContainerName\": \"web\", \"ContainerPort\": 80, \"TargetGroupArn\": {\"Ref\": \"FargateServiceLBPublicListenerECSGroupBE57E081\"}}], \"NetworkConfiguration\": {\"AwsvpcConfiguration\": {\"AssignPublicIp\": \"DISABLED\", \"SecurityGroups\": [{\"Fn::GetAtt\": [\"FargateServiceSecurityGroup262B61DD\", \"GroupId\"]}], \"Subnets\": [{\"Ref\": \"MyVpcPrivateSubnet1Subnet5057CF7E\"}, {\"Ref\": \"MyVpcPrivateSubnet2Subnet0040C983\"}]}}, \"TaskDefinition\": {\"Ref\": \"FargateServiceTaskDef940E3A80\"}}, \"DependsOn\": [\"FargateServiceLBPublicListenerECSGroupBE57E081\", \"FargateServiceLBPublicListener4B4929CA\", \"FargateServiceTaskDefTaskRole8CDCF85E\"], \"Metadata\": {\"aws:cdk:path\": \"Bonjour/FargateService/Service/Service\"}}, \"FargateServiceSecurityGroup262B61DD\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"Bonjour/FargateService/Service/SecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}}, \"DependsOn\": [\"FargateServiceTaskDefTaskRole8CDCF85E\"], \"Metadata\": {\"aws:cdk:path\": \"Bonjour/FargateService/Service/SecurityGroup/Resource\"}}, \"FargateServiceSecurityGroupfromBonjourFargateServiceLBSecurityGroup660CF9B080C7AA015A\": {\"Type\": \"AWS::EC2::SecurityGroupIngress\", \"Properties\": {\"IpProtocol\": \"tcp\", \"Description\": \"Load balancer to target\", \"FromPort\": 80, \"GroupId\": {\"Fn::GetAtt\": [\"FargateServiceSecurityGroup262B61DD\", \"GroupId\"]}, \"SourceSecurityGroupId\": {\"Fn::GetAtt\": [\"FargateServiceLBSecurityGroup5F444C78\", \"GroupId\"]}, \"ToPort\": 80}, \"DependsOn\": [\"FargateServiceTaskDefTaskRole8CDCF85E\"], \"Metadata\": {\"aws:cdk:path\": \"Bonjour/FargateService/Service/SecurityGroup/from BonjourFargateServiceLBSecurityGroup660CF9B0:80\"}}, \"CDKMetadata\": {\"Type\": \"AWS::CDK::Metadata\", \"Properties\": {\"Analytics\": \"v2:deflate64:H4sIAAAAAAAA/31STW/CMAz9LbuHbOMyrowxhIS2qiCuKE1NZwhJlY8iVPW/L00o7di0k19enmP7OWM6eaFPD+xsRjw/jgRmtF5bxo/EU7sa+JjW25KT2V5ukxlJXCaQr10mwbZcj1LlLGxYJqDne25qjOLILCp5E7dgvkza8MHsglk4swtJNFYe9g8vpQXtcSeInVxPU+t7/TqBtGQN3Gm0l4VWrgw9/EvMCw3G/KKXMvANAW5oPRPO+OqtqoPvTBesncoc32CPEruZ7hklLUMJesBdc9egK+TRpwhDuV3JbDuqodOy9C4Ht1aK5a9MMMkhv0sHwYxFLrwiCwqUReXX9Xd2GOLHeahDP5u8ajo8uN/4yn4DnZGDY0OQnWidqrj3EBPl88KiImqIUIV3c6WK2xMdbhqSglFORz8+nS1d/E8D1nuZBwcbIlUO9GAeq+cJHfuPezCII+2kxRPQNMZvaEA1VNQCAAA=\"}, \"Metadata\": {\"aws:cdk:path\": \"Bonjour/CDKMetadata/Default\"}, \"Condition\": \"CDKMetadataAvailable\"}}, \"Outputs\": {\"FargateServiceLoadBalancerDNS9433D5F6\": {\"Value\": {\"Fn::GetAtt\": [\"FargateServiceLBB353E155\", \"DNSName\"]}}, \"FargateServiceServiceURL47701F45\": {\"Value\": {\"Fn::Join\": [\"\", [\"http://\", {\"Fn::GetAtt\": [\"FargateServiceLBB353E155\", \"DNSName\"]}]]}}}, \"Conditions\": {\"CDKMetadataAvailable\": {\"Fn::Or\": [{\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"af-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ca-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-northwest-1\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-3\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"me-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"sa-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-2\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-2\"]}]}]}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import ec2 = require('aws-cdk-lib/aws-ec2');\nimport ecs = require('aws-cdk-lib/aws-ecs');\nimport ecs_patterns = require('aws-cdk-lib/aws-ecs-patterns');\nimport cdk = require('aws-cdk-lib');\n\nclass BonjourFargate extends cdk.Stack {\n  constructor(scope: cdk.App, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n\n    // Create VPC and Fargate Cluster\n    // NOTE: Limit AZs to avoid reaching resource quotas\n    const vpc = new ec2.Vpc(this, 'MyVpc', { maxAzs: 2 });\n    const cluster = new ecs.Cluster(this, 'Cluster', { vpc });\n\n    // Instantiate Fargate Service with just cluster and image\n    new ecs_patterns.ApplicationLoadBalancedFargateService(this, \"FargateService\", {\n      cluster,\n      taskImageOptions: {\n        image: ecs.ContainerImage.fromRegistry(\"amazon/amazon-ecs-sample\"),\n      },\n    });\n  }\n}\n\nconst app = new cdk.App();\n\nnew BonjourFargate(app, 'Bonjour');\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"Vpc8378EB38\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-fargate-application-autoscaling/Vpc\"}]}, \"Metadata\": {\"aws:cdk:path\": \"aws-fargate-application-autoscaling/Vpc/Resource\"}}, \"VpcPublicSubnet1Subnet5C2D37C4\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-fargate-application-autoscaling/Vpc/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"aws-fargate-application-autoscaling/Vpc/PublicSubnet1/Subnet\"}}, \"VpcPublicSubnet1RouteTable6C95E38E\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-fargate-application-autoscaling/Vpc/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"aws-fargate-application-autoscaling/Vpc/PublicSubnet1/RouteTable\"}}, \"VpcPublicSubnet1RouteTableAssociation97140677\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet1RouteTable6C95E38E\"}, \"SubnetId\": {\"Ref\": \"VpcPublicSubnet1Subnet5C2D37C4\"}}, \"Metadata\": {\"aws:cdk:path\": \"aws-fargate-application-autoscaling/Vpc/PublicSubnet1/RouteTableAssociation\"}}, \"VpcPublicSubnet1DefaultRoute3DA9E72A\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet1RouteTable6C95E38E\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VpcIGWD7BA715C\"}}, \"DependsOn\": [\"VpcVPCGWBF912B6E\"], \"Metadata\": {\"aws:cdk:path\": \"aws-fargate-application-autoscaling/Vpc/PublicSubnet1/DefaultRoute\"}}, \"VpcPublicSubnet1EIPD7E02669\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-fargate-application-autoscaling/Vpc/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"aws-fargate-application-autoscaling/Vpc/PublicSubnet1/EIP\"}}, \"VpcPublicSubnet1NATGateway4D7517AA\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VpcPublicSubnet1Subnet5C2D37C4\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VpcPublicSubnet1EIPD7E02669\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-fargate-application-autoscaling/Vpc/PublicSubnet1\"}]}, \"DependsOn\": [\"VpcPublicSubnet1DefaultRoute3DA9E72A\", \"VpcPublicSubnet1RouteTableAssociation97140677\"], \"Metadata\": {\"aws:cdk:path\": \"aws-fargate-application-autoscaling/Vpc/PublicSubnet1/NATGateway\"}}, \"VpcPublicSubnet2Subnet691E08A3\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"aws-fargate-application-autoscaling/Vpc/PublicSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"aws-fargate-application-autoscaling/Vpc/PublicSubnet2/Subnet\"}}, \"VpcPublicSubnet2RouteTable94F7E489\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-fargate-application-autoscaling/Vpc/PublicSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"aws-fargate-application-autoscaling/Vpc/PublicSubnet2/RouteTable\"}}, \"VpcPublicSubnet2RouteTableAssociationDD5762D8\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet2RouteTable94F7E489\"}, \"SubnetId\": {\"Ref\": \"VpcPublicSubnet2Subnet691E08A3\"}}, \"Metadata\": {\"aws:cdk:path\": \"aws-fargate-application-autoscaling/Vpc/PublicSubnet2/RouteTableAssociation\"}}, \"VpcPublicSubnet2DefaultRoute97F91067\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPublicSubnet2RouteTable94F7E489\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VpcIGWD7BA715C\"}}, \"DependsOn\": [\"VpcVPCGWBF912B6E\"], \"Metadata\": {\"aws:cdk:path\": \"aws-fargate-application-autoscaling/Vpc/PublicSubnet2/DefaultRoute\"}}, \"VpcPublicSubnet2EIP3C605A87\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-fargate-application-autoscaling/Vpc/PublicSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"aws-fargate-application-autoscaling/Vpc/PublicSubnet2/EIP\"}}, \"VpcPublicSubnet2NATGateway9182C01D\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VpcPublicSubnet2Subnet691E08A3\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VpcPublicSubnet2EIP3C605A87\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-fargate-application-autoscaling/Vpc/PublicSubnet2\"}]}, \"DependsOn\": [\"VpcPublicSubnet2DefaultRoute97F91067\", \"VpcPublicSubnet2RouteTableAssociationDD5762D8\"], \"Metadata\": {\"aws:cdk:path\": \"aws-fargate-application-autoscaling/Vpc/PublicSubnet2/NATGateway\"}}, \"VpcPrivateSubnet1Subnet536B997A\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-fargate-application-autoscaling/Vpc/PrivateSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"aws-fargate-application-autoscaling/Vpc/PrivateSubnet1/Subnet\"}}, \"VpcPrivateSubnet1RouteTableB2C5B500\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-fargate-application-autoscaling/Vpc/PrivateSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"aws-fargate-application-autoscaling/Vpc/PrivateSubnet1/RouteTable\"}}, \"VpcPrivateSubnet1RouteTableAssociation70C59FA6\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet1RouteTableB2C5B500\"}, \"SubnetId\": {\"Ref\": \"VpcPrivateSubnet1Subnet536B997A\"}}, \"Metadata\": {\"aws:cdk:path\": \"aws-fargate-application-autoscaling/Vpc/PrivateSubnet1/RouteTableAssociation\"}}, \"VpcPrivateSubnet1DefaultRouteBE02A9ED\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet1RouteTableB2C5B500\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VpcPublicSubnet1NATGateway4D7517AA\"}}, \"Metadata\": {\"aws:cdk:path\": \"aws-fargate-application-autoscaling/Vpc/PrivateSubnet1/DefaultRoute\"}}, \"VpcPrivateSubnet2Subnet3788AAA1\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"aws-fargate-application-autoscaling/Vpc/PrivateSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"aws-fargate-application-autoscaling/Vpc/PrivateSubnet2/Subnet\"}}, \"VpcPrivateSubnet2RouteTableA678073B\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-fargate-application-autoscaling/Vpc/PrivateSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"aws-fargate-application-autoscaling/Vpc/PrivateSubnet2/RouteTable\"}}, \"VpcPrivateSubnet2RouteTableAssociationA89CAD56\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet2RouteTableA678073B\"}, \"SubnetId\": {\"Ref\": \"VpcPrivateSubnet2Subnet3788AAA1\"}}, \"Metadata\": {\"aws:cdk:path\": \"aws-fargate-application-autoscaling/Vpc/PrivateSubnet2/RouteTableAssociation\"}}, \"VpcPrivateSubnet2DefaultRoute060D2087\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VpcPrivateSubnet2RouteTableA678073B\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VpcPublicSubnet2NATGateway9182C01D\"}}, \"Metadata\": {\"aws:cdk:path\": \"aws-fargate-application-autoscaling/Vpc/PrivateSubnet2/DefaultRoute\"}}, \"VpcIGWD7BA715C\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"aws-fargate-application-autoscaling/Vpc\"}]}, \"Metadata\": {\"aws:cdk:path\": \"aws-fargate-application-autoscaling/Vpc/IGW\"}}, \"VpcVPCGWBF912B6E\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"Vpc8378EB38\"}, \"InternetGatewayId\": {\"Ref\": \"VpcIGWD7BA715C\"}}, \"Metadata\": {\"aws:cdk:path\": \"aws-fargate-application-autoscaling/Vpc/VPCGW\"}}, \"fargateserviceautoscalingD107CF93\": {\"Type\": \"AWS::ECS::Cluster\", \"Metadata\": {\"aws:cdk:path\": \"aws-fargate-application-autoscaling/fargate-service-autoscaling/Resource\"}}, \"sampleappLBBDE1D276\": {\"Type\": \"AWS::ElasticLoadBalancingV2::LoadBalancer\", \"Properties\": {\"LoadBalancerAttributes\": [{\"Key\": \"deletion_protection.enabled\", \"Value\": \"false\"}], \"Scheme\": \"internet-facing\", \"Subnets\": [{\"Ref\": \"VpcPublicSubnet1Subnet5C2D37C4\"}, {\"Ref\": \"VpcPublicSubnet2Subnet691E08A3\"}], \"Type\": \"network\"}, \"DependsOn\": [\"VpcPublicSubnet1DefaultRoute3DA9E72A\", \"VpcPublicSubnet1RouteTableAssociation97140677\", \"VpcPublicSubnet2DefaultRoute97F91067\", \"VpcPublicSubnet2RouteTableAssociationDD5762D8\"], \"Metadata\": {\"aws:cdk:path\": \"aws-fargate-application-autoscaling/sample-app/LB/Resource\"}}, \"sampleappLBPublicListenerC4DF6480\": {\"Type\": \"AWS::ElasticLoadBalancingV2::Listener\", \"Properties\": {\"DefaultActions\": [{\"TargetGroupArn\": {\"Ref\": \"sampleappLBPublicListenerECSGroup525A567D\"}, \"Type\": \"forward\"}], \"LoadBalancerArn\": {\"Ref\": \"sampleappLBBDE1D276\"}, \"Port\": 80, \"Protocol\": \"TCP\"}, \"Metadata\": {\"aws:cdk:path\": \"aws-fargate-application-autoscaling/sample-app/LB/PublicListener/Resource\"}}, \"sampleappLBPublicListenerECSGroup525A567D\": {\"Type\": \"AWS::ElasticLoadBalancingV2::TargetGroup\", \"Properties\": {\"Port\": 80, \"Protocol\": \"TCP\", \"TargetType\": \"ip\", \"VpcId\": {\"Ref\": \"Vpc8378EB38\"}}, \"Metadata\": {\"aws:cdk:path\": \"aws-fargate-application-autoscaling/sample-app/LB/PublicListener/ECSGroup/Resource\"}}, \"sampleappTaskDefTaskRoleB530CAC0\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"ecs-tasks.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}, \"Metadata\": {\"aws:cdk:path\": \"aws-fargate-application-autoscaling/sample-app/TaskDef/TaskRole/Resource\"}}, \"sampleappTaskDef6BF75736\": {\"Type\": \"AWS::ECS::TaskDefinition\", \"Properties\": {\"ContainerDefinitions\": [{\"Essential\": true, \"Image\": \"amazon/amazon-ecs-sample\", \"LogConfiguration\": {\"LogDriver\": \"awslogs\", \"Options\": {\"awslogs-group\": {\"Ref\": \"sampleappTaskDefwebLogGroup34BE8C79\"}, \"awslogs-stream-prefix\": \"sample-app\", \"awslogs-region\": {\"Ref\": \"AWS::Region\"}}}, \"Name\": \"web\", \"PortMappings\": [{\"ContainerPort\": 80, \"Protocol\": \"tcp\"}]}], \"Cpu\": \"256\", \"ExecutionRoleArn\": {\"Fn::GetAtt\": [\"sampleappTaskDefExecutionRoleAD6F4C40\", \"Arn\"]}, \"Family\": \"awsfargateapplicationautoscalingsampleappTaskDefBB7514EF\", \"Memory\": \"512\", \"NetworkMode\": \"awsvpc\", \"RequiresCompatibilities\": [\"FARGATE\"], \"TaskRoleArn\": {\"Fn::GetAtt\": [\"sampleappTaskDefTaskRoleB530CAC0\", \"Arn\"]}}, \"Metadata\": {\"aws:cdk:path\": \"aws-fargate-application-autoscaling/sample-app/TaskDef/Resource\"}}, \"sampleappTaskDefwebLogGroup34BE8C79\": {\"Type\": \"AWS::Logs::LogGroup\", \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\", \"Metadata\": {\"aws:cdk:path\": \"aws-fargate-application-autoscaling/sample-app/TaskDef/web/LogGroup/Resource\"}}, \"sampleappTaskDefExecutionRoleAD6F4C40\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"ecs-tasks.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}, \"Metadata\": {\"aws:cdk:path\": \"aws-fargate-application-autoscaling/sample-app/TaskDef/ExecutionRole/Resource\"}}, \"sampleappTaskDefExecutionRoleDefaultPolicy0AD15374\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"sampleappTaskDefwebLogGroup34BE8C79\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"sampleappTaskDefExecutionRoleDefaultPolicy0AD15374\", \"Roles\": [{\"Ref\": \"sampleappTaskDefExecutionRoleAD6F4C40\"}]}, \"Metadata\": {\"aws:cdk:path\": \"aws-fargate-application-autoscaling/sample-app/TaskDef/ExecutionRole/DefaultPolicy/Resource\"}}, \"sampleappServiceE7504FDB\": {\"Type\": \"AWS::ECS::Service\", \"Properties\": {\"Cluster\": {\"Ref\": \"fargateserviceautoscalingD107CF93\"}, \"DeploymentConfiguration\": {\"Alarms\": {\"AlarmNames\": [], \"Enable\": false, \"Rollback\": false}, \"MaximumPercent\": 200, \"MinimumHealthyPercent\": 50}, \"EnableECSManagedTags\": false, \"HealthCheckGracePeriodSeconds\": 60, \"LaunchType\": \"FARGATE\", \"LoadBalancers\": [{\"ContainerName\": \"web\", \"ContainerPort\": 80, \"TargetGroupArn\": {\"Ref\": \"sampleappLBPublicListenerECSGroup525A567D\"}}], \"NetworkConfiguration\": {\"AwsvpcConfiguration\": {\"AssignPublicIp\": \"DISABLED\", \"SecurityGroups\": [{\"Fn::GetAtt\": [\"sampleappServiceSecurityGroup0ABF0D21\", \"GroupId\"]}], \"Subnets\": [{\"Ref\": \"VpcPrivateSubnet1Subnet536B997A\"}, {\"Ref\": \"VpcPrivateSubnet2Subnet3788AAA1\"}]}}, \"TaskDefinition\": {\"Ref\": \"sampleappTaskDef6BF75736\"}}, \"DependsOn\": [\"sampleappLBPublicListenerECSGroup525A567D\", \"sampleappLBPublicListenerC4DF6480\", \"sampleappTaskDefTaskRoleB530CAC0\"], \"Metadata\": {\"aws:cdk:path\": \"aws-fargate-application-autoscaling/sample-app/Service/Service\"}}, \"sampleappServiceSecurityGroup0ABF0D21\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"aws-fargate-application-autoscaling/sample-app/Service/SecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"VpcId\": {\"Ref\": \"Vpc8378EB38\"}}, \"DependsOn\": [\"sampleappTaskDefTaskRoleB530CAC0\"], \"Metadata\": {\"aws:cdk:path\": \"aws-fargate-application-autoscaling/sample-app/Service/SecurityGroup/Resource\"}}, \"sampleappServiceTaskCountTargetE827DC30\": {\"Type\": \"AWS::ApplicationAutoScaling::ScalableTarget\", \"Properties\": {\"MaxCapacity\": 2, \"MinCapacity\": 1, \"ResourceId\": {\"Fn::Join\": [\"\", [\"service/\", {\"Ref\": \"fargateserviceautoscalingD107CF93\"}, \"/\", {\"Fn::GetAtt\": [\"sampleappServiceE7504FDB\", \"Name\"]}]]}, \"ScalableDimension\": \"ecs:service:DesiredCount\", \"ServiceNamespace\": \"ecs\", \"RoleARN\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService\"]]}}, \"DependsOn\": [\"sampleappTaskDefTaskRoleB530CAC0\"], \"Metadata\": {\"aws:cdk:path\": \"aws-fargate-application-autoscaling/sample-app/Service/TaskCount/Target/Resource\"}}, \"sampleappServiceTaskCountTargetCpuScalingF4452F80\": {\"Type\": \"AWS::ApplicationAutoScaling::ScalingPolicy\", \"Properties\": {\"PolicyName\": \"awsfargateapplicationautoscalingsampleappServiceTaskCountTargetCpuScalingD4ABC44A\", \"PolicyType\": \"TargetTrackingScaling\", \"ScalingTargetId\": {\"Ref\": \"sampleappServiceTaskCountTargetE827DC30\"}, \"TargetTrackingScalingPolicyConfiguration\": {\"PredefinedMetricSpecification\": {\"PredefinedMetricType\": \"ECSServiceAverageCPUUtilization\"}, \"ScaleInCooldown\": 60, \"ScaleOutCooldown\": 60, \"TargetValue\": 50}}, \"DependsOn\": [\"sampleappTaskDefTaskRoleB530CAC0\"], \"Metadata\": {\"aws:cdk:path\": \"aws-fargate-application-autoscaling/sample-app/Service/TaskCount/Target/CpuScaling/Resource\"}}, \"CDKMetadata\": {\"Type\": \"AWS::CDK::Metadata\", \"Properties\": {\"Analytics\": \"v2:deflate64:H4sIAAAAAAAA/2VSTU/DMAz9LdyzALvAFcaHkBBU68QVuak3wrqkSpxNqOp/x0nadYOTX178+ey5vL2RVxdw8DNVb2eNrmRXEqitYOqzQzWX3UerxGJtPoqFKELVaFWGyiBFbkJLGwhXUDU48RN3571VGkhbc3SO4PGliOYN6BkID/AjCqf3DKfEL4bQMR4dcifD6464168dGhIlquA0/Tw7G9rUwynRC1RedosmeE4Xv0f4BG4DsU2/fcC1Nnps8i9jDYE26E64IbZEt9cqDz7AUkETB49JFjYYSg18tkBxGi/fkA7WbV8t1PfsaRTWf5JhA560atijSh7abPa8jf+RaZyz9+ijeUIz/I94+FtxNRZ1FOvk2QsNO9ktbV5lsoXltSftM+pFYzes56vdHFOMuBfQtuyUtg2BrGctuHk+rKMosViS65zJZuX4/jigzHFT7TOi78USvQ0uC/8eqA35Ek9YXlqdVtULY2uU3/5yf30r53zy317rmePN6B3KZba/4KHpLw4DAAA=\"}, \"Metadata\": {\"aws:cdk:path\": \"aws-fargate-application-autoscaling/CDKMetadata/Default\"}, \"Condition\": \"CDKMetadataAvailable\"}}, \"Outputs\": {\"sampleappLoadBalancerDNS19B00097\": {\"Value\": {\"Fn::GetAtt\": [\"sampleappLBBDE1D276\", \"DNSName\"]}}, \"LoadBalancerDNS\": {\"Value\": {\"Fn::GetAtt\": [\"sampleappLBBDE1D276\", \"DNSName\"]}}}, \"Conditions\": {\"CDKMetadataAvailable\": {\"Fn::Or\": [{\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"af-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ca-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-northwest-1\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-3\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"me-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"sa-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-2\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-2\"]}]}]}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import ecs = require('aws-cdk-lib/aws-ecs');\nimport ecs_patterns = require('aws-cdk-lib/aws-ecs-patterns');\nimport ec2 = require('aws-cdk-lib/aws-ec2');\nimport cdk = require('aws-cdk-lib');\n\nclass AutoScalingFargateService extends cdk.Stack {\n  constructor(scope: cdk.App, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n\n    // Create a cluster\n    const vpc = new ec2.Vpc(this, 'Vpc', { maxAzs: 2 });\n    const cluster = new ecs.Cluster(this, 'fargate-service-autoscaling', { vpc });\n\n    // Create Fargate Service\n    const fargateService = new ecs_patterns.NetworkLoadBalancedFargateService(this, 'sample-app', {\n      cluster,\n      taskImageOptions: {\n        image: ecs.ContainerImage.fromRegistry(\"amazon/amazon-ecs-sample\")\n      },\n    });\n\n    // Setup AutoScaling policy\n    const scaling = fargateService.service.autoScaleTaskCount({ maxCapacity: 2 });\n    scaling.scaleOnCpuUtilization('CpuScaling', {\n      targetUtilizationPercent: 50,\n      scaleInCooldown: cdk.Duration.seconds(60),\n      scaleOutCooldown: cdk.Duration.seconds(60)\n    });\n\n    new cdk.CfnOutput(this, 'LoadBalancerDNS', { value: fargateService.loadBalancer.loadBalancerDnsName });\n  }\n}\n\nconst app = new cdk.App();\n\nnew AutoScalingFargateService(app, 'aws-fargate-application-autoscaling');\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"DefaultVpc9C464D36\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"FargateEfsDemo01/DefaultVpc\"}]}, \"Metadata\": {\"aws:cdk:path\": \"FargateEfsDemo01/DefaultVpc/Resource\"}}, \"DefaultVpcPublicSubnet1Subnet3291438E\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"DefaultVpc9C464D36\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"FargateEfsDemo01/DefaultVpc/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"FargateEfsDemo01/DefaultVpc/PublicSubnet1/Subnet\"}}, \"DefaultVpcPublicSubnet1RouteTableF86E4C43\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"DefaultVpc9C464D36\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"FargateEfsDemo01/DefaultVpc/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"FargateEfsDemo01/DefaultVpc/PublicSubnet1/RouteTable\"}}, \"DefaultVpcPublicSubnet1RouteTableAssociation245D3F7D\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"DefaultVpcPublicSubnet1RouteTableF86E4C43\"}, \"SubnetId\": {\"Ref\": \"DefaultVpcPublicSubnet1Subnet3291438E\"}}, \"Metadata\": {\"aws:cdk:path\": \"FargateEfsDemo01/DefaultVpc/PublicSubnet1/RouteTableAssociation\"}}, \"DefaultVpcPublicSubnet1DefaultRoute45A8DE65\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"DefaultVpcPublicSubnet1RouteTableF86E4C43\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"DefaultVpcIGW7BBC1839\"}}, \"DependsOn\": [\"DefaultVpcVPCGW06AA3F46\"], \"Metadata\": {\"aws:cdk:path\": \"FargateEfsDemo01/DefaultVpc/PublicSubnet1/DefaultRoute\"}}, \"DefaultVpcPublicSubnet1EIP2980B4CA\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"FargateEfsDemo01/DefaultVpc/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"FargateEfsDemo01/DefaultVpc/PublicSubnet1/EIP\"}}, \"DefaultVpcPublicSubnet1NATGatewayE4A3A5E0\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"DefaultVpcPublicSubnet1Subnet3291438E\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"DefaultVpcPublicSubnet1EIP2980B4CA\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"FargateEfsDemo01/DefaultVpc/PublicSubnet1\"}]}, \"DependsOn\": [\"DefaultVpcPublicSubnet1DefaultRoute45A8DE65\", \"DefaultVpcPublicSubnet1RouteTableAssociation245D3F7D\"], \"Metadata\": {\"aws:cdk:path\": \"FargateEfsDemo01/DefaultVpc/PublicSubnet1/NATGateway\"}}, \"DefaultVpcPublicSubnet2Subnet51DA12C2\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"DefaultVpc9C464D36\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"FargateEfsDemo01/DefaultVpc/PublicSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"FargateEfsDemo01/DefaultVpc/PublicSubnet2/Subnet\"}}, \"DefaultVpcPublicSubnet2RouteTableB6A736FC\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"DefaultVpc9C464D36\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"FargateEfsDemo01/DefaultVpc/PublicSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"FargateEfsDemo01/DefaultVpc/PublicSubnet2/RouteTable\"}}, \"DefaultVpcPublicSubnet2RouteTableAssociation2210F91F\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"DefaultVpcPublicSubnet2RouteTableB6A736FC\"}, \"SubnetId\": {\"Ref\": \"DefaultVpcPublicSubnet2Subnet51DA12C2\"}}, \"Metadata\": {\"aws:cdk:path\": \"FargateEfsDemo01/DefaultVpc/PublicSubnet2/RouteTableAssociation\"}}, \"DefaultVpcPublicSubnet2DefaultRoute434E9D5C\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"DefaultVpcPublicSubnet2RouteTableB6A736FC\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"DefaultVpcIGW7BBC1839\"}}, \"DependsOn\": [\"DefaultVpcVPCGW06AA3F46\"], \"Metadata\": {\"aws:cdk:path\": \"FargateEfsDemo01/DefaultVpc/PublicSubnet2/DefaultRoute\"}}, \"DefaultVpcPublicSubnet2EIP354166DF\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"FargateEfsDemo01/DefaultVpc/PublicSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"FargateEfsDemo01/DefaultVpc/PublicSubnet2/EIP\"}}, \"DefaultVpcPublicSubnet2NATGatewayFFF557DD\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"DefaultVpcPublicSubnet2Subnet51DA12C2\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"DefaultVpcPublicSubnet2EIP354166DF\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"FargateEfsDemo01/DefaultVpc/PublicSubnet2\"}]}, \"DependsOn\": [\"DefaultVpcPublicSubnet2DefaultRoute434E9D5C\", \"DefaultVpcPublicSubnet2RouteTableAssociation2210F91F\"], \"Metadata\": {\"aws:cdk:path\": \"FargateEfsDemo01/DefaultVpc/PublicSubnet2/NATGateway\"}}, \"DefaultVpcPrivateSubnet1SubnetD0414770\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"DefaultVpc9C464D36\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"FargateEfsDemo01/DefaultVpc/PrivateSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"FargateEfsDemo01/DefaultVpc/PrivateSubnet1/Subnet\"}}, \"DefaultVpcPrivateSubnet1RouteTable0E257B09\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"DefaultVpc9C464D36\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"FargateEfsDemo01/DefaultVpc/PrivateSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"FargateEfsDemo01/DefaultVpc/PrivateSubnet1/RouteTable\"}}, \"DefaultVpcPrivateSubnet1RouteTableAssociationC4C941DC\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"DefaultVpcPrivateSubnet1RouteTable0E257B09\"}, \"SubnetId\": {\"Ref\": \"DefaultVpcPrivateSubnet1SubnetD0414770\"}}, \"Metadata\": {\"aws:cdk:path\": \"FargateEfsDemo01/DefaultVpc/PrivateSubnet1/RouteTableAssociation\"}}, \"DefaultVpcPrivateSubnet1DefaultRoute335E2070\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"DefaultVpcPrivateSubnet1RouteTable0E257B09\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"DefaultVpcPublicSubnet1NATGatewayE4A3A5E0\"}}, \"Metadata\": {\"aws:cdk:path\": \"FargateEfsDemo01/DefaultVpc/PrivateSubnet1/DefaultRoute\"}}, \"DefaultVpcPrivateSubnet2SubnetA354715E\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"DefaultVpc9C464D36\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"FargateEfsDemo01/DefaultVpc/PrivateSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"FargateEfsDemo01/DefaultVpc/PrivateSubnet2/Subnet\"}}, \"DefaultVpcPrivateSubnet2RouteTableCC0EB33B\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"DefaultVpc9C464D36\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"FargateEfsDemo01/DefaultVpc/PrivateSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"FargateEfsDemo01/DefaultVpc/PrivateSubnet2/RouteTable\"}}, \"DefaultVpcPrivateSubnet2RouteTableAssociation717BAD40\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"DefaultVpcPrivateSubnet2RouteTableCC0EB33B\"}, \"SubnetId\": {\"Ref\": \"DefaultVpcPrivateSubnet2SubnetA354715E\"}}, \"Metadata\": {\"aws:cdk:path\": \"FargateEfsDemo01/DefaultVpc/PrivateSubnet2/RouteTableAssociation\"}}, \"DefaultVpcPrivateSubnet2DefaultRoute0219CC7B\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"DefaultVpcPrivateSubnet2RouteTableCC0EB33B\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"DefaultVpcPublicSubnet2NATGatewayFFF557DD\"}}, \"Metadata\": {\"aws:cdk:path\": \"FargateEfsDemo01/DefaultVpc/PrivateSubnet2/DefaultRoute\"}}, \"DefaultVpcIGW7BBC1839\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"FargateEfsDemo01/DefaultVpc\"}]}, \"Metadata\": {\"aws:cdk:path\": \"FargateEfsDemo01/DefaultVpc/IGW\"}}, \"DefaultVpcVPCGW06AA3F46\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"DefaultVpc9C464D36\"}, \"InternetGatewayId\": {\"Ref\": \"DefaultVpcIGW7BBC1839\"}}, \"Metadata\": {\"aws:cdk:path\": \"FargateEfsDemo01/DefaultVpc/VPCGW\"}}, \"DefaultEcsCluster72E274FB\": {\"Type\": \"AWS::ECS::Cluster\", \"Metadata\": {\"aws:cdk:path\": \"FargateEfsDemo01/DefaultEcsCluster/Resource\"}}, \"MyEfsFileSystem570A3D32\": {\"Type\": \"AWS::EFS::FileSystem\", \"Properties\": {\"Encrypted\": true, \"FileSystemTags\": [{\"Key\": \"Name\", \"Value\": \"FargateEfsDemo01/MyEfsFileSystem\"}], \"LifecyclePolicies\": [{\"TransitionToIA\": \"AFTER_14_DAYS\"}], \"PerformanceMode\": \"generalPurpose\", \"ThroughputMode\": \"bursting\"}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\", \"Metadata\": {\"aws:cdk:path\": \"FargateEfsDemo01/MyEfsFileSystem/Resource\"}}, \"MyEfsFileSystemEfsSecurityGroupAF3B3237\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"FargateEfsDemo01/MyEfsFileSystem/EfsSecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"Tags\": [{\"Key\": \"Name\", \"Value\": \"FargateEfsDemo01/MyEfsFileSystem\"}], \"VpcId\": {\"Ref\": \"DefaultVpc9C464D36\"}}, \"Metadata\": {\"aws:cdk:path\": \"FargateEfsDemo01/MyEfsFileSystem/EfsSecurityGroup/Resource\"}}, \"MyEfsFileSystemEfsSecurityGroupfromFargateEfsDemo01Service01ServiceSecurityGroupA18A6923204931782978\": {\"Type\": \"AWS::EC2::SecurityGroupIngress\", \"Properties\": {\"IpProtocol\": \"tcp\", \"Description\": \"from FargateEfsDemo01Service01ServiceSecurityGroupA18A6923:2049\", \"FromPort\": 2049, \"GroupId\": {\"Fn::GetAtt\": [\"MyEfsFileSystemEfsSecurityGroupAF3B3237\", \"GroupId\"]}, \"SourceSecurityGroupId\": {\"Fn::GetAtt\": [\"Service01ServiceSecurityGroup8E0F19CD\", \"GroupId\"]}, \"ToPort\": 2049}, \"Metadata\": {\"aws:cdk:path\": \"FargateEfsDemo01/MyEfsFileSystem/EfsSecurityGroup/from FargateEfsDemo01Service01ServiceSecurityGroupA18A6923:2049\"}}, \"MyEfsFileSystemEfsMountTarget113745499\": {\"Type\": \"AWS::EFS::MountTarget\", \"Properties\": {\"FileSystemId\": {\"Ref\": \"MyEfsFileSystem570A3D32\"}, \"SecurityGroups\": [{\"Fn::GetAtt\": [\"MyEfsFileSystemEfsSecurityGroupAF3B3237\", \"GroupId\"]}], \"SubnetId\": {\"Ref\": \"DefaultVpcPrivateSubnet1SubnetD0414770\"}}, \"Metadata\": {\"aws:cdk:path\": \"FargateEfsDemo01/MyEfsFileSystem/EfsMountTarget1\"}}, \"MyEfsFileSystemEfsMountTarget2E02D6819\": {\"Type\": \"AWS::EFS::MountTarget\", \"Properties\": {\"FileSystemId\": {\"Ref\": \"MyEfsFileSystem570A3D32\"}, \"SecurityGroups\": [{\"Fn::GetAtt\": [\"MyEfsFileSystemEfsSecurityGroupAF3B3237\", \"GroupId\"]}], \"SubnetId\": {\"Ref\": \"DefaultVpcPrivateSubnet2SubnetA354715E\"}}, \"Metadata\": {\"aws:cdk:path\": \"FargateEfsDemo01/MyEfsFileSystem/EfsMountTarget2\"}}, \"EfsAccessPoint787A4929\": {\"Type\": \"Custom::AWS\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"AWS679f53fac002430cb0da5b7982bd22872D164C4C\", \"Arn\"]}, \"Create\": {\"Fn::Join\": [\"\", [\"{\\\"service\\\":\\\"EFS\\\",\\\"action\\\":\\\"createAccessPoint\\\",\\\"parameters\\\":{\\\"FileSystemId\\\":\\\"\", {\"Ref\": \"MyEfsFileSystem570A3D32\"}, \"\\\",\\\"PosixUser\\\":{\\\"Gid\\\":1000,\\\"Uid\\\":1000},\\\"RootDirectory\\\":{\\\"CreationInfo\\\":{\\\"OwnerGid\\\":1000,\\\"OwnerUid\\\":1000,\\\"Permissions\\\":\\\"755\\\"},\\\"Path\\\":\\\"/uploads\\\"},\\\"Tags\\\":[{\\\"Key\\\":\\\"Name\\\",\\\"Value\\\":\\\"ecsuploads\\\"}]},\\\"physicalResourceId\\\":{\\\"id\\\":\\\"12121212121\\\"}}\"]]}, \"Update\": {\"Fn::Join\": [\"\", [\"{\\\"service\\\":\\\"EFS\\\",\\\"action\\\":\\\"createAccessPoint\\\",\\\"parameters\\\":{\\\"FileSystemId\\\":\\\"\", {\"Ref\": \"MyEfsFileSystem570A3D32\"}, \"\\\",\\\"PosixUser\\\":{\\\"Gid\\\":1000,\\\"Uid\\\":1000},\\\"RootDirectory\\\":{\\\"CreationInfo\\\":{\\\"OwnerGid\\\":1000,\\\"OwnerUid\\\":1000,\\\"Permissions\\\":\\\"755\\\"},\\\"Path\\\":\\\"/uploads\\\"},\\\"Tags\\\":[{\\\"Key\\\":\\\"Name\\\",\\\"Value\\\":\\\"ecsuploads\\\"}]},\\\"physicalResourceId\\\":{\\\"id\\\":\\\"12121212121\\\"}}\"]]}, \"InstallLatestAwsSdk\": true}, \"DependsOn\": [\"EfsAccessPointCustomResourcePolicy53C5502D\", \"MyEfsFileSystemEfsMountTarget113745499\", \"MyEfsFileSystemEfsMountTarget2E02D6819\", \"MyEfsFileSystemEfsSecurityGroupfromFargateEfsDemo01Service01ServiceSecurityGroupA18A6923204931782978\", \"MyEfsFileSystemEfsSecurityGroupAF3B3237\", \"MyEfsFileSystem570A3D32\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\", \"Metadata\": {\"aws:cdk:path\": \"FargateEfsDemo01/EfsAccessPoint/Resource/Default\"}}, \"EfsAccessPointCustomResourcePolicy53C5502D\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"elasticfilesystem:CreateAccessPoint\", \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"EfsAccessPointCustomResourcePolicy53C5502D\", \"Roles\": [{\"Ref\": \"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\"}]}, \"DependsOn\": [\"MyEfsFileSystemEfsMountTarget113745499\", \"MyEfsFileSystemEfsMountTarget2E02D6819\", \"MyEfsFileSystemEfsSecurityGroupfromFargateEfsDemo01Service01ServiceSecurityGroupA18A6923204931782978\", \"MyEfsFileSystemEfsSecurityGroupAF3B3237\", \"MyEfsFileSystem570A3D32\"], \"Metadata\": {\"aws:cdk:path\": \"FargateEfsDemo01/EfsAccessPoint/CustomResourcePolicy/Resource\"}}, \"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}, \"Metadata\": {\"aws:cdk:path\": \"FargateEfsDemo01/AWS679f53fac002430cb0da5b7982bd2287/ServiceRole/Resource\"}}, \"AWS679f53fac002430cb0da5b7982bd22872D164C4C\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"d62cd506a0f4ef6a29d7a97e2a02d80bc8248142ce428543cfbf0d84b3c116a2.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\", \"Arn\"]}, \"Handler\": \"index.handler\", \"Runtime\": \"nodejs18.x\", \"Timeout\": 120}, \"DependsOn\": [\"AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2\"], \"Metadata\": {\"aws:cdk:path\": \"FargateEfsDemo01/AWS679f53fac002430cb0da5b7982bd2287/Resource\", \"aws:asset:path\": \"asset.d62cd506a0f4ef6a29d7a97e2a02d80bc8248142ce428543cfbf0d84b3c116a2\", \"aws:asset:is-bundled\": false, \"aws:asset:property\": \"Code\"}}, \"MyTaskDefinitionTaskRole93FBB305\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"ecs-tasks.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}, \"Metadata\": {\"aws:cdk:path\": \"FargateEfsDemo01/MyTaskDefinition/TaskRole/Resource\"}}, \"MyTaskDefinitionF5B350B4\": {\"Type\": \"AWS::ECS::TaskDefinition\", \"Properties\": {\"ContainerDefinitions\": [{\"Essential\": true, \"Image\": \"coderaiser/cloudcmd\", \"Name\": \"MyContainerDefinition\", \"PortMappings\": [{\"ContainerPort\": 8000, \"Protocol\": \"tcp\"}]}], \"Cpu\": \"256\", \"Family\": \"FargateEfsDemo01MyTaskDefinition01A0B9B7\", \"Memory\": \"512\", \"NetworkMode\": \"awsvpc\", \"RequiresCompatibilities\": [\"FARGATE\"], \"TaskRoleArn\": {\"Fn::GetAtt\": [\"MyTaskDefinitionTaskRole93FBB305\", \"Arn\"]}}, \"Metadata\": {\"aws:cdk:path\": \"FargateEfsDemo01/MyTaskDefinition/Resource\"}}, \"Service01LB5B16E367\": {\"Type\": \"AWS::ElasticLoadBalancingV2::LoadBalancer\", \"Properties\": {\"LoadBalancerAttributes\": [{\"Key\": \"deletion_protection.enabled\", \"Value\": \"false\"}], \"Scheme\": \"internet-facing\", \"SecurityGroups\": [{\"Fn::GetAtt\": [\"Service01LBSecurityGroup9E9E5EDB\", \"GroupId\"]}], \"Subnets\": [{\"Ref\": \"DefaultVpcPublicSubnet1Subnet3291438E\"}, {\"Ref\": \"DefaultVpcPublicSubnet2Subnet51DA12C2\"}], \"Type\": \"application\"}, \"DependsOn\": [\"DefaultVpcPublicSubnet1DefaultRoute45A8DE65\", \"DefaultVpcPublicSubnet1RouteTableAssociation245D3F7D\", \"DefaultVpcPublicSubnet2DefaultRoute434E9D5C\", \"DefaultVpcPublicSubnet2RouteTableAssociation2210F91F\"], \"Metadata\": {\"aws:cdk:path\": \"FargateEfsDemo01/Service01/LB/Resource\"}}, \"Service01LBSecurityGroup9E9E5EDB\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"Automatically created Security Group for ELB FargateEfsDemo01Service01LB95A05955\", \"SecurityGroupIngress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow from anyone on port 80\", \"FromPort\": 80, \"IpProtocol\": \"tcp\", \"ToPort\": 80}], \"VpcId\": {\"Ref\": \"DefaultVpc9C464D36\"}}, \"Metadata\": {\"aws:cdk:path\": \"FargateEfsDemo01/Service01/LB/SecurityGroup/Resource\"}}, \"Service01LBSecurityGrouptoFargateEfsDemo01Service01ServiceSecurityGroupA18A692380000284AB0C\": {\"Type\": \"AWS::EC2::SecurityGroupEgress\", \"Properties\": {\"GroupId\": {\"Fn::GetAtt\": [\"Service01LBSecurityGroup9E9E5EDB\", \"GroupId\"]}, \"IpProtocol\": \"tcp\", \"Description\": \"Load balancer to target\", \"DestinationSecurityGroupId\": {\"Fn::GetAtt\": [\"Service01ServiceSecurityGroup8E0F19CD\", \"GroupId\"]}, \"FromPort\": 8000, \"ToPort\": 8000}, \"Metadata\": {\"aws:cdk:path\": \"FargateEfsDemo01/Service01/LB/SecurityGroup/to FargateEfsDemo01Service01ServiceSecurityGroupA18A6923:8000\"}}, \"Service01LBPublicListenerE149F2AA\": {\"Type\": \"AWS::ElasticLoadBalancingV2::Listener\", \"Properties\": {\"DefaultActions\": [{\"TargetGroupArn\": {\"Ref\": \"Service01LBPublicListenerECSGroupC15AA389\"}, \"Type\": \"forward\"}], \"LoadBalancerArn\": {\"Ref\": \"Service01LB5B16E367\"}, \"Port\": 80, \"Protocol\": \"HTTP\"}, \"Metadata\": {\"aws:cdk:path\": \"FargateEfsDemo01/Service01/LB/PublicListener/Resource\"}}, \"Service01LBPublicListenerECSGroupC15AA389\": {\"Type\": \"AWS::ElasticLoadBalancingV2::TargetGroup\", \"Properties\": {\"Port\": 80, \"Protocol\": \"HTTP\", \"TargetGroupAttributes\": [{\"Key\": \"stickiness.enabled\", \"Value\": \"false\"}, {\"Key\": \"deregistration_delay.timeout_seconds\", \"Value\": \"30\"}], \"TargetType\": \"ip\", \"VpcId\": {\"Ref\": \"DefaultVpc9C464D36\"}}, \"Metadata\": {\"aws:cdk:path\": \"FargateEfsDemo01/Service01/LB/PublicListener/ECSGroup/Resource\"}}, \"Service01Service20C10D3C\": {\"Type\": \"AWS::ECS::Service\", \"Properties\": {\"Cluster\": {\"Ref\": \"DefaultEcsCluster72E274FB\"}, \"DeploymentConfiguration\": {\"Alarms\": {\"AlarmNames\": [], \"Enable\": false, \"Rollback\": false}, \"MaximumPercent\": 200, \"MinimumHealthyPercent\": 50}, \"DesiredCount\": 2, \"EnableECSManagedTags\": false, \"HealthCheckGracePeriodSeconds\": 60, \"LaunchType\": \"FARGATE\", \"LoadBalancers\": [{\"ContainerName\": \"MyContainerDefinition\", \"ContainerPort\": 8000, \"TargetGroupArn\": {\"Ref\": \"Service01LBPublicListenerECSGroupC15AA389\"}}], \"NetworkConfiguration\": {\"AwsvpcConfiguration\": {\"AssignPublicIp\": \"DISABLED\", \"SecurityGroups\": [{\"Fn::GetAtt\": [\"Service01ServiceSecurityGroup8E0F19CD\", \"GroupId\"]}], \"Subnets\": [{\"Ref\": \"DefaultVpcPrivateSubnet1SubnetD0414770\"}, {\"Ref\": \"DefaultVpcPrivateSubnet2SubnetA354715E\"}]}}, \"PlatformVersion\": \"1.4.0\", \"TaskDefinition\": {\"Ref\": \"MyTaskDefinitionF5B350B4\"}}, \"DependsOn\": [\"MyTaskDefinitionTaskRole93FBB305\", \"Service01LBPublicListenerECSGroupC15AA389\", \"Service01LBPublicListenerE149F2AA\"], \"Metadata\": {\"aws:cdk:path\": \"FargateEfsDemo01/Service01/Service/Service\"}}, \"Service01ServiceSecurityGroup8E0F19CD\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"FargateEfsDemo01/Service01/Service/SecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"VpcId\": {\"Ref\": \"DefaultVpc9C464D36\"}}, \"DependsOn\": [\"MyTaskDefinitionTaskRole93FBB305\"], \"Metadata\": {\"aws:cdk:path\": \"FargateEfsDemo01/Service01/Service/SecurityGroup/Resource\"}}, \"Service01ServiceSecurityGroupfromFargateEfsDemo01Service01LBSecurityGroup5E60572F8000BC057E52\": {\"Type\": \"AWS::EC2::SecurityGroupIngress\", \"Properties\": {\"IpProtocol\": \"tcp\", \"Description\": \"Load balancer to target\", \"FromPort\": 8000, \"GroupId\": {\"Fn::GetAtt\": [\"Service01ServiceSecurityGroup8E0F19CD\", \"GroupId\"]}, \"SourceSecurityGroupId\": {\"Fn::GetAtt\": [\"Service01LBSecurityGroup9E9E5EDB\", \"GroupId\"]}, \"ToPort\": 8000}, \"DependsOn\": [\"MyTaskDefinitionTaskRole93FBB305\"], \"Metadata\": {\"aws:cdk:path\": \"FargateEfsDemo01/Service01/Service/SecurityGroup/from FargateEfsDemo01Service01LBSecurityGroup5E60572F:8000\"}}, \"FargateEfsCustomResourceMyProviderframeworkonEventServiceRoleF9EAE9F0\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}, \"DependsOn\": [\"Service01LBPublicListenerECSGroupC15AA389\", \"Service01LBPublicListenerE149F2AA\", \"Service01LB5B16E367\", \"Service01LBSecurityGroup9E9E5EDB\", \"Service01LBSecurityGrouptoFargateEfsDemo01Service01ServiceSecurityGroupA18A692380000284AB0C\", \"Service01ServiceSecurityGroupfromFargateEfsDemo01Service01LBSecurityGroup5E60572F8000BC057E52\", \"Service01ServiceSecurityGroup8E0F19CD\", \"Service01Service20C10D3C\"], \"Metadata\": {\"aws:cdk:path\": \"FargateEfsDemo01/FargateEfsCustomResource/MyProvider/framework-onEvent/ServiceRole/Resource\"}}, \"FargateEfsCustomResourceMyProviderframeworkonEventServiceRoleDefaultPolicyA635BB31\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"lambda:InvokeFunction\", \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"SingletonLambdaf7d4f7304ee111e89c2dfa7ae01bbebc492C6E5C\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"SingletonLambdaf7d4f7304ee111e89c2dfa7ae01bbebc492C6E5C\", \"Arn\"]}, \":*\"]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"FargateEfsCustomResourceMyProviderframeworkonEventServiceRoleDefaultPolicyA635BB31\", \"Roles\": [{\"Ref\": \"FargateEfsCustomResourceMyProviderframeworkonEventServiceRoleF9EAE9F0\"}]}, \"DependsOn\": [\"Service01LBPublicListenerECSGroupC15AA389\", \"Service01LBPublicListenerE149F2AA\", \"Service01LB5B16E367\", \"Service01LBSecurityGroup9E9E5EDB\", \"Service01LBSecurityGrouptoFargateEfsDemo01Service01ServiceSecurityGroupA18A692380000284AB0C\", \"Service01ServiceSecurityGroupfromFargateEfsDemo01Service01LBSecurityGroup5E60572F8000BC057E52\", \"Service01ServiceSecurityGroup8E0F19CD\", \"Service01Service20C10D3C\"], \"Metadata\": {\"aws:cdk:path\": \"FargateEfsDemo01/FargateEfsCustomResource/MyProvider/framework-onEvent/ServiceRole/DefaultPolicy/Resource\"}}, \"FargateEfsCustomResourceMyProviderframeworkonEvent66B728FB\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"f2d30cfc360482320a52a4fcde8a70f3569df79ab30be24650fda58eb60052cf.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"FargateEfsCustomResourceMyProviderframeworkonEventServiceRoleF9EAE9F0\", \"Arn\"]}, \"Description\": \"AWS CDK resource provider framework - onEvent (FargateEfsDemo01/FargateEfsCustomResource/MyProvider)\", \"Environment\": {\"Variables\": {\"USER_ON_EVENT_FUNCTION_ARN\": {\"Fn::GetAtt\": [\"SingletonLambdaf7d4f7304ee111e89c2dfa7ae01bbebc492C6E5C\", \"Arn\"]}}}, \"Handler\": \"framework.onEvent\", \"Runtime\": \"nodejs18.x\", \"Timeout\": 900}, \"DependsOn\": [\"FargateEfsCustomResourceMyProviderframeworkonEventServiceRoleDefaultPolicyA635BB31\", \"FargateEfsCustomResourceMyProviderframeworkonEventServiceRoleF9EAE9F0\", \"Service01LBPublicListenerECSGroupC15AA389\", \"Service01LBPublicListenerE149F2AA\", \"Service01LB5B16E367\", \"Service01LBSecurityGroup9E9E5EDB\", \"Service01LBSecurityGrouptoFargateEfsDemo01Service01ServiceSecurityGroupA18A692380000284AB0C\", \"Service01ServiceSecurityGroupfromFargateEfsDemo01Service01LBSecurityGroup5E60572F8000BC057E52\", \"Service01ServiceSecurityGroup8E0F19CD\", \"Service01Service20C10D3C\"], \"Metadata\": {\"aws:cdk:path\": \"FargateEfsDemo01/FargateEfsCustomResource/MyProvider/framework-onEvent/Resource\", \"aws:asset:path\": \"asset.f2d30cfc360482320a52a4fcde8a70f3569df79ab30be24650fda58eb60052cf\", \"aws:asset:is-bundled\": false, \"aws:asset:property\": \"Code\"}}, \"FargateEfsCustomResourceResource18047FFFB\": {\"Type\": \"AWS::CloudFormation::CustomResource\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"FargateEfsCustomResourceMyProviderframeworkonEvent66B728FB\", \"Arn\"]}, \"TaskDefinition\": {\"Ref\": \"MyTaskDefinitionF5B350B4\"}, \"EcsService\": {\"Fn::GetAtt\": [\"Service01Service20C10D3C\", \"Name\"]}, \"EcsCluster\": {\"Ref\": \"DefaultEcsCluster72E274FB\"}, \"EfsFileSystemId\": {\"Ref\": \"MyEfsFileSystem570A3D32\"}, \"EfsMountName\": \"uploads\"}, \"DependsOn\": [\"Service01LBPublicListenerECSGroupC15AA389\", \"Service01LBPublicListenerE149F2AA\", \"Service01LB5B16E367\", \"Service01LBSecurityGroup9E9E5EDB\", \"Service01LBSecurityGrouptoFargateEfsDemo01Service01ServiceSecurityGroupA18A692380000284AB0C\", \"Service01ServiceSecurityGroupfromFargateEfsDemo01Service01LBSecurityGroup5E60572F8000BC057E52\", \"Service01ServiceSecurityGroup8E0F19CD\", \"Service01Service20C10D3C\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\", \"Metadata\": {\"aws:cdk:path\": \"FargateEfsDemo01/FargateEfsCustomResource/Resource1/Default\"}}, \"SingletonLambdaf7d4f7304ee111e89c2dfa7ae01bbebcServiceRoleFE9ABB04\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}, \"Metadata\": {\"aws:cdk:path\": \"FargateEfsDemo01/SingletonLambdaf7d4f7304ee111e89c2dfa7ae01bbebc/ServiceRole/Resource\"}}, \"SingletonLambdaf7d4f7304ee111e89c2dfa7ae01bbebcServiceRoleDefaultPolicyEED0B067\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"ecs:UpdateService\", \"ecs:RegisterTaskDefinition\", \"ecs:DescribeTaskDefinition\", \"iam:PassRole\", \"iam:GetRole\"], \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"SingletonLambdaf7d4f7304ee111e89c2dfa7ae01bbebcServiceRoleDefaultPolicyEED0B067\", \"Roles\": [{\"Ref\": \"SingletonLambdaf7d4f7304ee111e89c2dfa7ae01bbebcServiceRoleFE9ABB04\"}]}, \"Metadata\": {\"aws:cdk:path\": \"FargateEfsDemo01/SingletonLambdaf7d4f7304ee111e89c2dfa7ae01bbebc/ServiceRole/DefaultPolicy/Resource\"}}, \"SingletonLambdaf7d4f7304ee111e89c2dfa7ae01bbebc492C6E5C\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"var AWS = require('aws-sdk');\nvar ecs = new AWS.ECS();\n\nexports.handler = function(event, context, callback) {\n\n    var taskDefParams = {\n        taskDefinition: event[\\\"ResourceProperties\\\"][\\\"TaskDefinition\\\"],\n    };\n\n    var ecsParams = {\n        service: event[\\\"ResourceProperties\\\"][\\\"EcsService\\\"],\n        cluster: event[\\\"ResourceProperties\\\"][\\\"EcsCluster\\\"]\n    };\n\n    var volume = {\n      name: event[\\\"ResourceProperties\\\"][\\\"EfsMountName\\\"],\n      efsVolumeConfiguration: { fileSystemId: event[\\\"ResourceProperties\\\"][\\\"EfsFileSystemId\\\"], rootDirectory: '/' }\n    };\n\n    var mountPoint =  {\n        sourceVolume: event[\\\"ResourceProperties\\\"][\\\"EfsMountName\\\"],\n        containerPath: '/' + event[\\\"ResourceProperties\\\"][\\\"EfsMountName\\\"],\n        readOnly: false\n    };\n\n    console.log(event);\n    console.log(event[\\\"ResourceProperties\\\"]);\n    try {\n        console.log(\\\"Getting Task Definition\\\");\n        ecs.describeTaskDefinition(taskDefParams, function(err, data) {\n          if (err)\n            console.log(err, err.stack);\n          else\n            data['taskDefinition']['volumes'].push(volume);\n            data['taskDefinition']['containerDefinitions'][0]['mountPoints'].push(mountPoint);\n            delete data['taskDefinition']['taskDefinitionArn'];\n            delete data['taskDefinition']['revision'];\n            delete data['taskDefinition']['status'];\n            delete data['taskDefinition']['requiresAttributes'];\n            delete data['taskDefinition']['compatibilities'];\n            delete data['taskDefinition']['registeredAt'];\n            delete data['taskDefinition']['registeredBy'];\n\n            console.log(\\\"Register New Task Definition\\\");\n            console.log(data['taskDefinition']);\n            ecs.registerTaskDefinition(data['taskDefinition'], function(err, data) {\n              if (err)\n                console.log(err, err.stack);\n              else\n                console.log(data);\n                console.log(\\\"Update Service\\\");\n                ecs.updateService({\n                      service: ecsParams['service'],\n                      cluster: ecsParams['cluster'],\n                      taskDefinition: data['taskDefinition']['taskDefinitionArn'],\n\n                    },\n                    function (err, data) {\n                  if (err)\n                      console.log(err, err.stack);\n                  else\n                      console.log(data);\n                      sendResponse(event, context, 'SUCCESS', { 'Message': 'Resource creation successful!' });\n                });\n                console.log(data);\n            });\n        });\n    } catch (e) {\n        console.log('Errors' + e);\n        sendResponse(event, context, 'FAILED')\n    }\n};\n\nfunction sendResponse (event, context, responseStatus, responseData) {\n  console.log('Sending response ' + responseStatus);\n  var responseBody = JSON.stringify({\n    Status: responseStatus,\n    Reason: 'See the details in CloudWatch Log Stream: ' + context.logStreamName,\n    PhysicalResourceId: context.logStreamName,\n    StackId: event.StackId,\n    RequestId: event.RequestId,\n    LogicalResourceId: event.LogicalResourceId,\n    Data: responseData\n  });\n\n  console.log('RESPONSE BODY:\\n', responseBody);\n\n  var https = require('https');\n  var url = require('url');\n\n  var parsedUrl = url.parse(event.ResponseURL);\n  var options = {\n    hostname: parsedUrl.hostname,\n    port: 443,\n    path: parsedUrl.path,\n    method: 'PUT',\n    headers: {\n      'content-type': '',\n      'content-length': responseBody.length\n    }\n  };\n\n  console.log('SENDING RESPONSE...\\n');\n\n  var request = https.request(options, function (response) {\n    console.log('STATUS: ' + response.statusCode);\n    console.log('HEADERS: ' + JSON.stringify(response.headers));\n    context.done()\n  });\n\n  request.on('error', function (error) {\n    console.log('sendResponse Error:' + error);\n    context.done()\n  });\n\n  request.write(responseBody);\n  request.end()\n}\n\"}, \"Role\": {\"Fn::GetAtt\": [\"SingletonLambdaf7d4f7304ee111e89c2dfa7ae01bbebcServiceRoleFE9ABB04\", \"Arn\"]}, \"Handler\": \"index.handler\", \"Runtime\": \"nodejs12.x\", \"Timeout\": 300}, \"DependsOn\": [\"SingletonLambdaf7d4f7304ee111e89c2dfa7ae01bbebcServiceRoleDefaultPolicyEED0B067\", \"SingletonLambdaf7d4f7304ee111e89c2dfa7ae01bbebcServiceRoleFE9ABB04\"], \"Metadata\": {\"aws:cdk:path\": \"FargateEfsDemo01/SingletonLambdaf7d4f7304ee111e89c2dfa7ae01bbebc/Resource\"}}, \"CDKMetadata\": {\"Type\": \"AWS::CDK::Metadata\", \"Properties\": {\"Analytics\": \"v2:deflate64:H4sIAAAAAAAA/31Ty27bMBD8lt5ptnUOzdV248BA2gpWkKuxotbuxhQp8CHDEPTvXephO27RE2eHI+5yhprLx2/yyyc4+ZkqjzNNhWzzAOoomNq1qOayfauVWO3NW7YSWSw0qTwWBkPirmhrY8BXKDRe+Su38N4qgkDWXMQJPG2ytPyE8AwBT3AWmaOG4fXgjQnoGE+CYZKxWgSe9XeFJogcVXQUzs/Oxrqf4b/Exhwcev8X/9TTnUDlZbvS0XP3JJrgGtwB0q388TvuydB0p3vGmgBk0N1w47c5uobU4NMAud2e261JY37mNlXa+1j9sNGEVz4AQyc0VEUJnBSZg8ZgzToaNbSYQDpgxJ0gqGSbWY6u929EWzuEldZO+IcdeI/By0VauJbLqI4YluAx2bGrIaQoWFDXfECf5ouFcgkajMLy7nqowQdSmhVFr+BhG35O//66N/lDfasjtsGMmgnf7A++XIK+KbtObNHb6HggxQnaaufGmg1fnPyqJy+azNmGSnSduNtIPk24N4j/kgPfKG38iqGO/WPl1EsaPDe2RPnuPzdfH+Wcf7F3TzRzHCJVKLfD+gejo4QEfgMAAA==\"}, \"Metadata\": {\"aws:cdk:path\": \"FargateEfsDemo01/CDKMetadata/Default\"}, \"Condition\": \"CDKMetadataAvailable\"}}, \"Outputs\": {\"Service01LoadBalancerDNS541E07D4\": {\"Value\": {\"Fn::GetAtt\": [\"Service01LB5B16E367\", \"DNSName\"]}}, \"Service01ServiceURLFF3EC1CD\": {\"Value\": {\"Fn::Join\": [\"\", [\"http://\", {\"Fn::GetAtt\": [\"Service01LB5B16E367\", \"DNSName\"]}]]}}}, \"Conditions\": {\"CDKMetadataAvailable\": {\"Fn::Or\": [{\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"af-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ca-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-northwest-1\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-3\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"me-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"sa-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-2\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-2\"]}]}]}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as cdk from 'aws-cdk-lib';\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as ecs from 'aws-cdk-lib/aws-ecs';\nimport * as ecs_patterns from 'aws-cdk-lib/aws-ecs-patterns';\nimport * as efs from 'aws-cdk-lib/aws-efs';\nimport * as cr from 'aws-cdk-lib/custom-resources';\nimport {FargateEfsCustomResource} from \"./efs-mount-fargate-cr\";\n\n\n\nclass FargateEfs extends cdk.Stack {\n  constructor(scope: cdk.App, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n\n    const vpc = new ec2.Vpc(this, 'DefaultVpc', { maxAzs: 2});\n    const ecsCluster = new ecs.Cluster(this, 'DefaultEcsCluster', {vpc: vpc});\n\n    const fileSystem = new efs.FileSystem(this, 'MyEfsFileSystem', {\n      vpc: vpc,\n      encrypted: true,\n      lifecyclePolicy: efs.LifecyclePolicy.AFTER_14_DAYS,\n      performanceMode: efs.PerformanceMode.GENERAL_PURPOSE,\n      throughputMode: efs.ThroughputMode.BURSTING\n    });\n\n\n     const params = {\n      FileSystemId: fileSystem.fileSystemId,\n      PosixUser: {\n        Gid: 1000,\n        Uid: 1000\n      },\n      RootDirectory: {\n        CreationInfo: {\n          OwnerGid: 1000,\n          OwnerUid: 1000,\n          Permissions: '755'\n        },\n        Path: '/uploads'\n      },\n      Tags: [\n        {\n          Key: 'Name',\n          Value: 'ecsuploads'\n        }\n      ]\n    };\n\n    const efsAccessPoint = new cr.AwsCustomResource(this, 'EfsAccessPoint', {\n       onUpdate: {\n           service: 'EFS',\n           action: 'createAccessPoint',\n           parameters: params,\n           physicalResourceId: cr.PhysicalResourceId.of('12121212121'),\n       },\n       policy: cr.AwsCustomResourcePolicy.fromSdkCalls({resources: cr.AwsCustomResourcePolicy.ANY_RESOURCE})\n    });\n\n    efsAccessPoint.node.addDependency(fileSystem);\n\n    const taskDef = new ecs.FargateTaskDefinition(this, \"MyTaskDefinition\", {\n      memoryLimitMiB: 512,\n      cpu: 256,\n    });\n\n    const containerDef = new ecs.ContainerDefinition(this, \"MyContainerDefinition\", {\n      image: ecs.ContainerImage.fromRegistry(\"coderaiser/cloudcmd\"),\n      taskDefinition: taskDef\n    });\n\n    containerDef.addPortMappings({\n      containerPort: 8000\n    });\n\n    const albFargateService = new ecs_patterns.ApplicationLoadBalancedFargateService(this, 'Service01', {\n      cluster: ecsCluster,\n      taskDefinition: taskDef,\n      desiredCount: 2\n    });\n\n    albFargateService.targetGroup.setAttribute('deregistration_delay.timeout_seconds', '30');\n\n    // Override Platform version (until Latest = 1.4.0)\n    const albFargateServiceResource = albFargateService.service.node.findChild('Service') as ecs.CfnService;\n    albFargateServiceResource.addPropertyOverride('PlatformVersion', '1.4.0')\n\n    // Allow access to EFS from Fargate ECS\n    fileSystem.connections.allowDefaultPortFrom(albFargateService.service.connections);\n\n    //Custom Resource to add EFS Mount to Task Definition\n    const resource = new FargateEfsCustomResource(this, 'FargateEfsCustomResource', {\n        TaskDefinition: taskDef.taskDefinitionArn,\n        EcsService: albFargateService.service.serviceName,\n        EcsCluster: ecsCluster.clusterName,\n        EfsFileSystemId: fileSystem.fileSystemId,\n        EfsMountName: 'uploads'\n    });\n\n    resource.node.addDependency(albFargateService);\n  }\n}\n\nconst app = new cdk.App();\nnew FargateEfs(app, 'FargateEfsDemo01');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyVpcF9F0CA6F\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"FargateServiceWithLocalImage/MyVpc\"}]}, \"Metadata\": {\"aws:cdk:path\": \"FargateServiceWithLocalImage/MyVpc/Resource\"}}, \"MyVpcPublicSubnet1SubnetF6608456\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"FargateServiceWithLocalImage/MyVpc/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"FargateServiceWithLocalImage/MyVpc/PublicSubnet1/Subnet\"}}, \"MyVpcPublicSubnet1RouteTableC46AB2F4\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"FargateServiceWithLocalImage/MyVpc/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"FargateServiceWithLocalImage/MyVpc/PublicSubnet1/RouteTable\"}}, \"MyVpcPublicSubnet1RouteTableAssociation2ECEE1CB\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPublicSubnet1RouteTableC46AB2F4\"}, \"SubnetId\": {\"Ref\": \"MyVpcPublicSubnet1SubnetF6608456\"}}, \"Metadata\": {\"aws:cdk:path\": \"FargateServiceWithLocalImage/MyVpc/PublicSubnet1/RouteTableAssociation\"}}, \"MyVpcPublicSubnet1DefaultRoute95FDF9EB\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPublicSubnet1RouteTableC46AB2F4\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"MyVpcIGW5C4A4F63\"}}, \"DependsOn\": [\"MyVpcVPCGW488ACE0D\"], \"Metadata\": {\"aws:cdk:path\": \"FargateServiceWithLocalImage/MyVpc/PublicSubnet1/DefaultRoute\"}}, \"MyVpcPublicSubnet1EIP096967CB\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"FargateServiceWithLocalImage/MyVpc/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"FargateServiceWithLocalImage/MyVpc/PublicSubnet1/EIP\"}}, \"MyVpcPublicSubnet1NATGatewayAD3400C1\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"MyVpcPublicSubnet1SubnetF6608456\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"MyVpcPublicSubnet1EIP096967CB\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"FargateServiceWithLocalImage/MyVpc/PublicSubnet1\"}]}, \"DependsOn\": [\"MyVpcPublicSubnet1DefaultRoute95FDF9EB\", \"MyVpcPublicSubnet1RouteTableAssociation2ECEE1CB\"], \"Metadata\": {\"aws:cdk:path\": \"FargateServiceWithLocalImage/MyVpc/PublicSubnet1/NATGateway\"}}, \"MyVpcPublicSubnet2Subnet492B6BFB\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"FargateServiceWithLocalImage/MyVpc/PublicSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"FargateServiceWithLocalImage/MyVpc/PublicSubnet2/Subnet\"}}, \"MyVpcPublicSubnet2RouteTable1DF17386\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"FargateServiceWithLocalImage/MyVpc/PublicSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"FargateServiceWithLocalImage/MyVpc/PublicSubnet2/RouteTable\"}}, \"MyVpcPublicSubnet2RouteTableAssociation227DE78D\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPublicSubnet2RouteTable1DF17386\"}, \"SubnetId\": {\"Ref\": \"MyVpcPublicSubnet2Subnet492B6BFB\"}}, \"Metadata\": {\"aws:cdk:path\": \"FargateServiceWithLocalImage/MyVpc/PublicSubnet2/RouteTableAssociation\"}}, \"MyVpcPublicSubnet2DefaultRoute052936F6\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPublicSubnet2RouteTable1DF17386\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"MyVpcIGW5C4A4F63\"}}, \"DependsOn\": [\"MyVpcVPCGW488ACE0D\"], \"Metadata\": {\"aws:cdk:path\": \"FargateServiceWithLocalImage/MyVpc/PublicSubnet2/DefaultRoute\"}}, \"MyVpcPublicSubnet2EIP8CCBA239\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"FargateServiceWithLocalImage/MyVpc/PublicSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"FargateServiceWithLocalImage/MyVpc/PublicSubnet2/EIP\"}}, \"MyVpcPublicSubnet2NATGateway91BFBEC9\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"MyVpcPublicSubnet2Subnet492B6BFB\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"MyVpcPublicSubnet2EIP8CCBA239\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"FargateServiceWithLocalImage/MyVpc/PublicSubnet2\"}]}, \"DependsOn\": [\"MyVpcPublicSubnet2DefaultRoute052936F6\", \"MyVpcPublicSubnet2RouteTableAssociation227DE78D\"], \"Metadata\": {\"aws:cdk:path\": \"FargateServiceWithLocalImage/MyVpc/PublicSubnet2/NATGateway\"}}, \"MyVpcPrivateSubnet1Subnet5057CF7E\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"FargateServiceWithLocalImage/MyVpc/PrivateSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"FargateServiceWithLocalImage/MyVpc/PrivateSubnet1/Subnet\"}}, \"MyVpcPrivateSubnet1RouteTable8819E6E2\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"FargateServiceWithLocalImage/MyVpc/PrivateSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"FargateServiceWithLocalImage/MyVpc/PrivateSubnet1/RouteTable\"}}, \"MyVpcPrivateSubnet1RouteTableAssociation56D38C7E\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPrivateSubnet1RouteTable8819E6E2\"}, \"SubnetId\": {\"Ref\": \"MyVpcPrivateSubnet1Subnet5057CF7E\"}}, \"Metadata\": {\"aws:cdk:path\": \"FargateServiceWithLocalImage/MyVpc/PrivateSubnet1/RouteTableAssociation\"}}, \"MyVpcPrivateSubnet1DefaultRouteA8CDE2FA\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPrivateSubnet1RouteTable8819E6E2\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"MyVpcPublicSubnet1NATGatewayAD3400C1\"}}, \"Metadata\": {\"aws:cdk:path\": \"FargateServiceWithLocalImage/MyVpc/PrivateSubnet1/DefaultRoute\"}}, \"MyVpcPrivateSubnet2Subnet0040C983\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"FargateServiceWithLocalImage/MyVpc/PrivateSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"FargateServiceWithLocalImage/MyVpc/PrivateSubnet2/Subnet\"}}, \"MyVpcPrivateSubnet2RouteTableCEDCEECE\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"FargateServiceWithLocalImage/MyVpc/PrivateSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"FargateServiceWithLocalImage/MyVpc/PrivateSubnet2/RouteTable\"}}, \"MyVpcPrivateSubnet2RouteTableAssociation86A610DA\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPrivateSubnet2RouteTableCEDCEECE\"}, \"SubnetId\": {\"Ref\": \"MyVpcPrivateSubnet2Subnet0040C983\"}}, \"Metadata\": {\"aws:cdk:path\": \"FargateServiceWithLocalImage/MyVpc/PrivateSubnet2/RouteTableAssociation\"}}, \"MyVpcPrivateSubnet2DefaultRoute9CE96294\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPrivateSubnet2RouteTableCEDCEECE\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"MyVpcPublicSubnet2NATGateway91BFBEC9\"}}, \"Metadata\": {\"aws:cdk:path\": \"FargateServiceWithLocalImage/MyVpc/PrivateSubnet2/DefaultRoute\"}}, \"MyVpcIGW5C4A4F63\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"FargateServiceWithLocalImage/MyVpc\"}]}, \"Metadata\": {\"aws:cdk:path\": \"FargateServiceWithLocalImage/MyVpc/IGW\"}}, \"MyVpcVPCGW488ACE0D\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"InternetGatewayId\": {\"Ref\": \"MyVpcIGW5C4A4F63\"}}, \"Metadata\": {\"aws:cdk:path\": \"FargateServiceWithLocalImage/MyVpc/VPCGW\"}}, \"ClusterEB0386A7\": {\"Type\": \"AWS::ECS::Cluster\", \"Metadata\": {\"aws:cdk:path\": \"FargateServiceWithLocalImage/Cluster/Resource\"}}, \"FargateServiceLBB353E155\": {\"Type\": \"AWS::ElasticLoadBalancingV2::LoadBalancer\", \"Properties\": {\"LoadBalancerAttributes\": [{\"Key\": \"deletion_protection.enabled\", \"Value\": \"false\"}], \"Scheme\": \"internet-facing\", \"SecurityGroups\": [{\"Fn::GetAtt\": [\"FargateServiceLBSecurityGroup5F444C78\", \"GroupId\"]}], \"Subnets\": [{\"Ref\": \"MyVpcPublicSubnet1SubnetF6608456\"}, {\"Ref\": \"MyVpcPublicSubnet2Subnet492B6BFB\"}], \"Type\": \"application\"}, \"DependsOn\": [\"MyVpcPublicSubnet1DefaultRoute95FDF9EB\", \"MyVpcPublicSubnet1RouteTableAssociation2ECEE1CB\", \"MyVpcPublicSubnet2DefaultRoute052936F6\", \"MyVpcPublicSubnet2RouteTableAssociation227DE78D\"], \"Metadata\": {\"aws:cdk:path\": \"FargateServiceWithLocalImage/FargateService/LB/Resource\"}}, \"FargateServiceLBSecurityGroup5F444C78\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"Automatically created Security Group for ELB FargateServiceWithLocalImageFargateServiceLBBAAB469E\", \"SecurityGroupIngress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow from anyone on port 80\", \"FromPort\": 80, \"IpProtocol\": \"tcp\", \"ToPort\": 80}], \"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}}, \"Metadata\": {\"aws:cdk:path\": \"FargateServiceWithLocalImage/FargateService/LB/SecurityGroup/Resource\"}}, \"FargateServiceLBSecurityGrouptoFargateServiceWithLocalImageFargateServiceSecurityGroup3704020980878BC340\": {\"Type\": \"AWS::EC2::SecurityGroupEgress\", \"Properties\": {\"GroupId\": {\"Fn::GetAtt\": [\"FargateServiceLBSecurityGroup5F444C78\", \"GroupId\"]}, \"IpProtocol\": \"tcp\", \"Description\": \"Load balancer to target\", \"DestinationSecurityGroupId\": {\"Fn::GetAtt\": [\"FargateServiceSecurityGroup262B61DD\", \"GroupId\"]}, \"FromPort\": 80, \"ToPort\": 80}, \"Metadata\": {\"aws:cdk:path\": \"FargateServiceWithLocalImage/FargateService/LB/SecurityGroup/to FargateServiceWithLocalImageFargateServiceSecurityGroup37040209:80\"}}, \"FargateServiceLBPublicListener4B4929CA\": {\"Type\": \"AWS::ElasticLoadBalancingV2::Listener\", \"Properties\": {\"DefaultActions\": [{\"TargetGroupArn\": {\"Ref\": \"FargateServiceLBPublicListenerECSGroupBE57E081\"}, \"Type\": \"forward\"}], \"LoadBalancerArn\": {\"Ref\": \"FargateServiceLBB353E155\"}, \"Port\": 80, \"Protocol\": \"HTTP\"}, \"Metadata\": {\"aws:cdk:path\": \"FargateServiceWithLocalImage/FargateService/LB/PublicListener/Resource\"}}, \"FargateServiceLBPublicListenerECSGroupBE57E081\": {\"Type\": \"AWS::ElasticLoadBalancingV2::TargetGroup\", \"Properties\": {\"Port\": 80, \"Protocol\": \"HTTP\", \"TargetGroupAttributes\": [{\"Key\": \"stickiness.enabled\", \"Value\": \"false\"}], \"TargetType\": \"ip\", \"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}}, \"Metadata\": {\"aws:cdk:path\": \"FargateServiceWithLocalImage/FargateService/LB/PublicListener/ECSGroup/Resource\"}}, \"FargateServiceTaskDefTaskRole8CDCF85E\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"ecs-tasks.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}, \"Metadata\": {\"aws:cdk:path\": \"FargateServiceWithLocalImage/FargateService/TaskDef/TaskRole/Resource\"}}, \"FargateServiceTaskDef940E3A80\": {\"Type\": \"AWS::ECS::TaskDefinition\", \"Properties\": {\"ContainerDefinitions\": [{\"Essential\": true, \"Image\": {\"Fn::Sub\": \"${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:b165b0d6d6b3faa8fd4ee68baaa8c3eea7d0f68856aeeac22d77fed3fa8b6fd6\"}, \"LogConfiguration\": {\"LogDriver\": \"awslogs\", \"Options\": {\"awslogs-group\": {\"Ref\": \"FargateServiceTaskDefwebLogGroup71FAF541\"}, \"awslogs-stream-prefix\": \"FargateService\", \"awslogs-region\": {\"Ref\": \"AWS::Region\"}}}, \"Name\": \"web\", \"PortMappings\": [{\"ContainerPort\": 80, \"Protocol\": \"tcp\"}]}], \"Cpu\": \"256\", \"ExecutionRoleArn\": {\"Fn::GetAtt\": [\"FargateServiceTaskDefExecutionRole9194820E\", \"Arn\"]}, \"Family\": \"FargateServiceWithLocalImageFargateServiceTaskDef3B4F860F\", \"Memory\": \"512\", \"NetworkMode\": \"awsvpc\", \"RequiresCompatibilities\": [\"FARGATE\"], \"TaskRoleArn\": {\"Fn::GetAtt\": [\"FargateServiceTaskDefTaskRole8CDCF85E\", \"Arn\"]}}, \"Metadata\": {\"aws:cdk:path\": \"FargateServiceWithLocalImage/FargateService/TaskDef/Resource\"}}, \"FargateServiceTaskDefwebLogGroup71FAF541\": {\"Type\": \"AWS::Logs::LogGroup\", \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\", \"Metadata\": {\"aws:cdk:path\": \"FargateServiceWithLocalImage/FargateService/TaskDef/web/LogGroup/Resource\"}}, \"FargateServiceTaskDefExecutionRole9194820E\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"ecs-tasks.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}, \"Metadata\": {\"aws:cdk:path\": \"FargateServiceWithLocalImage/FargateService/TaskDef/ExecutionRole/Resource\"}}, \"FargateServiceTaskDefExecutionRoleDefaultPolicy827E7CA2\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"ecr:BatchCheckLayerAvailability\", \"ecr:GetDownloadUrlForLayer\", \"ecr:BatchGetImage\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":ecr:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":repository/\", {\"Fn::Sub\": \"cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}\"}]]}}, {\"Action\": \"ecr:GetAuthorizationToken\", \"Effect\": \"Allow\", \"Resource\": \"*\"}, {\"Action\": [\"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"FargateServiceTaskDefwebLogGroup71FAF541\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"FargateServiceTaskDefExecutionRoleDefaultPolicy827E7CA2\", \"Roles\": [{\"Ref\": \"FargateServiceTaskDefExecutionRole9194820E\"}]}, \"Metadata\": {\"aws:cdk:path\": \"FargateServiceWithLocalImage/FargateService/TaskDef/ExecutionRole/DefaultPolicy/Resource\"}}, \"FargateServiceECC8084D\": {\"Type\": \"AWS::ECS::Service\", \"Properties\": {\"Cluster\": {\"Ref\": \"ClusterEB0386A7\"}, \"DeploymentConfiguration\": {\"Alarms\": {\"AlarmNames\": [], \"Enable\": false, \"Rollback\": false}, \"MaximumPercent\": 200, \"MinimumHealthyPercent\": 50}, \"EnableECSManagedTags\": false, \"HealthCheckGracePeriodSeconds\": 60, \"LaunchType\": \"FARGATE\", \"LoadBalancers\": [{\"ContainerName\": \"web\", \"ContainerPort\": 80, \"TargetGroupArn\": {\"Ref\": \"FargateServiceLBPublicListenerECSGroupBE57E081\"}}], \"NetworkConfiguration\": {\"AwsvpcConfiguration\": {\"AssignPublicIp\": \"DISABLED\", \"SecurityGroups\": [{\"Fn::GetAtt\": [\"FargateServiceSecurityGroup262B61DD\", \"GroupId\"]}], \"Subnets\": [{\"Ref\": \"MyVpcPrivateSubnet1Subnet5057CF7E\"}, {\"Ref\": \"MyVpcPrivateSubnet2Subnet0040C983\"}]}}, \"TaskDefinition\": {\"Ref\": \"FargateServiceTaskDef940E3A80\"}}, \"DependsOn\": [\"FargateServiceLBPublicListenerECSGroupBE57E081\", \"FargateServiceLBPublicListener4B4929CA\", \"FargateServiceTaskDefTaskRole8CDCF85E\"], \"Metadata\": {\"aws:cdk:path\": \"FargateServiceWithLocalImage/FargateService/Service/Service\"}}, \"FargateServiceSecurityGroup262B61DD\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"FargateServiceWithLocalImage/FargateService/Service/SecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}}, \"DependsOn\": [\"FargateServiceTaskDefTaskRole8CDCF85E\"], \"Metadata\": {\"aws:cdk:path\": \"FargateServiceWithLocalImage/FargateService/Service/SecurityGroup/Resource\"}}, \"FargateServiceSecurityGroupfromFargateServiceWithLocalImageFargateServiceLBSecurityGroup8AC0B39180469A7FD4\": {\"Type\": \"AWS::EC2::SecurityGroupIngress\", \"Properties\": {\"IpProtocol\": \"tcp\", \"Description\": \"Load balancer to target\", \"FromPort\": 80, \"GroupId\": {\"Fn::GetAtt\": [\"FargateServiceSecurityGroup262B61DD\", \"GroupId\"]}, \"SourceSecurityGroupId\": {\"Fn::GetAtt\": [\"FargateServiceLBSecurityGroup5F444C78\", \"GroupId\"]}, \"ToPort\": 80}, \"DependsOn\": [\"FargateServiceTaskDefTaskRole8CDCF85E\"], \"Metadata\": {\"aws:cdk:path\": \"FargateServiceWithLocalImage/FargateService/Service/SecurityGroup/from FargateServiceWithLocalImageFargateServiceLBSecurityGroup8AC0B391:80\"}}, \"CDKMetadata\": {\"Type\": \"AWS::CDK::Metadata\", \"Properties\": {\"Analytics\": \"v2:deflate64:H4sIAAAAAAAA/31SwW7bMAz9lt0VbctlvaZpVwQoNsMpeg0YmfXYOJIhUikCw/8+Wo4brxt24tPTo0g+amlvvtkvn+CNF646LBra224r4A5GqV2Hbmm759aZ9Yt/LtamSPuG3DbtPcrAXVEZkuAT7Bu88lduxRwcgVDw7+IB3G+KIfwAeQDBNzibItJJ4fXhjReMiifB2MnltBLt9dcRvZgtuhRJzg8xpDb38F/ivo7I/Be98ZnvDTq23bpJrNUH1QS/Q6xhmIoPd/hCnqaZPjLBC5DHOOMuuVuMJ3KjTyPM5XYtyDAq21XbqsvZrccA1S004B1WH9KxARZyjSr2WUG+Pum6/p2dh/jjPNeRzuYvmgnP7p+0sm5gMnJ27A3B0XZlGPeeYxE0Ly9qRMN0cQfMKGzvgjtg3ByhHj6FrljvbIltYJIQz7fAaJpQq/mPoX6vOOG+NyVySHG072eSNonJD+mvrdWB3MVMonuosvu98aFC+8qfT19v7FI//SsTLWLyQke05Rh/A4TlTxAQAwAA\"}, \"Metadata\": {\"aws:cdk:path\": \"FargateServiceWithLocalImage/CDKMetadata/Default\"}, \"Condition\": \"CDKMetadataAvailable\"}}, \"Outputs\": {\"FargateServiceLoadBalancerDNS9433D5F6\": {\"Value\": {\"Fn::GetAtt\": [\"FargateServiceLBB353E155\", \"DNSName\"]}}, \"FargateServiceServiceURL47701F45\": {\"Value\": {\"Fn::Join\": [\"\", [\"http://\", {\"Fn::GetAtt\": [\"FargateServiceLBB353E155\", \"DNSName\"]}]]}}}, \"Conditions\": {\"CDKMetadataAvailable\": {\"Fn::Or\": [{\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"af-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ca-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-northwest-1\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-3\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"me-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"sa-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-2\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-2\"]}]}]}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import ec2 = require('aws-cdk-lib/aws-ec2');\nimport ecs = require('aws-cdk-lib/aws-ecs');\nimport ecs_patterns = require('aws-cdk-lib/aws-ecs-patterns');\nimport cdk = require('aws-cdk-lib');\nimport path = require('path');\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'FargateServiceWithLocalImage');\n\n// Create VPC and Fargate Cluster\n// NOTE: Limit AZs to avoid reaching resource quotas\nconst vpc = new ec2.Vpc(stack, 'MyVpc', { maxAzs: 2 });\nconst cluster = new ecs.Cluster(stack, 'Cluster', { vpc });\n\n// Instantiate Fargate Service with a cluster and a local image that gets\n// uploaded to an S3 staging bucket prior to being uploaded to ECR.\n// A new repository is created in ECR and the Fargate service is created\n// with the image from ECR.\nnew ecs_patterns.ApplicationLoadBalancedFargateService(stack, \"FargateService\", {\n  cluster,\n  taskImageOptions: {\n    image: ecs.ContainerImage.fromAsset(path.resolve(__dirname, 'local-image'))\n  },\n});\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"MyVpcF9F0CA6F\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"Willkommen/MyVpc\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyVpc/Resource\"}}, \"MyVpcPublicSubnet1SubnetF6608456\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"Willkommen/MyVpc/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyVpc/PublicSubnet1/Subnet\"}}, \"MyVpcPublicSubnet1RouteTableC46AB2F4\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"Willkommen/MyVpc/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyVpc/PublicSubnet1/RouteTable\"}}, \"MyVpcPublicSubnet1RouteTableAssociation2ECEE1CB\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPublicSubnet1RouteTableC46AB2F4\"}, \"SubnetId\": {\"Ref\": \"MyVpcPublicSubnet1SubnetF6608456\"}}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyVpc/PublicSubnet1/RouteTableAssociation\"}}, \"MyVpcPublicSubnet1DefaultRoute95FDF9EB\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPublicSubnet1RouteTableC46AB2F4\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"MyVpcIGW5C4A4F63\"}}, \"DependsOn\": [\"MyVpcVPCGW488ACE0D\"], \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyVpc/PublicSubnet1/DefaultRoute\"}}, \"MyVpcPublicSubnet1EIP096967CB\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"Willkommen/MyVpc/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyVpc/PublicSubnet1/EIP\"}}, \"MyVpcPublicSubnet1NATGatewayAD3400C1\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"MyVpcPublicSubnet1SubnetF6608456\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"MyVpcPublicSubnet1EIP096967CB\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"Willkommen/MyVpc/PublicSubnet1\"}]}, \"DependsOn\": [\"MyVpcPublicSubnet1DefaultRoute95FDF9EB\", \"MyVpcPublicSubnet1RouteTableAssociation2ECEE1CB\"], \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyVpc/PublicSubnet1/NATGateway\"}}, \"MyVpcPublicSubnet2Subnet492B6BFB\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"Willkommen/MyVpc/PublicSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyVpc/PublicSubnet2/Subnet\"}}, \"MyVpcPublicSubnet2RouteTable1DF17386\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"Willkommen/MyVpc/PublicSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyVpc/PublicSubnet2/RouteTable\"}}, \"MyVpcPublicSubnet2RouteTableAssociation227DE78D\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPublicSubnet2RouteTable1DF17386\"}, \"SubnetId\": {\"Ref\": \"MyVpcPublicSubnet2Subnet492B6BFB\"}}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyVpc/PublicSubnet2/RouteTableAssociation\"}}, \"MyVpcPublicSubnet2DefaultRoute052936F6\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPublicSubnet2RouteTable1DF17386\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"MyVpcIGW5C4A4F63\"}}, \"DependsOn\": [\"MyVpcVPCGW488ACE0D\"], \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyVpc/PublicSubnet2/DefaultRoute\"}}, \"MyVpcPublicSubnet2EIP8CCBA239\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"Willkommen/MyVpc/PublicSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyVpc/PublicSubnet2/EIP\"}}, \"MyVpcPublicSubnet2NATGateway91BFBEC9\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"MyVpcPublicSubnet2Subnet492B6BFB\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"MyVpcPublicSubnet2EIP8CCBA239\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"Willkommen/MyVpc/PublicSubnet2\"}]}, \"DependsOn\": [\"MyVpcPublicSubnet2DefaultRoute052936F6\", \"MyVpcPublicSubnet2RouteTableAssociation227DE78D\"], \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyVpc/PublicSubnet2/NATGateway\"}}, \"MyVpcPrivateSubnet1Subnet5057CF7E\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"Willkommen/MyVpc/PrivateSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyVpc/PrivateSubnet1/Subnet\"}}, \"MyVpcPrivateSubnet1RouteTable8819E6E2\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"Willkommen/MyVpc/PrivateSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyVpc/PrivateSubnet1/RouteTable\"}}, \"MyVpcPrivateSubnet1RouteTableAssociation56D38C7E\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPrivateSubnet1RouteTable8819E6E2\"}, \"SubnetId\": {\"Ref\": \"MyVpcPrivateSubnet1Subnet5057CF7E\"}}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyVpc/PrivateSubnet1/RouteTableAssociation\"}}, \"MyVpcPrivateSubnet1DefaultRouteA8CDE2FA\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPrivateSubnet1RouteTable8819E6E2\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"MyVpcPublicSubnet1NATGatewayAD3400C1\"}}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyVpc/PrivateSubnet1/DefaultRoute\"}}, \"MyVpcPrivateSubnet2Subnet0040C983\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"Willkommen/MyVpc/PrivateSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyVpc/PrivateSubnet2/Subnet\"}}, \"MyVpcPrivateSubnet2RouteTableCEDCEECE\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"Willkommen/MyVpc/PrivateSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyVpc/PrivateSubnet2/RouteTable\"}}, \"MyVpcPrivateSubnet2RouteTableAssociation86A610DA\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPrivateSubnet2RouteTableCEDCEECE\"}, \"SubnetId\": {\"Ref\": \"MyVpcPrivateSubnet2Subnet0040C983\"}}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyVpc/PrivateSubnet2/RouteTableAssociation\"}}, \"MyVpcPrivateSubnet2DefaultRoute9CE96294\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"MyVpcPrivateSubnet2RouteTableCEDCEECE\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"MyVpcPublicSubnet2NATGateway91BFBEC9\"}}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyVpc/PrivateSubnet2/DefaultRoute\"}}, \"MyVpcIGW5C4A4F63\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"Willkommen/MyVpc\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyVpc/IGW\"}}, \"MyVpcVPCGW488ACE0D\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}, \"InternetGatewayId\": {\"Ref\": \"MyVpcIGW5C4A4F63\"}}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyVpc/VPCGW\"}}, \"Ec2ClusterEE43E89D\": {\"Type\": \"AWS::ECS::Cluster\", \"Metadata\": {\"aws:cdk:path\": \"Willkommen/Ec2Cluster/Resource\"}}, \"MyTaskDefinitionTaskRole93FBB305\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"ecs-tasks.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyTaskDefinition/TaskRole/Resource\"}}, \"MyTaskDefinitionF5B350B4\": {\"Type\": \"AWS::ECS::TaskDefinition\", \"Properties\": {\"ContainerDefinitions\": [{\"Essential\": true, \"Image\": \"amazon/amazon-ecs-sample\", \"LogConfiguration\": {\"LogDriver\": \"awslogs\", \"Options\": {\"awslogs-group\": {\"Ref\": \"MyTaskDefinitionAppContainerLogGroupA24DD1B6\"}, \"awslogs-stream-prefix\": \"myapp\", \"awslogs-region\": {\"Ref\": \"AWS::Region\"}}}, \"Name\": \"AppContainer\"}], \"Cpu\": \"256\", \"ExecutionRoleArn\": {\"Fn::GetAtt\": [\"MyTaskDefinitionExecutionRole3D88C23D\", \"Arn\"]}, \"Family\": \"WillkommenMyTaskDefinition0AD83474\", \"Memory\": \"512\", \"NetworkMode\": \"awsvpc\", \"RequiresCompatibilities\": [\"FARGATE\"], \"TaskRoleArn\": {\"Fn::GetAtt\": [\"MyTaskDefinitionTaskRole93FBB305\", \"Arn\"]}}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyTaskDefinition/Resource\"}}, \"MyTaskDefinitionAppContainerLogGroupA24DD1B6\": {\"Type\": \"AWS::Logs::LogGroup\", \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\", \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyTaskDefinition/AppContainer/LogGroup/Resource\"}}, \"MyTaskDefinitionExecutionRole3D88C23D\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"ecs-tasks.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyTaskDefinition/ExecutionRole/Resource\"}}, \"MyTaskDefinitionExecutionRoleDefaultPolicy17975C1F\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"logs:CreateLogStream\", \"logs:PutLogEvents\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"MyTaskDefinitionAppContainerLogGroupA24DD1B6\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyTaskDefinitionExecutionRoleDefaultPolicy17975C1F\", \"Roles\": [{\"Ref\": \"MyTaskDefinitionExecutionRole3D88C23D\"}]}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/MyTaskDefinition/ExecutionRole/DefaultPolicy/Resource\"}}, \"FargateServiceAC2B3B85\": {\"Type\": \"AWS::ECS::Service\", \"Properties\": {\"Cluster\": {\"Ref\": \"Ec2ClusterEE43E89D\"}, \"DeploymentConfiguration\": {\"Alarms\": {\"AlarmNames\": [], \"Enable\": false, \"Rollback\": false}, \"MaximumPercent\": 200, \"MinimumHealthyPercent\": 50}, \"EnableECSManagedTags\": false, \"LaunchType\": \"FARGATE\", \"NetworkConfiguration\": {\"AwsvpcConfiguration\": {\"AssignPublicIp\": \"DISABLED\", \"SecurityGroups\": [{\"Fn::GetAtt\": [\"FargateServiceSecurityGroup0A0E79CB\", \"GroupId\"]}], \"Subnets\": [{\"Ref\": \"MyVpcPrivateSubnet1Subnet5057CF7E\"}, {\"Ref\": \"MyVpcPrivateSubnet2Subnet0040C983\"}]}}, \"TaskDefinition\": {\"Ref\": \"MyTaskDefinitionF5B350B4\"}}, \"DependsOn\": [\"MyTaskDefinitionTaskRole93FBB305\"], \"Metadata\": {\"aws:cdk:path\": \"Willkommen/FargateService/Service\"}}, \"FargateServiceSecurityGroup0A0E79CB\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"Willkommen/FargateService/SecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"VpcId\": {\"Ref\": \"MyVpcF9F0CA6F\"}}, \"DependsOn\": [\"MyTaskDefinitionTaskRole93FBB305\"], \"Metadata\": {\"aws:cdk:path\": \"Willkommen/FargateService/SecurityGroup/Resource\"}}, \"CDKMetadata\": {\"Type\": \"AWS::CDK::Metadata\", \"Properties\": {\"Analytics\": \"v2:deflate64:H4sIAAAAAAAA/12R0W6DIBSGn2X3yDZv1tvGbU2TZTG69HZBPLWnKjRwsGmM7z6UWs2uzscPHD4g5ps3/vIkrjaSZR01WPA+JyFr5qPfHmTM+8NFsuSoDmnCUlc0KHNXKKAxWyjTjuBHFA0s+ZJtrdUSBaFWj8UjfOzTsXwL2gmCq7ix1GDncWm8VwTG87wgmNxHW/KupxYUsRykM0i3ndHuMjmsg4GBtLxPGmd9u3F6xk9hKjFq2vodjqhwlvyfaEUCFZhVdt+bg+lQhosHHBiKlveZDs8x1VT7p5v8Aw2s0ZV3+tLVw3nmYWAZWO1M6Lpm71FOpw9M6RL42T53rxse+188W8TIOEXYAs9C/QMiEPWK4QEAAA==\"}, \"Metadata\": {\"aws:cdk:path\": \"Willkommen/CDKMetadata/Default\"}, \"Condition\": \"CDKMetadataAvailable\"}}, \"Conditions\": {\"CDKMetadataAvailable\": {\"Fn::Or\": [{\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"af-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ca-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-northwest-1\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-3\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"me-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"sa-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-2\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-2\"]}]}]}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import ec2 = require('aws-cdk-lib/aws-ec2');\nimport ecs = require('aws-cdk-lib/aws-ecs');\nimport cdk = require('aws-cdk-lib');\n\nclass WillkommenFargate extends cdk.Stack {\n  constructor(scope: cdk.App, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n\n    const vpc = new ec2.Vpc(this, 'MyVpc', { maxAzs: 2 });\n    const cluster = new ecs.Cluster(this, 'Ec2Cluster', { vpc });\n\n    // create a task definition with CloudWatch Logs\n    const logging = new ecs.AwsLogDriver({\n      streamPrefix: \"myapp\",\n    })\n\n    const taskDef = new ecs.FargateTaskDefinition(this, \"MyTaskDefinition\", {\n      memoryLimitMiB: 512,\n      cpu: 256,\n    })\n    \n    taskDef.addContainer(\"AppContainer\", {\n      image: ecs.ContainerImage.fromRegistry(\"amazon/amazon-ecs-sample\"),\n      logging,\n    })\n\n    // Instantiate ECS Service with just cluster and image\n    new ecs.FargateService(this, \"FargateService\", {\n      cluster,\n      taskDefinition: taskDef\n    });\n  }\n}\n\nconst app = new cdk.App();\n\nnew WillkommenFargate(app, 'Willkommen');\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"EKSVpcBAB3E5CC\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"MyEKSCluster/EKSVpc\"}]}, \"Metadata\": {\"aws:cdk:path\": \"MyEKSCluster/EKSVpc/Resource\"}}, \"EKSVpcPublicSubnet1Subnet6F739FCA\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"EKSVpcBAB3E5CC\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"kubernetes.io/role/elb\", \"Value\": \"1\"}, {\"Key\": \"Name\", \"Value\": \"MyEKSCluster/EKSVpc/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"MyEKSCluster/EKSVpc/PublicSubnet1/Subnet\"}}, \"EKSVpcPublicSubnet1RouteTable258B7E17\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"EKSVpcBAB3E5CC\"}, \"Tags\": [{\"Key\": \"kubernetes.io/role/elb\", \"Value\": \"1\"}, {\"Key\": \"Name\", \"Value\": \"MyEKSCluster/EKSVpc/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"MyEKSCluster/EKSVpc/PublicSubnet1/RouteTable\"}}, \"EKSVpcPublicSubnet1RouteTableAssociationC3AB9ADD\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"EKSVpcPublicSubnet1RouteTable258B7E17\"}, \"SubnetId\": {\"Ref\": \"EKSVpcPublicSubnet1Subnet6F739FCA\"}}, \"Metadata\": {\"aws:cdk:path\": \"MyEKSCluster/EKSVpc/PublicSubnet1/RouteTableAssociation\"}}, \"EKSVpcPublicSubnet1DefaultRouteF13B673C\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"EKSVpcPublicSubnet1RouteTable258B7E17\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"EKSVpcIGW6C6D33F8\"}}, \"DependsOn\": [\"EKSVpcVPCGW60CB8A7B\"], \"Metadata\": {\"aws:cdk:path\": \"MyEKSCluster/EKSVpc/PublicSubnet1/DefaultRoute\"}}, \"EKSVpcPublicSubnet1EIPA7436DE4\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"kubernetes.io/role/elb\", \"Value\": \"1\"}, {\"Key\": \"Name\", \"Value\": \"MyEKSCluster/EKSVpc/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"MyEKSCluster/EKSVpc/PublicSubnet1/EIP\"}}, \"EKSVpcPublicSubnet1NATGatewayE8A16310\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"EKSVpcPublicSubnet1Subnet6F739FCA\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"EKSVpcPublicSubnet1EIPA7436DE4\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"kubernetes.io/role/elb\", \"Value\": \"1\"}, {\"Key\": \"Name\", \"Value\": \"MyEKSCluster/EKSVpc/PublicSubnet1\"}]}, \"DependsOn\": [\"EKSVpcPublicSubnet1DefaultRouteF13B673C\", \"EKSVpcPublicSubnet1RouteTableAssociationC3AB9ADD\"], \"Metadata\": {\"aws:cdk:path\": \"MyEKSCluster/EKSVpc/PublicSubnet1/NATGateway\"}}, \"EKSVpcPublicSubnet2Subnet22F974C4\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"EKSVpcBAB3E5CC\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"kubernetes.io/role/elb\", \"Value\": \"1\"}, {\"Key\": \"Name\", \"Value\": \"MyEKSCluster/EKSVpc/PublicSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"MyEKSCluster/EKSVpc/PublicSubnet2/Subnet\"}}, \"EKSVpcPublicSubnet2RouteTable0AB21A14\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"EKSVpcBAB3E5CC\"}, \"Tags\": [{\"Key\": \"kubernetes.io/role/elb\", \"Value\": \"1\"}, {\"Key\": \"Name\", \"Value\": \"MyEKSCluster/EKSVpc/PublicSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"MyEKSCluster/EKSVpc/PublicSubnet2/RouteTable\"}}, \"EKSVpcPublicSubnet2RouteTableAssociation56EB44CD\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"EKSVpcPublicSubnet2RouteTable0AB21A14\"}, \"SubnetId\": {\"Ref\": \"EKSVpcPublicSubnet2Subnet22F974C4\"}}, \"Metadata\": {\"aws:cdk:path\": \"MyEKSCluster/EKSVpc/PublicSubnet2/RouteTableAssociation\"}}, \"EKSVpcPublicSubnet2DefaultRoute6E6CA646\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"EKSVpcPublicSubnet2RouteTable0AB21A14\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"EKSVpcIGW6C6D33F8\"}}, \"DependsOn\": [\"EKSVpcVPCGW60CB8A7B\"], \"Metadata\": {\"aws:cdk:path\": \"MyEKSCluster/EKSVpc/PublicSubnet2/DefaultRoute\"}}, \"EKSVpcPublicSubnet2EIPBD601F30\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"kubernetes.io/role/elb\", \"Value\": \"1\"}, {\"Key\": \"Name\", \"Value\": \"MyEKSCluster/EKSVpc/PublicSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"MyEKSCluster/EKSVpc/PublicSubnet2/EIP\"}}, \"EKSVpcPublicSubnet2NATGateway06A389FD\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"EKSVpcPublicSubnet2Subnet22F974C4\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"EKSVpcPublicSubnet2EIPBD601F30\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"kubernetes.io/role/elb\", \"Value\": \"1\"}, {\"Key\": \"Name\", \"Value\": \"MyEKSCluster/EKSVpc/PublicSubnet2\"}]}, \"DependsOn\": [\"EKSVpcPublicSubnet2DefaultRoute6E6CA646\", \"EKSVpcPublicSubnet2RouteTableAssociation56EB44CD\"], \"Metadata\": {\"aws:cdk:path\": \"MyEKSCluster/EKSVpc/PublicSubnet2/NATGateway\"}}, \"EKSVpcPrivateSubnet1SubnetD09A7726\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"EKSVpcBAB3E5CC\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"kubernetes.io/role/internal-elb\", \"Value\": \"1\"}, {\"Key\": \"Name\", \"Value\": \"MyEKSCluster/EKSVpc/PrivateSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"MyEKSCluster/EKSVpc/PrivateSubnet1/Subnet\"}}, \"EKSVpcPrivateSubnet1RouteTable158AD21B\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"EKSVpcBAB3E5CC\"}, \"Tags\": [{\"Key\": \"kubernetes.io/role/internal-elb\", \"Value\": \"1\"}, {\"Key\": \"Name\", \"Value\": \"MyEKSCluster/EKSVpc/PrivateSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"MyEKSCluster/EKSVpc/PrivateSubnet1/RouteTable\"}}, \"EKSVpcPrivateSubnet1RouteTableAssociation05ED387B\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"EKSVpcPrivateSubnet1RouteTable158AD21B\"}, \"SubnetId\": {\"Ref\": \"EKSVpcPrivateSubnet1SubnetD09A7726\"}}, \"Metadata\": {\"aws:cdk:path\": \"MyEKSCluster/EKSVpc/PrivateSubnet1/RouteTableAssociation\"}}, \"EKSVpcPrivateSubnet1DefaultRoute3FD0ADF2\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"EKSVpcPrivateSubnet1RouteTable158AD21B\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"EKSVpcPublicSubnet1NATGatewayE8A16310\"}}, \"Metadata\": {\"aws:cdk:path\": \"MyEKSCluster/EKSVpc/PrivateSubnet1/DefaultRoute\"}}, \"EKSVpcPrivateSubnet2Subnet75FE259E\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"EKSVpcBAB3E5CC\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"kubernetes.io/role/internal-elb\", \"Value\": \"1\"}, {\"Key\": \"Name\", \"Value\": \"MyEKSCluster/EKSVpc/PrivateSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"MyEKSCluster/EKSVpc/PrivateSubnet2/Subnet\"}}, \"EKSVpcPrivateSubnet2RouteTable584CB1D6\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"EKSVpcBAB3E5CC\"}, \"Tags\": [{\"Key\": \"kubernetes.io/role/internal-elb\", \"Value\": \"1\"}, {\"Key\": \"Name\", \"Value\": \"MyEKSCluster/EKSVpc/PrivateSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"MyEKSCluster/EKSVpc/PrivateSubnet2/RouteTable\"}}, \"EKSVpcPrivateSubnet2RouteTableAssociation56D711FD\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"EKSVpcPrivateSubnet2RouteTable584CB1D6\"}, \"SubnetId\": {\"Ref\": \"EKSVpcPrivateSubnet2Subnet75FE259E\"}}, \"Metadata\": {\"aws:cdk:path\": \"MyEKSCluster/EKSVpc/PrivateSubnet2/RouteTableAssociation\"}}, \"EKSVpcPrivateSubnet2DefaultRoute6DA3F959\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"EKSVpcPrivateSubnet2RouteTable584CB1D6\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"EKSVpcPublicSubnet2NATGateway06A389FD\"}}, \"Metadata\": {\"aws:cdk:path\": \"MyEKSCluster/EKSVpc/PrivateSubnet2/DefaultRoute\"}}, \"EKSVpcIGW6C6D33F8\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"MyEKSCluster/EKSVpc\"}]}, \"Metadata\": {\"aws:cdk:path\": \"MyEKSCluster/EKSVpc/IGW\"}}, \"EKSVpcVPCGW60CB8A7B\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"EKSVpcBAB3E5CC\"}, \"InternetGatewayId\": {\"Ref\": \"EKSVpcIGW6C6D33F8\"}}, \"Metadata\": {\"aws:cdk:path\": \"MyEKSCluster/EKSVpc/VPCGW\"}}, \"EKSWorkerRole2A87069F\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"ec2.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/AmazonEKSWorkerNodePolicy\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/AmazonEKS_CNI_Policy\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/AmazonEC2ContainerRegistryReadOnly\"]]}]}, \"Metadata\": {\"aws:cdk:path\": \"MyEKSCluster/EKSWorkerRole/Resource\"}}, \"ClusterKubectlHandlerRole94549F93\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole\"]]}, {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/AmazonEC2ContainerRegistryReadOnly\"]]}, {\"Fn::If\": [\"ClusterHasEcrPublic8EE1114E\", {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/AmazonElasticContainerRegistryPublicReadOnly\"]]}, {\"Ref\": \"AWS::NoValue\"}]}]}, \"Metadata\": {\"aws:cdk:path\": \"MyEKSCluster/Cluster/KubectlHandlerRole/Resource\"}}, \"ClusterKubectlHandlerRoleDefaultPolicyE44083DD\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"eks:DescribeCluster\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"Cluster9EE0221C\", \"Arn\"]}}, {\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"ClusterCreationRole360249B6\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"ClusterKubectlHandlerRoleDefaultPolicyE44083DD\", \"Roles\": [{\"Ref\": \"ClusterKubectlHandlerRole94549F93\"}]}, \"Metadata\": {\"aws:cdk:path\": \"MyEKSCluster/Cluster/KubectlHandlerRole/DefaultPolicy/Resource\"}}, \"ClusterRoleFA261979\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"eks.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/AmazonEKSClusterPolicy\"]]}]}, \"Metadata\": {\"aws:cdk:path\": \"MyEKSCluster/Cluster/Role/Resource\"}}, \"ClusterControlPlaneSecurityGroupD274242C\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"EKS Control Plane Security Group\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"VpcId\": {\"Ref\": \"EKSVpcBAB3E5CC\"}}, \"Metadata\": {\"aws:cdk:path\": \"MyEKSCluster/Cluster/ControlPlaneSecurityGroup/Resource\"}}, \"ClusterControlPlaneSecurityGroupfromMyEKSClusterOnDemandASGInstanceSecurityGroup7C83B570443CCA3D993\": {\"Type\": \"AWS::EC2::SecurityGroupIngress\", \"Properties\": {\"IpProtocol\": \"tcp\", \"Description\": \"from MyEKSClusterOnDemandASGInstanceSecurityGroup7C83B570:443\", \"FromPort\": 443, \"GroupId\": {\"Fn::GetAtt\": [\"ClusterControlPlaneSecurityGroupD274242C\", \"GroupId\"]}, \"SourceSecurityGroupId\": {\"Fn::GetAtt\": [\"OnDemandASGInstanceSecurityGroup58386299\", \"GroupId\"]}, \"ToPort\": 443}, \"Metadata\": {\"aws:cdk:path\": \"MyEKSCluster/Cluster/ControlPlaneSecurityGroup/from MyEKSClusterOnDemandASGInstanceSecurityGroup7C83B570:443\"}}, \"ClusterCreationRole360249B6\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::GetAtt\": [\"awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454\", \"Outputs.MyEKSClusterawscdkawseksClusterResourceProviderOnEventHandlerServiceRole0F8CC073Arn\"]}}}, {\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::GetAtt\": [\"awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454\", \"Outputs.MyEKSClusterawscdkawseksClusterResourceProviderIsCompleteHandlerServiceRoleA20574CFArn\"]}}}, {\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::GetAtt\": [\"ClusterKubectlHandlerRole94549F93\", \"Arn\"]}}}], \"Version\": \"2012-10-17\"}}, \"DependsOn\": [\"EKSVpcIGW6C6D33F8\", \"EKSVpcPrivateSubnet1DefaultRoute3FD0ADF2\", \"EKSVpcPrivateSubnet1RouteTable158AD21B\", \"EKSVpcPrivateSubnet1RouteTableAssociation05ED387B\", \"EKSVpcPrivateSubnet1SubnetD09A7726\", \"EKSVpcPrivateSubnet2DefaultRoute6DA3F959\", \"EKSVpcPrivateSubnet2RouteTable584CB1D6\", \"EKSVpcPrivateSubnet2RouteTableAssociation56D711FD\", \"EKSVpcPrivateSubnet2Subnet75FE259E\", \"EKSVpcPublicSubnet1DefaultRouteF13B673C\", \"EKSVpcPublicSubnet1EIPA7436DE4\", \"EKSVpcPublicSubnet1NATGatewayE8A16310\", \"EKSVpcPublicSubnet1RouteTable258B7E17\", \"EKSVpcPublicSubnet1RouteTableAssociationC3AB9ADD\", \"EKSVpcPublicSubnet1Subnet6F739FCA\", \"EKSVpcPublicSubnet2DefaultRoute6E6CA646\", \"EKSVpcPublicSubnet2EIPBD601F30\", \"EKSVpcPublicSubnet2NATGateway06A389FD\", \"EKSVpcPublicSubnet2RouteTable0AB21A14\", \"EKSVpcPublicSubnet2RouteTableAssociation56EB44CD\", \"EKSVpcPublicSubnet2Subnet22F974C4\", \"EKSVpcBAB3E5CC\", \"EKSVpcVPCGW60CB8A7B\"], \"Metadata\": {\"aws:cdk:path\": \"MyEKSCluster/Cluster/Resource/CreationRole/Resource\"}}, \"ClusterCreationRoleDefaultPolicyE8BDFC7B\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"iam:PassRole\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"ClusterRoleFA261979\", \"Arn\"]}}, {\"Action\": [\"eks:CreateCluster\", \"eks:DescribeCluster\", \"eks:DescribeUpdate\", \"eks:DeleteCluster\", \"eks:UpdateClusterVersion\", \"eks:UpdateClusterConfig\", \"eks:CreateFargateProfile\", \"eks:TagResource\", \"eks:UntagResource\"], \"Effect\": \"Allow\", \"Resource\": [\"*\"]}, {\"Action\": [\"eks:DescribeFargateProfile\", \"eks:DeleteFargateProfile\"], \"Effect\": \"Allow\", \"Resource\": \"*\"}, {\"Action\": [\"iam:GetRole\", \"iam:listAttachedRolePolicies\"], \"Effect\": \"Allow\", \"Resource\": \"*\"}, {\"Action\": \"iam:CreateServiceLinkedRole\", \"Effect\": \"Allow\", \"Resource\": \"*\"}, {\"Action\": [\"ec2:DescribeInstances\", \"ec2:DescribeNetworkInterfaces\", \"ec2:DescribeSecurityGroups\", \"ec2:DescribeSubnets\", \"ec2:DescribeRouteTables\", \"ec2:DescribeDhcpOptions\", \"ec2:DescribeVpcs\"], \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"ClusterCreationRoleDefaultPolicyE8BDFC7B\", \"Roles\": [{\"Ref\": \"ClusterCreationRole360249B6\"}]}, \"DependsOn\": [\"EKSVpcIGW6C6D33F8\", \"EKSVpcPrivateSubnet1DefaultRoute3FD0ADF2\", \"EKSVpcPrivateSubnet1RouteTable158AD21B\", \"EKSVpcPrivateSubnet1RouteTableAssociation05ED387B\", \"EKSVpcPrivateSubnet1SubnetD09A7726\", \"EKSVpcPrivateSubnet2DefaultRoute6DA3F959\", \"EKSVpcPrivateSubnet2RouteTable584CB1D6\", \"EKSVpcPrivateSubnet2RouteTableAssociation56D711FD\", \"EKSVpcPrivateSubnet2Subnet75FE259E\", \"EKSVpcPublicSubnet1DefaultRouteF13B673C\", \"EKSVpcPublicSubnet1EIPA7436DE4\", \"EKSVpcPublicSubnet1NATGatewayE8A16310\", \"EKSVpcPublicSubnet1RouteTable258B7E17\", \"EKSVpcPublicSubnet1RouteTableAssociationC3AB9ADD\", \"EKSVpcPublicSubnet1Subnet6F739FCA\", \"EKSVpcPublicSubnet2DefaultRoute6E6CA646\", \"EKSVpcPublicSubnet2EIPBD601F30\", \"EKSVpcPublicSubnet2NATGateway06A389FD\", \"EKSVpcPublicSubnet2RouteTable0AB21A14\", \"EKSVpcPublicSubnet2RouteTableAssociation56EB44CD\", \"EKSVpcPublicSubnet2Subnet22F974C4\", \"EKSVpcBAB3E5CC\", \"EKSVpcVPCGW60CB8A7B\"], \"Metadata\": {\"aws:cdk:path\": \"MyEKSCluster/Cluster/Resource/CreationRole/DefaultPolicy/Resource\"}}, \"Cluster9EE0221C\": {\"Type\": \"Custom::AWSCDK-EKS-Cluster\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454\", \"Outputs.MyEKSClusterawscdkawseksClusterResourceProviderframeworkonEventB3DDA680Arn\"]}, \"Config\": {\"version\": \"1.21\", \"roleArn\": {\"Fn::GetAtt\": [\"ClusterRoleFA261979\", \"Arn\"]}, \"kubernetesNetworkConfig\": {\"ipFamily\": \"ipv4\"}, \"resourcesVpcConfig\": {\"subnetIds\": [{\"Ref\": \"EKSVpcPublicSubnet1Subnet6F739FCA\"}, {\"Ref\": \"EKSVpcPublicSubnet2Subnet22F974C4\"}, {\"Ref\": \"EKSVpcPrivateSubnet1SubnetD09A7726\"}, {\"Ref\": \"EKSVpcPrivateSubnet2Subnet75FE259E\"}], \"securityGroupIds\": [{\"Fn::GetAtt\": [\"ClusterControlPlaneSecurityGroupD274242C\", \"GroupId\"]}], \"endpointPublicAccess\": true, \"endpointPrivateAccess\": true}}, \"AssumeRoleArn\": {\"Fn::GetAtt\": [\"ClusterCreationRole360249B6\", \"Arn\"]}, \"AttributesRevision\": 2}, \"DependsOn\": [\"ClusterCreationRoleDefaultPolicyE8BDFC7B\", \"ClusterCreationRole360249B6\", \"EKSVpcIGW6C6D33F8\", \"EKSVpcPrivateSubnet1DefaultRoute3FD0ADF2\", \"EKSVpcPrivateSubnet1RouteTable158AD21B\", \"EKSVpcPrivateSubnet1RouteTableAssociation05ED387B\", \"EKSVpcPrivateSubnet1SubnetD09A7726\", \"EKSVpcPrivateSubnet2DefaultRoute6DA3F959\", \"EKSVpcPrivateSubnet2RouteTable584CB1D6\", \"EKSVpcPrivateSubnet2RouteTableAssociation56D711FD\", \"EKSVpcPrivateSubnet2Subnet75FE259E\", \"EKSVpcPublicSubnet1DefaultRouteF13B673C\", \"EKSVpcPublicSubnet1EIPA7436DE4\", \"EKSVpcPublicSubnet1NATGatewayE8A16310\", \"EKSVpcPublicSubnet1RouteTable258B7E17\", \"EKSVpcPublicSubnet1RouteTableAssociationC3AB9ADD\", \"EKSVpcPublicSubnet1Subnet6F739FCA\", \"EKSVpcPublicSubnet2DefaultRoute6E6CA646\", \"EKSVpcPublicSubnet2EIPBD601F30\", \"EKSVpcPublicSubnet2NATGateway06A389FD\", \"EKSVpcPublicSubnet2RouteTable0AB21A14\", \"EKSVpcPublicSubnet2RouteTableAssociation56EB44CD\", \"EKSVpcPublicSubnet2Subnet22F974C4\", \"EKSVpcBAB3E5CC\", \"EKSVpcVPCGW60CB8A7B\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\", \"Metadata\": {\"aws:cdk:path\": \"MyEKSCluster/Cluster/Resource/Resource/Default\"}}, \"ClusterKubectlReadyBarrier200052AF\": {\"Type\": \"AWS::SSM::Parameter\", \"Properties\": {\"Type\": \"String\", \"Value\": \"aws:cdk:eks:kubectl-ready\"}, \"DependsOn\": [\"ClusterCreationRoleDefaultPolicyE8BDFC7B\", \"ClusterCreationRole360249B6\", \"Cluster9EE0221C\"], \"Metadata\": {\"aws:cdk:path\": \"MyEKSCluster/Cluster/KubectlReadyBarrier\"}}, \"ClusterClusterSecurityGroupfromMyEKSClusterOnDemandASGInstanceSecurityGroup7C83B570443F1F32E8A\": {\"Type\": \"AWS::EC2::SecurityGroupIngress\", \"Properties\": {\"IpProtocol\": \"tcp\", \"Description\": \"from MyEKSClusterOnDemandASGInstanceSecurityGroup7C83B570:443\", \"FromPort\": 443, \"GroupId\": {\"Fn::GetAtt\": [\"Cluster9EE0221C\", \"ClusterSecurityGroupId\"]}, \"SourceSecurityGroupId\": {\"Fn::GetAtt\": [\"OnDemandASGInstanceSecurityGroup58386299\", \"GroupId\"]}, \"ToPort\": 443}, \"Metadata\": {\"aws:cdk:path\": \"MyEKSCluster/Cluster/ClusterSecurityGroup/from MyEKSClusterOnDemandASGInstanceSecurityGroup7C83B570:443\"}}, \"ClusterAwsAuthmanifestFE51F8AE\": {\"Type\": \"Custom::AWSCDK-EKS-KubernetesResource\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B\", \"Outputs.MyEKSClusterawscdkawseksKubectlProviderframeworkonEvent070BFADCArn\"]}, \"Manifest\": {\"Fn::Join\": [\"\", [\"[{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"ConfigMap\\\",\\\"metadata\\\":{\\\"name\\\":\\\"aws-auth\\\",\\\"namespace\\\":\\\"kube-system\\\",\\\"labels\\\":{\\\"aws.cdk.eks/prune-c896a91b539e5525d108fad41cffd42be265602255\\\":\\\"\\\"}},\\\"data\\\":{\\\"mapRoles\\\":\\\"[{\\\\\"rolearn\\\\\":\\\\\"\", {\"Fn::GetAtt\": [\"EKSWorkerRole2A87069F\", \"Arn\"]}, \"\\\\\",\\\\\"username\\\\\":\\\\\"system:node:{{EC2PrivateDNSName}}\\\\\",\\\\\"groups\\\\\":[\\\\\"system:bootstrappers\\\\\",\\\\\"system:nodes\\\\\"]}]\\\",\\\"mapUsers\\\":\\\"[]\\\",\\\"mapAccounts\\\":\\\"[]\\\"}}]\"]]}, \"ClusterName\": {\"Ref\": \"Cluster9EE0221C\"}, \"RoleArn\": {\"Fn::GetAtt\": [\"ClusterCreationRole360249B6\", \"Arn\"]}, \"PruneLabel\": \"aws.cdk.eks/prune-c896a91b539e5525d108fad41cffd42be265602255\", \"Overwrite\": true}, \"DependsOn\": [\"ClusterKubectlReadyBarrier200052AF\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\", \"Metadata\": {\"aws:cdk:path\": \"MyEKSCluster/Cluster/AwsAuth/manifest/Resource/Default\"}}, \"awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454\": {\"Type\": \"AWS::CloudFormation::Stack\", \"Properties\": {\"TemplateURL\": {\"Fn::Join\": [\"\", [\"https://s3.\", {\"Ref\": \"AWS::Region\"}, \".\", {\"Ref\": \"AWS::URLSuffix\"}, \"/\", {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"/0756bdf4c762ae7135765da0b3de0b7dd0c0d37f500b06ecff40aef7d4bafd44.json\"]]}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\", \"Metadata\": {\"aws:cdk:path\": \"MyEKSCluster/@aws-cdk--aws-eks.ClusterResourceProvider.NestedStack/@aws-cdk--aws-eks.ClusterResourceProvider.NestedStackResource\", \"aws:asset:path\": \"MyEKSClusterawscdkawseksClusterResourceProvider7494A2FD.nested.template.json\", \"aws:asset:property\": \"TemplateURL\"}}, \"awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B\": {\"Type\": \"AWS::CloudFormation::Stack\", \"Properties\": {\"TemplateURL\": {\"Fn::Join\": [\"\", [\"https://s3.\", {\"Ref\": \"AWS::Region\"}, \".\", {\"Ref\": \"AWS::URLSuffix\"}, \"/\", {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"/d67dbb518e2d35d97bbc11be502f100c4625866ed4a9c305033aea682551ff9d.json\"]]}, \"Parameters\": {\"referencetoMyEKSClusterKubectlHandlerRoleF73D6994Arn\": {\"Fn::GetAtt\": [\"ClusterKubectlHandlerRole94549F93\", \"Arn\"]}, \"referencetoMyEKSClusterEKSVpcPrivateSubnet1Subnet52504ADFRef\": {\"Ref\": \"EKSVpcPrivateSubnet1SubnetD09A7726\"}, \"referencetoMyEKSClusterEKSVpcPrivateSubnet2Subnet500D329DRef\": {\"Ref\": \"EKSVpcPrivateSubnet2Subnet75FE259E\"}, \"referencetoMyEKSClusterD473B49BClusterSecurityGroupId\": {\"Fn::GetAtt\": [\"Cluster9EE0221C\", \"ClusterSecurityGroupId\"]}}}, \"DependsOn\": [\"ClusterKubectlHandlerRoleDefaultPolicyE44083DD\", \"ClusterKubectlHandlerRole94549F93\", \"EKSVpcPrivateSubnet1DefaultRoute3FD0ADF2\", \"EKSVpcPrivateSubnet1RouteTableAssociation05ED387B\", \"EKSVpcPrivateSubnet2DefaultRoute6DA3F959\", \"EKSVpcPrivateSubnet2RouteTableAssociation56D711FD\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\", \"Metadata\": {\"aws:cdk:path\": \"MyEKSCluster/@aws-cdk--aws-eks.KubectlProvider.NestedStack/@aws-cdk--aws-eks.KubectlProvider.NestedStackResource\", \"aws:asset:path\": \"MyEKSClusterawscdkawseksKubectlProvider6C070B46.nested.template.json\", \"aws:asset:property\": \"TemplateURL\"}}, \"OnDemandASGInstanceSecurityGroup58386299\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"MyEKSCluster/OnDemandASG/InstanceSecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"Tags\": [{\"Key\": \"Name\", \"Value\": \"MyEKSCluster/OnDemandASG\"}], \"VpcId\": {\"Ref\": \"EKSVpcBAB3E5CC\"}}, \"Metadata\": {\"aws:cdk:path\": \"MyEKSCluster/OnDemandASG/InstanceSecurityGroup/Resource\"}}, \"OnDemandASGInstanceSecurityGroupfromMyEKSClusterOnDemandASGInstanceSecurityGroup7C83B570ALLTRAFFIC9923120F\": {\"Type\": \"AWS::EC2::SecurityGroupIngress\", \"Properties\": {\"IpProtocol\": \"-1\", \"Description\": \"from MyEKSClusterOnDemandASGInstanceSecurityGroup7C83B570:ALL TRAFFIC\", \"GroupId\": {\"Fn::GetAtt\": [\"OnDemandASGInstanceSecurityGroup58386299\", \"GroupId\"]}, \"SourceSecurityGroupId\": {\"Fn::GetAtt\": [\"OnDemandASGInstanceSecurityGroup58386299\", \"GroupId\"]}}, \"Metadata\": {\"aws:cdk:path\": \"MyEKSCluster/OnDemandASG/InstanceSecurityGroup/from MyEKSClusterOnDemandASGInstanceSecurityGroup7C83B570:ALL TRAFFIC\"}}, \"OnDemandASGInstanceSecurityGroupfromMyEKSClusterClusterSecurityGroupBF736D1E443D3D22A0E\": {\"Type\": \"AWS::EC2::SecurityGroupIngress\", \"Properties\": {\"IpProtocol\": \"tcp\", \"Description\": \"from MyEKSClusterClusterSecurityGroupBF736D1E:443\", \"FromPort\": 443, \"GroupId\": {\"Fn::GetAtt\": [\"OnDemandASGInstanceSecurityGroup58386299\", \"GroupId\"]}, \"SourceSecurityGroupId\": {\"Fn::GetAtt\": [\"Cluster9EE0221C\", \"ClusterSecurityGroupId\"]}, \"ToPort\": 443}, \"Metadata\": {\"aws:cdk:path\": \"MyEKSCluster/OnDemandASG/InstanceSecurityGroup/from MyEKSClusterClusterSecurityGroupBF736D1E:443\"}}, \"OnDemandASGInstanceSecurityGroupfromMyEKSClusterControlPlaneSecurityGroup247C60E14437054627A\": {\"Type\": \"AWS::EC2::SecurityGroupIngress\", \"Properties\": {\"IpProtocol\": \"tcp\", \"Description\": \"from MyEKSClusterControlPlaneSecurityGroup247C60E1:443\", \"FromPort\": 443, \"GroupId\": {\"Fn::GetAtt\": [\"OnDemandASGInstanceSecurityGroup58386299\", \"GroupId\"]}, \"SourceSecurityGroupId\": {\"Fn::GetAtt\": [\"ClusterControlPlaneSecurityGroupD274242C\", \"GroupId\"]}, \"ToPort\": 443}, \"Metadata\": {\"aws:cdk:path\": \"MyEKSCluster/OnDemandASG/InstanceSecurityGroup/from MyEKSClusterControlPlaneSecurityGroup247C60E1:443\"}}, \"OnDemandASGInstanceSecurityGroupfromMyEKSClusterClusterSecurityGroupBF736D1E102565535791C2D83\": {\"Type\": \"AWS::EC2::SecurityGroupIngress\", \"Properties\": {\"IpProtocol\": \"tcp\", \"Description\": \"from MyEKSClusterClusterSecurityGroupBF736D1E:1025-65535\", \"FromPort\": 1025, \"GroupId\": {\"Fn::GetAtt\": [\"OnDemandASGInstanceSecurityGroup58386299\", \"GroupId\"]}, \"SourceSecurityGroupId\": {\"Fn::GetAtt\": [\"Cluster9EE0221C\", \"ClusterSecurityGroupId\"]}, \"ToPort\": 65535}, \"Metadata\": {\"aws:cdk:path\": \"MyEKSCluster/OnDemandASG/InstanceSecurityGroup/from MyEKSClusterClusterSecurityGroupBF736D1E:1025-65535\"}}, \"OnDemandASGInstanceSecurityGroupfromMyEKSClusterControlPlaneSecurityGroup247C60E1102565535C8F83CA5\": {\"Type\": \"AWS::EC2::SecurityGroupIngress\", \"Properties\": {\"IpProtocol\": \"tcp\", \"Description\": \"from MyEKSClusterControlPlaneSecurityGroup247C60E1:1025-65535\", \"FromPort\": 1025, \"GroupId\": {\"Fn::GetAtt\": [\"OnDemandASGInstanceSecurityGroup58386299\", \"GroupId\"]}, \"SourceSecurityGroupId\": {\"Fn::GetAtt\": [\"ClusterControlPlaneSecurityGroupD274242C\", \"GroupId\"]}, \"ToPort\": 65535}, \"Metadata\": {\"aws:cdk:path\": \"MyEKSCluster/OnDemandASG/InstanceSecurityGroup/from MyEKSClusterControlPlaneSecurityGroup247C60E1:1025-65535\"}}, \"OnDemandASGInstanceProfile0FD1CDE0\": {\"Type\": \"AWS::IAM::InstanceProfile\", \"Properties\": {\"Roles\": [{\"Ref\": \"EKSWorkerRole2A87069F\"}]}, \"Metadata\": {\"aws:cdk:path\": \"MyEKSCluster/OnDemandASG/InstanceProfile\"}}, \"OnDemandASGLaunchConfig15AF6999\": {\"Type\": \"AWS::AutoScaling::LaunchConfiguration\", \"Properties\": {\"ImageId\": {\"Ref\": \"SsmParameterValueawsserviceeksoptimizedami121amazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter\"}, \"InstanceType\": \"t3.medium\", \"IamInstanceProfile\": {\"Ref\": \"OnDemandASGInstanceProfile0FD1CDE0\"}, \"SecurityGroups\": [{\"Fn::GetAtt\": [\"OnDemandASGInstanceSecurityGroup58386299\", \"GroupId\"]}, {\"Fn::GetAtt\": [\"Cluster9EE0221C\", \"ClusterSecurityGroupId\"]}], \"UserData\": {\"Fn::Base64\": {\"Fn::Join\": [\"\", [\"#!/bin/bash\nset -o xtrace\n/etc/eks/bootstrap.sh \", {\"Ref\": \"Cluster9EE0221C\"}, \" --kubelet-extra-args \\\"--node-labels lifecycle=OnDemand\\\" --apiserver-endpoint '\", {\"Fn::GetAtt\": [\"Cluster9EE0221C\", \"Endpoint\"]}, \"' --b64-cluster-ca '\", {\"Fn::GetAtt\": [\"Cluster9EE0221C\", \"CertificateAuthorityData\"]}, \"' --use-max-pods true\n/opt/aws/bin/cfn-signal --exit-code $? --stack MyEKSCluster --resource OnDemandASGC62213FE --region \", {\"Ref\": \"AWS::Region\"}]]}}}, \"DependsOn\": [\"EKSWorkerRole2A87069F\"], \"Metadata\": {\"aws:cdk:path\": \"MyEKSCluster/OnDemandASG/LaunchConfig\"}}, \"OnDemandASGC62213FE\": {\"Type\": \"AWS::AutoScaling::AutoScalingGroup\", \"Properties\": {\"MaxSize\": \"10\", \"MinSize\": \"1\", \"LaunchConfigurationName\": {\"Ref\": \"OnDemandASGLaunchConfig15AF6999\"}, \"Tags\": [{\"Key\": {\"Fn::Join\": [\"\", [\"kubernetes.io/cluster/\", {\"Ref\": \"Cluster9EE0221C\"}]]}, \"PropagateAtLaunch\": true, \"Value\": \"owned\"}, {\"Key\": \"Name\", \"PropagateAtLaunch\": true, \"Value\": \"MyEKSCluster/OnDemandASG\"}], \"VPCZoneIdentifier\": [{\"Ref\": \"EKSVpcPrivateSubnet1SubnetD09A7726\"}, {\"Ref\": \"EKSVpcPrivateSubnet2Subnet75FE259E\"}]}, \"UpdatePolicy\": {\"AutoScalingRollingUpdate\": {\"SuspendProcesses\": [\"HealthCheck\", \"ReplaceUnhealthy\", \"AZRebalance\", \"AlarmNotification\", \"ScheduledActions\"]}, \"AutoScalingScheduledAction\": {\"IgnoreUnmodifiedGroupSizeProperties\": true}}, \"Metadata\": {\"aws:cdk:path\": \"MyEKSCluster/OnDemandASG/ASG\"}}, \"CDKMetadata\": {\"Type\": \"AWS::CDK::Metadata\", \"Properties\": {\"Analytics\": \"v2:deflate64:H4sIAAAAAAAA/32RT2vDMAzFP8vurrf1sl5DGCPsDyEZvQ7FVVq1iV0suaWEfPc5ydqMHXbS0+Mh/2Qt9epJP9zBmRdmc1g0VOmuFDAHFa2vDs1Sd+ujUWlt13mq8lA1ZMpQWZTBm1XhguAnVA3O/uwlzM4QCDl7Cw/iOcuH8gHyAoJnuKjc0ynKeXBmBX3U18BE8tMlEll3LVpRJZrgSS4v3oXjyPCvkdmtR+ZeEbS6K9zEPdbcxR3Hh2aVWRawBnPvamqwV3hg3aVN4EinkjMnQXbqNVQjK/I7WKqRpVcQxLGBhuxWdzHlyqm5Yb1BsGaXOlvTNvjbH/2N9r0qkF3wJpLGZ107txH8l46jNnQdMx1z2AU8tBHN98q6Deo9358eV3oZr79nooUPVqhFXUz1GzSF6UoZAgAA\"}, \"Metadata\": {\"aws:cdk:path\": \"MyEKSCluster/CDKMetadata/Default\"}, \"Condition\": \"CDKMetadataAvailable\"}}, \"Conditions\": {\"ClusterHasEcrPublic8EE1114E\": {\"Fn::Equals\": [{\"Ref\": \"AWS::Partition\"}, \"aws\"]}, \"CDKMetadataAvailable\": {\"Fn::Or\": [{\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"af-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ca-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-northwest-1\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-3\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"me-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"sa-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-2\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-2\"]}]}]}}, \"Parameters\": {\"SsmParameterValueawsserviceeksoptimizedami121amazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/aws/service/eks/optimized-ami/1.21/amazon-linux-2/recommended/image_id\"}, \"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import autoscaling = require('aws-cdk-lib/aws-autoscaling');\nimport iam = require('aws-cdk-lib/aws-iam');\nimport ec2 = require('aws-cdk-lib/aws-ec2');\nimport eks = require('aws-cdk-lib/aws-eks');\nimport cdk = require('aws-cdk-lib');\n\nclass EKSCluster extends cdk.Stack {\n  constructor(scope: cdk.App, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n\n    const vpc = new ec2.Vpc(this, 'EKSVpc');  // Create a new VPC for our cluster\n    \n    // IAM role for our EC2 worker nodes\n    const workerRole = new iam.Role(this, 'EKSWorkerRole', {\n      assumedBy: new iam.ServicePrincipal('ec2.amazonaws.com')\n    });\n\n    const eksCluster = new eks.Cluster(this, 'Cluster', {\n      vpc: vpc,\n      defaultCapacity: 0,  // we want to manage capacity our selves\n      version: eks.KubernetesVersion.V1_21,\n    });\n\n    const onDemandASG = new autoscaling.AutoScalingGroup(this, 'OnDemandASG', {\n      vpc: vpc,\n      role: workerRole,\n      minCapacity: 1,\n      maxCapacity: 10,\n      instanceType: new ec2.InstanceType('t3.medium'),\n      machineImage: new eks.EksOptimizedImage({\n        kubernetesVersion: '1.21',\n        nodeType: eks.NodeType.STANDARD  // without this, incorrect SSM parameter for AMI is resolved\n      }),\n      updatePolicy: autoscaling.UpdatePolicy.rollingUpdate()\n      });\n\n    eksCluster.connectAutoScalingGroupCapacity(onDemandASG, {});\n  }\n}\n\nconst app = new cdk.App();\nnew EKSCluster(app, 'MyEKSCluster');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"BlueGreenBucket6F02E021\": {\"Type\": \"AWS::S3::Bucket\", \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\", \"Metadata\": {\"aws:cdk:path\": \"ElasticBeanstalkBG/BlueGreenBucket/Resource\"}}, \"BlueGreenLambdaServiceRoleF8B06A3D\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}, \"Metadata\": {\"aws:cdk:path\": \"ElasticBeanstalkBG/BlueGreenLambda/ServiceRole/Resource\"}}, \"BlueGreenLambdaServiceRoleDefaultPolicy84071191\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:GetObject*\", \"s3:GetBucket*\", \"s3:List*\", \"s3:DeleteObject*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\", \"s3:Abort*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"BlueGreenBucket6F02E021\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"BlueGreenBucket6F02E021\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"codepipeline:PutJobSuccessResult\", \"codepipeline:PutJobFailureResult\"], \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"BlueGreenLambdaServiceRoleDefaultPolicy84071191\", \"Roles\": [{\"Ref\": \"BlueGreenLambdaServiceRoleF8B06A3D\"}]}, \"Metadata\": {\"aws:cdk:path\": \"ElasticBeanstalkBG/BlueGreenLambda/ServiceRole/DefaultPolicy/Resource\"}}, \"BlueGreenLambda337FBF79\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"f5dcd6b0b6d429cccb4a9ed64a2ec0007b6f5d2fe1a30e6831b968c2e114066c.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"BlueGreenLambdaServiceRoleF8B06A3D\", \"Arn\"]}, \"Environment\": {\"Variables\": {\"BUCKET\": {\"Ref\": \"BlueGreenBucket6F02E021\"}}}, \"Handler\": \"blue_green.lambda_handler\", \"Runtime\": \"python3.6\"}, \"DependsOn\": [\"BlueGreenLambdaServiceRoleDefaultPolicy84071191\", \"BlueGreenLambdaServiceRoleF8B06A3D\"], \"Metadata\": {\"aws:cdk:path\": \"ElasticBeanstalkBG/BlueGreenLambda/Resource\", \"aws:asset:path\": \"asset.f5dcd6b0b6d429cccb4a9ed64a2ec0007b6f5d2fe1a30e6831b968c2e114066c\", \"aws:asset:is-bundled\": false, \"aws:asset:property\": \"Code\"}}, \"Repository22E53BBD\": {\"Type\": \"AWS::CodeCommit::Repository\", \"Properties\": {\"RepositoryName\": \"MyRepositoryName\"}, \"Metadata\": {\"aws:cdk:path\": \"ElasticBeanstalkBG/Repository/Resource\"}}, \"RepositoryElasticBeanstalkBGMyFirstPipeline06ED0B54EventRuleE5A78265\": {\"Type\": \"AWS::Events::Rule\", \"Properties\": {\"EventPattern\": {\"source\": [\"aws.codecommit\"], \"resources\": [{\"Fn::GetAtt\": [\"Repository22E53BBD\", \"Arn\"]}], \"detail-type\": [\"CodeCommit Repository State Change\"], \"detail\": {\"event\": [\"referenceCreated\", \"referenceUpdated\"], \"referenceName\": [\"master\"]}}, \"State\": \"ENABLED\", \"Targets\": [{\"Arn\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":codepipeline:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":\", {\"Ref\": \"MyFirstPipeline9D7B1BB0\"}]]}, \"Id\": \"Target0\", \"RoleArn\": {\"Fn::GetAtt\": [\"MyFirstPipelineEventsRoleF57A2890\", \"Arn\"]}}]}, \"Metadata\": {\"aws:cdk:path\": \"ElasticBeanstalkBG/Repository/ElasticBeanstalkBGMyFirstPipeline06ED0B54EventRule/Resource\"}}, \"MyFirstPipelineArtifactsBucketEncryptionKey7F3C7C27\": {\"Type\": \"AWS::KMS::Key\", \"Properties\": {\"KeyPolicy\": {\"Statement\": [{\"Action\": \"kms:*\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}, \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\", \"Metadata\": {\"aws:cdk:path\": \"ElasticBeanstalkBG/MyFirstPipeline/ArtifactsBucketEncryptionKey/Resource\"}}, \"MyFirstPipelineArtifactsBucketEncryptionKeyAliasC588D4D1\": {\"Type\": \"AWS::KMS::Alias\", \"Properties\": {\"AliasName\": \"alias/codepipeline-elasticbeanstalkbgmyfirstpipeline06ed0b54\", \"TargetKeyId\": {\"Fn::GetAtt\": [\"MyFirstPipelineArtifactsBucketEncryptionKey7F3C7C27\", \"Arn\"]}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\", \"Metadata\": {\"aws:cdk:path\": \"ElasticBeanstalkBG/MyFirstPipeline/ArtifactsBucketEncryptionKeyAlias/Resource\"}}, \"MyFirstPipelineArtifactsBucket948DF7A6\": {\"Type\": \"AWS::S3::Bucket\", \"Properties\": {\"BucketEncryption\": {\"ServerSideEncryptionConfiguration\": [{\"ServerSideEncryptionByDefault\": {\"KMSMasterKeyID\": {\"Fn::GetAtt\": [\"MyFirstPipelineArtifactsBucketEncryptionKey7F3C7C27\", \"Arn\"]}, \"SSEAlgorithm\": \"aws:kms\"}}]}, \"PublicAccessBlockConfiguration\": {\"BlockPublicAcls\": true, \"BlockPublicPolicy\": true, \"IgnorePublicAcls\": true, \"RestrictPublicBuckets\": true}}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\", \"Metadata\": {\"aws:cdk:path\": \"ElasticBeanstalkBG/MyFirstPipeline/ArtifactsBucket/Resource\"}}, \"MyFirstPipelineArtifactsBucketPolicy445B8599\": {\"Type\": \"AWS::S3::BucketPolicy\", \"Properties\": {\"Bucket\": {\"Ref\": \"MyFirstPipelineArtifactsBucket948DF7A6\"}, \"PolicyDocument\": {\"Statement\": [{\"Action\": \"s3:*\", \"Condition\": {\"Bool\": {\"aws:SecureTransport\": \"false\"}}, \"Effect\": \"Deny\", \"Principal\": {\"AWS\": \"*\"}, \"Resource\": [{\"Fn::GetAtt\": [\"MyFirstPipelineArtifactsBucket948DF7A6\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"MyFirstPipelineArtifactsBucket948DF7A6\", \"Arn\"]}, \"/*\"]]}]}], \"Version\": \"2012-10-17\"}}, \"Metadata\": {\"aws:cdk:path\": \"ElasticBeanstalkBG/MyFirstPipeline/ArtifactsBucket/Policy/Resource\"}}, \"MyFirstPipelineRoleC43C37A0\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"codepipeline.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}, \"Metadata\": {\"aws:cdk:path\": \"ElasticBeanstalkBG/MyFirstPipeline/Role/Resource\"}}, \"MyFirstPipelineRoleDefaultPolicyA706989C\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:GetObject*\", \"s3:GetBucket*\", \"s3:List*\", \"s3:DeleteObject*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\", \"s3:Abort*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"MyFirstPipelineArtifactsBucket948DF7A6\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"MyFirstPipelineArtifactsBucket948DF7A6\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"kms:Decrypt\", \"kms:DescribeKey\", \"kms:Encrypt\", \"kms:ReEncrypt*\", \"kms:GenerateDataKey*\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"MyFirstPipelineArtifactsBucketEncryptionKey7F3C7C27\", \"Arn\"]}}, {\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"MyFirstPipelineSourceCodeCommitCodePipelineActionRole0180DFA3\", \"Arn\"]}}, {\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"MyFirstPipelineDeployInvokeActionCodePipelineActionRoleEE21D5DA\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyFirstPipelineRoleDefaultPolicyA706989C\", \"Roles\": [{\"Ref\": \"MyFirstPipelineRoleC43C37A0\"}]}, \"Metadata\": {\"aws:cdk:path\": \"ElasticBeanstalkBG/MyFirstPipeline/Role/DefaultPolicy/Resource\"}}, \"MyFirstPipeline9D7B1BB0\": {\"Type\": \"AWS::CodePipeline::Pipeline\", \"Properties\": {\"RoleArn\": {\"Fn::GetAtt\": [\"MyFirstPipelineRoleC43C37A0\", \"Arn\"]}, \"Stages\": [{\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Source\", \"Owner\": \"AWS\", \"Provider\": \"CodeCommit\", \"Version\": \"1\"}, \"Configuration\": {\"RepositoryName\": {\"Fn::GetAtt\": [\"Repository22E53BBD\", \"Name\"]}, \"BranchName\": \"master\", \"PollForSourceChanges\": false}, \"Name\": \"CodeCommit\", \"OutputArtifacts\": [{\"Name\": \"Source\"}], \"RoleArn\": {\"Fn::GetAtt\": [\"MyFirstPipelineSourceCodeCommitCodePipelineActionRole0180DFA3\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"Source\"}, {\"Actions\": [{\"ActionTypeId\": {\"Category\": \"Invoke\", \"Owner\": \"AWS\", \"Provider\": \"Lambda\", \"Version\": \"1\"}, \"Configuration\": {\"FunctionName\": {\"Ref\": \"BlueGreenLambda337FBF79\"}, \"UserParameters\": \"{\\\"blueEnvironment\\\":\\\"blue\\\",\\\"greenEnvironment\\\":\\\"green\\\",\\\"application\\\":\\\"myapp\\\"}\"}, \"InputArtifacts\": [{\"Name\": \"Source\"}], \"Name\": \"InvokeAction\", \"RoleArn\": {\"Fn::GetAtt\": [\"MyFirstPipelineDeployInvokeActionCodePipelineActionRoleEE21D5DA\", \"Arn\"]}, \"RunOrder\": 1}], \"Name\": \"Deploy\"}], \"ArtifactStore\": {\"EncryptionKey\": {\"Id\": {\"Fn::GetAtt\": [\"MyFirstPipelineArtifactsBucketEncryptionKey7F3C7C27\", \"Arn\"]}, \"Type\": \"KMS\"}, \"Location\": {\"Ref\": \"MyFirstPipelineArtifactsBucket948DF7A6\"}, \"Type\": \"S3\"}}, \"DependsOn\": [\"MyFirstPipelineRoleDefaultPolicyA706989C\", \"MyFirstPipelineRoleC43C37A0\"], \"Metadata\": {\"aws:cdk:path\": \"ElasticBeanstalkBG/MyFirstPipeline/Resource\"}}, \"MyFirstPipelineSourceCodeCommitCodePipelineActionRole0180DFA3\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}, \"Metadata\": {\"aws:cdk:path\": \"ElasticBeanstalkBG/MyFirstPipeline/Source/CodeCommit/CodePipelineActionRole/Resource\"}}, \"MyFirstPipelineSourceCodeCommitCodePipelineActionRoleDefaultPolicyA050FE0D\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"s3:GetObject*\", \"s3:GetBucket*\", \"s3:List*\", \"s3:DeleteObject*\", \"s3:PutObject\", \"s3:PutObjectLegalHold\", \"s3:PutObjectRetention\", \"s3:PutObjectTagging\", \"s3:PutObjectVersionTagging\", \"s3:Abort*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"MyFirstPipelineArtifactsBucket948DF7A6\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"MyFirstPipelineArtifactsBucket948DF7A6\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"kms:Decrypt\", \"kms:DescribeKey\", \"kms:Encrypt\", \"kms:ReEncrypt*\", \"kms:GenerateDataKey*\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"MyFirstPipelineArtifactsBucketEncryptionKey7F3C7C27\", \"Arn\"]}}, {\"Action\": [\"codecommit:GetBranch\", \"codecommit:GetCommit\", \"codecommit:UploadArchive\", \"codecommit:GetUploadArchiveStatus\", \"codecommit:CancelUploadArchive\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"Repository22E53BBD\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyFirstPipelineSourceCodeCommitCodePipelineActionRoleDefaultPolicyA050FE0D\", \"Roles\": [{\"Ref\": \"MyFirstPipelineSourceCodeCommitCodePipelineActionRole0180DFA3\"}]}, \"Metadata\": {\"aws:cdk:path\": \"ElasticBeanstalkBG/MyFirstPipeline/Source/CodeCommit/CodePipelineActionRole/DefaultPolicy/Resource\"}}, \"MyFirstPipelineEventsRoleF57A2890\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"events.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}, \"Metadata\": {\"aws:cdk:path\": \"ElasticBeanstalkBG/MyFirstPipeline/EventsRole/Resource\"}}, \"MyFirstPipelineEventsRoleDefaultPolicy4ABCA0A0\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"codepipeline:StartPipelineExecution\", \"Effect\": \"Allow\", \"Resource\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":codepipeline:\", {\"Ref\": \"AWS::Region\"}, \":\", {\"Ref\": \"AWS::AccountId\"}, \":\", {\"Ref\": \"MyFirstPipeline9D7B1BB0\"}]]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyFirstPipelineEventsRoleDefaultPolicy4ABCA0A0\", \"Roles\": [{\"Ref\": \"MyFirstPipelineEventsRoleF57A2890\"}]}, \"Metadata\": {\"aws:cdk:path\": \"ElasticBeanstalkBG/MyFirstPipeline/EventsRole/DefaultPolicy/Resource\"}}, \"MyFirstPipelineDeployInvokeActionCodePipelineActionRoleEE21D5DA\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}}], \"Version\": \"2012-10-17\"}}, \"Metadata\": {\"aws:cdk:path\": \"ElasticBeanstalkBG/MyFirstPipeline/Deploy/InvokeAction/CodePipelineActionRole/Resource\"}}, \"MyFirstPipelineDeployInvokeActionCodePipelineActionRoleDefaultPolicy3EA49998\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"lambda:ListFunctions\", \"Effect\": \"Allow\", \"Resource\": \"*\"}, {\"Action\": \"lambda:InvokeFunction\", \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"BlueGreenLambda337FBF79\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"BlueGreenLambda337FBF79\", \"Arn\"]}, \":*\"]]}]}, {\"Action\": [\"s3:GetObject*\", \"s3:GetBucket*\", \"s3:List*\"], \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"MyFirstPipelineArtifactsBucket948DF7A6\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"MyFirstPipelineArtifactsBucket948DF7A6\", \"Arn\"]}, \"/*\"]]}]}, {\"Action\": [\"kms:Decrypt\", \"kms:DescribeKey\"], \"Effect\": \"Allow\", \"Resource\": {\"Fn::GetAtt\": [\"MyFirstPipelineArtifactsBucketEncryptionKey7F3C7C27\", \"Arn\"]}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"MyFirstPipelineDeployInvokeActionCodePipelineActionRoleDefaultPolicy3EA49998\", \"Roles\": [{\"Ref\": \"MyFirstPipelineDeployInvokeActionCodePipelineActionRoleEE21D5DA\"}]}, \"Metadata\": {\"aws:cdk:path\": \"ElasticBeanstalkBG/MyFirstPipeline/Deploy/InvokeAction/CodePipelineActionRole/DefaultPolicy/Resource\"}}, \"CDKMetadata\": {\"Type\": \"AWS::CDK::Metadata\", \"Properties\": {\"Analytics\": \"v2:deflate64:H4sIAAAAAAAA/0WQTW4DIQyFz9I947bJotkmkbrpJpoeICKMGznDz2gMiSLE3QsM0azeZ8N7Bm9g9wUfb/LBnRrGTtMF4q+XahS5dY68hXgIakQvjn+20SIHydjw5DSp53pjqZPQ0lwGCfE7WOXJ2XLjxUmQNBB7p7G0q645rwTeniUzeoZ9EaHcgMoZQz5bcXJM3s3VsVZJ4B1ttsQ+tPCsqXonmlCTRYinRnVa4yRGk20/WBOL7DVJLkWFlESP7MKsUNT35E1dyV6X+e0g89HZgZZP2jwUbvx+/9zBJi/6xkTdHKwng9Av+g+OhbguhAEAAA==\"}, \"Metadata\": {\"aws:cdk:path\": \"ElasticBeanstalkBG/CDKMetadata/Default\"}, \"Condition\": \"CDKMetadataAvailable\"}}, \"Conditions\": {\"CDKMetadataAvailable\": {\"Fn::Or\": [{\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"af-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ca-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-northwest-1\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-3\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"me-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"sa-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-2\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-2\"]}]}]}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import cdk = require('aws-cdk-lib');\nimport cpactions = require('aws-cdk-lib/aws-codepipeline-actions');\nimport cp = require('aws-cdk-lib/aws-codepipeline');\nimport cc = require('aws-cdk-lib/aws-codecommit');\nimport lambda = require('aws-cdk-lib/aws-lambda');\nimport s3 = require('aws-cdk-lib/aws-s3');\n\nexport class CdkStack extends cdk.Stack {\n  constructor(scope: cdk.App, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n\n    //objects for access parameters\n    const node = this.node;\n\n    const blue_env = node.tryGetContext(\"blue_env\");\n    const green_env = node.tryGetContext(\"green_env\");\n    const app_name = node.tryGetContext(\"app_name\");\n\n    const bucket = new s3.Bucket(this, 'BlueGreenBucket', {\n      // The default removal policy is RETAIN, which means that cdk destroy will not attempt to delete\n      // the new bucket, and it will remain in your account until manually deleted. By setting the policy to\n      // DESTROY, cdk destroy will attempt to delete the bucket, but will error if the bucket is not empty.\n      removalPolicy: cdk.RemovalPolicy.DESTROY, // NOT recommended for production code\n    });\n\n    const handler = new lambda.Function(this, 'BlueGreenLambda', {\n      runtime: lambda.Runtime.PYTHON_3_6,\n      code: lambda.Code.fromAsset('resources'),\n      handler: 'blue_green.lambda_handler',\n      environment: {\n        BUCKET: bucket.bucketName\n      }\n    });\n\n    bucket.grantReadWrite(handler);\n\n    const repo = new cc.Repository(this, 'Repository', {\n      repositoryName: 'MyRepositoryName',\n    });\n\n    const pipeline = new cp.Pipeline(this, 'MyFirstPipeline');\n\n    const sourceStage = pipeline.addStage({\n      stageName: 'Source'\n    });\n\n    const sourceArtifact = new cp.Artifact('Source');\n\n    const sourceAction = new cpactions.CodeCommitSourceAction({\n      actionName: 'CodeCommit',\n      repository: repo,\n      output: sourceArtifact,\n    });\n\n    sourceStage.addAction(sourceAction);\n\n\n    const deployStage = pipeline.addStage({\n      stageName: 'Deploy'\n    });\n\n\n    const lambdaAction = new cpactions.LambdaInvokeAction({\n      actionName: 'InvokeAction',\n      lambda: handler,\n      userParameters: {\n        blueEnvironment: blue_env,\n        greenEnvironment: green_env,\n        application: app_name\n      },\n      inputs: [sourceArtifact]\n    });\n\n    deployStage.addAction(lambdaAction);\n\n\n  }\n}\n\nconst app = new cdk.App();\n\nnew CdkStack(app, 'ElasticBeanstalkBG');\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"Application\": {\"Type\": \"AWS::ElasticBeanstalk::Application\", \"Properties\": {\"ApplicationName\": \"MyApp\"}, \"Metadata\": {\"aws:cdk:path\": \"ElasticBeanstalk/Application\"}}, \"Environment\": {\"Type\": \"AWS::ElasticBeanstalk::Environment\", \"Properties\": {\"ApplicationName\": \"MyApp\", \"EnvironmentName\": \"MySampleEnvironment\", \"PlatformArn\": \"arn:aws:elasticbeanstalk:us-east-1::platform/Tomcat 8 with Java 8 running on 64bit Amazon Linux\"}, \"DependsOn\": [\"Application\"], \"Metadata\": {\"aws:cdk:path\": \"ElasticBeanstalk/Environment\"}}, \"CDKMetadata\": {\"Type\": \"AWS::CDK::Metadata\", \"Properties\": {\"Analytics\": \"v2:deflate64:H4sIAAAAAAAA/yWNQQ6DMAwE39J74rZcyrVC/QB9AAqJK5kEB2FDD4i/N1FPuzNaaRtoH3C7uK9YH6JNNMLxVuejKWrA5ETJj+hY1KUIR/fh57Ik8k4psyn44p3WzDOynpV7lLytHmvvMgeqw9NwDgiTXPd7C015nITIrhsrzQj9P39k15pfjQAAAA==\"}, \"Metadata\": {\"aws:cdk:path\": \"ElasticBeanstalk/CDKMetadata/Default\"}, \"Condition\": \"CDKMetadataAvailable\"}}, \"Conditions\": {\"CDKMetadataAvailable\": {\"Fn::Or\": [{\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"af-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ca-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-northwest-1\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-3\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"me-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"sa-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-2\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-2\"]}]}]}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "#!/usr/bin/env node\nimport * as cdk from 'aws-cdk-lib';\nimport * as elasticbeanstalk from 'aws-cdk-lib/aws-elasticbeanstalk';\n\n\nexport class CdkStack extends cdk.Stack {\n  constructor(scope: cdk.App, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n\n    //objects for access parameters\n    const node = this.node;\n\n    const appName = 'MyApp';\n\n    const platform = node.tryGetContext(\"platform\");\n\n    const app = new elasticbeanstalk.CfnApplication(this, 'Application', {\n      applicationName: appName\n    });\n\n    const env = new elasticbeanstalk.CfnEnvironment(this, 'Environment', {\n      environmentName: 'MySampleEnvironment',\n      applicationName: app.applicationName || appName,\n      platformArn: platform\n    });\n\n    // to ensure the application is created before the environment\n    env.addDependsOn(app);\n  }\n}\n\nconst app = new cdk.App();\n\nnew CdkStack(app, 'ElasticBeanstalk');\n\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"TopicBFC7AF6E\": {\"Type\": \"AWS::SNS::Topic\", \"Properties\": {\"DisplayName\": \"Lambda SNS Topic\"}, \"Metadata\": {\"aws:cdk:path\": \"EventBridgeLambdaStack/Topic/Resource\"}}, \"TopicTokenSubscription178F3F75E\": {\"Type\": \"AWS::SNS::Subscription\", \"Properties\": {\"Protocol\": \"email\", \"TopicArn\": {\"Ref\": \"TopicBFC7AF6E\"}, \"Endpoint\": {\"Ref\": \"email\"}}, \"Metadata\": {\"aws:cdk:path\": \"EventBridgeLambdaStack/Topic/TokenSubscription:1/Resource\"}}, \"SingletonServiceRoleDDD815CD\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}, \"Metadata\": {\"aws:cdk:path\": \"EventBridgeLambdaStack/Singleton/ServiceRole/Resource\"}}, \"SingletonServiceRoleDefaultPolicy7525C238\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"sns:publish\", \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"SingletonServiceRoleDefaultPolicy7525C238\", \"Roles\": [{\"Ref\": \"SingletonServiceRoleDDD815CD\"}]}, \"Metadata\": {\"aws:cdk:path\": \"EventBridgeLambdaStack/Singleton/ServiceRole/DefaultPolicy/Resource\"}}, \"Singleton8C7B99F3\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"import json\nimport boto3\nimport os\nclient = boto3.client('sns')\n\ndef main(event, context):\n    print(\\\"I'm running!\\\")\n    response = client.publish(TopicArn=os.environ.get('TOPIC_ARN'),Message=\\\"Test message\\\")\n    print(\\\"Message published\\\")\n    return(response)\"}, \"Role\": {\"Fn::GetAtt\": [\"SingletonServiceRoleDDD815CD\", \"Arn\"]}, \"Environment\": {\"Variables\": {\"TOPIC_ARN\": {\"Ref\": \"TopicBFC7AF6E\"}}}, \"Handler\": \"index.main\", \"Runtime\": \"python3.9\", \"Timeout\": 300}, \"DependsOn\": [\"SingletonServiceRoleDefaultPolicy7525C238\", \"SingletonServiceRoleDDD815CD\"], \"Metadata\": {\"aws:cdk:path\": \"EventBridgeLambdaStack/Singleton/Resource\"}}, \"Rule4C995B7F\": {\"Type\": \"AWS::Events::Rule\", \"Properties\": {\"ScheduleExpression\": \"cron(* * ? * * *)\", \"State\": \"ENABLED\", \"Targets\": [{\"Arn\": {\"Fn::GetAtt\": [\"Singleton8C7B99F3\", \"Arn\"]}, \"Id\": \"Target0\"}]}, \"Metadata\": {\"aws:cdk:path\": \"EventBridgeLambdaStack/Rule/Resource\"}}, \"RuleAllowEventRuleEventBridgeLambdaStackSingleton0D05990EAAD8CFB9\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"Singleton8C7B99F3\", \"Arn\"]}, \"Principal\": \"events.amazonaws.com\", \"SourceArn\": {\"Fn::GetAtt\": [\"Rule4C995B7F\", \"Arn\"]}}, \"Metadata\": {\"aws:cdk:path\": \"EventBridgeLambdaStack/Rule/AllowEventRuleEventBridgeLambdaStackSingleton0D05990E\"}}, \"CDKMetadata\": {\"Type\": \"AWS::CDK::Metadata\", \"Properties\": {\"Analytics\": \"v2:deflate64:H4sIAAAAAAAA/02PwQ6CMBBEv8V7WZWL3Ek8E/BuSlmTBdqSbosxDf8uFE04zezMO8zmUNzgcpJvzlQ3ZCO1EBsv1SDW6BnZMMSHnUiJ8mV204SWlaPJkzVberwXMUrddhLiPRj1J46+QqeJObEkNcTajrgVSSs7kvokLrlF4IzGryPq8MNWXZZESCc1enSiRrbBqb0/+NKajvZZxnYIPZ/nawH5+nDPRJkLxpNGqHf9AlCQr2IMAQAA\"}, \"Metadata\": {\"aws:cdk:path\": \"EventBridgeLambdaStack/CDKMetadata/Default\"}, \"Condition\": \"CDKMetadataAvailable\"}}, \"Parameters\": {\"email\": {\"Type\": \"String\", \"Description\": \"The name of the Amazon S3 bucket where uploaded files will be stored.\"}, \"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Conditions\": {\"CDKMetadataAvailable\": {\"Fn::Or\": [{\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"af-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ca-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-northwest-1\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-3\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"me-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"sa-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-2\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-2\"]}]}]}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import events = require('aws-cdk-lib/aws-events');\nimport targets = require('aws-cdk-lib/aws-events-targets');\nimport lambda = require('aws-cdk-lib/aws-lambda');\nimport cdk = require('aws-cdk-lib');\nimport fs = require('fs');\nimport sns = require('aws-cdk-lib/aws-sns');\nimport subscriptions = require('aws-cdk-lib/aws-sns-subscriptions');\nimport iam = require('aws-cdk-lib/aws-iam');\nimport { CfnParameter } from 'aws-cdk-lib';\n\n\n\nexport class EventBridgeLambdaStack extends cdk.Stack {\n  constructor(app: cdk.App, id: string) {\n    super(app, id);\n\n    // SNS Topic\n    const topic = new sns.Topic(this, 'Topic', {\n      displayName: 'Lambda SNS Topic',\n    });\n\n    //Email Variable\n    const emailaddress = new CfnParameter(this, \"email\", {\n      type: \"String\",\n      description: \"The name of the Amazon S3 bucket where uploaded files will be stored.\"});\n\n    // Subscription to the topic\n    topic.addSubscription(new subscriptions.EmailSubscription(emailaddress.valueAsString));\n\n    // Lambda Function to publish message to SNS\n    const lambdaFn = new lambda.Function(this, 'Singleton', {\n      code: new lambda.InlineCode(fs.readFileSync('lambda-handler.py', { encoding: 'utf-8' })),\n      handler: 'index.main',\n      timeout: cdk.Duration.seconds(300),\n      runtime: lambda.Runtime.PYTHON_3_9,\n      environment: {'TOPIC_ARN': topic.topicArn}\n      \n    });\n\n    // Run the eventbridge every minute\n    const rule = new events.Rule(this, 'Rule', {\n      schedule: events.Schedule.expression('cron(* * ? * * *)')\n    });\n\n    // Add the lambda function as a target to the eventbridge\n    rule.addTarget(new targets.LambdaFunction(lambdaFn));\n\n    // Add the permission to the lambda function to publish to SNS\n    const snsTopicPolicy = new iam.PolicyStatement({\n      actions: ['sns:publish'],\n      resources: ['*'],\n    });\n\n    // Add the permission to the lambda function to publish to SNS\n    lambdaFn.addToRolePolicy(snsTopicPolicy);\n\n  }\n}\n\nconst app = new cdk.App();\nnew EventBridgeLambdaStack(app, 'EventBridgeLambdaStack');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"VPCB9E5F0B4\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"AdFsxStack/VPC\"}]}, \"Metadata\": {\"aws:cdk:path\": \"AdFsxStack/VPC/Resource\"}}, \"VPCPublicSubnet1SubnetB4246D30\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"AdFsxStack/VPC/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"AdFsxStack/VPC/PublicSubnet1/Subnet\"}}, \"VPCPublicSubnet1RouteTableFEE4B781\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"AdFsxStack/VPC/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"AdFsxStack/VPC/PublicSubnet1/RouteTable\"}}, \"VPCPublicSubnet1RouteTableAssociation0B0896DC\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}}, \"Metadata\": {\"aws:cdk:path\": \"AdFsxStack/VPC/PublicSubnet1/RouteTableAssociation\"}}, \"VPCPublicSubnet1DefaultRoute91CEF279\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"], \"Metadata\": {\"aws:cdk:path\": \"AdFsxStack/VPC/PublicSubnet1/DefaultRoute\"}}, \"VPCPublicSubnet1EIP6AD938E8\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"AdFsxStack/VPC/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"AdFsxStack/VPC/PublicSubnet1/EIP\"}}, \"VPCPublicSubnet1NATGatewayE0556630\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet1EIP6AD938E8\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"AdFsxStack/VPC/PublicSubnet1\"}]}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\"], \"Metadata\": {\"aws:cdk:path\": \"AdFsxStack/VPC/PublicSubnet1/NATGateway\"}}, \"VPCPublicSubnet2Subnet74179F39\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.64.0/18\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"AdFsxStack/VPC/PublicSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"AdFsxStack/VPC/PublicSubnet2/Subnet\"}}, \"VPCPublicSubnet2RouteTable6F1A15F1\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"AdFsxStack/VPC/PublicSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"AdFsxStack/VPC/PublicSubnet2/RouteTable\"}}, \"VPCPublicSubnet2RouteTableAssociation5A808732\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}}, \"Metadata\": {\"aws:cdk:path\": \"AdFsxStack/VPC/PublicSubnet2/RouteTableAssociation\"}}, \"VPCPublicSubnet2DefaultRouteB7481BBA\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet2RouteTable6F1A15F1\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"], \"Metadata\": {\"aws:cdk:path\": \"AdFsxStack/VPC/PublicSubnet2/DefaultRoute\"}}, \"VPCPublicSubnet2EIP4947BC00\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"AdFsxStack/VPC/PublicSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"AdFsxStack/VPC/PublicSubnet2/EIP\"}}, \"VPCPublicSubnet2NATGateway3C070193\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet2Subnet74179F39\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet2EIP4947BC00\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"AdFsxStack/VPC/PublicSubnet2\"}]}, \"DependsOn\": [\"VPCPublicSubnet2DefaultRouteB7481BBA\", \"VPCPublicSubnet2RouteTableAssociation5A808732\"], \"Metadata\": {\"aws:cdk:path\": \"AdFsxStack/VPC/PublicSubnet2/NATGateway\"}}, \"VPCPrivateSubnet1Subnet8BCA10E0\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"AdFsxStack/VPC/PrivateSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"AdFsxStack/VPC/PrivateSubnet1/Subnet\"}}, \"VPCPrivateSubnet1RouteTableBE8A6027\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"AdFsxStack/VPC/PrivateSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"AdFsxStack/VPC/PrivateSubnet1/RouteTable\"}}, \"VPCPrivateSubnet1RouteTableAssociation347902D1\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}}, \"Metadata\": {\"aws:cdk:path\": \"AdFsxStack/VPC/PrivateSubnet1/RouteTableAssociation\"}}, \"VPCPrivateSubnet1DefaultRouteAE1D6490\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet1NATGatewayE0556630\"}}, \"Metadata\": {\"aws:cdk:path\": \"AdFsxStack/VPC/PrivateSubnet1/DefaultRoute\"}}, \"VPCPrivateSubnet2SubnetCFCDAA7A\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.192.0/18\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"AdFsxStack/VPC/PrivateSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"AdFsxStack/VPC/PrivateSubnet2/Subnet\"}}, \"VPCPrivateSubnet2RouteTable0A19E10E\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"AdFsxStack/VPC/PrivateSubnet2\"}]}, \"Metadata\": {\"aws:cdk:path\": \"AdFsxStack/VPC/PrivateSubnet2/RouteTable\"}}, \"VPCPrivateSubnet2RouteTableAssociation0C73D413\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}}, \"Metadata\": {\"aws:cdk:path\": \"AdFsxStack/VPC/PrivateSubnet2/RouteTableAssociation\"}}, \"VPCPrivateSubnet2DefaultRouteF4F5CFD2\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet2RouteTable0A19E10E\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet2NATGateway3C070193\"}}, \"Metadata\": {\"aws:cdk:path\": \"AdFsxStack/VPC/PrivateSubnet2/DefaultRoute\"}}, \"VPCIGWB7E252D3\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"AdFsxStack/VPC\"}]}, \"Metadata\": {\"aws:cdk:path\": \"AdFsxStack/VPC/IGW\"}}, \"VPCVPCGW99B986DC\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"InternetGatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"Metadata\": {\"aws:cdk:path\": \"AdFsxStack/VPC/VPCGW\"}}, \"examplecorpcredentialsA196A81F\": {\"Type\": \"AWS::SecretsManager::Secret\", \"Properties\": {\"GenerateSecretString\": {\"GenerateStringKey\": \"password\", \"SecretStringTemplate\": \"{\\\"username\\\":\\\"admin\\\"}\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\", \"Metadata\": {\"aws:cdk:path\": \"AdFsxStack/example.corp_credentials/Resource\"}}, \"ad\": {\"Type\": \"AWS::DirectoryService::MicrosoftAD\", \"Properties\": {\"Name\": \"example.corp\", \"Password\": {\"Fn::Join\": [\"\", [\"{{resolve:secretsmanager:\", {\"Ref\": \"examplecorpcredentialsA196A81F\"}, \":SecretString:password::}}\"]]}, \"VpcSettings\": {\"SubnetIds\": [{\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}, {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}], \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}}, \"Metadata\": {\"aws:cdk:path\": \"AdFsxStack/ad\"}}, \"dhcpOptions\": {\"Type\": \"AWS::EC2::DHCPOptions\", \"Properties\": {\"DomainName\": \"example.corp\", \"DomainNameServers\": {\"Fn::GetAtt\": [\"ad\", \"DnsIpAddresses\"]}}, \"Metadata\": {\"aws:cdk:path\": \"AdFsxStack/dhcpOptions\"}}, \"dhcpOptionsAssoc\": {\"Type\": \"AWS::EC2::VPCDHCPOptionsAssociation\", \"Properties\": {\"DhcpOptionsId\": {\"Ref\": \"dhcpOptions\"}, \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}, \"Metadata\": {\"aws:cdk:path\": \"AdFsxStack/dhcpOptionsAssoc\"}}, \"fs\": {\"Type\": \"AWS::FSx::FileSystem\", \"Properties\": {\"FileSystemType\": \"WINDOWS\", \"SubnetIds\": [{\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}, {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}], \"StorageCapacity\": 32, \"StorageType\": \"SSD\", \"WindowsConfiguration\": {\"ActiveDirectoryId\": {\"Ref\": \"ad\"}, \"DeploymentType\": \"MULTI_AZ_1\", \"PreferredSubnetId\": {\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}, \"ThroughputCapacity\": 8}}, \"Metadata\": {\"aws:cdk:path\": \"AdFsxStack/fs\"}}, \"CDKMetadata\": {\"Type\": \"AWS::CDK::Metadata\", \"Properties\": {\"Analytics\": \"v2:deflate64:H4sIAAAAAAAA/02RQVODMBCFf4v3EJWLvTJUaw9aBpxenRAW3RYSJruhMp3+dwNU6WnffnmTfZvEcvUkH+7UiSJdHaMGS3kuWOmjCOjzDDqW532nRVqbfZaKzJcN6sKXBnhki8qtZ/hQZQMLX1hCZDUqRmv+zaN43mZjeVe8UQwnNYjMYR/kcvHWMLig/wxzkmuXcMj63YKZrOvXNNt14xC62m7ITYSLINAOmFpl1Be4sPLUT8kndREVOtBs3UDgetQgw9kbamfJ1pysRU0/I3rBBoqBGNqLyIGsd3pabOe58/PD3NDUmgrnBMZWIA903z+uZBx+4ECIkfOGsQWZz/UX6MGUEZ0BAAA=\"}, \"Metadata\": {\"aws:cdk:path\": \"AdFsxStack/CDKMetadata/Default\"}, \"Condition\": \"CDKMetadataAvailable\"}}, \"Outputs\": {\"directoryAlias\": {\"Value\": {\"Fn::GetAtt\": [\"ad\", \"Alias\"]}}, \"directoryDns\": {\"Value\": {\"Fn::Join\": [\",\", {\"Fn::GetAtt\": [\"ad\", \"DnsIpAddresses\"]}]}}, \"fsType\": {\"Value\": \"WINDOWS\"}, \"subnetIds\": {\"Value\": {\"Fn::Join\": [\",\", [{\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}, {\"Ref\": \"VPCPrivateSubnet2SubnetCFCDAA7A\"}]]}}, \"vpcId\": {\"Value\": {\"Ref\": \"VPCB9E5F0B4\"}}}, \"Conditions\": {\"CDKMetadataAvailable\": {\"Fn::Or\": [{\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"af-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ca-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-northwest-1\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-3\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"me-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"sa-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-2\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-2\"]}]}]}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as cdk from 'aws-cdk-lib';\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as ad from 'aws-cdk-lib/aws-directoryservice';\nimport * as fsx from 'aws-cdk-lib/aws-fsx';\nimport * as sm from 'aws-cdk-lib/aws-secretsmanager';\n\nclass AdFsxStack extends cdk.Stack {\n  constructor(app: cdk.App, id: string, adDnsDomainName: string) {\n    super(app, id);\n\n    const vpc = new ec2.Vpc(this, 'VPC', {});\n\n    const privateSubnets = vpc.privateSubnets.slice(0,2).map(x => x.subnetId)\n\n    const templatedSecret = new sm.Secret(this, adDnsDomainName + '_credentials', {\n      generateSecretString: {\n        secretStringTemplate: JSON.stringify({ username: 'admin' }),\n        generateStringKey: 'password'\n      },\n    });\n\n    const mad = new ad.CfnMicrosoftAD(this, 'ad', {\n      name: adDnsDomainName,\n      password: templatedSecret.secretValueFromJson('password').toString(),\n      vpcSettings: {\n        vpcId: vpc.vpcId,\n        subnetIds: privateSubnets\n      }\n    })\n\n    const dhcpOptions = new ec2.CfnDHCPOptions(this, 'dhcpOptions', {\n      domainName: adDnsDomainName,\n      domainNameServers: mad.attrDnsIpAddresses,\n    })\n\n    new ec2.CfnVPCDHCPOptionsAssociation(this, 'dhcpOptionsAssoc', {\n      dhcpOptionsId: dhcpOptions.ref,\n      vpcId: vpc.vpcId\n    })\n    \n    const fs = new fsx.CfnFileSystem(this, 'fs', {\n      fileSystemType: 'WINDOWS',\n      subnetIds: privateSubnets,\n      storageType: 'SSD',\n      storageCapacity: 32, \n      windowsConfiguration: {\n        activeDirectoryId: mad.ref,\n        throughputCapacity: 8,\n        deploymentType: 'MULTI_AZ_1',\n        preferredSubnetId: privateSubnets[0]\n      }\n    })\n    \n    const outputs = [\n      {\"name\":\"directoryAlias\",\"value\":mad.attrAlias},\n      {\"name\":\"directoryDns\",\"value\":cdk.Fn.join(',',mad.attrDnsIpAddresses)},\n      {\"name\":\"fsType\", \"value\": fs.fileSystemType},\n      {\"name\":\"subnetIds\", \"value\": cdk.Fn.join(',',privateSubnets)},\n      {\"name\":\"vpcId\", \"value\":vpc.vpcId}\n    ]\n    \n    outputs.forEach((x) => { \n      if (x.value) {\n        new cdk.CfnOutput(this, x.name, {value: x.value})\n      }\n    })\n  }\n}\n\nconst app = new cdk.App();\nnew AdFsxStack(app, 'AdFsxStack', 'example.corp');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"ProxyAPI32755B5A\": {\"Type\": \"AWS::ApiGateway::RestApi\", \"Properties\": {\"EndpointConfiguration\": {\"Types\": [\"EDGE\"]}, \"Name\": \"HttpProxy\"}, \"Metadata\": {\"aws:cdk:path\": \"HttpProxy/Proxy/API/Resource\"}}, \"ProxyAPICloudWatchRoleB8A087D1\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"apigateway.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs\"]]}]}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\", \"Metadata\": {\"aws:cdk:path\": \"HttpProxy/Proxy/API/CloudWatchRole/Resource\"}}, \"ProxyAPIAccount6FF8D716\": {\"Type\": \"AWS::ApiGateway::Account\", \"Properties\": {\"CloudWatchRoleArn\": {\"Fn::GetAtt\": [\"ProxyAPICloudWatchRoleB8A087D1\", \"Arn\"]}}, \"DependsOn\": [\"ProxyAPI32755B5A\"], \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\", \"Metadata\": {\"aws:cdk:path\": \"HttpProxy/Proxy/API/Account\"}}, \"ProxyAPIDeployment0905F2A51149e52ed55821cdb6db0214e7f00a2c\": {\"Type\": \"AWS::ApiGateway::Deployment\", \"Properties\": {\"RestApiId\": {\"Ref\": \"ProxyAPI32755B5A\"}, \"Description\": \"Automatically created by the RestApi construct\"}, \"DependsOn\": [\"ProxyAPIaws4558A94F\", \"ProxyProxyResourceGETawsGET6AEDAC86\", \"ProxyProxyResourceGETawsB89410CC\"], \"Metadata\": {\"aws:cdk:path\": \"HttpProxy/Proxy/API/Deployment/Resource\"}}, \"ProxyAPIDeploymentStageprodBE6BE99F\": {\"Type\": \"AWS::ApiGateway::Stage\", \"Properties\": {\"RestApiId\": {\"Ref\": \"ProxyAPI32755B5A\"}, \"DeploymentId\": {\"Ref\": \"ProxyAPIDeployment0905F2A51149e52ed55821cdb6db0214e7f00a2c\"}, \"StageName\": \"prod\"}, \"DependsOn\": [\"ProxyAPIAccount6FF8D716\"], \"Metadata\": {\"aws:cdk:path\": \"HttpProxy/Proxy/API/DeploymentStage.prod/Resource\"}}, \"ProxyAPIaws4558A94F\": {\"Type\": \"AWS::ApiGateway::Resource\", \"Properties\": {\"ParentId\": {\"Fn::GetAtt\": [\"ProxyAPI32755B5A\", \"RootResourceId\"]}, \"PathPart\": \"aws\", \"RestApiId\": {\"Ref\": \"ProxyAPI32755B5A\"}}, \"Metadata\": {\"aws:cdk:path\": \"HttpProxy/Proxy/API/Default/aws/Resource\"}}, \"ProxyProxyResourceGETawsB89410CC\": {\"Type\": \"AWS::ApiGateway::Resource\", \"Properties\": {\"ParentId\": {\"Ref\": \"ProxyAPIaws4558A94F\"}, \"PathPart\": \"{proxy+}\", \"RestApiId\": {\"Ref\": \"ProxyAPI32755B5A\"}}, \"Metadata\": {\"aws:cdk:path\": \"HttpProxy/Proxy/ProxyResourceGETaws/Resource\"}}, \"ProxyProxyResourceGETawsGET6AEDAC86\": {\"Type\": \"AWS::ApiGateway::Method\", \"Properties\": {\"HttpMethod\": \"GET\", \"ResourceId\": {\"Ref\": \"ProxyProxyResourceGETawsB89410CC\"}, \"RestApiId\": {\"Ref\": \"ProxyAPI32755B5A\"}, \"AuthorizationType\": \"NONE\", \"Integration\": {\"IntegrationHttpMethod\": \"GET\", \"RequestParameters\": {\"integration.request.path.proxy\": \"method.request.path.proxy\"}, \"Type\": \"HTTP_PROXY\", \"Uri\": \"https://aws.amazon.com/ko/{proxy}\"}, \"RequestParameters\": {\"method.request.path.proxy\": true}}, \"Metadata\": {\"aws:cdk:path\": \"HttpProxy/Proxy/ProxyResourceGETaws/GET/Resource\"}}, \"CDKMetadata\": {\"Type\": \"AWS::CDK::Metadata\", \"Properties\": {\"Analytics\": \"v2:deflate64:H4sIAAAAAAAA/1WPzQ6CQAyEn8X7sioXuSJejQYfwKxLxfKzJewiEsK7W7JG5TTfTNpJG8poJzcr1dtAZ2VQ4U2OF6d0KTi6jqrBXDno1SDHFKyLGxTJ3fxhrDV1xokDNBUNNTBy+ue4LYc588Cr1LUa9sr+zKfT87ml1/B1R3APyuYBT5NAVfMxVPkt1mlaFJ0613RuUcmckMnQIZlJGMpAFnb93EYy5OcLixi0/ATWIFOvbyximq0YAQAA\"}, \"Metadata\": {\"aws:cdk:path\": \"HttpProxy/CDKMetadata/Default\"}, \"Condition\": \"CDKMetadataAvailable\"}}, \"Outputs\": {\"ProxyAPIEndpointD44F61E1\": {\"Value\": {\"Fn::Join\": [\"\", [\"https://\", {\"Ref\": \"ProxyAPI32755B5A\"}, \".execute-api.\", {\"Ref\": \"AWS::Region\"}, \".\", {\"Ref\": \"AWS::URLSuffix\"}, \"/\", {\"Ref\": \"ProxyAPIDeploymentStageprodBE6BE99F\"}, \"/\"]]}}, \"ProxyEndPointGETawsA04CB53D\": {\"Value\": {\"Fn::Join\": [\"\", [\"https://\", {\"Ref\": \"ProxyAPI32755B5A\"}, \".execute-api.\", {\"Ref\": \"AWS::Region\"}, \".\", {\"Ref\": \"AWS::URLSuffix\"}, \"/\", {\"Ref\": \"ProxyAPIDeploymentStageprodBE6BE99F\"}, \"/aws/{proxy+}\"]]}}}, \"Conditions\": {\"CDKMetadataAvailable\": {\"Fn::Or\": [{\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"af-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ca-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-northwest-1\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-3\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"me-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"sa-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-2\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-2\"]}]}]}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as cdk from \"aws-cdk-lib\";\n\nimport { EndpointType } from \"aws-cdk-lib/aws-apigateway\";\n\nimport { Proxy } from \"./proxy\";\n\nexport class ProxyStack extends cdk.Stack {\n  constructor(app: cdk.App, id: string, props?: cdk.StackProps) {\n    super(app, id, props);\n\n    const proxy = new Proxy(this, \"Proxy\", {\n      apiName: \"HttpProxy\", endpointType: EndpointType.EDGE\n    });\n\n    proxy.addProxy(\"aws\", \"https://aws.amazon.com/ko\");\n  }\n}\n\nconst app = new cdk.App();\nnew ProxyStack(app, \"HttpProxy\");\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"SingletonServiceRoleDDD815CD\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}, \"Metadata\": {\"aws:cdk:path\": \"LambdaCronExample/Singleton/ServiceRole/Resource\"}}, \"Singleton8C7B99F3\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"def main(event, context):\n    print(\\\"I'm running!\\\")\"}, \"Role\": {\"Fn::GetAtt\": [\"SingletonServiceRoleDDD815CD\", \"Arn\"]}, \"Handler\": \"index.main\", \"Runtime\": \"python3.9\", \"Timeout\": 300}, \"DependsOn\": [\"SingletonServiceRoleDDD815CD\"], \"Metadata\": {\"aws:cdk:path\": \"LambdaCronExample/Singleton/Resource\"}}, \"Rule4C995B7F\": {\"Type\": \"AWS::Events::Rule\", \"Properties\": {\"ScheduleExpression\": \"cron(0 18 ? * MON-FRI *)\", \"State\": \"ENABLED\", \"Targets\": [{\"Arn\": {\"Fn::GetAtt\": [\"Singleton8C7B99F3\", \"Arn\"]}, \"Id\": \"Target0\"}]}, \"Metadata\": {\"aws:cdk:path\": \"LambdaCronExample/Rule/Resource\"}}, \"RuleAllowEventRuleLambdaCronExampleSingleton4F1DF641E5122DD7\": {\"Type\": \"AWS::Lambda::Permission\", \"Properties\": {\"Action\": \"lambda:InvokeFunction\", \"FunctionName\": {\"Fn::GetAtt\": [\"Singleton8C7B99F3\", \"Arn\"]}, \"Principal\": \"events.amazonaws.com\", \"SourceArn\": {\"Fn::GetAtt\": [\"Rule4C995B7F\", \"Arn\"]}}, \"Metadata\": {\"aws:cdk:path\": \"LambdaCronExample/Rule/AllowEventRuleLambdaCronExampleSingleton4F1DF641\"}}, \"CDKMetadata\": {\"Type\": \"AWS::CDK::Metadata\", \"Properties\": {\"Analytics\": \"v2:deflate64:H4sIAAAAAAAA/02OMQ7CMAxFz8KeGuhC90rMqBwApYmR3CaOVCdliHJ3UsrQ6X2/L325he4Gl5P+SGPs3DgaIT+jNrOq6pWd9qPVkO+JTaTAqn/zMT9w8SRSr6JIe8hDcLgVG4vCFTlKtelvK0tRA0pIi9nVIfeBLcXfGAeLMMl5vXbQ1gcnIWqWxJE8wrDzCzsIy468AAAA\"}, \"Metadata\": {\"aws:cdk:path\": \"LambdaCronExample/CDKMetadata/Default\"}, \"Condition\": \"CDKMetadataAvailable\"}}, \"Conditions\": {\"CDKMetadataAvailable\": {\"Fn::Or\": [{\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"af-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ca-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-northwest-1\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-3\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"me-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"sa-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-2\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-2\"]}]}]}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import events = require('aws-cdk-lib/aws-events');\nimport targets = require('aws-cdk-lib/aws-events-targets');\nimport lambda = require('aws-cdk-lib/aws-lambda');\nimport cdk = require('aws-cdk-lib');\n\nimport fs = require('fs');\n\nexport class LambdaCronStack extends cdk.Stack {\n  constructor(app: cdk.App, id: string) {\n    super(app, id);\n\n    const lambdaFn = new lambda.Function(this, 'Singleton', {\n      code: new lambda.InlineCode(fs.readFileSync('lambda-handler.py', { encoding: 'utf-8' })),\n      handler: 'index.main',\n      timeout: cdk.Duration.seconds(300),\n      runtime: lambda.Runtime.PYTHON_3_9,\n    });\n\n    // Run 6:00 PM UTC every Monday through Friday\n    // See https://docs.aws.amazon.com/lambda/latest/dg/tutorial-scheduled-events-schedule-expressions.html\n    const rule = new events.Rule(this, 'Rule', {\n      schedule: events.Schedule.expression('cron(0 18 ? * MON-FRI *)')\n    });\n\n    rule.addTarget(new targets.LambdaFunction(lambdaFn));\n  }\n}\n\nconst app = new cdk.App();\nnew LambdaCronStack(app, 'LambdaCronExample');\napp.synth();\n"}
{ "prompt": "{\"Description\": \"Neptune cluster with a VPC\", \"Resources\": {\"NeptuneVpcEDAF1361\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.192.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"CreatedBy\", \"Value\": \"CDK\"}, {\"Key\": \"Name\", \"Value\": \"NeptuneWithVpcStack/NeptuneVpc\"}, {\"Key\": \"Owner\", \"Value\": \"CDK\"}, {\"Key\": \"Purpose\", \"Value\": \"Neptune Cluster\"}]}, \"Metadata\": {\"aws:cdk:path\": \"NeptuneWithVpcStack/NeptuneVpc/Resource\"}}, \"NeptuneVpcdbSubnet1Subnet7C127E8B\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"NeptuneVpcEDAF1361\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.192.0.0/24\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"db\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Isolated\"}, {\"Key\": \"CreatedBy\", \"Value\": \"CDK\"}, {\"Key\": \"Name\", \"Value\": \"NeptuneWithVpcStack/NeptuneVpc/dbSubnet1\"}, {\"Key\": \"Owner\", \"Value\": \"CDK\"}, {\"Key\": \"Purpose\", \"Value\": \"Neptune Cluster\"}]}, \"Metadata\": {\"aws:cdk:path\": \"NeptuneWithVpcStack/NeptuneVpc/dbSubnet1/Subnet\"}}, \"NeptuneVpcdbSubnet1RouteTableB17C2DE3\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"NeptuneVpcEDAF1361\"}, \"Tags\": [{\"Key\": \"CreatedBy\", \"Value\": \"CDK\"}, {\"Key\": \"Name\", \"Value\": \"NeptuneWithVpcStack/NeptuneVpc/dbSubnet1\"}, {\"Key\": \"Owner\", \"Value\": \"CDK\"}, {\"Key\": \"Purpose\", \"Value\": \"Neptune Cluster\"}]}, \"Metadata\": {\"aws:cdk:path\": \"NeptuneWithVpcStack/NeptuneVpc/dbSubnet1/RouteTable\"}}, \"NeptuneVpcdbSubnet1RouteTableAssociationE0BBDEEF\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"NeptuneVpcdbSubnet1RouteTableB17C2DE3\"}, \"SubnetId\": {\"Ref\": \"NeptuneVpcdbSubnet1Subnet7C127E8B\"}}, \"Metadata\": {\"aws:cdk:path\": \"NeptuneWithVpcStack/NeptuneVpc/dbSubnet1/RouteTableAssociation\"}}, \"NeptuneVpcdbSubnet2SubnetE324C3FC\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"NeptuneVpcEDAF1361\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.192.1.0/24\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"db\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Isolated\"}, {\"Key\": \"CreatedBy\", \"Value\": \"CDK\"}, {\"Key\": \"Name\", \"Value\": \"NeptuneWithVpcStack/NeptuneVpc/dbSubnet2\"}, {\"Key\": \"Owner\", \"Value\": \"CDK\"}, {\"Key\": \"Purpose\", \"Value\": \"Neptune Cluster\"}]}, \"Metadata\": {\"aws:cdk:path\": \"NeptuneWithVpcStack/NeptuneVpc/dbSubnet2/Subnet\"}}, \"NeptuneVpcdbSubnet2RouteTable1BEA5F38\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"NeptuneVpcEDAF1361\"}, \"Tags\": [{\"Key\": \"CreatedBy\", \"Value\": \"CDK\"}, {\"Key\": \"Name\", \"Value\": \"NeptuneWithVpcStack/NeptuneVpc/dbSubnet2\"}, {\"Key\": \"Owner\", \"Value\": \"CDK\"}, {\"Key\": \"Purpose\", \"Value\": \"Neptune Cluster\"}]}, \"Metadata\": {\"aws:cdk:path\": \"NeptuneWithVpcStack/NeptuneVpc/dbSubnet2/RouteTable\"}}, \"NeptuneVpcdbSubnet2RouteTableAssociation108C175C\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"NeptuneVpcdbSubnet2RouteTable1BEA5F38\"}, \"SubnetId\": {\"Ref\": \"NeptuneVpcdbSubnet2SubnetE324C3FC\"}}, \"Metadata\": {\"aws:cdk:path\": \"NeptuneWithVpcStack/NeptuneVpc/dbSubnet2/RouteTableAssociation\"}}, \"NeptuneVpcdmzSubnet1SubnetF80A7100\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"NeptuneVpcEDAF1361\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.192.2.0/24\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"dmz\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"CreatedBy\", \"Value\": \"CDK\"}, {\"Key\": \"Name\", \"Value\": \"NeptuneWithVpcStack/NeptuneVpc/dmzSubnet1\"}, {\"Key\": \"Owner\", \"Value\": \"CDK\"}, {\"Key\": \"Purpose\", \"Value\": \"Neptune Cluster\"}]}, \"Metadata\": {\"aws:cdk:path\": \"NeptuneWithVpcStack/NeptuneVpc/dmzSubnet1/Subnet\"}}, \"NeptuneVpcdmzSubnet1RouteTable67B5CEBB\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"NeptuneVpcEDAF1361\"}, \"Tags\": [{\"Key\": \"CreatedBy\", \"Value\": \"CDK\"}, {\"Key\": \"Name\", \"Value\": \"NeptuneWithVpcStack/NeptuneVpc/dmzSubnet1\"}, {\"Key\": \"Owner\", \"Value\": \"CDK\"}, {\"Key\": \"Purpose\", \"Value\": \"Neptune Cluster\"}]}, \"Metadata\": {\"aws:cdk:path\": \"NeptuneWithVpcStack/NeptuneVpc/dmzSubnet1/RouteTable\"}}, \"NeptuneVpcdmzSubnet1RouteTableAssociationB878D7D9\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"NeptuneVpcdmzSubnet1RouteTable67B5CEBB\"}, \"SubnetId\": {\"Ref\": \"NeptuneVpcdmzSubnet1SubnetF80A7100\"}}, \"Metadata\": {\"aws:cdk:path\": \"NeptuneWithVpcStack/NeptuneVpc/dmzSubnet1/RouteTableAssociation\"}}, \"NeptuneVpcdmzSubnet1DefaultRoute86E71CAE\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"NeptuneVpcdmzSubnet1RouteTable67B5CEBB\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"NeptuneVpcIGWE8799D46\"}}, \"DependsOn\": [\"NeptuneVpcVPCGWCA135857\"], \"Metadata\": {\"aws:cdk:path\": \"NeptuneWithVpcStack/NeptuneVpc/dmzSubnet1/DefaultRoute\"}}, \"NeptuneVpcdmzSubnet2Subnet98BBB888\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"NeptuneVpcEDAF1361\"}, \"AvailabilityZone\": {\"Fn::Select\": [1, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.192.3.0/24\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"dmz\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"CreatedBy\", \"Value\": \"CDK\"}, {\"Key\": \"Name\", \"Value\": \"NeptuneWithVpcStack/NeptuneVpc/dmzSubnet2\"}, {\"Key\": \"Owner\", \"Value\": \"CDK\"}, {\"Key\": \"Purpose\", \"Value\": \"Neptune Cluster\"}]}, \"Metadata\": {\"aws:cdk:path\": \"NeptuneWithVpcStack/NeptuneVpc/dmzSubnet2/Subnet\"}}, \"NeptuneVpcdmzSubnet2RouteTableBFC34FB8\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"NeptuneVpcEDAF1361\"}, \"Tags\": [{\"Key\": \"CreatedBy\", \"Value\": \"CDK\"}, {\"Key\": \"Name\", \"Value\": \"NeptuneWithVpcStack/NeptuneVpc/dmzSubnet2\"}, {\"Key\": \"Owner\", \"Value\": \"CDK\"}, {\"Key\": \"Purpose\", \"Value\": \"Neptune Cluster\"}]}, \"Metadata\": {\"aws:cdk:path\": \"NeptuneWithVpcStack/NeptuneVpc/dmzSubnet2/RouteTable\"}}, \"NeptuneVpcdmzSubnet2RouteTableAssociation8CA64F16\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"NeptuneVpcdmzSubnet2RouteTableBFC34FB8\"}, \"SubnetId\": {\"Ref\": \"NeptuneVpcdmzSubnet2Subnet98BBB888\"}}, \"Metadata\": {\"aws:cdk:path\": \"NeptuneWithVpcStack/NeptuneVpc/dmzSubnet2/RouteTableAssociation\"}}, \"NeptuneVpcdmzSubnet2DefaultRoute28932B81\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"NeptuneVpcdmzSubnet2RouteTableBFC34FB8\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"NeptuneVpcIGWE8799D46\"}}, \"DependsOn\": [\"NeptuneVpcVPCGWCA135857\"], \"Metadata\": {\"aws:cdk:path\": \"NeptuneWithVpcStack/NeptuneVpc/dmzSubnet2/DefaultRoute\"}}, \"NeptuneVpcIGWE8799D46\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"CreatedBy\", \"Value\": \"CDK\"}, {\"Key\": \"Name\", \"Value\": \"NeptuneWithVpcStack/NeptuneVpc\"}, {\"Key\": \"Owner\", \"Value\": \"CDK\"}, {\"Key\": \"Purpose\", \"Value\": \"Neptune Cluster\"}]}, \"Metadata\": {\"aws:cdk:path\": \"NeptuneWithVpcStack/NeptuneVpc/IGW\"}}, \"NeptuneVpcVPCGWCA135857\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"NeptuneVpcEDAF1361\"}, \"InternetGatewayId\": {\"Ref\": \"NeptuneVpcIGWE8799D46\"}}, \"Metadata\": {\"aws:cdk:path\": \"NeptuneWithVpcStack/NeptuneVpc/VPCGW\"}}, \"ClusterParams0B94958F\": {\"Type\": \"AWS::Neptune::DBClusterParameterGroup\", \"Properties\": {\"Description\": \"Cluster parameter group\", \"Family\": \"neptune1\", \"Parameters\": {\"neptune_enable_audit_log\": \"1\"}, \"Tags\": [{\"Key\": \"CreatedBy\", \"Value\": \"CDK\"}, {\"Key\": \"Owner\", \"Value\": \"CDK\"}, {\"Key\": \"Purpose\", \"Value\": \"Neptune Cluster\"}]}, \"Metadata\": {\"aws:cdk:path\": \"NeptuneWithVpcStack/ClusterParams/Resource\"}}, \"DbParamsC3A84CD6\": {\"Type\": \"AWS::Neptune::DBParameterGroup\", \"Properties\": {\"Description\": \"Db parameter group\", \"Family\": \"neptune1\", \"Parameters\": {\"neptune_query_timeout\": \"120000\"}, \"Tags\": [{\"Key\": \"CreatedBy\", \"Value\": \"CDK\"}, {\"Key\": \"Owner\", \"Value\": \"CDK\"}, {\"Key\": \"Purpose\", \"Value\": \"Neptune Cluster\"}]}, \"Metadata\": {\"aws:cdk:path\": \"NeptuneWithVpcStack/DbParams/Resource\"}}, \"NeptuneClusterSubnetsCDB62775\": {\"Type\": \"AWS::Neptune::DBSubnetGroup\", \"Properties\": {\"DBSubnetGroupDescription\": \"Subnets for NeptuneCluster database\", \"SubnetIds\": [{\"Ref\": \"NeptuneVpcdbSubnet1Subnet7C127E8B\"}, {\"Ref\": \"NeptuneVpcdbSubnet2SubnetE324C3FC\"}], \"Tags\": [{\"Key\": \"CreatedBy\", \"Value\": \"CDK\"}, {\"Key\": \"Owner\", \"Value\": \"CDK\"}, {\"Key\": \"Purpose\", \"Value\": \"Neptune Cluster\"}]}, \"Metadata\": {\"aws:cdk:path\": \"NeptuneWithVpcStack/NeptuneCluster/Subnets/Resource\"}}, \"NeptuneClusterSecurityGroup644E519E\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"Neptune security group\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"Tags\": [{\"Key\": \"CreatedBy\", \"Value\": \"CDK\"}, {\"Key\": \"Owner\", \"Value\": \"CDK\"}, {\"Key\": \"Purpose\", \"Value\": \"Neptune Cluster\"}], \"VpcId\": {\"Ref\": \"NeptuneVpcEDAF1361\"}}, \"Metadata\": {\"aws:cdk:path\": \"NeptuneWithVpcStack/NeptuneCluster/SecurityGroup/Resource\"}}, \"NeptuneClusterSecurityGroupfrom00000IndirectPort08F3E9D6\": {\"Type\": \"AWS::EC2::SecurityGroupIngress\", \"Properties\": {\"IpProtocol\": \"tcp\", \"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow From All\", \"FromPort\": {\"Fn::GetAtt\": [\"NeptuneCluster7FC72740\", \"Port\"]}, \"GroupId\": {\"Fn::GetAtt\": [\"NeptuneClusterSecurityGroup644E519E\", \"GroupId\"]}, \"ToPort\": {\"Fn::GetAtt\": [\"NeptuneCluster7FC72740\", \"Port\"]}}, \"Metadata\": {\"aws:cdk:path\": \"NeptuneWithVpcStack/NeptuneCluster/SecurityGroup/from 0.0.0.0_0:{IndirectPort}\"}}, \"NeptuneCluster7FC72740\": {\"Type\": \"AWS::Neptune::DBCluster\", \"Properties\": {\"DBClusterIdentifier\": \"MyGraphDB\", \"DBClusterParameterGroupName\": {\"Ref\": \"ClusterParams0B94958F\"}, \"DBSubnetGroupName\": {\"Ref\": \"NeptuneClusterSubnetsCDB62775\"}, \"DeletionProtection\": false, \"StorageEncrypted\": true, \"Tags\": [{\"Key\": \"CreatedBy\", \"Value\": \"CDK\"}, {\"Key\": \"Owner\", \"Value\": \"CDK\"}, {\"Key\": \"Purpose\", \"Value\": \"Neptune Cluster\"}], \"VpcSecurityGroupIds\": [{\"Fn::GetAtt\": [\"NeptuneClusterSecurityGroup644E519E\", \"GroupId\"]}]}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\", \"Metadata\": {\"aws:cdk:path\": \"NeptuneWithVpcStack/NeptuneCluster/Resource\"}}, \"NeptuneClusterInstance1D301D758\": {\"Type\": \"AWS::Neptune::DBInstance\", \"Properties\": {\"DBInstanceClass\": \"db.r5.large\", \"DBClusterIdentifier\": {\"Ref\": \"NeptuneCluster7FC72740\"}, \"DBInstanceIdentifier\": \"MyGraphDBinstance1\", \"DBParameterGroupName\": {\"Ref\": \"DbParamsC3A84CD6\"}, \"Tags\": [{\"Key\": \"CreatedBy\", \"Value\": \"CDK\"}, {\"Key\": \"Owner\", \"Value\": \"CDK\"}, {\"Key\": \"Purpose\", \"Value\": \"Neptune Cluster\"}]}, \"DependsOn\": [\"NeptuneVpcdbSubnet1RouteTableAssociationE0BBDEEF\", \"NeptuneVpcdbSubnet2RouteTableAssociation108C175C\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\", \"Metadata\": {\"aws:cdk:path\": \"NeptuneWithVpcStack/NeptuneCluster/Instance1\"}}, \"CDKMetadata\": {\"Type\": \"AWS::CDK::Metadata\", \"Properties\": {\"Analytics\": \"v2:deflate64:H4sIAAAAAAAA/32RUWvCMBDHP4vvaezKYD5OLUifVtrh67jGm0bbpCQXRUq/+1KbrSKyp9z9yPH/XZLwbvHG4xlcbCR2p6iWFe9KAnFiHn11KBLebVvB1t9qm69ZbuQZCEtXKaQBTlWhHeEnVDVOfGJLa7WQQFIrlruqluJhcigyRWg83PiIC1xDaOiW5LUODSpiJQpnJF03Rrv2lvYvyNTeoLU9U9iSU8g7fyNdrWtnfV4OBhr0xd9wunrGRt87EObHJlOWQAnse1ag1c6I20Yfjlo3Lhloz2IeR0bw5HX2Hp59PpxBLoK6PYBXfGr30KZAUIHFX5U7Ry+i9A750c7PLwue+E8+Wikj4xTJBnkxnj/0tnEMAQIAAA==\"}, \"Metadata\": {\"aws:cdk:path\": \"NeptuneWithVpcStack/CDKMetadata/Default\"}}}, \"Outputs\": {\"VPCId\": {\"Description\": \"Neptune VPC ID\", \"Value\": {\"Ref\": \"NeptuneVpcEDAF1361\"}, \"Export\": {\"Name\": \"NeptuneWithVpcStack:vpcId\"}}, \"NeptuneClusterReadAddress\": {\"Description\": \"Neptune Cluster Read Address\", \"Value\": {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"NeptuneCluster7FC72740\", \"ReadEndpoint\"]}, \":\", {\"Fn::GetAtt\": [\"NeptuneCluster7FC72740\", \"Port\"]}]]}, \"Export\": {\"Name\": \"NeptuneWithVpcStack:NeptuneClusterReadAddress\"}}, \"NeptuneClusterWriteAddress\": {\"Description\": \"Neptune Cluster Write Address\", \"Value\": {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"NeptuneCluster7FC72740\", \"Endpoint\"]}, \":\", {\"Fn::GetAtt\": [\"NeptuneCluster7FC72740\", \"Port\"]}]]}, \"Export\": {\"Name\": \"NeptuneWithVpcStack:NeptuneClusterWriteAddress\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "#!/usr/bin/env node\n\nimport 'source-map-support/register';\nimport * as cdk from 'aws-cdk-lib';\n\nimport { NeptuneWithVpcStack } from './neptune-with-vpc-stack';\n\nconst app = new cdk.App();\n\nnew NeptuneWithVpcStack(app, 'NeptuneWithVpcStack', { env: { region: \"us-east-1\" }, description: \"Neptune cluster with a VPC\" });\n"}
{ "prompt": "{\"Transform\": \"AWS::Serverless-2016-10-31\", \"Resources\": {\"DatabaseSecurityGroup7319C0F6\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"AuroraStackDatabase\", \"GroupName\": \"AuroraStackDatabase\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"VpcId\": \"vpc-xxx\"}, \"Metadata\": {\"aws:cdk:path\": \"AuroraStack/DatabaseSecurityGroup/Resource\"}}, \"DatabaseSecurityGroupfromAuroraStackDatabaseSecurityGroup04647979ALLTRAFFIC6902692B\": {\"Type\": \"AWS::EC2::SecurityGroupIngress\", \"Properties\": {\"IpProtocol\": \"-1\", \"Description\": \"all from self\", \"GroupId\": {\"Fn::GetAtt\": [\"DatabaseSecurityGroup7319C0F6\", \"GroupId\"]}, \"SourceSecurityGroupId\": {\"Fn::GetAtt\": [\"DatabaseSecurityGroup7319C0F6\", \"GroupId\"]}}, \"Metadata\": {\"aws:cdk:path\": \"AuroraStack/DatabaseSecurityGroup/from AuroraStackDatabaseSecurityGroup04647979:ALL TRAFFIC\"}}, \"DatabaseSecurityGroupfromAuroraStackAuroraDatabaseRotationSingleUserSecurityGroup48668E93IndirectPortCAE933A2\": {\"Type\": \"AWS::EC2::SecurityGroupIngress\", \"Properties\": {\"IpProtocol\": \"tcp\", \"Description\": \"from AuroraStackAuroraDatabaseRotationSingleUserSecurityGroup48668E93:{IndirectPort}\", \"FromPort\": {\"Fn::GetAtt\": [\"AuroraDatabase5475D328\", \"Endpoint.Port\"]}, \"GroupId\": {\"Fn::GetAtt\": [\"DatabaseSecurityGroup7319C0F6\", \"GroupId\"]}, \"SourceSecurityGroupId\": {\"Fn::GetAtt\": [\"AuroraDatabaseRotationSingleUserSecurityGroup420EE692\", \"GroupId\"]}, \"ToPort\": {\"Fn::GetAtt\": [\"AuroraDatabase5475D328\", \"Endpoint.Port\"]}}, \"Metadata\": {\"aws:cdk:path\": \"AuroraStack/DatabaseSecurityGroup/from AuroraStackAuroraDatabaseRotationSingleUserSecurityGroup48668E93:{IndirectPort}\"}}, \"AuroraParameterGroup4BFCEB23\": {\"Type\": \"AWS::RDS::DBClusterParameterGroup\", \"Properties\": {\"Description\": \"AuroraStack Parameter Group\", \"Family\": \"aurora-postgresql13\", \"Parameters\": {}}, \"Metadata\": {\"aws:cdk:path\": \"AuroraStack/AuroraParameterGroup/Resource\"}}, \"AuroraClusterCredentialsF5B1C792\": {\"Type\": \"AWS::SecretsManager::Secret\", \"Properties\": {\"Description\": \"sampledbAuroraClusterCrendetials\", \"GenerateSecretString\": {\"ExcludeCharacters\": \"\\\"@/\\ '\", \"GenerateStringKey\": \"password\", \"PasswordLength\": 30, \"SecretStringTemplate\": \"{}\"}, \"Name\": \"sampledbAuroraClusterCredentials\"}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\", \"Metadata\": {\"aws:cdk:path\": \"AuroraStack/AuroraClusterCredentials/Resource\"}}, \"AuroraClusterCredentialsAttachment50AD3528\": {\"Type\": \"AWS::SecretsManager::SecretTargetAttachment\", \"Properties\": {\"SecretId\": {\"Ref\": \"AuroraClusterCredentialsF5B1C792\"}, \"TargetId\": {\"Ref\": \"AuroraDatabase5475D328\"}, \"TargetType\": \"AWS::RDS::DBCluster\"}, \"Metadata\": {\"aws:cdk:path\": \"AuroraStack/AuroraClusterCredentials/Attachment/Resource\"}}, \"AuroraClusterCredentialsAttachmentRotationSchedule784F4B66\": {\"Type\": \"AWS::SecretsManager::RotationSchedule\", \"Properties\": {\"SecretId\": {\"Ref\": \"AuroraClusterCredentialsAttachment50AD3528\"}, \"RotationLambdaARN\": {\"Fn::GetAtt\": [\"AuroraDatabaseRotationSingleUser79A4680D\", \"Outputs.RotationLambdaARN\"]}, \"RotationRules\": {\"AutomaticallyAfterDays\": 30}}, \"Metadata\": {\"aws:cdk:path\": \"AuroraStack/AuroraClusterCredentials/Attachment/RotationSchedule/Resource\"}}, \"AuroraClusterCredentialsAttachmentPolicy87FFF103\": {\"Type\": \"AWS::SecretsManager::ResourcePolicy\", \"Properties\": {\"ResourcePolicy\": {\"Statement\": [{\"Action\": \"secretsmanager:DeleteSecret\", \"Effect\": \"Deny\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}, \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"SecretId\": {\"Ref\": \"AuroraClusterCredentialsAttachment50AD3528\"}}, \"Metadata\": {\"aws:cdk:path\": \"AuroraStack/AuroraClusterCredentials/Attachment/Policy/Resource\"}}, \"AuroraDatabaseKeyAAFC4F88\": {\"Type\": \"AWS::KMS::Key\", \"Properties\": {\"KeyPolicy\": {\"Statement\": [{\"Action\": \"kms:*\", \"Effect\": \"Allow\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}, \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"EnableKeyRotation\": true}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\", \"Metadata\": {\"aws:cdk:path\": \"AuroraStack/AuroraDatabaseKey/Resource\"}}, \"AuroraDatabaseKeyAliasF8206C67\": {\"Type\": \"AWS::KMS::Alias\", \"Properties\": {\"AliasName\": \"alias/sampledb\", \"TargetKeyId\": {\"Fn::GetAtt\": [\"AuroraDatabaseKeyAAFC4F88\", \"Arn\"]}}, \"Metadata\": {\"aws:cdk:path\": \"AuroraStack/AuroraDatabaseKey/Alias/Resource\"}}, \"AuroraDatabaseSubnets5EA8274A\": {\"Type\": \"AWS::RDS::DBSubnetGroup\", \"Properties\": {\"DBSubnetGroupDescription\": \"Subnets for AuroraDatabase database\", \"SubnetIds\": [\"subnet-xxx\", \"subnet-xxxxSS\"], \"Tags\": [{\"Key\": \"Name\", \"Value\": \"sampledb\"}]}, \"Metadata\": {\"aws:cdk:path\": \"AuroraStack/AuroraDatabase/Subnets/Default\"}}, \"AuroraDatabase5475D328\": {\"Type\": \"AWS::RDS::DBCluster\", \"Properties\": {\"BackupRetentionPeriod\": 14, \"CopyTagsToSnapshot\": true, \"DBClusterParameterGroupName\": {\"Ref\": \"AuroraParameterGroup4BFCEB23\"}, \"DBSubnetGroupName\": {\"Ref\": \"AuroraDatabaseSubnets5EA8274A\"}, \"DeletionProtection\": true, \"EnableCloudwatchLogsExports\": [\"postgresql\"], \"EnableIAMDatabaseAuthentication\": true, \"Engine\": \"aurora-postgresql\", \"EngineVersion\": \"13.4\", \"KmsKeyId\": {\"Fn::GetAtt\": [\"AuroraDatabaseKeyAAFC4F88\", \"Arn\"]}, \"MasterUsername\": {\"Fn::Join\": [\"\", [\"{{resolve:secretsmanager:\", {\"Ref\": \"AuroraClusterCredentialsF5B1C792\"}, \":SecretString:username::}}\"]]}, \"MasterUserPassword\": {\"Fn::Join\": [\"\", [\"{{resolve:secretsmanager:\", {\"Ref\": \"AuroraClusterCredentialsF5B1C792\"}, \":SecretString:password::}}\"]]}, \"Port\": 5432, \"StorageEncrypted\": true, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"sampledb\"}], \"VpcSecurityGroupIds\": [{\"Fn::GetAtt\": [\"DatabaseSecurityGroup7319C0F6\", \"GroupId\"]}]}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\", \"Metadata\": {\"aws:cdk:path\": \"AuroraStack/AuroraDatabase/Resource\"}}, \"AuroraDatabaseLogRetentionpostgresqlF3A1A0C1\": {\"Type\": \"Custom::LogRetention\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A\", \"Arn\"]}, \"LogGroupName\": {\"Fn::Join\": [\"\", [\"/aws/rds/cluster/\", {\"Ref\": \"AuroraDatabase5475D328\"}, \"/postgresql\"]]}, \"RetentionInDays\": 30}, \"Metadata\": {\"aws:cdk:path\": \"AuroraStack/AuroraDatabase/LogRetentionpostgresql/Resource\"}}, \"AuroraDatabaseInstance1CDE491B8\": {\"Type\": \"AWS::RDS::DBInstance\", \"Properties\": {\"DBClusterIdentifier\": {\"Ref\": \"AuroraDatabase5475D328\"}, \"DBInstanceClass\": \"db.t3.medium\", \"DBInstanceIdentifier\": \"sampledb1\", \"DBSubnetGroupName\": {\"Ref\": \"AuroraDatabaseSubnets5EA8274A\"}, \"Engine\": \"aurora-postgresql\", \"PubliclyAccessible\": false, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"sampledb\"}]}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\", \"Metadata\": {\"aws:cdk:path\": \"AuroraStack/AuroraDatabase/Instance1\"}}, \"AuroraDatabaseRotationSingleUserSecurityGroup420EE692\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"AuroraStack/AuroraDatabase/RotationSingleUser/SecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"Tags\": [{\"Key\": \"Name\", \"Value\": \"sampledb\"}], \"VpcId\": \"vpc-xxx\"}, \"Metadata\": {\"aws:cdk:path\": \"AuroraStack/AuroraDatabase/RotationSingleUser/SecurityGroup/Resource\"}}, \"AuroraDatabaseRotationSingleUser79A4680D\": {\"Type\": \"AWS::Serverless::Application\", \"Properties\": {\"Location\": {\"ApplicationId\": {\"Fn::FindInMap\": [\"AuroraDatabaseRotationSingleUserSARMapping2AF3849D\", {\"Ref\": \"AWS::Partition\"}, \"applicationId\"]}, \"SemanticVersion\": {\"Fn::FindInMap\": [\"AuroraDatabaseRotationSingleUserSARMapping2AF3849D\", {\"Ref\": \"AWS::Partition\"}, \"semanticVersion\"]}}, \"Parameters\": {\"endpoint\": {\"Fn::Join\": [\"\", [\"https://secretsmanager.\", {\"Ref\": \"AWS::Region\"}, \".\", {\"Ref\": \"AWS::URLSuffix\"}]]}, \"functionName\": \"AuroraStackAuroraDatabaseRotationSingleUserB0A960A8\", \"vpcSubnetIds\": \"subnet-xxx,subnet-xxxxSS\", \"vpcSecurityGroupIds\": {\"Fn::GetAtt\": [\"AuroraDatabaseRotationSingleUserSecurityGroup420EE692\", \"GroupId\"]}, \"excludeCharacters\": \"\\\"@/\\ '\"}, \"Tags\": {\"Name\": \"sampledb\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\", \"Metadata\": {\"aws:cdk:path\": \"AuroraStack/AuroraDatabase/RotationSingleUser/Resource\"}}, \"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}, \"Metadata\": {\"aws:cdk:path\": \"AuroraStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource\"}}, \"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"logs:PutRetentionPolicy\", \"logs:DeleteRetentionPolicy\"], \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB\", \"Roles\": [{\"Ref\": \"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB\"}]}, \"Metadata\": {\"aws:cdk:path\": \"AuroraStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource\"}}, \"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Handler\": \"index.handler\", \"Runtime\": {\"Fn::FindInMap\": [\"DefaultCrNodeVersionMap\", {\"Ref\": \"AWS::Region\"}, \"value\"]}, \"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"5fa1330271b8967d9254ba2d4a07144f8acefe8b77e6d6bba38261373a50d5f8.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB\", \"Arn\"]}}, \"DependsOn\": [\"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB\", \"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB\"], \"Metadata\": {\"aws:cdk:path\": \"AuroraStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource\", \"aws:asset:path\": \"asset.5fa1330271b8967d9254ba2d4a07144f8acefe8b77e6d6bba38261373a50d5f8\", \"aws:asset:is-bundled\": false, \"aws:asset:property\": \"Code\"}}, \"AuroraMonitoringDashboardB3F1549E\": {\"Type\": \"AWS::CloudWatch::Dashboard\", \"Properties\": {\"DashboardBody\": {\"Fn::Join\": [\"\", [\"{\\\"widgets\\\":[{\\\"type\\\":\\\"metric\\\",\\\"width\\\":6,\\\"height\\\":6,\\\"x\\\":0,\\\"y\\\":0,\\\"properties\\\":{\\\"view\\\":\\\"timeSeries\\\",\\\"title\\\":\\\"DB Connections\\\",\\\"region\\\":\\\"\", {\"Ref\": \"AWS::Region\"}, \"\\\",\\\"metrics\\\":[[\\\"AWS/RDS\\\",\\\"DatabaseConnections\\\",\\\"DBClusterIdentifier\\\",\\\"\", {\"Ref\": \"AuroraDatabase5475D328\"}, \"\\\"]],\\\"yAxis\\\":{}}},{\\\"type\\\":\\\"metric\\\",\\\"width\\\":6,\\\"height\\\":6,\\\"x\\\":6,\\\"y\\\":0,\\\"properties\\\":{\\\"view\\\":\\\"timeSeries\\\",\\\"title\\\":\\\"CPU Utilization\\\",\\\"region\\\":\\\"\", {\"Ref\": \"AWS::Region\"}, \"\\\",\\\"metrics\\\":[[\\\"AWS/RDS\\\",\\\"CPUUtilization\\\",\\\"DBClusterIdentifier\\\",\\\"\", {\"Ref\": \"AuroraDatabase5475D328\"}, \"\\\"]],\\\"yAxis\\\":{}}},{\\\"type\\\":\\\"metric\\\",\\\"width\\\":6,\\\"height\\\":6,\\\"x\\\":0,\\\"y\\\":6,\\\"properties\\\":{\\\"view\\\":\\\"timeSeries\\\",\\\"title\\\":\\\"Backup Storage Billed\\\",\\\"region\\\":\\\"\", {\"Ref\": \"AWS::Region\"}, \"\\\",\\\"metrics\\\":[[\\\"AWS/RDS\\\",\\\"TotalBackupStorageBilled\\\",\\\"DBClusterIdentifier\\\",\\\"\", {\"Ref\": \"AuroraDatabase5475D328\"}, \"\\\"]],\\\"yAxis\\\":{}}},{\\\"type\\\":\\\"metric\\\",\\\"width\\\":6,\\\"height\\\":6,\\\"x\\\":6,\\\"y\\\":6,\\\"properties\\\":{\\\"view\\\":\\\"timeSeries\\\",\\\"title\\\":\\\"Free Local Storage\\\",\\\"region\\\":\\\"\", {\"Ref\": \"AWS::Region\"}, \"\\\",\\\"metrics\\\":[[\\\"AWS/RDS\\\",\\\"FreeLocalStorage\\\",\\\"DBClusterIdentifier\\\",\\\"\", {\"Ref\": \"AuroraDatabase5475D328\"}, \"\\\"]],\\\"yAxis\\\":{}}},{\\\"type\\\":\\\"metric\\\",\\\"width\\\":6,\\\"height\\\":6,\\\"x\\\":0,\\\"y\\\":12,\\\"properties\\\":{\\\"view\\\":\\\"timeSeries\\\",\\\"title\\\":\\\"Freeable Memory\\\",\\\"region\\\":\\\"\", {\"Ref\": \"AWS::Region\"}, \"\\\",\\\"metrics\\\":[[\\\"AWS/RDS\\\",\\\"FreeableMemory\\\",\\\"DBClusterIdentifier\\\",\\\"\", {\"Ref\": \"AuroraDatabase5475D328\"}, \"\\\"]],\\\"yAxis\\\":{}}},{\\\"type\\\":\\\"metric\\\",\\\"width\\\":6,\\\"height\\\":6,\\\"x\\\":6,\\\"y\\\":12,\\\"properties\\\":{\\\"view\\\":\\\"timeSeries\\\",\\\"title\\\":\\\"Storage\\\",\\\"region\\\":\\\"\", {\"Ref\": \"AWS::Region\"}, \"\\\",\\\"metrics\\\":[[\\\"AWS/RDS\\\",\\\"VolumeBytesUsed\\\",\\\"DBClusterIdentifier\\\",\\\"\", {\"Ref\": \"AuroraDatabase5475D328\"}, \"\\\"],[\\\"AWS/RDS\\\",\\\"SnapshotStorageUsed\\\",\\\"DBClusterIdentifier\\\",\\\"\", {\"Ref\": \"AuroraDatabase5475D328\"}, \"\\\"]],\\\"yAxis\\\":{}}},{\\\"type\\\":\\\"metric\\\",\\\"width\\\":6,\\\"height\\\":6,\\\"x\\\":12,\\\"y\\\":12,\\\"properties\\\":{\\\"view\\\":\\\"timeSeries\\\",\\\"title\\\":\\\"Volume IOPs\\\",\\\"region\\\":\\\"\", {\"Ref\": \"AWS::Region\"}, \"\\\",\\\"metrics\\\":[[\\\"AWS/RDS\\\",\\\"VolumeReadIOPs\\\",\\\"DBClusterIdentifier\\\",\\\"\", {\"Ref\": \"AuroraDatabase5475D328\"}, \"\\\"],[\\\"AWS/RDS\\\",\\\"VolumeWriteIOPs\\\",\\\"DBClusterIdentifier\\\",\\\"\", {\"Ref\": \"AuroraDatabase5475D328\"}, \"\\\"]],\\\"yAxis\\\":{}}},{\\\"type\\\":\\\"metric\\\",\\\"width\\\":6,\\\"height\\\":6,\\\"x\\\":0,\\\"y\\\":18,\\\"properties\\\":{\\\"view\\\":\\\"timeSeries\\\",\\\"title\\\":\\\"Network Throuput\\\",\\\"region\\\":\\\"\", {\"Ref\": \"AWS::Region\"}, \"\\\",\\\"metrics\\\":[[\\\"AWS/RDS\\\",\\\"NetworkReceiveThroughput\\\",\\\"DBClusterIdentifier\\\",\\\"\", {\"Ref\": \"AuroraDatabase5475D328\"}, \"\\\"],[\\\"AWS/RDS\\\",\\\"NetworkThroughput\\\",\\\"DBClusterIdentifier\\\",\\\"\", {\"Ref\": \"AuroraDatabase5475D328\"}, \"\\\"],[\\\"AWS/RDS\\\",\\\"NetworkTransmitThroughput\\\",\\\"DBClusterIdentifier\\\",\\\"\", {\"Ref\": \"AuroraDatabase5475D328\"}, \"\\\"]],\\\"yAxis\\\":{}}},{\\\"type\\\":\\\"metric\\\",\\\"width\\\":6,\\\"height\\\":6,\\\"x\\\":6,\\\"y\\\":18,\\\"properties\\\":{\\\"view\\\":\\\"timeSeries\\\",\\\"title\\\":\\\"Read Latency\\\",\\\"region\\\":\\\"\", {\"Ref\": \"AWS::Region\"}, \"\\\",\\\"metrics\\\":[[\\\"AWS/RDS\\\",\\\"ReadLatency\\\",\\\"DBClusterIdentifier\\\",\\\"\", {\"Ref\": \"AuroraDatabase5475D328\"}, \"\\\",{\\\"period\\\":60}]],\\\"yAxis\\\":{}}},{\\\"type\\\":\\\"metric\\\",\\\"width\\\":6,\\\"height\\\":6,\\\"x\\\":12,\\\"y\\\":18,\\\"properties\\\":{\\\"view\\\":\\\"timeSeries\\\",\\\"title\\\":\\\"Deadlocks\\\",\\\"region\\\":\\\"\", {\"Ref\": \"AWS::Region\"}, \"\\\",\\\"metrics\\\":[[\\\"AWS/RDS\\\",\\\"Deadlocks\\\",\\\"DBClusterIdentifier\\\",\\\"\", {\"Ref\": \"AuroraDatabase5475D328\"}, \"\\\"]],\\\"yAxis\\\":{}}}]}\"]]}, \"DashboardName\": \"sampledb\"}, \"Metadata\": {\"aws:cdk:path\": \"AuroraStack/AuroraMonitoringDashboard/Resource\"}}, \"CDKMetadata\": {\"Type\": \"AWS::CDK::Metadata\", \"Properties\": {\"Analytics\": \"v2:deflate64:H4sIAAAAAAAA/31STU/DMAz9LdyzAOPArvsQaALE1HGf3NS02dqkihOmqep/x0kpDCZxst97tmM/ZSpn9/LmCo40UcVhUutcdlsP6iAyJBucQsHarkM1ZQFVcNqfHp0NrVi+m/+JtSkdEvXCFSS7DTho0KP7Ll4tlnUgZv5IK/CQA+GXKrYhN+jP2i6IsTKBtSEPRmEvCJVDTw0YKNGl/Rl/7RmzIbyBK9HPPZ9dNWjOCi6UzHrw2pqtqrAINcbSC250bmNrrU6p5DczDB/7enFo2J8nTKUxzGsNFEFKelHbkuSzLTP2yMQWQdDIqLctD0xTRA1NXoB8CEZFvGADBd3tgIgtkPMYGMtFUAf0SdU8pMvseAXHn42HrBeqtqE4gleV7FZAVW7BFcnnEfT9+YUxf4G21aYU6U3+TGUEzL8G34bk7tKaQg+3G1ug3NP1x+1MTvkn7knriQt8ZoMyG+InW9TiVaUCAAA=\"}, \"Metadata\": {\"aws:cdk:path\": \"AuroraStack/CDKMetadata/Default\"}, \"Condition\": \"CDKMetadataAvailable\"}}, \"Mappings\": {\"AuroraDatabaseRotationSingleUserSARMapping2AF3849D\": {\"aws\": {\"applicationId\": \"arn:aws:serverlessrepo:us-east-1:297356227824:applications/SecretsManagerRDSPostgreSQLRotationSingleUser\", \"semanticVersion\": \"1.1.225\"}, \"aws-cn\": {\"applicationId\": \"arn:aws-cn:serverlessrepo:cn-north-1:193023089310:applications/SecretsManagerRDSPostgreSQLRotationSingleUser\", \"semanticVersion\": \"1.1.37\"}, \"aws-us-gov\": {\"applicationId\": \"arn:aws-us-gov:serverlessrepo:us-gov-west-1:023102451235:applications/SecretsManagerRDSPostgreSQLRotationSingleUser\", \"semanticVersion\": \"1.1.93\"}}, \"DefaultCrNodeVersionMap\": {\"af-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-east-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-3\": {\"value\": \"nodejs16.x\"}, \"ap-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-south-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-3\": {\"value\": \"nodejs16.x\"}, \"ca-central-1\": {\"value\": \"nodejs16.x\"}, \"cn-north-1\": {\"value\": \"nodejs16.x\"}, \"cn-northwest-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-2\": {\"value\": \"nodejs16.x\"}, \"eu-north-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-1\": {\"value\": \"nodejs16.x\"}, \"eu-west-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-3\": {\"value\": \"nodejs16.x\"}, \"me-central-1\": {\"value\": \"nodejs16.x\"}, \"me-south-1\": {\"value\": \"nodejs16.x\"}, \"sa-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-2\": {\"value\": \"nodejs16.x\"}, \"us-gov-east-1\": {\"value\": \"nodejs16.x\"}, \"us-gov-west-1\": {\"value\": \"nodejs16.x\"}, \"us-iso-east-1\": {\"value\": \"nodejs14.x\"}, \"us-iso-west-1\": {\"value\": \"nodejs14.x\"}, \"us-isob-east-1\": {\"value\": \"nodejs14.x\"}, \"us-west-1\": {\"value\": \"nodejs16.x\"}, \"us-west-2\": {\"value\": \"nodejs16.x\"}}}, \"Outputs\": {\"OutputSecretName\": {\"Value\": {\"Ref\": \"AuroraClusterCredentialsAttachment50AD3528\"}, \"Export\": {\"Name\": \"AuroraStack:SecretName\"}}, \"OutputSecretArn\": {\"Value\": {\"Ref\": \"AuroraClusterCredentialsAttachment50AD3528\"}, \"Export\": {\"Name\": \"AuroraStack:SecretArn\"}}, \"OutputGetSecretValue\": {\"Value\": {\"Fn::Join\": [\"\", [\"aws secretsmanager get-secret-value --secret-id \", {\"Ref\": \"AuroraClusterCredentialsAttachment50AD3528\"}]]}, \"Export\": {\"Name\": \"AuroraStack:GetSecretValue\"}}, \"OutputInstanceIdentifiers\": {\"Value\": {\"Ref\": \"AuroraDatabaseInstance1CDE491B8\"}, \"Export\": {\"Name\": \"AuroraStackInstanceIdentifiers\"}}, \"OutputEndpoints\": {\"Value\": {\"Fn::GetAtt\": [\"AuroraDatabaseInstance1CDE491B8\", \"Endpoint.Address\"]}, \"Export\": {\"Name\": \"AuroraStack:Endpoints\"}}, \"OutputClusterEndpoint\": {\"Value\": {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"AuroraDatabase5475D328\", \"Endpoint.Address\"]}, \":\", {\"Fn::GetAtt\": [\"AuroraDatabase5475D328\", \"Endpoint.Port\"]}]]}, \"Export\": {\"Name\": \"AuroraStack:Endpoint\"}}, \"OutputEngineFamily\": {\"Value\": \"POSTGRESQL\", \"Export\": {\"Name\": \"AuroraStack:EngineFamily\"}}, \"OutputEngineType\": {\"Value\": \"aurora-postgresql\", \"Export\": {\"Name\": \"AuroraStack:EngineType\"}}, \"OutputEngineFullVersion\": {\"Value\": \"13.4\", \"Export\": {\"Name\": \"AuroraStack:EngineFullVersion\"}}, \"OutputEngineMajorVersion\": {\"Value\": \"13\", \"Export\": {\"Name\": \"AuroraStack:EngineMajorVersion\"}}, \"OutputParameterGroupFamily\": {\"Value\": \"aurora-postgresql13\", \"Export\": {\"Name\": \"AuroraStack:ParameterGroupFamily\"}}}, \"Conditions\": {\"CDKMetadataAvailable\": {\"Fn::Or\": [{\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"af-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ca-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-northwest-1\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-3\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"me-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"sa-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-2\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-2\"]}]}]}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import {\n  Stack,\n  StackProps,\n  CfnOutput,\n  Tags,\n  App,\n  Fn,\n  Duration,\n  RemovalPolicy,\n} from 'aws-cdk-lib';\nimport * as cloudwatch from 'aws-cdk-lib/aws-cloudwatch';\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as kms from 'aws-cdk-lib/aws-kms';\nimport * as logs from 'aws-cdk-lib/aws-logs';\nimport * as rds from 'aws-cdk-lib/aws-rds';\nimport * as secretsmanager from 'aws-cdk-lib/aws-secretsmanager';\nimport { Construct } from 'constructs';\n\nexport interface AuroraProps extends StackProps {\n\n  /**\n   * the id of the VPC\n   *\n   * @type {string}\n   * @memberof AuroraProps\n   */\n  readonly vpcId: string;\n\n\n  /**\n   *\n   * this list of subnet ids\n   *\n   * @type {string []}\n   * @memberof AuroraProps\n   *\n   */\n  readonly subnetIds?:string [];\n\n  /**\n   * The name of the database\n   *\n   *\n   * @type {string}\n   * @memberof AuroraProps\n   *\n   */\n  readonly dbName?: string;\n\n  /**\n   * the type of instance for example ec2 graviton for example ec2.InstanceType.of(ec2.InstanceClass.BURSTABLE4_GRAVITON, ec2.InstanceSize.LARGE)\n   *\n   * @type {*}\n   * @memberof AuroraProps\n   *\n   */\n  readonly instanceType?: any;\n\n  /**\n   * any replica instances\n   *\n   *\n   * @type {number}\n   * @memberof AuroraProps\n   */\n  readonly replicaInstances?: number;\n\n  /**\n   *\n   * prove aurora cluster username\n   *\n   * @type {string}\n   * @memberof AuroraProps\n   */\n  readonly auroraClusterUsername?: string;\n\n  /**\n   *\n   * Backup retention days like 14\n   *\n   * @type {number}\n   * @memberof AuroraProps\n   */\n  readonly backupRetentionDays?: number;\n\n  /**\n   *\n   *  backup window time for example  22:00-23:00\n   *\n   * @type {string}\n   * @memberof AuroraProps\n   */\n  readonly backupWindow?: string;\n\n  /**\n   *\n   * maintenance time Sun:23:45-Mon:00:15\n   *\n   * @type {string}\n   * @memberof AuroraProps\n   */\n  readonly preferredMaintenanceWindow?: string;\n\n  /**\n   * the engine type for example mysql or postresql\n   *\n   *\n   * @type {string}\n   * @memberof AuroraProps\n   */\n  readonly engine?: string;\n  readonly enableBabelfish?:boolean;\n\n  /**\n   * list of ingress sources\n   *\n   *\n   * @type {any[]}\n   * @memberof AuroraProps\n   */\n  readonly ingressSources?: any[];\n\n  /**\n   *\n   * provide description\n   *\n   * @type {string}\n   * @memberof AuroraProps\n   *\n   */\n  readonly description?:string;\n\n}\n\n\nexport class Aurora extends Stack {\n//export class Aurora extends Construct {\n  constructor(scope: Construct, id: string, props:AuroraProps) {\n  //constructor(scope: Construct, id: string, props?: cdk.StackProps) {\n    super(scope, id);\n\n    let subnetIds = props.subnetIds;\n    let instanceType = props.instanceType;\n    let replicaInstances = props.replicaInstances ?? 1;\n    let backupRetentionDays = props.backupRetentionDays ?? 14;\n\n    var ingressSources = [];\n    if (typeof props.ingressSources !== 'undefined') {\n      ingressSources = props.ingressSources;\n    }\n\n    const dbs = ['mysql', 'postgresql'];\n    if (!dbs.includes(props.engine!)) {\n      throw new Error('Unknown Engine Please Use mysql or postgresql');\n      process.exit(1);\n    }\n    if (backupRetentionDays < 14) {\n      backupRetentionDays = 14;\n    }\n    if (replicaInstances < 1) {\n      replicaInstances = 1;\n    }\n\n    const azs = Fn.getAzs();\n\n    // vpc\n    const vpc = ec2.Vpc.fromVpcAttributes(this, 'ExistingVPC', {\n      vpcId: props.vpcId,\n      availabilityZones: azs,\n    });\n\n    // Subnets\n    const subnets: any[] = [];\n\n    for (let subnetId of subnetIds!) {\n      const subid = subnetId\n        .replace('_', '')\n        .replace(' ', '');\n      subnets.push(\n        ec2.Subnet.fromSubnetAttributes(this, subid, {\n          subnetId: subid,\n        }),\n      );\n    }\n\n    // interface\n    const vpcSubnets: ec2.SubnetSelection = {\n      subnets: subnets,\n    };\n\n    // all the ports\n    const allAll = ec2.Port.allTraffic();\n    const tcp3306 = ec2.Port.tcpRange(3306, 3306);\n    const tcp5432 = ec2.Port.tcpRange(5432, 5432);\n    const tcp1433 = ec2.Port.tcpRange(1433, 1433);\n\n    let connectionPort: any;\n    let connectionName: string;\n\n    // Database Security Group\n    const dbsg = new ec2.SecurityGroup(this, 'DatabaseSecurityGroup', {\n      vpc: vpc,\n      allowAllOutbound: true,\n      description: id + 'Database',\n      securityGroupName: id + 'Database',\n    });\n    dbsg.addIngressRule(dbsg, allAll, 'all from self');\n    dbsg.addEgressRule(ec2.Peer.ipv4('0.0.0.0/0'), allAll, 'all out');\n\n    if (props.engine == 'mysql') {\n      connectionPort = tcp3306;\n      connectionName = 'tcp3306 MySQL';\n    } else {\n      connectionPort = tcp5432;\n      connectionName = 'tcp5432 PostgresSQL';\n    }\n\n    for (let ingress_source of ingressSources!) {\n      dbsg.addIngressRule(ingress_source, connectionPort, connectionName);\n      if (props.engine == 'postgresql') {\n        dbsg.addIngressRule(ingress_source, tcp1433, 'tcp1433');\n      }\n    }\n\n    // Declaring postgres engine\n    let auroraEngine = rds.DatabaseClusterEngine.auroraPostgres({\n      version: rds.AuroraPostgresEngineVersion.VER_13_4,\n    });\n\n    if (props.engine == 'mysql') {\n      auroraEngine = rds.DatabaseClusterEngine.auroraMysql({\n        version: rds.AuroraMysqlEngineVersion.VER_2_10_1,\n      });\n    }\n\n    let auroraParameters: any = {};\n    // If PostgreSQL, enable Babelfish\n    if (props.enableBabelfish && props.engine == 'postgresql') {\n      auroraParameters['rds.babelfish_status'] = 'on';\n    }\n\n    // aurora params\n    const auroraParameterGroup = new rds.ParameterGroup(\n      this,\n      'AuroraParameterGroup',\n      {\n        engine: auroraEngine,\n        description: id + ' Parameter Group',\n        parameters: auroraParameters,\n      },\n    );\n\n    const auroraClusterSecret = new secretsmanager.Secret(\n      this,\n      'AuroraClusterCredentials',\n      {\n        secretName: props.dbName + 'AuroraClusterCredentials',\n        description: props.dbName + 'AuroraClusterCrendetials',\n        generateSecretString: {\n          excludeCharacters: \"\\\"@/\\\\ '\",\n          generateStringKey: 'password',\n          passwordLength: 30,\n          secretStringTemplate: JSON.stringify({username: props.auroraClusterUsername}),\n        },\n      },\n    );\n\n    // aurora credentials\n    const auroraClusterCrendentials= rds.Credentials.fromSecret(\n      auroraClusterSecret,\n      props.auroraClusterUsername,\n    );\n\n    if (instanceType == null || instanceType == undefined) {\n      instanceType = ec2.InstanceType.of(\n        ec2.InstanceClass.BURSTABLE4_GRAVITON,\n        ec2.InstanceSize.MEDIUM,\n      );\n    }\n\n    // Aurora DB Key\n    const kmsKey = new kms.Key(this, 'AuroraDatabaseKey', {\n      enableKeyRotation: true,\n      alias: props.dbName,\n    });\n\n    let cloudwatchLogsExports: any = ['postgresql'];\n    if (props.engine == 'mysql') {\n      cloudwatchLogsExports = ['slowquery'];\n    }\n\n    const aurora_cluster = new rds.DatabaseCluster(this, 'AuroraDatabase', {\n      engine: auroraEngine,\n      credentials: auroraClusterCrendentials,\n      backup: {\n        preferredWindow: props.backupWindow,\n        retention: Duration.days(backupRetentionDays),\n      },\n      parameterGroup: auroraParameterGroup,\n      instances: replicaInstances,\n      iamAuthentication: true,\n      storageEncrypted: true,\n      storageEncryptionKey: kmsKey,\n      deletionProtection: true,\n      removalPolicy: RemovalPolicy.SNAPSHOT,\n      copyTagsToSnapshot: true,\n      cloudwatchLogsExports: cloudwatchLogsExports,\n      cloudwatchLogsRetention: logs.RetentionDays.ONE_MONTH,\n      preferredMaintenanceWindow: props.preferredMaintenanceWindow,\n      instanceIdentifierBase: props.dbName,\n      instanceProps: {\n        instanceType: props.instanceType,\n        vpcSubnets: vpcSubnets,\n        vpc: vpc,\n        securityGroups: [dbsg],\n      },\n    });\n\n    aurora_cluster.applyRemovalPolicy(RemovalPolicy.RETAIN);\n\n    Tags.of(aurora_cluster).add('Name', props.dbName!, {\n      priority: 300,\n    });\n\n    aurora_cluster.addRotationSingleUser({\n      automaticallyAfter: Duration.days(30),\n      excludeCharacters: \"\\\"@/\\\\ '\",\n      vpcSubnets: vpcSubnets,\n    });\n\n    /*\n     * CloudWatch Dashboard\n     */\n\n    const dashboard = new cloudwatch.Dashboard(this, 'AuroraMonitoringDashboard', {\n      dashboardName: props.dbName,\n    });\n\n    let dbConnections = aurora_cluster.metricDatabaseConnections();\n    let cpuUtilization = aurora_cluster.metricCPUUtilization();\n    let deadlocks = aurora_cluster.metricDeadlocks();\n    let freeLocalStorage = aurora_cluster.metricFreeLocalStorage();\n    let freeableMemory = aurora_cluster.metricFreeableMemory();\n    let networkRecieveThroughput = aurora_cluster.metricNetworkReceiveThroughput();\n    let networkThroughput = aurora_cluster.metricNetworkThroughput();\n    let networkTransmitThroughput = aurora_cluster.metricNetworkTransmitThroughput();\n    let snapshotStorageUsed = aurora_cluster.metricSnapshotStorageUsed();\n    let totalBackupStorageBilled = aurora_cluster.metricTotalBackupStorageBilled();\n    let volumeBytesUsed = aurora_cluster.metricVolumeBytesUsed();\n    let volumeReadIoPs = aurora_cluster.metricVolumeReadIOPs();\n    let volumeWriteIoPs = aurora_cluster.metricVolumeWriteIOPs();\n\n\n    //  The average amount of time taken per disk I/O operation (average over 1 minute)\n    const readLatency = aurora_cluster.metric('ReadLatency', {\n      statistic: 'Average',\n      period: Duration.seconds(60),\n    });\n\n    const widgetDbConnections = new cloudwatch.GraphWidget({\n      title: 'DB Connections',\n      // Metrics to display on left Y axis.\n      left: [dbConnections],\n    });\n\n    const widgetCpuUtilizaton = new cloudwatch.GraphWidget({\n      title: 'CPU Utilization',\n      // Metrics to display on left Y axis\n      left: [cpuUtilization],\n    });\n\n    const widgetReadLatency = new cloudwatch.GraphWidget({\n      title: 'Read Latency',\n      //  Metrics to display on left Y axis.\n      left: [readLatency],\n    });\n\n    freeLocalStorage = aurora_cluster.metricFreeLocalStorage();\n    freeableMemory = aurora_cluster.metricFreeableMemory();\n    networkRecieveThroughput = aurora_cluster.metricNetworkReceiveThroughput();\n    networkThroughput = aurora_cluster.metricNetworkThroughput();\n    networkTransmitThroughput = aurora_cluster.metricNetworkTransmitThroughput();\n    snapshotStorageUsed = aurora_cluster.metricSnapshotStorageUsed();\n    totalBackupStorageBilled = aurora_cluster.metricTotalBackupStorageBilled();\n    volumeBytesUsed = aurora_cluster.metricVolumeBytesUsed();\n    volumeReadIoPs = aurora_cluster.metricVolumeReadIOPs();\n    volumeWriteIoPs = aurora_cluster.metricVolumeWriteIOPs();\n\n    const widgetDeadlocks = new cloudwatch.GraphWidget({\n      title: 'Deadlocks',\n      left: [deadlocks],\n    });\n\n    const widgetFreeLocalStorage = new cloudwatch.GraphWidget({\n      title: 'Free Local Storage',\n      left: [freeLocalStorage],\n    });\n\n    const widgetFreeableMemory = new cloudwatch.GraphWidget({\n      title: 'Freeable Memory',\n      left: [freeableMemory],\n    });\n\n    const widget_network_receive_throughput = new cloudwatch.GraphWidget({\n      title: 'Network Throuput',\n      left: [networkRecieveThroughput, networkThroughput, networkTransmitThroughput],\n\n    });\n\n    const widgetTotalBackupStorageBilled = new cloudwatch.GraphWidget({\n      title: 'Backup Storage Billed',\n      left: [totalBackupStorageBilled],\n    });\n\n    const widgetVolumeBytes = new cloudwatch.GraphWidget({\n      title: 'Storage',\n      left: [volumeBytesUsed, snapshotStorageUsed],\n    });\n\n    const widgetVolumeIops = new cloudwatch.GraphWidget({\n      title: 'Volume IOPs',\n      left: [volumeReadIoPs, volumeWriteIoPs],\n    });\n\n\n    dashboard.addWidgets(\n      widgetDbConnections,\n      widgetCpuUtilizaton\n    );\n    dashboard.addWidgets(\n      widgetTotalBackupStorageBilled,\n      widgetFreeLocalStorage\n    );\n    dashboard.addWidgets(\n      widgetFreeableMemory,\n      widgetVolumeBytes,\n      widgetVolumeIops,\n    );\n    dashboard.addWidgets(\n      widget_network_receive_throughput,\n      widgetReadLatency,\n      widgetDeadlocks,\n    );\n\n    new CfnOutput(this, 'OutputSecretName', {\n      exportName: aurora_cluster.stack.stackName+':SecretName',\n      value: aurora_cluster.secret?.secretArn!,\n    });\n\n    new CfnOutput(this, 'OutputSecretArn', {\n      exportName: aurora_cluster.stack.stackName+':SecretArn',\n      value: aurora_cluster.secret?.secretArn!,\n    });\n\n\n    new CfnOutput(this, 'OutputGetSecretValue', {\n      exportName: aurora_cluster.stack.stackName+':GetSecretValue',\n      value: 'aws secretsmanager get-secret-value --secret-id '+ aurora_cluster.secret?.secretArn,\n    });\n\n\n    new CfnOutput(this, 'OutputInstanceIdentifiers', {\n      exportName: aurora_cluster.stack.stackName+'InstanceIdentifiers',\n      value: aurora_cluster.instanceIdentifiers.toString(),\n    });\n\n    const instance_endpoints:any = [];\n\n    for (let ie of aurora_cluster.instanceEndpoints) {\n      instance_endpoints.push(ie.hostname);\n    }\n    new CfnOutput(this, 'OutputEndpoints', {\n      exportName: aurora_cluster.stack.stackName+':Endpoints',\n      value: instance_endpoints.toString(),\n    });\n\n    new CfnOutput(this, 'OutputClusterEndpoint', {\n      exportName: aurora_cluster.stack.stackName+':Endpoint',\n      value: aurora_cluster.clusterEndpoint.socketAddress,\n    });\n\n\n    // Outputs Cluster Engine\n    new CfnOutput(this, 'OutputEngineFamily', {\n      exportName: aurora_cluster.stack.stackName+':EngineFamily',\n      value: aurora_cluster.engine?.engineFamily!,\n    });\n\n    new CfnOutput(this, 'OutputEngineType', {\n      exportName: aurora_cluster.stack.stackName+':EngineType',\n      value: aurora_cluster.engine?.engineType!,\n    });\n\n    new CfnOutput(this, 'OutputEngineFullVersion', {\n      exportName: aurora_cluster.stack.stackName+':EngineFullVersion',\n      value: aurora_cluster.engine?.engineVersion?.fullVersion!,\n    });\n\n    new CfnOutput(this, 'OutputEngineMajorVersion', {\n      exportName: aurora_cluster.stack.stackName+':EngineMajorVersion',\n      value: aurora_cluster.engine?.engineVersion?.majorVersion!,\n    });\n\n    new CfnOutput(this, 'OutputParameterGroupFamily', {\n      exportName: aurora_cluster.stack.stackName+':ParameterGroupFamily',\n      value: aurora_cluster.engine?.parameterGroupFamily!,\n    });\n\n  }\n\n}\n\n\n\nconst app = new App();\n\nnew Aurora(app, 'AuroraStack', {\n  env:{region:\"us-east-2\"}, description:\"Aurora Stack\",\n  vpcId:\"vpc-xxx\",\n  subnetIds:[\"subnet-xxx\", \"subnet-xxxxSS\"],\n  dbName:\"sampledb\",\n  engine:\"postgresql\"\n});\n\n\n\n"}
{ "prompt": "{\"Transform\": \"AWS::Serverless-2016-10-31\", \"Resources\": {\"DatabaseSecurityGroup7319C0F6\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"MysqlStackDatabase\", \"GroupName\": \"MysqlStackDatabase\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"VpcId\": \"vpc-aaaaaaaa\"}, \"Metadata\": {\"aws:cdk:path\": \"MysqlStack/DatabaseSecurityGroup/Resource\"}}, \"DatabaseSecurityGroupfromMysqlStackDatabaseSecurityGroup0CB56563ALLTRAFFIC93A804A1\": {\"Type\": \"AWS::EC2::SecurityGroupIngress\", \"Properties\": {\"IpProtocol\": \"-1\", \"Description\": \"all from self\", \"GroupId\": {\"Fn::GetAtt\": [\"DatabaseSecurityGroup7319C0F6\", \"GroupId\"]}, \"SourceSecurityGroupId\": {\"Fn::GetAtt\": [\"DatabaseSecurityGroup7319C0F6\", \"GroupId\"]}}, \"Metadata\": {\"aws:cdk:path\": \"MysqlStack/DatabaseSecurityGroup/from MysqlStackDatabaseSecurityGroup0CB56563:ALL TRAFFIC\"}}, \"DatabaseSecurityGroupfromMysqlStackMysqlDatabaseRotationSingleUserSecurityGroupCB8EE8ECIndirectPort6B5CA410\": {\"Type\": \"AWS::EC2::SecurityGroupIngress\", \"Properties\": {\"IpProtocol\": \"tcp\", \"Description\": \"from MysqlStackMysqlDatabaseRotationSingleUserSecurityGroupCB8EE8EC:{IndirectPort}\", \"FromPort\": {\"Fn::GetAtt\": [\"MysqlDatabase645976E7\", \"Endpoint.Port\"]}, \"GroupId\": {\"Fn::GetAtt\": [\"DatabaseSecurityGroup7319C0F6\", \"GroupId\"]}, \"SourceSecurityGroupId\": {\"Fn::GetAtt\": [\"MysqlDatabaseRotationSingleUserSecurityGroup822FA791\", \"GroupId\"]}, \"ToPort\": {\"Fn::GetAtt\": [\"MysqlDatabase645976E7\", \"Endpoint.Port\"]}}, \"Metadata\": {\"aws:cdk:path\": \"MysqlStack/DatabaseSecurityGroup/from MysqlStackMysqlDatabaseRotationSingleUserSecurityGroupCB8EE8EC:{IndirectPort}\"}}, \"DatabaseSubnetGroup\": {\"Type\": \"AWS::RDS::DBSubnetGroup\", \"Properties\": {\"DBSubnetGroupDescription\": \"MysqlStacksubnet group\", \"SubnetIds\": [\"subnet-xxxxxxxx\", \"subnet-yyyyyyyy\", \"subnet-zzzzzzzz\"], \"DBSubnetGroupName\": \"mysqlstacksubnet group\"}, \"Metadata\": {\"aws:cdk:path\": \"MysqlStack/DatabaseSubnetGroup/Default\"}}, \"MysqlCredentialsC143F6A5\": {\"Type\": \"AWS::SecretsManager::Secret\", \"Properties\": {\"Description\": \"sampledbMysql Database Crendetials\", \"GenerateSecretString\": {\"ExcludeCharacters\": \"\\\"@/\\ '\", \"GenerateStringKey\": \"password\", \"PasswordLength\": 30, \"SecretStringTemplate\": \"{\\\"username\\\":\\\"dbadmin\\\"}\"}, \"Name\": \"sampledbMysqlCredentials\"}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\", \"Metadata\": {\"aws:cdk:path\": \"MysqlStack/MysqlCredentials/Resource\"}}, \"MysqlCredentialsAttachment0E0370A5\": {\"Type\": \"AWS::SecretsManager::SecretTargetAttachment\", \"Properties\": {\"SecretId\": {\"Ref\": \"MysqlCredentialsC143F6A5\"}, \"TargetId\": {\"Ref\": \"MysqlDatabase645976E7\"}, \"TargetType\": \"AWS::RDS::DBInstance\"}, \"Metadata\": {\"aws:cdk:path\": \"MysqlStack/MysqlCredentials/Attachment/Resource\"}}, \"MysqlCredentialsAttachmentRotationScheduleC83737CB\": {\"Type\": \"AWS::SecretsManager::RotationSchedule\", \"Properties\": {\"SecretId\": {\"Ref\": \"MysqlCredentialsAttachment0E0370A5\"}, \"RotationLambdaARN\": {\"Fn::GetAtt\": [\"MysqlDatabaseRotationSingleUser577C4CFB\", \"Outputs.RotationLambdaARN\"]}, \"RotationRules\": {\"AutomaticallyAfterDays\": 30}}, \"Metadata\": {\"aws:cdk:path\": \"MysqlStack/MysqlCredentials/Attachment/RotationSchedule/Resource\"}}, \"MysqlCredentialsAttachmentPolicyAD35D5B2\": {\"Type\": \"AWS::SecretsManager::ResourcePolicy\", \"Properties\": {\"ResourcePolicy\": {\"Statement\": [{\"Action\": \"secretsmanager:DeleteSecret\", \"Effect\": \"Deny\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}, \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"SecretId\": {\"Ref\": \"MysqlCredentialsAttachment0E0370A5\"}}, \"Metadata\": {\"aws:cdk:path\": \"MysqlStack/MysqlCredentials/Attachment/Policy/Resource\"}}, \"ParameterGroup5E32DECB\": {\"Type\": \"AWS::RDS::DBParameterGroup\", \"Properties\": {\"Description\": \"Parameter group for mysql8.0\", \"Family\": \"mysql8.0\", \"Parameters\": {}}, \"Metadata\": {\"aws:cdk:path\": \"MysqlStack/ParameterGroup/Resource\"}}, \"MysqlDatabaseMonitoringRole343D1ABC\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"monitoring.rds.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole\"]]}], \"Tags\": [{\"Key\": \"Name\", \"Value\": \"MysqlDatabase\"}]}, \"Metadata\": {\"aws:cdk:path\": \"MysqlStack/MysqlDatabase/MonitoringRole/Resource\"}}, \"MysqlDatabase645976E7\": {\"Type\": \"AWS::RDS::DBInstance\", \"Properties\": {\"AllocatedStorage\": \"20\", \"AllowMajorVersionUpgrade\": true, \"AutoMinorVersionUpgrade\": true, \"BackupRetentionPeriod\": 7, \"CopyTagsToSnapshot\": true, \"DBInstanceClass\": \"db.m5.large\", \"DBInstanceIdentifier\": \"sampledb\", \"DBName\": \"sampledb\", \"DBParameterGroupName\": {\"Ref\": \"ParameterGroup5E32DECB\"}, \"DBSubnetGroupName\": {\"Ref\": \"DatabaseSubnetGroup\"}, \"EnablePerformanceInsights\": true, \"Engine\": \"mysql\", \"EngineVersion\": \"8.0.28\", \"MasterUsername\": \"dbadmin\", \"MasterUserPassword\": {\"Fn::Join\": [\"\", [\"{{resolve:secretsmanager:\", {\"Ref\": \"MysqlCredentialsC143F6A5\"}, \":SecretString:password::}}\"]]}, \"MonitoringInterval\": 60, \"MonitoringRoleArn\": {\"Fn::GetAtt\": [\"MysqlDatabaseMonitoringRole343D1ABC\", \"Arn\"]}, \"PerformanceInsightsRetentionPeriod\": 7, \"PubliclyAccessible\": false, \"StorageEncrypted\": true, \"StorageType\": \"gp2\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"MysqlDatabase\"}], \"VPCSecurityGroups\": [{\"Fn::GetAtt\": [\"DatabaseSecurityGroup7319C0F6\", \"GroupId\"]}]}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\", \"Metadata\": {\"aws:cdk:path\": \"MysqlStack/MysqlDatabase/Resource\"}}, \"MysqlDatabaseRotationSingleUserSecurityGroup822FA791\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"MysqlStack/MysqlDatabase/RotationSingleUser/SecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"Tags\": [{\"Key\": \"Name\", \"Value\": \"MysqlDatabase\"}], \"VpcId\": \"vpc-aaaaaaaa\"}, \"Metadata\": {\"aws:cdk:path\": \"MysqlStack/MysqlDatabase/RotationSingleUser/SecurityGroup/Resource\"}}, \"MysqlDatabaseRotationSingleUser577C4CFB\": {\"Type\": \"AWS::Serverless::Application\", \"Properties\": {\"Location\": {\"ApplicationId\": {\"Fn::FindInMap\": [\"MysqlDatabaseRotationSingleUserSARMapping01CDBF73\", {\"Ref\": \"AWS::Partition\"}, \"applicationId\"]}, \"SemanticVersion\": {\"Fn::FindInMap\": [\"MysqlDatabaseRotationSingleUserSARMapping01CDBF73\", {\"Ref\": \"AWS::Partition\"}, \"semanticVersion\"]}}, \"Parameters\": {\"endpoint\": {\"Fn::Join\": [\"\", [\"https://secretsmanager.\", {\"Ref\": \"AWS::Region\"}, \".\", {\"Ref\": \"AWS::URLSuffix\"}]]}, \"functionName\": \"MysqlStackMysqlDatabaseRotationSingleUserD8CD386E\", \"vpcSubnetIds\": \"subnet-xxxxxxxx,subnet-yyyyyyyy,subnet-zzzzzzzz\", \"vpcSecurityGroupIds\": {\"Fn::GetAtt\": [\"MysqlDatabaseRotationSingleUserSecurityGroup822FA791\", \"GroupId\"]}, \"excludeCharacters\": \" %+~`#$&*()|[]{}:;<>?!'/@\\\"\\\"}, \"Tags\": {\"Name\": \"MysqlDatabase\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\", \"Metadata\": {\"aws:cdk:path\": \"MysqlStack/MysqlDatabase/RotationSingleUser/Resource\"}}, \"CDKMetadata\": {\"Type\": \"AWS::CDK::Metadata\", \"Properties\": {\"Analytics\": \"v2:deflate64:H4sIAAAAAAAA/31RTU/DMAz9LdyzAL2w6z4E2gExddyRm5ouW+NEiQOaqv53kpaiwiROtt97tp+TQi4f5N0NfIaFqs+LVleyOzCosygx2OgVisS9daiKRKCKXvPlydvoxOad/gd21HgMoRe+Dqk5VoT8o9yu58AePBhk9DP+D7YFhgoC7igwUPI1iKaqFwGVRw4GCBr0g9lUf5vK2RhewTfIK043Hg3STHDFlJaBtaWDOmId22HjFTY90962Wl0GyW9kHD719UKDkV1pp3Fttp6gVKycSx2DTLRgqhrkYySV63U6vM8Nz+CcpianL5Fd5PnGnG8s1XrcRLZGeQq3H/dLWaRPPgWtFz4Sa4OyHOMXi/sYEQACAAA=\"}, \"Metadata\": {\"aws:cdk:path\": \"MysqlStack/CDKMetadata/Default\"}, \"Condition\": \"CDKMetadataAvailable\"}}, \"Mappings\": {\"MysqlDatabaseRotationSingleUserSARMapping01CDBF73\": {\"aws\": {\"applicationId\": \"arn:aws:serverlessrepo:us-east-1:297356227824:applications/SecretsManagerRDSMySQLRotationSingleUser\", \"semanticVersion\": \"1.1.225\"}, \"aws-cn\": {\"applicationId\": \"arn:aws-cn:serverlessrepo:cn-north-1:193023089310:applications/SecretsManagerRDSMySQLRotationSingleUser\", \"semanticVersion\": \"1.1.37\"}, \"aws-us-gov\": {\"applicationId\": \"arn:aws-us-gov:serverlessrepo:us-gov-west-1:023102451235:applications/SecretsManagerRDSMySQLRotationSingleUser\", \"semanticVersion\": \"1.1.93\"}}}, \"Outputs\": {\"MysqlEndpoint\": {\"Value\": {\"Fn::GetAtt\": [\"MysqlDatabase645976E7\", \"Endpoint.Address\"]}, \"Export\": {\"Name\": \"MysqlEndPoint\"}}, \"MysqlUserName\": {\"Value\": \"dbadmin\", \"Export\": {\"Name\": \"MysqlUserName\"}}, \"MysqlDbName\": {\"Value\": \"sampledb\", \"Export\": {\"Name\": \"MysqlDbName\"}}}, \"Conditions\": {\"CDKMetadataAvailable\": {\"Fn::Or\": [{\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"af-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ca-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-northwest-1\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-3\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"me-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"sa-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-2\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-2\"]}]}]}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import {\n  CfnOutput,\n  Stack,\n  StackProps,\n  Tags,\n  App,\n  Fn,\n  Duration,\n  RemovalPolicy,\n} from 'aws-cdk-lib';\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as logs from 'aws-cdk-lib/aws-logs';\nimport * as rds from 'aws-cdk-lib/aws-rds';\nimport * as secretsmanager from 'aws-cdk-lib/aws-secretsmanager';\nimport { Construct } from 'constructs';\n\nexport interface MysqlProps extends StackProps {\n\n  /**\n   * VPC Id\n   * @type {string}\n   * @memberof MysqlProps\n   */\n  readonly vpcId?: string;\n\n  /**\n   * List of Subnet\n   * @type {string[]}\n   * @memberof MysqlProps\n   */\n  readonly subnetIds?: string[];\n\n\n  /**\n   * provide the name of the database\n   * @type {string}\n   * @memberof MysqlProps\n   */\n  readonly dbName?: string;\n\n  /**\n   *\n   * ec2.InstanceType.of(ec2.InstanceClass.BURSTABLE3, ec2.InstanceSize.LARGE)\n   * @type {*}\n   * @memberof MysqlProps\n   * @default ec2.InstanceType.of(ec2.InstanceClass.BURSTABLE3, ec2.InstanceSize.LARGE)\n   */\n  readonly instanceType?: any;\n\n  /**\n   * provide the version of the database\n   * @type {*}\n   * @memberof MysqlProps\n   * @default rds.MysqlEngineVersion.VER_8_0_28\n   */\n  readonly engineVersion?: any;\n\n  /**\n   * user name of the database\n   * @type {str}\n   * @memberof MysqlProps\n   * @default dbadmin\n   */\n  readonly mysqlUsername?: string;\n\n  /**\n   * backup retention days for example 14\n   * @type {number}\n   * @memberof MysqlProps\n   * @default 14\n   */\n  readonly backupRetentionDays?: number;\n\n  /**\n   * backup window time 00:15-01:15\n   * @type {string}\n   * @memberof MysqlProps\n   * @default 00:15-01:15\n   */\n\n  readonly backupWindow?: string;\n\n  /**\n   *\n   * maintenance time Sun:23:45-Mon:00:15\n   * @type {string}\n   * @memberof MysqlProps\n   * @default Sun:23:45-Mon:00:15\n   */\n  readonly preferredMaintenanceWindow?: string;\n\n  /**\n   *\n   * list of ingress sources\n   * @type {any []}\n   * @memberof MysqlProps\n   */\n  readonly ingressSources?: any[];\n}\n\nexport class Mysql extends Stack {\n  constructor(scope: Construct, id: string, props: MysqlProps) {\n    super(scope, id);\n\n    // default database username\n    var mysqlUsername = \"dbadmin\";\n    if (typeof props.mysqlUsername !== 'undefined') {\n      mysqlUsername = props.mysqlUsername;\n    }\n    var ingressSources = [];\n    if (typeof props.ingressSources !== 'undefined') {\n      ingressSources = props.ingressSources;\n    }\n    var engineVersion = rds.MysqlEngineVersion.VER_8_0_28;\n    if (typeof props.engineVersion !== 'undefined') {\n      engineVersion = props.engineVersion;\n    }\n\n\n\n    const azs = Fn.getAzs();\n\n    // vpc\n    const vpc = ec2.Vpc.fromVpcAttributes(this, 'ExistingVPC', {\n      vpcId: props.vpcId!,\n      availabilityZones: azs,\n    });\n\n    // Subnets\n    const subnets: any[] = [];\n\n    for (let subnetId of props.subnetIds!) {\n      const subid = subnetId\n        .replace('_', '')\n        .replace(' ', '');\n      subnets.push(\n        ec2.Subnet.fromSubnetAttributes(this, subid, {\n          subnetId: subid,\n        }),\n      );\n    }\n\n    const vpcSubnets: ec2.SubnetSelection = {\n      subnets: subnets,\n    };\n\n    const allAll = ec2.Port.allTraffic();\n    const tcp3306 = ec2.Port.tcpRange(3306, 3306);\n\n    const dbsg = new ec2.SecurityGroup(this, 'DatabaseSecurityGroup', {\n      vpc: vpc,\n      allowAllOutbound: true,\n      description: id + 'Database',\n      securityGroupName: id + 'Database',\n    });\n\n    dbsg.addIngressRule(dbsg, allAll, 'all from self');\n    dbsg.addEgressRule(ec2.Peer.ipv4('0.0.0.0/0'), allAll, 'all out');\n\n    const mysqlConnectionPorts = [\n      { port: tcp3306, description: 'tcp3306 Mysql' },\n    ];\n\n    for (let ingressSource of ingressSources!) {\n      for (let c of mysqlConnectionPorts) {\n        dbsg.addIngressRule(ingressSource, c.port, c.description);\n      }\n    }\n\n    const dbSubnetGroup = new rds.SubnetGroup(this, 'DatabaseSubnetGroup', {\n      vpc: vpc,\n      description: id + 'subnet group',\n      vpcSubnets: vpcSubnets,\n      subnetGroupName: id + 'subnet group',\n    });\n\n    const mysqlSecret = new secretsmanager.Secret(this, 'MysqlCredentials', {\n      secretName: props.dbName + 'MysqlCredentials',\n      description: props.dbName + 'Mysql Database Crendetials',\n      generateSecretString: {\n        excludeCharacters: \"\\\"@/\\\\ '\",\n        generateStringKey: 'password',\n        passwordLength: 30,\n        secretStringTemplate: JSON.stringify({username: mysqlUsername}),\n      },\n    });\n\n    const mysqlCredentials = rds.Credentials.fromSecret(\n      mysqlSecret,\n      mysqlUsername,\n    );\n\n    const dbParameterGroup = new rds.ParameterGroup(this, 'ParameterGroup', {\n      engine: rds.DatabaseInstanceEngine.mysql({\n        version: engineVersion,\n      }),\n    });\n\n\n\n    const mysqlInstance = new rds.DatabaseInstance(this, 'MysqlDatabase', {\n      databaseName: props.dbName,\n      instanceIdentifier: props.dbName,\n      credentials: mysqlCredentials,\n      engine: rds.DatabaseInstanceEngine.mysql({\n        version: engineVersion,\n      }),\n      backupRetention: Duration.days(7),\n      allocatedStorage: 20,\n      securityGroups: [dbsg],\n      allowMajorVersionUpgrade: true,\n      autoMinorVersionUpgrade: true,\n      instanceType: props.instanceType,\n      vpcSubnets: vpcSubnets,\n      vpc: vpc,\n      removalPolicy: RemovalPolicy.DESTROY,\n      storageEncrypted: true,\n      monitoringInterval: Duration.seconds(60),\n      enablePerformanceInsights: true,\n      parameterGroup: dbParameterGroup,\n      subnetGroup: dbSubnetGroup,\n      preferredBackupWindow: props.backupWindow,\n      preferredMaintenanceWindow: props.preferredMaintenanceWindow,\n      publiclyAccessible: false,\n    });\n\n    mysqlInstance.addRotationSingleUser();\n\n    // Tags\n    Tags.of(mysqlInstance).add('Name', 'MysqlDatabase', {\n      priority: 300,\n    });\n\n\n    new CfnOutput(this, 'MysqlEndpoint', {\n      exportName: 'MysqlEndPoint',\n      value: mysqlInstance.dbInstanceEndpointAddress,\n    });\n\n    new CfnOutput(this, 'MysqlUserName', {\n      exportName: 'MysqlUserName',\n      value: mysqlUsername,\n    });\n\n    new CfnOutput(this, 'MysqlDbName', {\n      exportName: 'MysqlDbName',\n      value: props.dbName!,\n    });\n  }\n}\n\n\nconst app = new App();\n\nnew Mysql(app, 'MysqlStack', {\n  env:{region:\"us-east-2\"}, description:\"Mysql Stack\",\n  vpcId:\"vpc-aaaaaaaa\",\n  subnetIds:[\"subnet-xxxxxxxx\", \"subnet-yyyyyyyy\", \"subnet-zzzzzzzz\"],\n  dbName:\"sampledb\"\n});\n\n"}
{ "prompt": "{\"Transform\": \"AWS::Serverless-2016-10-31\", \"Resources\": {\"DatabaseSecurityGroup7319C0F6\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"OracleStackDatabase\", \"GroupName\": \"OracleStackDatabase\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"VpcId\": \"vpc-aaaaaaaa\"}, \"Metadata\": {\"aws:cdk:path\": \"OracleStack/DatabaseSecurityGroup/Resource\"}}, \"DatabaseSecurityGroupfromOracleStackDatabaseSecurityGroupABB9B5D9ALLTRAFFIC6DF1DCDD\": {\"Type\": \"AWS::EC2::SecurityGroupIngress\", \"Properties\": {\"IpProtocol\": \"-1\", \"Description\": \"all from self\", \"GroupId\": {\"Fn::GetAtt\": [\"DatabaseSecurityGroup7319C0F6\", \"GroupId\"]}, \"SourceSecurityGroupId\": {\"Fn::GetAtt\": [\"DatabaseSecurityGroup7319C0F6\", \"GroupId\"]}}, \"Metadata\": {\"aws:cdk:path\": \"OracleStack/DatabaseSecurityGroup/from OracleStackDatabaseSecurityGroupABB9B5D9:ALL TRAFFIC\"}}, \"DatabaseSecurityGroupfromOracleStackOracleDatabaseRotationSingleUserSecurityGroup75B59E11IndirectPort5A25D44C\": {\"Type\": \"AWS::EC2::SecurityGroupIngress\", \"Properties\": {\"IpProtocol\": \"tcp\", \"Description\": \"from OracleStackOracleDatabaseRotationSingleUserSecurityGroup75B59E11:{IndirectPort}\", \"FromPort\": {\"Fn::GetAtt\": [\"OracleDatabaseC1283788\", \"Endpoint.Port\"]}, \"GroupId\": {\"Fn::GetAtt\": [\"DatabaseSecurityGroup7319C0F6\", \"GroupId\"]}, \"SourceSecurityGroupId\": {\"Fn::GetAtt\": [\"OracleDatabaseRotationSingleUserSecurityGroup808C6CA2\", \"GroupId\"]}, \"ToPort\": {\"Fn::GetAtt\": [\"OracleDatabaseC1283788\", \"Endpoint.Port\"]}}, \"Metadata\": {\"aws:cdk:path\": \"OracleStack/DatabaseSecurityGroup/from OracleStackOracleDatabaseRotationSingleUserSecurityGroup75B59E11:{IndirectPort}\"}}, \"DatabaseSubnetGroup\": {\"Type\": \"AWS::RDS::DBSubnetGroup\", \"Properties\": {\"DBSubnetGroupDescription\": \"OracleStacksubnet group\", \"SubnetIds\": [\"subnet-xxxxxxxx\", \"subnet-yyyyyyyy\", \"subnet-zzzzzzzz\"], \"DBSubnetGroupName\": \"oraclestacksubnet group\"}, \"Metadata\": {\"aws:cdk:path\": \"OracleStack/DatabaseSubnetGroup/Default\"}}, \"OracleCredentialsCB384BE2\": {\"Type\": \"AWS::SecretsManager::Secret\", \"Properties\": {\"Description\": \"sampledbOracle Database Crendetials\", \"GenerateSecretString\": {\"ExcludeCharacters\": \"\\\"@/\\ '\", \"GenerateStringKey\": \"password\", \"PasswordLength\": 30, \"SecretStringTemplate\": \"{\\\"username\\\":\\\"dbadmin\\\"}\"}, \"Name\": \"sampledbOracleCredentials\"}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\", \"Metadata\": {\"aws:cdk:path\": \"OracleStack/OracleCredentials/Resource\"}}, \"OracleCredentialsAttachment889A7CD4\": {\"Type\": \"AWS::SecretsManager::SecretTargetAttachment\", \"Properties\": {\"SecretId\": {\"Ref\": \"OracleCredentialsCB384BE2\"}, \"TargetId\": {\"Ref\": \"OracleDatabaseC1283788\"}, \"TargetType\": \"AWS::RDS::DBInstance\"}, \"Metadata\": {\"aws:cdk:path\": \"OracleStack/OracleCredentials/Attachment/Resource\"}}, \"OracleCredentialsAttachmentRotationScheduleED677786\": {\"Type\": \"AWS::SecretsManager::RotationSchedule\", \"Properties\": {\"SecretId\": {\"Ref\": \"OracleCredentialsAttachment889A7CD4\"}, \"RotationLambdaARN\": {\"Fn::GetAtt\": [\"OracleDatabaseRotationSingleUser04565F06\", \"Outputs.RotationLambdaARN\"]}, \"RotationRules\": {\"AutomaticallyAfterDays\": 30}}, \"Metadata\": {\"aws:cdk:path\": \"OracleStack/OracleCredentials/Attachment/RotationSchedule/Resource\"}}, \"OracleCredentialsAttachmentPolicyDE012560\": {\"Type\": \"AWS::SecretsManager::ResourcePolicy\", \"Properties\": {\"ResourcePolicy\": {\"Statement\": [{\"Action\": \"secretsmanager:DeleteSecret\", \"Effect\": \"Deny\", \"Principal\": {\"AWS\": {\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::\", {\"Ref\": \"AWS::AccountId\"}, \":root\"]]}}, \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"SecretId\": {\"Ref\": \"OracleCredentialsAttachment889A7CD4\"}}, \"Metadata\": {\"aws:cdk:path\": \"OracleStack/OracleCredentials/Attachment/Policy/Resource\"}}, \"ParameterGroup5E32DECB\": {\"Type\": \"AWS::RDS::DBParameterGroup\", \"Properties\": {\"Description\": \"Parameter group for oracle-ee-19\", \"Family\": \"oracle-ee-19\", \"Parameters\": {\"open_cursors\": \"2500\"}}, \"Metadata\": {\"aws:cdk:path\": \"OracleStack/ParameterGroup/Resource\"}}, \"OracleDatabaseMonitoringRole62AC43C1\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"monitoring.rds.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole\"]]}], \"Tags\": [{\"Key\": \"Name\", \"Value\": \"OracleDatabase\"}]}, \"Metadata\": {\"aws:cdk:path\": \"OracleStack/OracleDatabase/MonitoringRole/Resource\"}}, \"OracleDatabaseC1283788\": {\"Type\": \"AWS::RDS::DBInstance\", \"Properties\": {\"AllocatedStorage\": \"20\", \"AllowMajorVersionUpgrade\": true, \"AutoMinorVersionUpgrade\": true, \"BackupRetentionPeriod\": 7, \"CopyTagsToSnapshot\": true, \"DBInstanceClass\": \"db.m5.large\", \"DBInstanceIdentifier\": \"sampledb\", \"DBName\": \"sampledb\", \"DBParameterGroupName\": {\"Ref\": \"ParameterGroup5E32DECB\"}, \"DBSubnetGroupName\": {\"Ref\": \"DatabaseSubnetGroup\"}, \"DeletionProtection\": true, \"EnableCloudwatchLogsExports\": [\"trace\", \"audit\", \"alert\", \"listener\"], \"EnablePerformanceInsights\": true, \"Engine\": \"oracle-ee\", \"EngineVersion\": \"19.0.0.0.ru-2021-04.rur-2021-04.r1\", \"LicenseModel\": \"bring-your-own-license\", \"MasterUsername\": \"dbadmin\", \"MasterUserPassword\": {\"Fn::Join\": [\"\", [\"{{resolve:secretsmanager:\", {\"Ref\": \"OracleCredentialsCB384BE2\"}, \":SecretString:password::}}\"]]}, \"MonitoringInterval\": 60, \"MonitoringRoleArn\": {\"Fn::GetAtt\": [\"OracleDatabaseMonitoringRole62AC43C1\", \"Arn\"]}, \"MultiAZ\": true, \"PerformanceInsightsRetentionPeriod\": 7, \"PubliclyAccessible\": false, \"StorageEncrypted\": true, \"StorageType\": \"gp2\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"OracleDatabase\"}], \"VPCSecurityGroups\": [{\"Fn::GetAtt\": [\"DatabaseSecurityGroup7319C0F6\", \"GroupId\"]}]}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\", \"Metadata\": {\"aws:cdk:path\": \"OracleStack/OracleDatabase/Resource\"}}, \"OracleDatabaseLogRetentiontrace13A85266\": {\"Type\": \"Custom::LogRetention\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A\", \"Arn\"]}, \"LogGroupName\": {\"Fn::Join\": [\"\", [\"/aws/rds/instance/\", {\"Ref\": \"OracleDatabaseC1283788\"}, \"/trace\"]]}, \"RetentionInDays\": 30}, \"Metadata\": {\"aws:cdk:path\": \"OracleStack/OracleDatabase/LogRetentiontrace/Resource\"}}, \"OracleDatabaseLogRetentionaudit494885AA\": {\"Type\": \"Custom::LogRetention\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A\", \"Arn\"]}, \"LogGroupName\": {\"Fn::Join\": [\"\", [\"/aws/rds/instance/\", {\"Ref\": \"OracleDatabaseC1283788\"}, \"/audit\"]]}, \"RetentionInDays\": 30}, \"Metadata\": {\"aws:cdk:path\": \"OracleStack/OracleDatabase/LogRetentionaudit/Resource\"}}, \"OracleDatabaseLogRetentionalertC19F43BA\": {\"Type\": \"Custom::LogRetention\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A\", \"Arn\"]}, \"LogGroupName\": {\"Fn::Join\": [\"\", [\"/aws/rds/instance/\", {\"Ref\": \"OracleDatabaseC1283788\"}, \"/alert\"]]}, \"RetentionInDays\": 30}, \"Metadata\": {\"aws:cdk:path\": \"OracleStack/OracleDatabase/LogRetentionalert/Resource\"}}, \"OracleDatabaseLogRetentionlistenerA46B2FE9\": {\"Type\": \"Custom::LogRetention\", \"Properties\": {\"ServiceToken\": {\"Fn::GetAtt\": [\"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A\", \"Arn\"]}, \"LogGroupName\": {\"Fn::Join\": [\"\", [\"/aws/rds/instance/\", {\"Ref\": \"OracleDatabaseC1283788\"}, \"/listener\"]]}, \"RetentionInDays\": 30}, \"Metadata\": {\"aws:cdk:path\": \"OracleStack/OracleDatabase/LogRetentionlistener/Resource\"}}, \"OracleDatabaseRotationSingleUserSecurityGroup808C6CA2\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"OracleStack/OracleDatabase/RotationSingleUser/SecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"Tags\": [{\"Key\": \"Name\", \"Value\": \"OracleDatabase\"}], \"VpcId\": \"vpc-aaaaaaaa\"}, \"Metadata\": {\"aws:cdk:path\": \"OracleStack/OracleDatabase/RotationSingleUser/SecurityGroup/Resource\"}}, \"OracleDatabaseRotationSingleUser04565F06\": {\"Type\": \"AWS::Serverless::Application\", \"Properties\": {\"Location\": {\"ApplicationId\": {\"Fn::FindInMap\": [\"OracleDatabaseRotationSingleUserSARMappingE9819E5F\", {\"Ref\": \"AWS::Partition\"}, \"applicationId\"]}, \"SemanticVersion\": {\"Fn::FindInMap\": [\"OracleDatabaseRotationSingleUserSARMappingE9819E5F\", {\"Ref\": \"AWS::Partition\"}, \"semanticVersion\"]}}, \"Parameters\": {\"endpoint\": {\"Fn::Join\": [\"\", [\"https://secretsmanager.\", {\"Ref\": \"AWS::Region\"}, \".\", {\"Ref\": \"AWS::URLSuffix\"}]]}, \"functionName\": \"OracleStackOracleDatabaseRotationSingleUser26FAB0EC\", \"vpcSubnetIds\": \"subnet-xxxxxxxx,subnet-yyyyyyyy,subnet-zzzzzzzz\", \"vpcSecurityGroupIds\": {\"Fn::GetAtt\": [\"OracleDatabaseRotationSingleUserSecurityGroup808C6CA2\", \"GroupId\"]}, \"excludeCharacters\": \" %+~`#$&*()|[]{}:;<>?!'/@\\\"\\\\"}, \"Tags\": {\"Name\": \"OracleDatabase\"}}, \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\", \"Metadata\": {\"aws:cdk:path\": \"OracleStack/OracleDatabase/RotationSingleUser/Resource\"}}, \"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}, \"Metadata\": {\"aws:cdk:path\": \"OracleStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource\"}}, \"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": [\"logs:PutRetentionPolicy\", \"logs:DeleteRetentionPolicy\"], \"Effect\": \"Allow\", \"Resource\": \"*\"}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB\", \"Roles\": [{\"Ref\": \"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB\"}]}, \"Metadata\": {\"aws:cdk:path\": \"OracleStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource\"}}, \"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Handler\": \"index.handler\", \"Runtime\": {\"Fn::FindInMap\": [\"DefaultCrNodeVersionMap\", {\"Ref\": \"AWS::Region\"}, \"value\"]}, \"Code\": {\"S3Bucket\": {\"Fn::Sub\": \"cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}\"}, \"S3Key\": \"5fa1330271b8967d9254ba2d4a07144f8acefe8b77e6d6bba38261373a50d5f8.zip\"}, \"Role\": {\"Fn::GetAtt\": [\"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB\", \"Arn\"]}}, \"DependsOn\": [\"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB\", \"LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB\"], \"Metadata\": {\"aws:cdk:path\": \"OracleStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource\", \"aws:asset:path\": \"asset.5fa1330271b8967d9254ba2d4a07144f8acefe8b77e6d6bba38261373a50d5f8\", \"aws:asset:is-bundled\": false, \"aws:asset:property\": \"Code\"}}, \"CDKMetadata\": {\"Type\": \"AWS::CDK::Metadata\", \"Properties\": {\"Analytics\": \"v2:deflate64:H4sIAAAAAAAA/31STU/DMAz9LdyzAOPArvsQaBKIqeM+uanJsrVJFSegaep/x0kpFCZxsv38nvPiZCpn9/LmCj5ooqrjpDalPG8DqKMokFz0CgX3dmdUU26git6E06N3sRXLN/s/sLbaI1EnfEUsjqXF8M1cLcbABjw0GNCP+n+wFQQogXBtKYBlX5k0VJ0gVB4DNWBBo89muf4ylbI+vILXGOaB77hv0I4IF53CBQjG2a3aYxXrfOIFNqxp42qjTpnyG+mHD7pOGGjkuXDDOI4/0j7rRO00ySenC76+TTJBrGLCvG2ZkSeJGpqyAvkQrUr1gncj6G4HRLwGOU+Ba7mI6oghdbuxu5Q/Q9saq0Xm8qvrVDD+EkMb82aWzlam921dhfJA1++3MznlL3MgYyY+sr0GZdHHT2BM8KZOAgAA\"}, \"Metadata\": {\"aws:cdk:path\": \"OracleStack/CDKMetadata/Default\"}, \"Condition\": \"CDKMetadataAvailable\"}}, \"Mappings\": {\"OracleDatabaseRotationSingleUserSARMappingE9819E5F\": {\"aws\": {\"applicationId\": \"arn:aws:serverlessrepo:us-east-1:297356227824:applications/SecretsManagerRDSOracleRotationSingleUser\", \"semanticVersion\": \"1.1.225\"}, \"aws-cn\": {\"applicationId\": \"arn:aws-cn:serverlessrepo:cn-north-1:193023089310:applications/SecretsManagerRDSOracleRotationSingleUser\", \"semanticVersion\": \"1.1.37\"}, \"aws-us-gov\": {\"applicationId\": \"arn:aws-us-gov:serverlessrepo:us-gov-west-1:023102451235:applications/SecretsManagerRDSOracleRotationSingleUser\", \"semanticVersion\": \"1.1.93\"}}, \"DefaultCrNodeVersionMap\": {\"af-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-east-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-northeast-3\": {\"value\": \"nodejs16.x\"}, \"ap-south-1\": {\"value\": \"nodejs16.x\"}, \"ap-south-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-1\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-2\": {\"value\": \"nodejs16.x\"}, \"ap-southeast-3\": {\"value\": \"nodejs16.x\"}, \"ca-central-1\": {\"value\": \"nodejs16.x\"}, \"cn-north-1\": {\"value\": \"nodejs16.x\"}, \"cn-northwest-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-1\": {\"value\": \"nodejs16.x\"}, \"eu-central-2\": {\"value\": \"nodejs16.x\"}, \"eu-north-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-1\": {\"value\": \"nodejs16.x\"}, \"eu-south-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-1\": {\"value\": \"nodejs16.x\"}, \"eu-west-2\": {\"value\": \"nodejs16.x\"}, \"eu-west-3\": {\"value\": \"nodejs16.x\"}, \"me-central-1\": {\"value\": \"nodejs16.x\"}, \"me-south-1\": {\"value\": \"nodejs16.x\"}, \"sa-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-1\": {\"value\": \"nodejs16.x\"}, \"us-east-2\": {\"value\": \"nodejs16.x\"}, \"us-gov-east-1\": {\"value\": \"nodejs16.x\"}, \"us-gov-west-1\": {\"value\": \"nodejs16.x\"}, \"us-iso-east-1\": {\"value\": \"nodejs14.x\"}, \"us-iso-west-1\": {\"value\": \"nodejs14.x\"}, \"us-isob-east-1\": {\"value\": \"nodejs14.x\"}, \"us-west-1\": {\"value\": \"nodejs16.x\"}, \"us-west-2\": {\"value\": \"nodejs16.x\"}}}, \"Outputs\": {\"OracleEndpoint\": {\"Value\": {\"Fn::GetAtt\": [\"OracleDatabaseC1283788\", \"Endpoint.Address\"]}, \"Export\": {\"Name\": \"OracleEndPoint\"}}, \"OracleUserName\": {\"Value\": \"dbadmin\", \"Export\": {\"Name\": \"OracleUserName\"}}, \"OracleDbName\": {\"Value\": \"sampledb\", \"Export\": {\"Name\": \"OracleDbName\"}}}, \"Conditions\": {\"CDKMetadataAvailable\": {\"Fn::Or\": [{\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"af-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ca-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-northwest-1\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-3\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"me-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"sa-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-2\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-2\"]}]}]}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import {\n  CfnOutput,\n  Stack,\n  StackProps,\n  Tags,\n  App,\n  Fn,\n  Duration,\n  RemovalPolicy,\n} from 'aws-cdk-lib';\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as logs from 'aws-cdk-lib/aws-logs';\nimport * as rds from 'aws-cdk-lib/aws-rds';\nimport * as secretsmanager from 'aws-cdk-lib/aws-secretsmanager';\nimport { Construct } from 'constructs';\n\nexport interface OracleProps extends StackProps {\n\n  /**\n   * VPC Id\n   * @type {string}\n   * @memberof OracleProps\n   */\n  readonly vpcId?: string;\n\n  /**\n   * List of Subnet\n   * @type {string[]}\n   * @memberof OracleProps\n   */\n  readonly subnetIds?: string[];\n\n\n  /**\n   * provide the name of the database\n   * @type {string}\n   * @memberof OracleProps\n   */\n  readonly dbName?: string;\n\n  /**\n   *\n   * ec2.InstanceType.of(ec2.InstanceClass.BURSTABLE3, ec2.InstanceSize.LARGE)\n   * @type {*}\n   * @memberof OracleProps\n   * @default ec2.InstanceType.of(ec2.InstanceClass.BURSTABLE3, ec2.InstanceSize.LARGE)\n   */\n  readonly instanceType?: any;\n\n  /**\n   * provide the version of the database (rds.OracleEngineVersion.VER_19_0_0_0_2021_04_R1)\n   * @type {*}\n   * @memberof OracleProps\n   * @default rds.OracleEngineVersion.VER_19_0_0_0_2021_04_R1\n   */\n  readonly engineVersion?: any;\n\n  /**\n   * user name of the database\n   * @type {str}\n   * @memberof OracleProps\n   * @default dbadmin\n   */\n  readonly oracleUsername?: string;\n\n  /**\n   * backup retention days for example 14\n   * @type {number}\n   * @memberof OracleProps\n   * @default 14\n   */\n  readonly backupRetentionDays?: number;\n\n  /**\n   * backup window time 00:15-01:15\n   * @type {string}\n   * @memberof OracleProps\n   * @default 00:15-01:15\n   */\n\n  readonly backupWindow?: string;\n\n  /**\n   *\n   * maintenance time Sun:23:45-Mon:00:15\n   * @type {string}\n   * @memberof OracleProps\n   * @default Sun:23:45-Mon:00:15\n   */\n  readonly preferredMaintenanceWindow?: string;\n\n  /**\n   *\n   * list of ingress sources\n   * @type {any []}\n   * @memberof OracleProps\n   */\n  readonly ingressSources?: any[];\n}\n\nexport class Oracle extends Stack {\n  constructor(scope: Construct, id: string, props: OracleProps) {\n    super(scope, id);\n\n    // default database username\n    var oracleUsername = \"dbadmin\";\n    if (typeof props.oracleUsername !== 'undefined') {\n      oracleUsername = \"dbadmin\";\n    }\n    var ingressSources = [];\n    if (typeof props.ingressSources !== 'undefined') {\n      ingressSources = props.ingressSources;\n    }\n    var engineVersion = rds.OracleEngineVersion.VER_19_0_0_0_2021_04_R1;\n    if (typeof props.engineVersion !== 'undefined') {\n      engineVersion = props.engineVersion;\n    }\n\n    const azs = Fn.getAzs();\n\n    // vpc\n    const vpc = ec2.Vpc.fromVpcAttributes(this, 'ExistingVPC', {\n      vpcId: props.vpcId!,\n      availabilityZones: azs,\n    });\n\n    // Subnets\n    const subnets: any[] = [];\n\n    for (let subnetId of props.subnetIds!) {\n      const subid = subnetId\n        .replace('_', '')\n        .replace(' ', '');\n      subnets.push(\n        ec2.Subnet.fromSubnetAttributes(this, subid, {\n          subnetId: subid,\n        }),\n      );\n    }\n\n    const vpcSubnets: ec2.SubnetSelection = {\n      subnets: subnets,\n    };\n\n    const allAll = ec2.Port.allTraffic();\n    const tcp1521 = ec2.Port.tcpRange(1521, 1521);\n    const tcp1526 = ec2.Port.tcpRange(1526, 1526);\n    const tcp1575 = ec2.Port.tcpRange(1575, 1575);\n\n    const dbsg = new ec2.SecurityGroup(this, 'DatabaseSecurityGroup', {\n      vpc: vpc,\n      allowAllOutbound: true,\n      description: id + 'Database',\n      securityGroupName: id + 'Database',\n    });\n\n    dbsg.addIngressRule(dbsg, allAll, 'all from self');\n    dbsg.addEgressRule(ec2.Peer.ipv4('0.0.0.0/0'), allAll, 'all out');\n\n    const oracleConnectionPorts = [\n      { port: tcp1521, description: 'tcp1521 Oracle' },\n      { port: tcp1526, description: 'tcp1526 Oracle' },\n      { port: tcp1575, description: 'tcp1575 Oracle' },\n    ];\n\n    for (let ingressSource of ingressSources!) {\n      for (let c of oracleConnectionPorts) {\n        dbsg.addIngressRule(ingressSource, c.port, c.description);\n      }\n    }\n\n    const dbSubnetGroup = new rds.SubnetGroup(this, 'DatabaseSubnetGroup', {\n      vpc: vpc,\n      description: id + 'subnet group',\n      vpcSubnets: vpcSubnets,\n      subnetGroupName: id + 'subnet group',\n    });\n\n    const oracleSecret = new secretsmanager.Secret(this, 'OracleCredentials', {\n      secretName: props.dbName + 'OracleCredentials',\n      description: props.dbName + 'Oracle Database Crendetials',\n      generateSecretString: {\n        excludeCharacters: \"\\\"@/\\\\ '\",\n        generateStringKey: 'password',\n        passwordLength: 30,\n        secretStringTemplate: JSON.stringify({username: oracleUsername}),\n      },\n    });\n\n    const oracleCredentials = rds.Credentials.fromSecret(\n      oracleSecret,\n      oracleUsername,\n    );\n\n    const dbParameterGroup = new rds.ParameterGroup(this, 'ParameterGroup', {\n      engine: rds.DatabaseInstanceEngine.oracleEe({\n        version: engineVersion,\n      }),\n      parameters: { open_cursors: '2500' },\n    });\n\n    const oracleInstance = new rds.DatabaseInstance(this, 'OracleDatabase', {\n      databaseName: props.dbName,\n      instanceIdentifier: props.dbName,\n      credentials: oracleCredentials,\n      engine: rds.DatabaseInstanceEngine.oracleEe({\n        version: engineVersion,\n      }),\n      backupRetention: Duration.days(7),\n      allocatedStorage: 20,\n      securityGroups: [dbsg],\n      licenseModel: rds.LicenseModel.BRING_YOUR_OWN_LICENSE,\n      allowMajorVersionUpgrade: true,\n      autoMinorVersionUpgrade: true,\n      instanceType: props.instanceType,\n      vpcSubnets: vpcSubnets,\n      vpc: vpc,\n      removalPolicy: RemovalPolicy.RETAIN,\n      multiAz: true,\n      storageEncrypted: true,\n      monitoringInterval: Duration.seconds(60),\n      enablePerformanceInsights: true,\n      cloudwatchLogsExports: ['trace', 'audit', 'alert', 'listener'],\n      cloudwatchLogsRetention: logs.RetentionDays.ONE_MONTH,\n      parameterGroup: dbParameterGroup,\n      subnetGroup: dbSubnetGroup,\n      preferredBackupWindow: props.backupWindow,\n      preferredMaintenanceWindow: props.preferredMaintenanceWindow,\n      publiclyAccessible: false,\n    });\n\n    oracleInstance.addRotationSingleUser();\n\n    // Tags\n    Tags.of(oracleInstance).add('Name', 'OracleDatabase', {\n      priority: 300,\n    });\n\n\n    new CfnOutput(this, 'OracleEndpoint', {\n      exportName: 'OracleEndPoint',\n      value: oracleInstance.dbInstanceEndpointAddress,\n    });\n\n    new CfnOutput(this, 'OracleUserName', {\n      exportName: 'OracleUserName',\n      value: oracleUsername,\n    });\n\n    new CfnOutput(this, 'OracleDbName', {\n      exportName: 'OracleDbName',\n      value: props.dbName!,\n    });\n  }\n}\n\nconst app = new App();\n\nnew Oracle(app, 'OracleStack', {\n  env:{region:\"us-east-2\"}, description:\"Oracle Stack\",\n  vpcId:\"vpc-aaaaaaaa\",\n  subnetIds:[\"subnet-xxxxxxxx\", \"subnet-yyyyyyyy\", \"subnet-zzzzzzzz\"],\n  dbName:\"sampledb\"\n});\n"}
{ "prompt": "{\"Resources\": {\"Other34654A52\": {\"Type\": \"AWS::S3::Bucket\", \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\", \"Metadata\": {\"aws:cdk:path\": \"resource-overrides/Other/Resource\"}}, \"MyBucketF68F3FF0\": {\"Type\": \"AWS::S3::Bucketeer\", \"Properties\": {\"AnalyticsConfigurations\": [{\"Id\": \"config1\", \"StorageClassAnalysis\": {\"DataExport\": {\"Destination\": {\"BucketArn\": {\"Fn::GetAtt\": [\"Other34654A52\", \"Arn\"]}, \"Format\": \"html\"}, \"OutputSchemaVersion\": \"1\"}}}], \"BucketEncryption\": {\"ServerSideEncryptionConfiguration\": [{\"EncryptEverythingAndAlways\": true}]}, \"CorsConfiguration\": {\"Custom\": 123, \"CorsRules\": [{\"AllowedMethods\": [\"GET\"], \"AllowedOrigins\": [\"*\"]}]}, \"LoggingConfiguration\": {\"DestinationBucketName\": {\"Ref\": \"Other34654A52\"}}, \"VersioningConfiguration\": {\"Status\": \"NewStatus\"}, \"Token\": {\"Fn::GetAtt\": [\"Other34654A52\", \"Arn\"]}}, \"DependsOn\": [\"Other34654A52\"], \"UpdatePolicy\": {\"AutoScalingRollingUpdate\": {\"PauseTime\": \"390\"}}, \"UpdateReplacePolicy\": \"Retain\", \"DeletionPolicy\": \"Retain\", \"Transform\": \"Boom\"}, \"VPCB9E5F0B4\": {\"Type\": \"AWS::EC2::VPC\", \"Properties\": {\"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": true, \"EnableDnsSupport\": true, \"InstanceTenancy\": \"default\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"resource-overrides/VPC\"}]}, \"Metadata\": {\"aws:cdk:path\": \"resource-overrides/VPC/Resource\"}}, \"VPCPublicSubnet1SubnetB4246D30\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.0.0/17\", \"MapPublicIpOnLaunch\": true, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Public\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Public\"}, {\"Key\": \"Name\", \"Value\": \"resource-overrides/VPC/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"resource-overrides/VPC/PublicSubnet1/Subnet\"}}, \"VPCPublicSubnet1RouteTableFEE4B781\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"resource-overrides/VPC/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"resource-overrides/VPC/PublicSubnet1/RouteTable\"}}, \"VPCPublicSubnet1RouteTableAssociation0B0896DC\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}}, \"Metadata\": {\"aws:cdk:path\": \"resource-overrides/VPC/PublicSubnet1/RouteTableAssociation\"}}, \"VPCPublicSubnet1DefaultRoute91CEF279\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPublicSubnet1RouteTableFEE4B781\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"GatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"DependsOn\": [\"VPCVPCGW99B986DC\"], \"Metadata\": {\"aws:cdk:path\": \"resource-overrides/VPC/PublicSubnet1/DefaultRoute\"}}, \"VPCPublicSubnet1EIP6AD938E8\": {\"Type\": \"AWS::EC2::EIP\", \"Properties\": {\"Domain\": \"vpc\", \"Tags\": [{\"Key\": \"Name\", \"Value\": \"resource-overrides/VPC/PublicSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"resource-overrides/VPC/PublicSubnet1/EIP\"}}, \"VPCPublicSubnet1NATGatewayE0556630\": {\"Type\": \"AWS::EC2::NatGateway\", \"Properties\": {\"SubnetId\": {\"Ref\": \"VPCPublicSubnet1SubnetB4246D30\"}, \"AllocationId\": {\"Fn::GetAtt\": [\"VPCPublicSubnet1EIP6AD938E8\", \"AllocationId\"]}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"resource-overrides/VPC/PublicSubnet1\"}]}, \"DependsOn\": [\"VPCPublicSubnet1DefaultRoute91CEF279\", \"VPCPublicSubnet1RouteTableAssociation0B0896DC\"], \"Metadata\": {\"aws:cdk:path\": \"resource-overrides/VPC/PublicSubnet1/NATGateway\"}}, \"VPCPrivateSubnet1Subnet8BCA10E0\": {\"Type\": \"AWS::EC2::Subnet\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"AvailabilityZone\": {\"Fn::Select\": [0, {\"Fn::GetAZs\": \"\"}]}, \"CidrBlock\": \"10.0.128.0/17\", \"MapPublicIpOnLaunch\": false, \"Tags\": [{\"Key\": \"aws-cdk:subnet-name\", \"Value\": \"Private\"}, {\"Key\": \"aws-cdk:subnet-type\", \"Value\": \"Private\"}, {\"Key\": \"Name\", \"Value\": \"resource-overrides/VPC/PrivateSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"resource-overrides/VPC/PrivateSubnet1/Subnet\"}}, \"VPCPrivateSubnet1RouteTableBE8A6027\": {\"Type\": \"AWS::EC2::RouteTable\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"resource-overrides/VPC/PrivateSubnet1\"}]}, \"Metadata\": {\"aws:cdk:path\": \"resource-overrides/VPC/PrivateSubnet1/RouteTable\"}}, \"VPCPrivateSubnet1RouteTableAssociation347902D1\": {\"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"SubnetId\": {\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}}, \"Metadata\": {\"aws:cdk:path\": \"resource-overrides/VPC/PrivateSubnet1/RouteTableAssociation\"}}, \"VPCPrivateSubnet1DefaultRouteAE1D6490\": {\"Type\": \"AWS::EC2::Route\", \"Properties\": {\"RouteTableId\": {\"Ref\": \"VPCPrivateSubnet1RouteTableBE8A6027\"}, \"DestinationCidrBlock\": \"0.0.0.0/0\", \"NatGatewayId\": {\"Ref\": \"VPCPublicSubnet1NATGatewayE0556630\"}}, \"Metadata\": {\"aws:cdk:path\": \"resource-overrides/VPC/PrivateSubnet1/DefaultRoute\"}}, \"VPCIGWB7E252D3\": {\"Type\": \"AWS::EC2::InternetGateway\", \"Properties\": {\"Tags\": [{\"Key\": \"Name\", \"Value\": \"resource-overrides/VPC\"}]}, \"Metadata\": {\"aws:cdk:path\": \"resource-overrides/VPC/IGW\"}}, \"VPCVPCGW99B986DC\": {\"Type\": \"AWS::EC2::VPCGatewayAttachment\", \"Properties\": {\"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}, \"InternetGatewayId\": {\"Ref\": \"VPCIGWB7E252D3\"}}, \"Metadata\": {\"aws:cdk:path\": \"resource-overrides/VPC/VPCGW\"}}, \"ASGInstanceSecurityGroup0525485D\": {\"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": {\"GroupDescription\": \"resource-overrides/ASG/InstanceSecurityGroup\", \"SecurityGroupEgress\": [{\"CidrIp\": \"0.0.0.0/0\", \"Description\": \"Allow all outbound traffic by default\", \"IpProtocol\": \"-1\"}], \"Tags\": [{\"Key\": \"Name\", \"Value\": \"resource-overrides/ASG\"}], \"VpcId\": {\"Ref\": \"VPCB9E5F0B4\"}}, \"Metadata\": {\"aws:cdk:path\": \"resource-overrides/ASG/InstanceSecurityGroup/Resource\"}}, \"ASGInstanceRoleE263A41B\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"ec2.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"Tags\": [{\"Key\": \"Name\", \"Value\": \"resource-overrides/ASG\"}]}, \"Metadata\": {\"aws:cdk:path\": \"resource-overrides/ASG/InstanceRole/Resource\"}}, \"ASGInstanceProfile0A2834D7\": {\"Type\": \"AWS::IAM::InstanceProfile\", \"Properties\": {\"Roles\": [{\"Ref\": \"ASGInstanceRoleE263A41B\"}]}, \"Metadata\": {\"aws:cdk:path\": \"resource-overrides/ASG/InstanceProfile\"}}, \"ASGLaunchConfigC00AF12B\": {\"Type\": \"AWS::AutoScaling::LaunchConfiguration\", \"Properties\": {\"ImageId\": {\"Ref\": \"SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter\"}, \"InstanceType\": \"m4.xlarge\", \"IamInstanceProfile\": {\"Ref\": \"ASGInstanceProfile0A2834D7\"}, \"SecurityGroups\": [{\"Fn::GetAtt\": [\"ASGInstanceSecurityGroup0525485D\", \"GroupId\"]}], \"UserData\": {\"Fn::Base64\": \"#!/bin/bash\"}, \"Foo\": {\"Bar\": \"Hello\"}}, \"DependsOn\": [\"ASGInstanceRoleE263A41B\"], \"Metadata\": {\"aws:cdk:path\": \"resource-overrides/ASG/LaunchConfig\"}}, \"ASG46ED3070\": {\"Type\": \"AWS::AutoScaling::AutoScalingGroup\", \"Properties\": {\"MaxSize\": \"1\", \"MinSize\": \"1\", \"LaunchConfigurationName\": {\"Ref\": \"ASGLaunchConfigC00AF12B\"}, \"Tags\": [{\"Key\": \"Name\", \"PropagateAtLaunch\": true, \"Value\": \"resource-overrides/ASG\"}], \"VPCZoneIdentifier\": [{\"Ref\": \"VPCPrivateSubnet1Subnet8BCA10E0\"}]}, \"UpdatePolicy\": {\"AutoScalingScheduledAction\": {\"IgnoreUnmodifiedGroupSizeProperties\": true}}, \"Metadata\": {\"aws:cdk:path\": \"resource-overrides/ASG/ASG\"}}, \"CDKMetadata\": {\"Type\": \"AWS::CDK::Metadata\", \"Properties\": {\"Analytics\": \"v2:deflate64:H4sIAAAAAAAA/11RwW7CMAz9lt1DtrHDuHbVhJDQFLUT18kNBkzbBCUOCFX596V0tGgnPz+/2O8pc7l4ly9PcPEzva1nDVWyKxl0LRL10/k32X0EXSOLfGcGFAXquew2J91zG5ULFaqGdBkqM+gmVNjA+A1VgxM/cZn3VhMwWTOKe/C5Un35Al4C4wWuQjk6JzgtXhlGl/BdMDj56zJOCQ4tGhYl6uCIr0tnw+nm4ZGIAgJbr6Ehs5ddlppyaEb9GoLRh9yaHe2DG73+l0ZB0MqusEPSe10Zz2A0Kmd31GCMokBvg9O3qQIHLaYgtycPg3RuS/2pKIzdojz65/PrQs7TTx090cwFw9SiLIb6C0rNVm/FAQAA\"}, \"Metadata\": {\"aws:cdk:path\": \"resource-overrides/CDKMetadata/Default\"}, \"Condition\": \"CDKMetadataAvailable\"}}, \"Parameters\": {\"SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter\": {\"Type\": \"AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>\", \"Default\": \"/aws/service/ami-amazon-linux-latest/amzn-ami-hvm-x86_64-gp2\"}, \"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Conditions\": {\"CDKMetadataAvailable\": {\"Fn::Or\": [{\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"af-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ca-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-northwest-1\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-3\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"me-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"sa-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-2\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-2\"]}]}]}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import autoscaling = require('aws-cdk-lib/aws-autoscaling');\nimport ec2 = require('aws-cdk-lib/aws-ec2');\nimport s3 = require('aws-cdk-lib/aws-s3');\nimport cdk = require('aws-cdk-lib');\nimport assert = require('assert');\n\nclass ResourceOverridesExample extends cdk.Stack {\n    constructor(scope: cdk.App, id: string) {\n        super(scope, id);\n\n        const otherBucket = new s3.Bucket(this, 'Other');\n\n        const bucket = new s3.Bucket(this, 'MyBucket', {\n            versioned: true,\n            encryption: s3.BucketEncryption.KMS_MANAGED\n        });\n\n        const bucketResource2 = bucket.node.defaultChild as s3.CfnBucket;\n        bucketResource2.addPropertyOverride('BucketEncryption.ServerSideEncryptionConfiguration.0.EncryptEverythingAndAlways', true);\n        bucketResource2.addPropertyDeletionOverride('BucketEncryption.ServerSideEncryptionConfiguration.0.ServerSideEncryptionByDefault');\n\n        //\n        // Accessing the L1 bucket resource from an L2 bucket\n        //\n\n        const bucketResource = bucket.node.defaultChild as s3.CfnBucket;\n        const anotherWay = bucket.node.children.find(c => (c as cdk.CfnResource).cfnResourceType === 'AWS::S3::Bucket') as s3.CfnBucket;\n        assert.equal(bucketResource, anotherWay);\n\n        //\n        // This is how to specify resource options such as dependencies, metadata, update policy\n        //\n\n        bucketResource.node.addDependency(otherBucket.node.defaultChild as cdk.CfnResource);\n        bucketResource.cfnOptions.metadata = { MetadataKey: 'MetadataValue' };\n        bucketResource.cfnOptions.updatePolicy = {\n            autoScalingRollingUpdate: {\n                pauseTime: '390'\n            }\n        };\n\n        //\n        // This is how to specify \"raw\" overrides at the __resource__ level\n        //\n\n        bucketResource.addOverride('Type', 'AWS::S3::Bucketeer'); // even \"Type\" can be overridden\n        bucketResource.addOverride('Transform', 'Boom');\n        bucketResource.addOverride('Properties.CorsConfiguration', {\n            Custom: 123,\n            Bar: [ 'A', 'B' ]\n        });\n\n        // addPropertyOverride simply allows you to omit the \"Properties.\" prefix\n        bucketResource.addPropertyOverride('VersioningConfiguration.Status', 'NewStatus');\n        // bucketResource.addPropertyOverride('Foo', null); // FIXME causes filterUndefined to error\n        bucketResource.addPropertyOverride('Token', otherBucket.bucketArn); // use tokens\n        bucketResource.addPropertyOverride('LoggingConfiguration.DestinationBucketName', otherBucket.bucketName);\n\n        // Assign completely new property value\n        bucketResource.analyticsConfigurations = [\n            {\n                id: 'config1',\n                storageClassAnalysis: {\n                    dataExport: {\n                        outputSchemaVersion: '1',\n                        destination: {\n                            format: 'html',\n                            bucketArn: otherBucket.bucketArn // use tokens freely\n                        }\n                    }\n                }\n            }\n        ];\n\n        // Or selectively override parts of it\n        bucketResource.addPropertyOverride('CorsConfiguration.CorsRules', [\n            {\n                AllowedMethods: [ 'GET' ],\n                AllowedOrigins: [ '*' ]\n            }\n        ]);\n\n        //\n        // It is also possible to request a deletion of a value by either assigning\n        // `undefined` (in supported languages) or use the `addDeletionOverride` method\n        //\n\n        bucketResource.addDeletionOverride('Metadata');\n        bucketResource.addPropertyDeletionOverride('CorsConfiguration.Bar');\n\n        const vpc = new ec2.Vpc(this, 'VPC', { maxAzs: 1 });\n        const asg = new autoscaling.AutoScalingGroup(this, 'ASG', {\n            instanceType: ec2.InstanceType.of(ec2.InstanceClass.M4, ec2.InstanceSize.XLARGE),\n            machineImage: new ec2.AmazonLinuxImage(),\n            vpc\n        });\n\n        //\n        // The default child resource is called `Resource`, but secondary resources, such as\n        // an Auto Scaling Group's launch configuration might have a different ID. You will likely\n        // need to consule the codebase or use the `.map.find` method above\n        //\n\n        const lc = asg.node.findChild('LaunchConfig') as autoscaling.CfnLaunchConfiguration;\n        lc.addPropertyOverride('Foo.Bar', 'Hello');\n    }\n}\n\nconst app = new cdk.App();\nnew ResourceOverridesExample(app, 'resource-overrides');\napp.synth();\n"}
{ "prompt": "{\"Resources\": {\"CheckLambdaServiceRole74B86E23\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}, \"Metadata\": {\"aws:cdk:path\": \"aws-stepfunctions-integ/CheckLambda/ServiceRole/Resource\"}}, \"CheckLambda9CBBF9BA\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"def main(event, context):\n    if event[\\\"status\\\"] == \\\"SUCCEEDED\\\":\n        return {\\\"status\\\": \\\"SUCCEEDED\\\", \\\"id\\\": event[\\\"id\\\"]}\n    else:\n        return {\\\"status\\\": \\\"FAILED\\\", \\\"id\\\": event[\\\"id\\\"]}\n\"}, \"Role\": {\"Fn::GetAtt\": [\"CheckLambdaServiceRole74B86E23\", \"Arn\"]}, \"Handler\": \"index.main\", \"Runtime\": \"python3.9\", \"Timeout\": 30}, \"DependsOn\": [\"CheckLambdaServiceRole74B86E23\"], \"Metadata\": {\"aws:cdk:path\": \"aws-stepfunctions-integ/CheckLambda/Resource\"}}, \"SubmitLambdaServiceRole98C85C39\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}, \"ManagedPolicyArns\": [{\"Fn::Join\": [\"\", [\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"]]}]}, \"Metadata\": {\"aws:cdk:path\": \"aws-stepfunctions-integ/SubmitLambda/ServiceRole/Resource\"}}, \"SubmitLambda8054545E\": {\"Type\": \"AWS::Lambda::Function\", \"Properties\": {\"Code\": {\"ZipFile\": \"def main(event, context):\n    print('The job is submitted successfully!')\n    # Return the handling result\n    return {\n        \\\"id\\\": event['id'],\n        \\\"status\\\": \\\"SUCCEEDED\\\",\n    }\n\"}, \"Role\": {\"Fn::GetAtt\": [\"SubmitLambdaServiceRole98C85C39\", \"Arn\"]}, \"Handler\": \"index.main\", \"Runtime\": \"python3.9\", \"Timeout\": 30}, \"DependsOn\": [\"SubmitLambdaServiceRole98C85C39\"], \"Metadata\": {\"aws:cdk:path\": \"aws-stepfunctions-integ/SubmitLambda/Resource\"}}, \"CronStateMachineRoleFE85923B\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": {\"Fn::FindInMap\": [\"ServiceprincipalMap\", {\"Ref\": \"AWS::Region\"}, \"states\"]}}}], \"Version\": \"2012-10-17\"}}, \"Metadata\": {\"aws:cdk:path\": \"aws-stepfunctions-integ/CronStateMachine/Role/Resource\"}}, \"CronStateMachineRoleDefaultPolicy427EC0FE\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"lambda:InvokeFunction\", \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"SubmitLambda8054545E\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"SubmitLambda8054545E\", \"Arn\"]}, \":*\"]]}]}, {\"Action\": \"lambda:InvokeFunction\", \"Effect\": \"Allow\", \"Resource\": [{\"Fn::GetAtt\": [\"CheckLambda9CBBF9BA\", \"Arn\"]}, {\"Fn::Join\": [\"\", [{\"Fn::GetAtt\": [\"CheckLambda9CBBF9BA\", \"Arn\"]}, \":*\"]]}]}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"CronStateMachineRoleDefaultPolicy427EC0FE\", \"Roles\": [{\"Ref\": \"CronStateMachineRoleFE85923B\"}]}, \"Metadata\": {\"aws:cdk:path\": \"aws-stepfunctions-integ/CronStateMachine/Role/DefaultPolicy/Resource\"}}, \"CronStateMachine7E50955B\": {\"Type\": \"AWS::StepFunctions::StateMachine\", \"Properties\": {\"RoleArn\": {\"Fn::GetAtt\": [\"CronStateMachineRoleFE85923B\", \"Arn\"]}, \"DefinitionString\": {\"Fn::Join\": [\"\", [\"{\\\"StartAt\\\":\\\"Submit Job\\\",\\\"States\\\":{\\\"Submit Job\\\":{\\\"Next\\\":\\\"Wait X Seconds\\\",\\\"Retry\\\":[{\\\"ErrorEquals\\\":[\\\"Lambda.ServiceException\\\",\\\"Lambda.AWSLambdaException\\\",\\\"Lambda.SdkClientException\\\"],\\\"IntervalSeconds\\\":2,\\\"MaxAttempts\\\":6,\\\"BackoffRate\\\":2}],\\\"Type\\\":\\\"Task\\\",\\\"OutputPath\\\":\\\"$.Payload\\\",\\\"Resource\\\":\\\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":states:::lambda:invoke\\\",\\\"Parameters\\\":{\\\"FunctionName\\\":\\\"\", {\"Fn::GetAtt\": [\"SubmitLambda8054545E\", \"Arn\"]}, \"\\\",\\\"Payload.$\\\":\\\"$\\\"}},\\\"Wait X Seconds\\\":{\\\"Type\\\":\\\"Wait\\\",\\\"Seconds\\\":30,\\\"Next\\\":\\\"Get Job Status\\\"},\\\"Get Job Status\\\":{\\\"Next\\\":\\\"Job Complete?\\\",\\\"Retry\\\":[{\\\"ErrorEquals\\\":[\\\"Lambda.ServiceException\\\",\\\"Lambda.AWSLambdaException\\\",\\\"Lambda.SdkClientException\\\"],\\\"IntervalSeconds\\\":2,\\\"MaxAttempts\\\":6,\\\"BackoffRate\\\":2}],\\\"Type\\\":\\\"Task\\\",\\\"OutputPath\\\":\\\"$.Payload\\\",\\\"Resource\\\":\\\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":states:::lambda:invoke\\\",\\\"Parameters\\\":{\\\"FunctionName\\\":\\\"\", {\"Fn::GetAtt\": [\"CheckLambda9CBBF9BA\", \"Arn\"]}, \"\\\",\\\"Payload.$\\\":\\\"$\\\"}},\\\"Job Complete?\\\":{\\\"Type\\\":\\\"Choice\\\",\\\"Choices\\\":[{\\\"Variable\\\":\\\"$.status\\\",\\\"StringEquals\\\":\\\"FAILED\\\",\\\"Next\\\":\\\"Job Failed\\\"},{\\\"Variable\\\":\\\"$.status\\\",\\\"StringEquals\\\":\\\"SUCCEEDED\\\",\\\"Next\\\":\\\"Get Final Job Status\\\"}],\\\"Default\\\":\\\"Wait X Seconds\\\"},\\\"Job Failed\\\":{\\\"Type\\\":\\\"Fail\\\",\\\"Error\\\":\\\"DescribeJob returned FAILED\\\",\\\"Cause\\\":\\\"AWS Batch Job Failed\\\"},\\\"Get Final Job Status\\\":{\\\"End\\\":true,\\\"Retry\\\":[{\\\"ErrorEquals\\\":[\\\"Lambda.ServiceException\\\",\\\"Lambda.AWSLambdaException\\\",\\\"Lambda.SdkClientException\\\"],\\\"IntervalSeconds\\\":2,\\\"MaxAttempts\\\":6,\\\"BackoffRate\\\":2}],\\\"Type\\\":\\\"Task\\\",\\\"OutputPath\\\":\\\"$.Payload\\\",\\\"Resource\\\":\\\"arn:\", {\"Ref\": \"AWS::Partition\"}, \":states:::lambda:invoke\\\",\\\"Parameters\\\":{\\\"FunctionName\\\":\\\"\", {\"Fn::GetAtt\": [\"CheckLambda9CBBF9BA\", \"Arn\"]}, \"\\\",\\\"Payload.$\\\":\\\"$\\\"}}},\\\"TimeoutSeconds\\\":300}\"]]}}, \"DependsOn\": [\"CronStateMachineRoleDefaultPolicy427EC0FE\", \"CronStateMachineRoleFE85923B\"], \"UpdateReplacePolicy\": \"Delete\", \"DeletionPolicy\": \"Delete\", \"Metadata\": {\"aws:cdk:path\": \"aws-stepfunctions-integ/CronStateMachine/Resource\"}}, \"CronStateMachineEventsRoleA3F136B0\": {\"Type\": \"AWS::IAM::Role\", \"Properties\": {\"AssumeRolePolicyDocument\": {\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"events.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}}, \"Metadata\": {\"aws:cdk:path\": \"aws-stepfunctions-integ/CronStateMachine/EventsRole/Resource\"}}, \"CronStateMachineEventsRoleDefaultPolicyCB221FDF\": {\"Type\": \"AWS::IAM::Policy\", \"Properties\": {\"PolicyDocument\": {\"Statement\": [{\"Action\": \"states:StartExecution\", \"Effect\": \"Allow\", \"Resource\": {\"Ref\": \"CronStateMachine7E50955B\"}}], \"Version\": \"2012-10-17\"}, \"PolicyName\": \"CronStateMachineEventsRoleDefaultPolicyCB221FDF\", \"Roles\": [{\"Ref\": \"CronStateMachineEventsRoleA3F136B0\"}]}, \"Metadata\": {\"aws:cdk:path\": \"aws-stepfunctions-integ/CronStateMachine/EventsRole/DefaultPolicy/Resource\"}}, \"Rule4C995B7F\": {\"Type\": \"AWS::Events::Rule\", \"Properties\": {\"ScheduleExpression\": \"cron(0 18 ? * MON-FRI *)\", \"State\": \"ENABLED\", \"Targets\": [{\"Arn\": {\"Ref\": \"CronStateMachine7E50955B\"}, \"Id\": \"Target0\", \"RoleArn\": {\"Fn::GetAtt\": [\"CronStateMachineEventsRoleA3F136B0\", \"Arn\"]}}]}, \"Metadata\": {\"aws:cdk:path\": \"aws-stepfunctions-integ/Rule/Resource\"}}, \"CDKMetadata\": {\"Type\": \"AWS::CDK::Metadata\", \"Properties\": {\"Analytics\": \"v2:deflate64:H4sIAAAAAAAA/1VQwYrCQAz9lr2nWbcXvRcEYQXpHvYocRrX2GmmONOKDPPvjq2Ce3ovj7zkJSWulrj4oKsvTNMWVg4YfwKZFrK0j5a6Q0MY14OaIE6hOuqLJxDqMNbO8kOecOesmNujnFkCH7g/Ph1+H8i3Hr+nqRsdXcv/GzD+kgRYk1ioTk4MQ04TeEvmJDrtea8T8Mgasq0enikypgQ1ezdczCy98cppI69DttT3on8J1DWMZ/85fq2wzN84e5HiMmiQjrGe8Q5/2EMGKQEAAA==\"}, \"Metadata\": {\"aws:cdk:path\": \"aws-stepfunctions-integ/CDKMetadata/Default\"}, \"Condition\": \"CDKMetadataAvailable\"}}, \"Conditions\": {\"CDKMetadataAvailable\": {\"Fn::Or\": [{\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"af-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-northeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ap-southeast-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"ca-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"cn-northwest-1\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-central-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-north-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-2\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"eu-west-3\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"me-south-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"sa-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-east-2\"]}]}, {\"Fn::Or\": [{\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-1\"]}, {\"Fn::Equals\": [{\"Ref\": \"AWS::Region\"}, \"us-west-2\"]}]}]}}, \"Mappings\": {\"ServiceprincipalMap\": {\"af-south-1\": {\"states\": \"states.af-south-1.amazonaws.com\"}, \"ap-east-1\": {\"states\": \"states.ap-east-1.amazonaws.com\"}, \"ap-northeast-1\": {\"states\": \"states.ap-northeast-1.amazonaws.com\"}, \"ap-northeast-2\": {\"states\": \"states.ap-northeast-2.amazonaws.com\"}, \"ap-northeast-3\": {\"states\": \"states.ap-northeast-3.amazonaws.com\"}, \"ap-south-1\": {\"states\": \"states.ap-south-1.amazonaws.com\"}, \"ap-south-2\": {\"states\": \"states.ap-south-2.amazonaws.com\"}, \"ap-southeast-1\": {\"states\": \"states.ap-southeast-1.amazonaws.com\"}, \"ap-southeast-2\": {\"states\": \"states.ap-southeast-2.amazonaws.com\"}, \"ap-southeast-3\": {\"states\": \"states.ap-southeast-3.amazonaws.com\"}, \"ca-central-1\": {\"states\": \"states.ca-central-1.amazonaws.com\"}, \"cn-north-1\": {\"states\": \"states.cn-north-1.amazonaws.com\"}, \"cn-northwest-1\": {\"states\": \"states.cn-northwest-1.amazonaws.com\"}, \"eu-central-1\": {\"states\": \"states.eu-central-1.amazonaws.com\"}, \"eu-central-2\": {\"states\": \"states.eu-central-2.amazonaws.com\"}, \"eu-north-1\": {\"states\": \"states.eu-north-1.amazonaws.com\"}, \"eu-south-1\": {\"states\": \"states.eu-south-1.amazonaws.com\"}, \"eu-south-2\": {\"states\": \"states.eu-south-2.amazonaws.com\"}, \"eu-west-1\": {\"states\": \"states.eu-west-1.amazonaws.com\"}, \"eu-west-2\": {\"states\": \"states.eu-west-2.amazonaws.com\"}, \"eu-west-3\": {\"states\": \"states.eu-west-3.amazonaws.com\"}, \"me-central-1\": {\"states\": \"states.me-central-1.amazonaws.com\"}, \"me-south-1\": {\"states\": \"states.me-south-1.amazonaws.com\"}, \"sa-east-1\": {\"states\": \"states.sa-east-1.amazonaws.com\"}, \"us-east-1\": {\"states\": \"states.us-east-1.amazonaws.com\"}, \"us-east-2\": {\"states\": \"states.us-east-2.amazonaws.com\"}, \"us-gov-east-1\": {\"states\": \"states.us-gov-east-1.amazonaws.com\"}, \"us-gov-west-1\": {\"states\": \"states.us-gov-west-1.amazonaws.com\"}, \"us-iso-east-1\": {\"states\": \"states.amazonaws.com\"}, \"us-iso-west-1\": {\"states\": \"states.amazonaws.com\"}, \"us-isob-east-1\": {\"states\": \"states.amazonaws.com\"}, \"us-west-1\": {\"states\": \"states.us-west-1.amazonaws.com\"}, \"us-west-2\": {\"states\": \"states.us-west-2.amazonaws.com\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "import * as cdk from 'aws-cdk-lib';\nimport * as lambda from 'aws-cdk-lib/aws-lambda';\nimport * as sfn from 'aws-cdk-lib/aws-stepfunctions';\nimport * as tasks from 'aws-cdk-lib/aws-stepfunctions-tasks';\nimport * as events from 'aws-cdk-lib/aws-events';\nimport * as targets from 'aws-cdk-lib/aws-events-targets';\nimport * as fs from 'fs'\n\nclass JobPollerStack extends cdk.Stack {\n  constructor(app: cdk.App, id: string) {\n    super(app, id);\n\n    /** ------------------ Lambda Handlers Definition ------------------ */\n\n    const getStatusLambda = new lambda.Function(this, 'CheckLambda', {\n      code: new lambda.InlineCode(fs.readFileSync('lambdas/check_status.py', { encoding: 'utf-8' })),\n      handler: 'index.main',\n      timeout: cdk.Duration.seconds(30),\n      runtime: lambda.Runtime.PYTHON_3_9,\n    });\n\n    const submitLambda = new lambda.Function(this, 'SubmitLambda', {\n      code: new lambda.InlineCode(fs.readFileSync('lambdas/submit.py', { encoding: 'utf-8' })),\n      handler: 'index.main',\n      timeout: cdk.Duration.seconds(30),\n      runtime: lambda.Runtime.PYTHON_3_9,\n    });\n\n    /** ------------------ Step functions Definition ------------------ */\n\n    const submitJob = new tasks.LambdaInvoke(this, 'Submit Job', {\n      lambdaFunction: submitLambda,\n      // Lambda's result is in the attribute `Payload`\n      outputPath: '$.Payload',\n    });\n    const waitX = new sfn.Wait(this, 'Wait X Seconds', {\n      /**\n       *  You can also implement with the path stored in the state like:\n       *  sfn.WaitTime.secondsPath('$.waitSeconds')\n       */\n      time: sfn.WaitTime.duration(cdk.Duration.seconds(30)),\n    });\n    const getStatus = new tasks.LambdaInvoke(this, 'Get Job Status', {\n      lambdaFunction: getStatusLambda,\n      outputPath: '$.Payload',\n    });\n\n    const jobFailed = new sfn.Fail(this, 'Job Failed', {\n      cause: 'AWS Batch Job Failed',\n      error: 'DescribeJob returned FAILED',\n    });\n\n    const finalStatus = new tasks.LambdaInvoke(this, 'Get Final Job Status', {\n      lambdaFunction: getStatusLambda,\n      outputPath: '$.Payload',\n    });\n\n    // Create chain\n    const definition = submitJob\n      .next(waitX)\n      .next(getStatus)\n      .next(new sfn.Choice(this, 'Job Complete?')\n        // Look at the \"status\" field\n        .when(sfn.Condition.stringEquals('$.status', 'FAILED'), jobFailed)\n        .when(sfn.Condition.stringEquals('$.status', 'SUCCEEDED'), finalStatus)\n        .otherwise(waitX));\n\n    // Create state machine\n    const stateMachine = new sfn.StateMachine(this, 'CronStateMachine', {\n      definition,\n      timeout: cdk.Duration.minutes(5),\n    });\n\n    // Grant lambda execution roles\n    submitLambda.grantInvoke(stateMachine.role);\n    getStatusLambda.grantInvoke(stateMachine.role);\n\n    /** ------------------ Events Rule Definition ------------------ */\n\n    /**\n     *  Run every day at 6PM UTC\n     * See https://docs.aws.amazon.com/lambda/latest/dg/tutorial-scheduled-events-schedule-expressions.html\n     */\n    const rule = new events.Rule(this, 'Rule', {\n      schedule: events.Schedule.expression('cron(0 18 ? * MON-FRI *)')\n    });\n    rule.addTarget(new targets.SfnStateMachine(stateMachine));\n  }\n}\n\nconst app = new cdk.App();\nnew JobPollerStack(app, 'aws-stepfunctions-integ');\napp.synth();\n"}
{ "prompt": "{\"Description\": \"WAF Regional\", \"Resources\": {\"WafRegional\": {\"Type\": \"AWS::WAFv2::WebACL\", \"Properties\": {\"DefaultAction\": {\"Allow\": {}}, \"Scope\": \"REGIONAL\", \"VisibilityConfig\": {\"CloudWatchMetricsEnabled\": true, \"MetricName\": \"waf-regional\", \"SampledRequestsEnabled\": true}, \"Description\": \"WAFv2 ACL for Regional\", \"Name\": \"waf-regional\", \"Rules\": [{\"Name\": \"AWSManagedRulesCommonRuleSet\", \"OverrideAction\": {\"None\": {}}, \"Priority\": 10, \"Statement\": {\"ManagedRuleGroupStatement\": {\"Name\": \"AWSManagedRulesCommonRuleSet\", \"VendorName\": \"AWS\"}}, \"VisibilityConfig\": {\"CloudWatchMetricsEnabled\": true, \"MetricName\": \"AWSManagedRulesCommonRuleSet\", \"SampledRequestsEnabled\": true}}, {\"Name\": \"AWSManagedRulesAmazonIpReputationList\", \"OverrideAction\": {\"None\": {}}, \"Priority\": 20, \"Statement\": {\"ManagedRuleGroupStatement\": {\"Name\": \"AWSManagedRulesAmazonIpReputationList\", \"VendorName\": \"AWS\"}}, \"VisibilityConfig\": {\"CloudWatchMetricsEnabled\": true, \"MetricName\": \"AWSManagedRulesAmazonIpReputationList\", \"SampledRequestsEnabled\": true}}, {\"Name\": \"AWSManagedRulesKnownBadInputsRuleSet\", \"OverrideAction\": {\"None\": {}}, \"Priority\": 30, \"Statement\": {\"ManagedRuleGroupStatement\": {\"Name\": \"AWSManagedRulesKnownBadInputsRuleSet\", \"VendorName\": \"AWS\"}}, \"VisibilityConfig\": {\"CloudWatchMetricsEnabled\": true, \"MetricName\": \"AWSManagedRulesKnownBadInputsRuleSet\", \"SampledRequestsEnabled\": true}}, {\"Name\": \"AWSManagedRulesAnonymousIpList\", \"OverrideAction\": {\"None\": {}}, \"Priority\": 40, \"Statement\": {\"ManagedRuleGroupStatement\": {\"Name\": \"AWSManagedRulesAnonymousIpList\", \"VendorName\": \"AWS\"}}, \"VisibilityConfig\": {\"CloudWatchMetricsEnabled\": true, \"MetricName\": \"AWSManagedRulesAnonymousIpList\", \"SampledRequestsEnabled\": true}}, {\"Name\": \"AWSManagedRulesLinuxRuleSet\", \"OverrideAction\": {\"None\": {}}, \"Priority\": 50, \"Statement\": {\"ManagedRuleGroupStatement\": {\"Name\": \"AWSManagedRulesLinuxRuleSet\", \"VendorName\": \"AWS\"}}, \"VisibilityConfig\": {\"CloudWatchMetricsEnabled\": true, \"MetricName\": \"AWSManagedRulesLinuxRuleSet\", \"SampledRequestsEnabled\": true}}, {\"Name\": \"AWSManagedRulesUnixRuleSet\", \"OverrideAction\": {\"None\": {}}, \"Priority\": 60, \"Statement\": {\"ManagedRuleGroupStatement\": {\"Name\": \"AWSManagedRulesUnixRuleSet\", \"VendorName\": \"AWS\"}}, \"VisibilityConfig\": {\"CloudWatchMetricsEnabled\": true, \"MetricName\": \"AWSManagedRulesUnixRuleSet\", \"SampledRequestsEnabled\": true}}, {\"Action\": {\"Block\": {}}, \"Name\": \"GeoMatch\", \"Priority\": 0, \"Statement\": {\"NotStatement\": {\"Statement\": {\"GeoMatchStatement\": {\"CountryCodes\": [\"AR\", \"BO\", \"BR\", \"CL\", \"CO\", \"EC\", \"FK\", \"GF\", \"GY\", \"GY\", \"PY\", \"PE\", \"SR\", \"UY\", \"VE\"]}}}}, \"VisibilityConfig\": {\"CloudWatchMetricsEnabled\": true, \"MetricName\": \"GeoMatch\", \"SampledRequestsEnabled\": true}}, {\"Action\": {\"Block\": {}}, \"Name\": \"LimitRequests100\", \"Priority\": 1, \"Statement\": {\"RateBasedStatement\": {\"AggregateKeyType\": \"IP\", \"Limit\": 100}}, \"VisibilityConfig\": {\"CloudWatchMetricsEnabled\": true, \"MetricName\": \"LimitRequests100\", \"SampledRequestsEnabled\": true}}], \"Tags\": [{\"Key\": \"CreatedBy\", \"Value\": \"CloudFormation\"}, {\"Key\": \"Name\", \"Value\": \"waf-Regional\"}, {\"Key\": \"Purpose\", \"Value\": \"WAF Regional\"}]}, \"Metadata\": {\"aws:cdk:path\": \"WafRegionalStack/WafRegional\"}}, \"CDKMetadata\": {\"Type\": \"AWS::CDK::Metadata\", \"Properties\": {\"Analytics\": \"v2:deflate64:H4sIAAAAAAAA/zPSszDXM1BMLC/WTU7J1s3JTNKrDi5JTM7WAQrFlyemlRnpOaflhacmOTr76ABZ/qUlBaUlIFZQanF+aVFyaq1OXn5Kql5WsX6ZoYWeEdC0rOLMTN2i0rySzNxUvSAIDQCR/8seaQAAAA==\"}, \"Metadata\": {\"aws:cdk:path\": \"WafRegionalStack/CDKMetadata/Default\"}}}, \"Outputs\": {\"wafAclRegionalArn\": {\"Description\": \" WAF Regional arn\", \"Value\": {\"Fn::GetAtt\": [\"WafRegional\", \"Arn\"]}, \"Export\": {\"Name\": \"WafRegionalStack:WafAclRegionalArn\"}}}, \"Parameters\": {\"BootstrapVersion\": {\"Type\": \"AWS::SSM::Parameter::Value<String>\", \"Default\": \"/cdk-bootstrap/hnb659fds/version\", \"Description\": \"Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]\"}}, \"Rules\": {\"CheckBootstrapVersion\": {\"Assertions\": [{\"Assert\": {\"Fn::Not\": [{\"Fn::Contains\": [[\"1\", \"2\", \"3\", \"4\", \"5\"], {\"Ref\": \"BootstrapVersion\"}]}]}, \"AssertDescription\": \"CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.\"}]}}}", "completion": "#!/usr/bin/env node\n\nimport 'source-map-support/register';\nimport * as cdk from 'aws-cdk-lib';\n\nimport { WafRegionalStack }   from './waf-regional';\nimport { WafCloudFrontStack } from './waf-cloudfront';\n\nconst app = new cdk.App();\n\nnew WafRegionalStack(app,   'WafRegionalStack',   {env:{region:\"us-east-1\"}, description:\"WAF Regional\"});\nnew WafCloudFrontStack(app, 'WafCloudFrontStack', {env:{region:\"us-east-1\"}, description:\"WAF CloudFront\"});\n\n\n\n"}
